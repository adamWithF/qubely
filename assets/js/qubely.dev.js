/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/accordion/style.scss":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/accordion/style.scss ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-accordion > .wp-block-qubely-accordion-item:last-child {\n  padding-bottom: 0;\n  border-bottom: 0;\n  margin-bottom: 0; }\n\n.qubely-block-accordion .qubely-accordion-item {\n  display: block; }\n  .qubely-block-accordion .qubely-accordion-item .components-button:focus:enabled {\n    background-color: #ed0b0b; }\n\n.qubely-block-accordion .qubely-accordion-panel .qubely-accordion-panel-handler {\n  display: flex;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  box-shadow: none;\n  font-size: inherit;\n  line-height: 1.6;\n  color: inherit;\n  text-decoration: none;\n  text-transform: none;\n  font-style: normal;\n  user-select: none;\n  cursor: pointer; }\n  .qubely-block-accordion .qubely-accordion-panel .qubely-accordion-panel-handler:focus, .qubely-block-accordion .qubely-accordion-panel .qubely-accordion-panel-handler:active, .qubely-block-accordion .qubely-accordion-panel .qubely-accordion-panel-handler:hover {\n    color: inherit;\n    text-decoration: none;\n    text-transform: none;\n    font-style: normal;\n    outline: none;\n    box-shadow: none; }\n\n.qubely-block-accordion .qubely-accordion-panel.qubely-icon-position-right .qubely-accordion-panel-handler {\n  justify-content: space-between; }\n\n.qubely-block-accordion .qubely-accordion-body {\n  display: none; }\n  .qubely-block-accordion .qubely-accordion-body p:first-child {\n    margin-top: 0; }\n  .qubely-block-accordion .qubely-accordion-body p:last-child {\n    margin-bottom: 0; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-body {\n  display: block; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-plus:before {\n  content: \"\\f068\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-plus-circle:before {\n  content: \"\\f056\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-plus-square-o:before {\n  content: \"\\f147\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-plus-square:before {\n  content: \"\\f146\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-arrow-circle-o-right:before {\n  content: \"\\f01a\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-arrow-circle-right:before {\n  content: \"\\f0ab\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-angle-right:before {\n  content: \"\\f107\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-angle-double-right:before {\n  content: \"\\f103\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-chevron-right:before {\n  content: \"\\f078\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-chevron-circle-right:before {\n  content: \"\\f13a\"; }\n\n.qubely-block-accordion .qubely-accordion-active .qubely-accordion-icon.fa-caret-right:before {\n  content: \"\\f0d7\"; }\n\n[data-type=\"qubely/accordion-item\"] > .editor-block-mover > .editor-block-mover__control-drag-handle {\n  display: none; }\n\n.qubely-accordion-add-item {\n  padding-bottom: 10px; }\n  .qubely-accordion-add-item .components-button {\n    margin: 0 auto;\n    background: #f8f8f8;\n    padding: 10px 15px;\n    border: 1px solid #efefef;\n    transition: 400ms; }\n    .qubely-accordion-add-item .components-button:hover {\n      box-shadow: none !important;\n      background: #e5e5e5 !important;\n      border: 1px solid #e2e2e2 !important; }\n    .qubely-accordion-add-item .components-button svg {\n      margin-right: 10px; }\n\n.qubely-accordion-item-remove-button {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: -10px;\n  font-size: 11px;\n  color: #fff !important;\n  background: #ed0b0b;\n  border-radius: 50%;\n  right: -10px; }\n  .qubely-accordion-item-remove-button i {\n    font-size: 11px !important; }\n\n.qubely-accordion-item-remove-button i {\n  font-style: normal;\n  margin-left: -1px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/advancedlist/style.scss":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/advancedlist/style.scss ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-advanced-list .qubely-action-button {\n  padding: 5px 15px;\n  margin-top: 15px;\n  border-radius: 4px;\n  font-size: 14px;\n  background: #f0f1f3; }\n\n.qubely-block-advanced-list .qubely-list {\n  list-style: none;\n  padding: 0;\n  margin: 0; }\n  .qubely-block-advanced-list .qubely-list > li {\n    position: relative;\n    margin: 0;\n    display: block;\n    transition: color 400ms, background-color 400ms, border-color 400ms, box-shadow 400ms; }\n    .qubely-block-advanced-list .qubely-list > li::before, .qubely-block-advanced-list .qubely-list > li::after {\n      font-family: \"Font Awesome 5 Free\";\n      font-weight: 900;\n      transition: color 400ms, background-color 400ms; }\n    .qubely-block-advanced-list .qubely-list > li > span,\n    .qubely-block-advanced-list .qubely-list > li > div {\n      display: inline-block; }\n    .qubely-block-advanced-list .qubely-list > li .qubely-action-remove {\n      display: none;\n      font-size: 12px;\n      width: 18px;\n      height: 18px;\n      line-height: 20px;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.8);\n      color: #fff;\n      border-radius: 10px;\n      position: absolute;\n      right: 0px;\n      top: 50%;\n      transform: translateY(-50%);\n      cursor: pointer; }\n      .qubely-block-advanced-list .qubely-list > li .qubely-action-remove.alignment-left {\n        right: auto;\n        left: 0; }\n    .qubely-block-advanced-list .qubely-list > li:hover .qubely-action-remove {\n      display: block; }\n  .qubely-block-advanced-list .qubely-list [contenteditable=true]:empty:before {\n    content: attr(placeholder);\n    color: gray;\n    padding: 0px 5px 0px 5px;\n    display: block;\n    /* For Firefox */ }\n  .qubely-block-advanced-list .qubely-list .qubely-action-button {\n    margin-top: 15px; }\n\n.qubely-block-advanced-list.qubely-alignment-left .qubely-list > li::after, .qubely-block-advanced-list.qubely-alignment-center .qubely-list > li::after {\n  display: none; }\n\n.qubely-block-advanced-list.qubely-alignment-center .qubely-list > li {\n  justify-content: center; }\n\n.qubely-block-advanced-list.qubely-alignment-right .qubely-list > li {\n  justify-content: flex-end; }\n  .qubely-block-advanced-list.qubely-alignment-right .qubely-list > li::before {\n    display: none; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check > li::after {\n  content: \"\\f00c\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-square > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-square > li::after {\n  content: \"\\f14a\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-square-outline > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-square-outline > li::after {\n  content: \"\\f14a\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-double > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-double > li::after {\n  content: \"\\f560\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-circle > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-circle > li::after {\n  content: \"\\f058\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-circle-outline > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-check-circle-outline > li::after {\n  content: \"\\f058\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-square > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-square > li::after {\n  content: \"\\f0c8\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-square-outline > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-square-outline > li::after {\n  content: \"\\f0c8\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-circle > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-circle > li::after {\n  content: \"\\f111\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-circle-outline > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-circle-outline > li::after {\n  content: \"\\f111\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-right > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-right > li::after {\n  content: \"\\f061\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-left > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-left > li::after {\n  content: \"\\f060\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-circle-right > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-circle-right > li::after {\n  content: \"\\f0a9\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-circle-left > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-circle-left > li::after {\n  content: \"\\f0a8\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-alt-circle-right > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-alt-circle-right > li::after {\n  content: \"\\f35a\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-alt-circle-left > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-arrow-alt-circle-left > li::after {\n  content: \"\\f359\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-long-arrow-alt-right > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-long-arrow-alt-right > li::after {\n  content: \"\\f30b\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-long-arrow-alt-left > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-long-arrow-alt-left > li::after {\n  content: \"\\f30a\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-chevron-right > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-chevron-right > li::after {\n  content: \"\\f054\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-chevron-left > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-chevron-left > li::after {\n  content: \"\\f053\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-angle-right > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-angle-right > li::after {\n  content: \"\\f105\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-angle-left > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-angle-left > li::after {\n  content: \"\\f104\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-star > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-star > li::after {\n  content: \"\\f005\"; }\n\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-star-outline > li::before,\n.qubely-block-advanced-list .qubely-list-type-unordered.qubely-list-bullet-star-outline > li::after {\n  content: \"\\f005\";\n  font-weight: 400; }\n\n.qubely-block-advanced-list .qubely-list-type-ordered {\n  counter-reset: qubely-ol-counter; }\n  .qubely-block-advanced-list .qubely-list-type-ordered > li {\n    counter-increment: qubely-ol-counter; }\n    .qubely-block-advanced-list .qubely-list-type-ordered > li::before, .qubely-block-advanced-list .qubely-list-type-ordered > li::after {\n      text-align: center;\n      font-size: 1em;\n      content: counter(qubely-ol-counter); }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/animatedheadline/style.scss":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/animatedheadline/style.scss ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-animated-heading .animated-heading-text.has-text-align-left {\n  justify-content: flex-start; }\n\n.qubely-block-animated-heading .animated-heading-text.has-text-align-right {\n  justify-content: flex-end; }\n\n.qubely-block-animated-heading .animated-heading-text.has-text-align-center {\n  justify-content: center; }\n\n.qubely-block-animated-heading .animated-heading-text::before {\n  display: none; }\n\n.qubely-block-animated-heading .animated-heading-text .qubely-animated-text {\n  padding-left: 5px;\n  padding-right: 5px;\n  line-height: inherit; }\n\n.qubely-block-animated-heading.qubely-block-animated-heading-backend .animated-heading-text {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/button/style.scss":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/button/style.scss ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-btn-anchor {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.3;\n  color: #212529;\n  text-align: center;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  text-decoration: none !important;\n  background-color: transparent;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: color 200ms ease-in-out, background-color 200ms ease-in-out, border-color 200ms ease-in-out, box-shadow 200ms ease-in-out; }\n  .qubely-block-btn-anchor.is-small {\n    padding: 5px 10px;\n    font-size: 14px; }\n  .qubely-block-btn-anchor.is-medium {\n    padding: 8px 15px;\n    font-size: 16px; }\n  .qubely-block-btn-anchor.is-large {\n    padding: 13px 20px;\n    font-size: 18px; }\n  .qubely-block-btn-anchor .editor-rich-text {\n    cursor: text; }\n    .qubely-block-btn-anchor .editor-rich-text .editor-rich-text__tinymce {\n      line-height: 1.3 !important; }\n  .qubely-block-btn-anchor:before {\n    content: \" \";\n    position: absolute;\n    left: 0px;\n    top: 0px;\n    right: 0;\n    bottom: 0;\n    z-index: -2;\n    opacity: 0;\n    transition: all 300ms ease-in-out; }\n  .qubely-block-btn-anchor:hover:before {\n    opacity: 1; }\n\n.qubely-action-button-remove {\n  font-size: 12px;\n  width: 18px;\n  height: 18px;\n  line-height: 20px;\n  text-align: center;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  position: absolute;\n  top: -9px;\n  right: -9px;\n  border-radius: 10px;\n  z-index: 1;\n  cursor: pointer; }\n\n.qubely-button-text {\n  white-space: nowrap !important; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/buttongroup/style.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/buttongroup/style.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-button-group {\n  display: flex;\n  flex-wrap: wrap; }\n  .qubely-block-button-group .editor-inner-blocks {\n    width: auto !important; }\n    .qubely-block-button-group .editor-inner-blocks .editor-block-list__layout {\n      display: block;\n      width: fit-content; }\n      .qubely-block-button-group .editor-inner-blocks .editor-block-list__layout .qubely-group-button {\n        display: inline-block;\n        width: auto; }\n  .qubely-block-button-group .qubely-add-new {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: fit-content;\n    z-index: 100; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/contactform/style.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/contactform/style.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-contact-form .qubely-form {\n  display: flex;\n  flex-wrap: wrap; }\n  .qubely-block-contact-form .qubely-form .qubely-form-group {\n    position: relative; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-group-inner {\n      text-align: left; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-label {\n      margin: 0;\n      line-height: 1; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-control {\n      display: block;\n      width: 100%;\n      background-clip: padding-box;\n      transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }\n      .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-control.is-small {\n        padding: 6px 8px; }\n      .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-control.is-medium {\n        padding: 8.5px 12px; }\n      .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-control.is-large {\n        padding: 14.5px 16px; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group textarea.qubely-form-control {\n      resize: none; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-form-control:focus {\n      outline: 0; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group p.qubely-form-required-field {\n      font-size: 14px;\n      color: red;\n      margin: 0; }\n    .qubely-block-contact-form .qubely-form .qubely-form-group .qubely-block-btn-anchor:hover {\n      background-color: transparent; }\n\n.qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-group-inner {\n  position: relative; }\n\n.qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-label {\n  position: absolute;\n  pointer-events: none;\n  top: 0px;\n  transition: 0.2s ease all; }\n\n.qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control {\n  border-radius: 0;\n  box-shadow: none;\n  padding-left: 0;\n  padding-right: 0;\n  background: none; }\n  .qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control:focus, .qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control:valid {\n    outline: none;\n    color: #333; }\n  .qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control::placeholder {\n    opacity: 0;\n    transition: 400ms; }\n  .qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control:focus::placeholder {\n    opacity: 1; }\n\n.qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control:focus ~ .qubely-form-label,\n.qubely-block-contact-form.qubely-layout-material .qubely-form .qubely-form-group .qubely-form-control:valid ~ .qubely-form-label {\n  top: -20px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/divider/style.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/divider/style.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-divider .qubely-block-divider-style-fill {\n  border-top-style: solid; }\n\n.qubely-block-divider .qubely-block-divider-style-dot {\n  border-top-style: dotted; }\n\n.qubely-block-divider .qubely-block-divider-style-dash {\n  border-top-style: dashed; }\n\n.qubely-block-divider > div {\n  margin: 0 auto;\n  display: inline-block; }\n\n.qubely-divider-picker-options {\n  max-height: 300px; }\n\n.qubely-divider-picker-option:hover {\n  background: #e8eaeb;\n  border-radius: 5px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/heading/style.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/heading/style.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-heading {\n  transition: color 200ms ease-in-out, background-color 200ms ease-in-out, border-color 200ms ease-in-out, box-shadow 200ms ease-in-out;\n  position: relative; }\n  .qubely-block-heading h1, .qubely-block-heading h2, .qubely-block-heading h3, .qubely-block-heading h4, .qubely-block-heading h5, .qubely-block-heading h6 {\n    padding: 0;\n    margin: 0;\n    line-height: 1;\n    position: relative; }\n    .qubely-block-heading h1::before, .qubely-block-heading h1::after, .qubely-block-heading h2::before, .qubely-block-heading h2::after, .qubely-block-heading h3::before, .qubely-block-heading h3::after, .qubely-block-heading h4::before, .qubely-block-heading h4::after, .qubely-block-heading h5::before, .qubely-block-heading h5::after, .qubely-block-heading h6::before, .qubely-block-heading h6::after {\n      display: none !important; }\n  .qubely-block-heading .qubely-text-has-bgcolor {\n    padding-left: 10px;\n    padding-right: 10px; }\n  .qubely-block-heading .qubely-separator {\n    font-size: 0; }\n    .qubely-block-heading .qubely-separator .qubely-separator-type-css,\n    .qubely-block-heading .qubely-separator .qubely-separator-type-svg {\n      display: inline-block; }\n  .qubely-block-heading.qubely-separator-position-left .qubely-heading-container, .qubely-block-heading.qubely-separator-position-right .qubely-heading-container, .qubely-block-heading.qubely-separator-position-leftright .qubely-heading-container {\n    display: inline-flex;\n    align-items: center; }\n    .qubely-block-heading.qubely-separator-position-left .qubely-heading-container .qubely-heading-selector,\n    .qubely-block-heading.qubely-separator-position-left .qubely-heading-container .qubely-separator, .qubely-block-heading.qubely-separator-position-right .qubely-heading-container .qubely-heading-selector,\n    .qubely-block-heading.qubely-separator-position-right .qubely-heading-container .qubely-separator, .qubely-block-heading.qubely-separator-position-leftright .qubely-heading-container .qubely-heading-selector,\n    .qubely-block-heading.qubely-separator-position-leftright .qubely-heading-container .qubely-separator {\n      display: inline-flex; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/icon/style.scss":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/icon/style.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-icon-wrapper .qubely-block-icon {\n  display: inline-block;\n  line-height: 1;\n  font-size: 36px;\n  text-align: center;\n  transition: color 400ms, border-color 400ms, background-color 400ms, box-shadow 400ms; }\n  .qubely-block-icon-wrapper .qubely-block-icon i {\n    font-style: normal;\n    width: 1em;\n    height: 1em;\n    position: relative;\n    display: block;\n    transition: 400ms; }\n    .qubely-block-icon-wrapper .qubely-block-icon i:before {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%); }\n  .qubely-block-icon-wrapper .qubely-block-icon .qubely-icon-block-anchor {\n    text-decoration: none !important; }\n    .qubely-block-icon-wrapper .qubely-block-icon .qubely-icon-block-anchor a {\n      text-decoration: none !important; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/iconlist/style.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/iconlist/style.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-icon-list .qubely-list {\n  list-style: none;\n  padding: 0;\n  margin: 0; }\n  .qubely-block-icon-list .qubely-list [contenteditable=true]:empty:before {\n    content: attr(placeholder);\n    color: gray;\n    padding: 0px 5px 0px 5px;\n    display: block; }\n  .qubely-block-icon-list .qubely-list .qubely-list-li {\n    position: relative;\n    margin: 0;\n    display: block;\n    transition: color 400ms, background-color 400ms, border-color 400ms, box-shadow 400ms; }\n    .qubely-block-icon-list .qubely-list .qubely-list-li .qubely-list-item-icon {\n      transition: color 400ms; }\n    .qubely-block-icon-list .qubely-list .qubely-list-li .qubely-list-item {\n      display: inline-block;\n      position: relative; }\n      .qubely-block-icon-list .qubely-list .qubely-list-li .qubely-list-item > span,\n      .qubely-block-icon-list .qubely-list .qubely-list-li .qubely-list-item > div {\n        display: inline-block; }\n      .qubely-block-icon-list .qubely-list .qubely-list-li .qubely-list-item .qubely-action-remove {\n        display: none;\n        font-size: 12px;\n        width: 18px;\n        height: 18px;\n        line-height: 20px;\n        text-align: center;\n        background: rgba(0, 0, 0, 0.8);\n        color: #fff;\n        border-radius: 10px;\n        position: absolute;\n        right: -30px;\n        top: 50%;\n        transform: translateY(-50%);\n        cursor: pointer; }\n    .qubely-block-icon-list .qubely-list .qubely-list-li.qubely-list-li-editor .qubely-list-item-icon {\n      cursor: cell; }\n    .qubely-block-icon-list .qubely-list .qubely-list-li:hover .qubely-action-remove {\n      display: block; }\n    .qubely-block-icon-list .qubely-list .qubely-list-li.qubely-list-li-editor .qubely-list-item-icon {\n      cursor: cell; }\n\n.qubely-block-icon-list .qubely-action-button {\n  padding: 5px 15px;\n  margin-top: 15px;\n  border-radius: 4px;\n  font-size: 14px;\n  background: #f0f1f3; }\n\n.qubely-iconlist-icons-popover .components-popover__content:not(.is-mobile) {\n  padding: 20px;\n  min-height: fit-content;\n  border: 1px solid #e5e5e5;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/image/style.scss":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/image/style.scss ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-image.qubely-image-layout-blurb {\n  line-height: 0; }\n  .qubely-block-image.qubely-image-layout-blurb .qubely-image-media {\n    display: inline-block; }\n\n.qubely-block-image figure {\n  padding: 0;\n  margin: 0;\n  position: relative; }\n  .qubely-block-image figure .qubely-image-image {\n    margin: 0;\n    padding: 0;\n    display: inline-block; }\n    .qubely-block-image figure .qubely-image-image.qubely-image-placeholder {\n      display: inline-flex; }\n  .qubely-block-image figure .qubely-image-container {\n    overflow: hidden;\n    position: relative;\n    z-index: 0;\n    transition: box-shadow 0.35s; }\n    .qubely-block-image figure .qubely-image-container .qubely-image-content {\n      display: flex;\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      z-index: 10;\n      line-height: normal; }\n\n.qubely-block-image .qubely-has-frame figure:after {\n  content: \" \";\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  bottom: 0px;\n  right: 0px;\n  z-index: 4;\n  pointer-events: none; }\n\n.qubely-block-image .qubely-has-frame.qubely-frame-animate-on-hover figure:after {\n  opacity: 0;\n  transition: opacity 0.35s; }\n\n.qubely-block-image .qubely-has-frame.qubely-frame-animate-on-hover:hover figure:after {\n  opacity: 1; }\n\n.qubely-block-image .qubely-hover-animation-on .qubely-image-title {\n  margin: 0;\n  line-height: 1; }\n\n.qubely-block-image .qubely-hover-animation-on:hover .qubely-image-container:after {\n  opacity: 1; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-zoom-out .qubely-image-image {\n  transition: transform 0.35s;\n  transform: scale(1.2); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-zoom-out:hover .qubely-image-image {\n  transform: scale(1); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-zoom-in .qubely-image-image {\n  transition: transform 0.35s;\n  transform: scale(1); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-zoom-in:hover .qubely-image-image {\n  transform: scale(1.2); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-scale {\n  transform: scale(1);\n  transition: transform 0.35s; }\n  .qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-scale:hover {\n    transform: scale(1.02); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-top .qubely-image-image {\n  transform: translate3d(0, -40px, 0) scale3d(1.2, 1.2, 1);\n  transition: transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-top:hover .qubely-image-image {\n  transform: translate3d(0, 0, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-bottom .qubely-image-image {\n  transform: translate3d(0, 40px, 0) scale3d(1.2, 1.2, 1);\n  transition: transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-bottom:hover .qubely-image-image {\n  transform: translate3d(0, 0, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-left .qubely-image-image {\n  max-width: initial;\n  max-height: 100%;\n  width: calc(100% + 50px);\n  transition: opacity 0.35s, transform 0.35s;\n  transform: translate3d(-40px, 0, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-left:hover .qubely-image-image {\n  transform: translate3d(0, 0, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-right .qubely-image-image {\n  max-width: initial;\n  max-height: 100%;\n  width: calc(100% + 50px);\n  transition: opacity 0.35s, transform 0.35s;\n  transform: translate3d(-10px, 0, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-hover-animation-type-slide-right:hover .qubely-image-image {\n  transform: translate3d(-40px, 0, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top .qubely-image-title.qubely-visible-on-hover {\n  opacity: 0;\n  transform: translate3d(0, -30px, 0);\n  transition: transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top .qubely-image-title.qubely-visible-on-hover-enabled {\n  transform: translate3d(0, 0px, 0);\n  transition: transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top .qubely-image-sub-title {\n  line-height: 1; }\n  .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top .qubely-image-sub-title.qubely-visible-on-hover {\n    transform: translate3d(0, -30px, 0);\n    opacity: 0;\n    transition: opacity 0.2s, transform 0.35s; }\n  .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top .qubely-image-sub-title.qubely-visible-on-hover-enabled {\n    transform: translate3d(0, 0px, 0);\n    opacity: 0;\n    transition: opacity 0.2s, transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top:hover .qubely-image-title.qubely-visible-on-hover {\n  opacity: 1;\n  transform: translate3d(0, 0px, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top:hover .qubely-image-title.qubely-visible-on-hover-enabled {\n  transform: translate3d(0, 30px, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top:hover .qubely-image-sub-title.qubely-visible-on-hover {\n  transform: translate3d(0, 0px, 0);\n  opacity: 1;\n  transition-delay: 0.05s;\n  transition-duration: 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-top:hover .qubely-image-sub-title.qubely-visible-on-hover-enabled {\n  transform: translate3d(0, 30px, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-center .qubely-image-title.qubely-visible-on-hover, .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-bottom .qubely-image-title.qubely-visible-on-hover {\n  opacity: 0;\n  transform: translate3d(0, 40px, 0);\n  transition: transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-center .qubely-image-title.qubely-visible-on-hover-enabled, .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-bottom .qubely-image-title.qubely-visible-on-hover-enabled {\n  transform: translate3d(0, 30px, 0);\n  transition: transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-center .qubely-image-sub-title.qubely-visible-on-hover, .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-bottom .qubely-image-sub-title.qubely-visible-on-hover {\n  transform: translate3d(0, 40px, 0);\n  opacity: 0;\n  transition: opacity 0.2s, transform 0.35s; }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-center:hover .qubely-image-title.qubely-visible-on-hover, .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-bottom:hover .qubely-image-title.qubely-visible-on-hover {\n  opacity: 1;\n  transform: translate3d(0, 0, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-center:hover .qubely-image-title.qubely-visible-on-hover-enabled, .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-bottom:hover .qubely-image-title.qubely-visible-on-hover-enabled {\n  transform: translate3d(0, 0, 0); }\n\n.qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-center:hover .qubely-image-sub-title.qubely-visible-on-hover, .qubely-block-image .qubely-hover-animation-on.qubely-vertical-alignment-bottom:hover .qubely-image-sub-title.qubely-visible-on-hover {\n  transform: translate3d(0, 0, 0);\n  opacity: 1;\n  transition-delay: 0.05s;\n  transition-duration: 0.35s; }\n\n.qubely-block-image.qubely-image-layout-blurb figure .qubely-image-container:before, .qubely-block-image.qubely-image-layout-blurb figure .qubely-image-container:after {\n  content: \" \";\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 1; }\n\n.qubely-block-image.qubely-image-layout-blurb figure .qubely-image-container:after {\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 600ms; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/infobox/style.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/infobox/style.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-info-box {\n  transition: border-color 400ms, background-color 400ms, box-shadow 400ms; }\n  .qubely-block-info-box h1, .qubely-block-info-box h2, .qubely-block-info-box h3, .qubely-block-info-box h4, .qubely-block-info-box h5, .qubely-block-info-box h6 {\n    padding: 0;\n    margin: 0;\n    line-height: 1;\n    position: relative; }\n    .qubely-block-info-box h1::before, .qubely-block-info-box h1::after, .qubely-block-info-box h2::before, .qubely-block-info-box h2::after, .qubely-block-info-box h3::before, .qubely-block-info-box h3::after, .qubely-block-info-box h4::before, .qubely-block-info-box h4::after, .qubely-block-info-box h5::before, .qubely-block-info-box h5::after, .qubely-block-info-box h6::before, .qubely-block-info-box h6::after {\n      display: none !important; }\n    .qubely-block-info-box h1 .qubely-text-has-bgcolor, .qubely-block-info-box h2 .qubely-text-has-bgcolor, .qubely-block-info-box h3 .qubely-text-has-bgcolor, .qubely-block-info-box h4 .qubely-text-has-bgcolor, .qubely-block-info-box h5 .qubely-text-has-bgcolor, .qubely-block-info-box h6 .qubely-text-has-bgcolor {\n      padding-left: 10px;\n      padding-right: 10px; }\n  .qubely-block-info-box .qubely-info-box-media {\n    display: inline-block;\n    line-height: 1;\n    text-align: center;\n    overflow: hidden; }\n    .qubely-block-info-box .qubely-info-box-media i,\n    .qubely-block-info-box .qubely-info-box-media span,\n    .qubely-block-info-box .qubely-info-box-media img {\n      font-style: normal;\n      position: relative;\n      display: block;\n      transition: 400ms; }\n    .qubely-block-info-box .qubely-info-box-media img {\n      max-width: 100%;\n      height: auto; }\n    .qubely-block-info-box .qubely-info-box-media.qubely-media-has-bg i,\n    .qubely-block-info-box .qubely-info-box-media.qubely-media-has-bg .qubely-info-box-number {\n      min-width: 1em;\n      height: 1em;\n      white-space: nowrap; }\n      .qubely-block-info-box .qubely-info-box-media.qubely-media-has-bg i:before,\n      .qubely-block-info-box .qubely-info-box-media.qubely-media-has-bg .qubely-info-box-number:before {\n        position: absolute;\n        left: 50%;\n        transform: translateX(-50%); }\n  .qubely-block-info-box .qubely-info-box-title {\n    margin: 0 !important; }\n  .qubely-block-info-box .qubely-info-box-media,\n  .qubely-block-info-box .qubely-info-box-title,\n  .qubely-block-info-box .qubely-info-box-text {\n    transition: color 400ms, border-color 400ms, background-color 400ms, box-shadow 400ms; }\n  .qubely-block-info-box.qubely-info-box-layout-2, .qubely-block-info-box.qubely-info-box-layout-3 {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: start;\n    align-items: flex-start; }\n    .qubely-block-info-box.qubely-info-box-layout-2 .qubely-info-box-body, .qubely-block-info-box.qubely-info-box-layout-3 .qubely-info-box-body {\n      -ms-flex: 1;\n      flex: 1; }\n  .qubely-block-info-box.qubely-info-box-layout-3 {\n    flex-direction: row-reverse; }\n    .qubely-block-info-box.qubely-info-box-layout-3 .qubely-info-box-body {\n      text-align: right; }\n  .qubely-block-info-box .qubely-separator {\n    font-size: 0; }\n    .qubely-block-info-box .qubely-separator .qubely-separator-type-css,\n    .qubely-block-info-box .qubely-separator .qubely-separator-type-svg {\n      display: inline-block; }\n  .qubely-block-info-box .qubely-separator-position-left .qubely-info-box-title-inner,\n  .qubely-block-info-box .qubely-separator-position-right .qubely-info-box-title-inner,\n  .qubely-block-info-box .qubely-separator-position-leftright .qubely-info-box-title-inner {\n    display: inline-flex;\n    align-items: center; }\n    .qubely-block-info-box .qubely-separator-position-left .qubely-info-box-title-inner .qubely-info-box-title,\n    .qubely-block-info-box .qubely-separator-position-left .qubely-info-box-title-inner .qubely-separator,\n    .qubely-block-info-box .qubely-separator-position-right .qubely-info-box-title-inner .qubely-info-box-title,\n    .qubely-block-info-box .qubely-separator-position-right .qubely-info-box-title-inner .qubely-separator,\n    .qubely-block-info-box .qubely-separator-position-leftright .qubely-info-box-title-inner .qubely-info-box-title,\n    .qubely-block-info-box .qubely-separator-position-leftright .qubely-info-box-title-inner .qubely-separator {\n      display: inline-flex; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/map/style.scss":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/map/style.scss ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-google-map {\n  position: relative; }\n  .qubely-google-map::before {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.05);\n    cursor: pointer; }\n  .qubely-google-map .qubely-google-gmap-input {\n    border: 1px solid #E7E8EB !important;\n    border-radius: 4px !important;\n    margin-bottom: 15px;\n    width: 100%;\n    padding: 12px 20px !important; }\n  .qubely-google-map .qubely-google-map-info-box {\n    position: absolute;\n    top: 10%;\n    right: 10%;\n    background: #f5f5f5;\n    padding: 15px; }\n    .qubely-google-map .qubely-google-map-info-box .qubely-google-map-box-title {\n      line-height: 1; }\n      .qubely-google-map .qubely-google-map-info-box .qubely-google-map-box-title i, .qubely-google-map .qubely-google-map-info-box .qubely-google-map-box-title h5 {\n        font-size: 18px;\n        margin: 5px 0; }\n    .qubely-google-map .qubely-google-map-info-box .qubely-google-map-content-item {\n      margin-top: 10px; }\n      .qubely-google-map .qubely-google-map-info-box .qubely-google-map-content-item p {\n        line-height: 1;\n        font-size: 12px; }\n\n.qubely-map-style {\n  max-width: 44%;\n  float: left;\n  margin: 5px; }\n\n.qubely-map-style img {\n  max-width: 100%;\n  border: 2px solid #d6d6d6;\n  border-radius: 5px;\n  cursor: pointer; }\n\n.qubely-map-style.qubely-map-style-active img {\n  border: 2px solid #0073aa; }\n\n.qubely-gmap-hide {\n  display: none; }\n\n.qubely-gmap-marker-window {\n  max-width: 250px; }\n  .qubely-gmap-marker-window .qubely-gmap-marker-place {\n    font-weight: 700;\n    margin-bottom: 10px; }\n  .qubely-gmap-marker-window .qubely-gmap-marker-address {\n    line-height: 1.5;\n    margin-bottom: 10px; }\n  .qubely-gmap-marker-window .qubely-gmap-marker-url a {\n    text-decoration: none; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/pieprogress/style.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/pieprogress/style.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-pie-progress {\n  display: flex;\n  flex-direction: column; }\n\n.qubely-progress-parent {\n  display: flex;\n  position: relative; }\n  .qubely-progress-parent .qubely-progress-inner-text {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 16px;\n    width: 90%;\n    height: 90%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap; }\n    .qubely-progress-parent .qubely-progress-inner-text > * {\n      width: 100%; }\n      .qubely-progress-parent .qubely-progress-inner-text > *:first-child {\n        margin-top: auto; }\n      .qubely-progress-parent .qubely-progress-inner-text > *:last-child {\n        margin-bottom: auto; }\n    .qubely-progress-parent .qubely-progress-inner-text .icon-image {\n      width: 100%;\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      flex-wrap: wrap; }\n      .qubely-progress-parent .qubely-progress-inner-text .icon-image img {\n        max-width: 100%;\n        max-height: 100%;\n        object-fit: cover; }\n      .qubely-progress-parent .qubely-progress-inner-text .icon-image .qubely-pie-placeholder {\n        border-radius: 4px;\n        height: 60px;\n        width: 80px;\n        max-width: 90%;\n        max-height: 90%;\n        line-height: 60px;\n        font-size: 30px;\n        background: #dddddd;\n        text-align: center;\n        color: #666666; }\n\n.qubely-pie-progress-heading {\n  font-size: 20px;\n  line-height: 1.1;\n  width: 100%;\n  letter-spacing: normal;\n  text-transform: none; }\n\n.qubely-progress-parent,\n.qubely-pie-progress {\n  max-width: 100%; }\n\n.qubely-pie-progress svg {\n  display: block; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/postgrid/style.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/postgrid/style.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-postgrid-is-loading {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 200px; }\n\n.qubely-post-list-wrapper {\n  display: block;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap; }\n  .qubely-post-list-wrapper .qubely-post-list-img {\n    -ms-flex: 0 0 100%;\n    flex: 0 0 100%;\n    max-width: 100%;\n    position: relative;\n    width: 100%;\n    min-height: 1px;\n    overflow: hidden; }\n  .qubely-post-list-wrapper .qubely-post-list-content {\n    -ms-flex: 0 0 100%;\n    flex: 0 0 100%;\n    max-width: 100%;\n    position: relative;\n    width: 100%;\n    min-height: 1px;\n    padding-left: 20px; }\n\n@media screen and (min-width: 767px) {\n  .qubely-post-list-wrapper {\n    display: -ms-flexbox;\n    display: flex; }\n    .qubely-post-list-wrapper .qubely-post-list-img {\n      -ms-flex: 0 0 40%;\n      flex: 0 0 40%;\n      max-width: 40%; }\n    .qubely-post-list-wrapper .qubely-post-list-img + .qubely-post-list-content {\n      -ms-flex: 0 0 60%;\n      flex: 0 0 60%;\n      max-width: 60%; } }\n\n.qubely-postgrid-style-4 {\n  position: relative;\n  overflow: hidden; }\n  .qubely-postgrid-style-4 .qubely-post-grid-img,\n  .qubely-postgrid-style-4 .qubely-post-list-img {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n    -webkit-background-size: cover;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    overflow: hidden; }\n    .qubely-postgrid-style-4 .qubely-post-grid-img img,\n    .qubely-postgrid-style-4 .qubely-post-list-img img {\n      position: absolute;\n      width: auto;\n      height: auto;\n      min-width: 100%;\n      max-width: none;\n      left: 50%;\n      top: 50%;\n      -webkit-transform: translate(-50%, -50%);\n      -ms-transform: translate(-50%, -50%);\n      transform: translate(-50%, -50%);\n      min-height: 100%; }\n  .qubely-postgrid-style-4 .qubely-post-grid-content,\n  .qubely-postgrid-style-4 .qubely-post-list-content {\n    opacity: 1;\n    position: relative;\n    z-index: 10;\n    overflow: hidden;\n    width: 100%;\n    max-width: 100%;\n    padding: 20px; }\n  .qubely-postgrid-style-4 > div .qubely-post-grid-img,\n  .qubely-postgrid-style-4 > div .qubely-post-list-img {\n    width: 100%;\n    max-width: 100%; }\n  .qubely-postgrid-style-4:before {\n    position: absolute;\n    content: \"\";\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 3;\n    transition: 400ms; }\n  .qubely-postgrid-style-4 .qubely-post-list-top .qubely-post-list-content,\n  .qubely-postgrid-style-4 .qubely-post-list-top .qubely-post-grid-content,\n  .qubely-postgrid-style-4 .qubely-post-grid-top .qubely-post-list-content,\n  .qubely-postgrid-style-4 .qubely-post-grid-top .qubely-post-grid-content {\n    top: 0;\n    height: 100%;\n    position: absolute;\n    display: grid;\n    align-content: flex-start; }\n  .qubely-postgrid-style-4 .qubely-post-list-center .qubely-post-list-content,\n  .qubely-postgrid-style-4 .qubely-post-list-center .qubely-post-grid-content,\n  .qubely-postgrid-style-4 .qubely-post-grid-center .qubely-post-list-content,\n  .qubely-postgrid-style-4 .qubely-post-grid-center .qubely-post-grid-content {\n    top: 0;\n    height: 100%;\n    position: absolute;\n    display: grid;\n    align-content: center; }\n  .qubely-postgrid-style-4 .qubely-post-list-bottom .qubely-post-list-content,\n  .qubely-postgrid-style-4 .qubely-post-list-bottom .qubely-post-grid-content,\n  .qubely-postgrid-style-4 .qubely-post-grid-bottom .qubely-post-list-content,\n  .qubely-postgrid-style-4 .qubely-post-grid-bottom .qubely-post-grid-content {\n    top: 0;\n    height: 100%;\n    position: absolute;\n    display: grid;\n    align-content: flex-end; }\n\n.qubely-postgrid:not(.qubely-postgrid-style-4) .qubely-post-img.qubely-post-img-zoom-out .qubely-post-image {\n  transition: transform 0.35s;\n  transform: scale(1.2); }\n\n.qubely-postgrid:not(.qubely-postgrid-style-4) .qubely-post-img.qubely-post-img-zoom-in .qubely-post-image {\n  transition: transform 0.35s;\n  transform: scale(1); }\n\n.qubely-postgrid:not(.qubely-postgrid-style-4) .qubely-post-img.qubely-post-img-slide-bottom .qubely-post-image {\n  transition: transform 0.35s;\n  transform: translate3d(0, 20px, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:not(.qubely-postgrid-style-4) .qubely-post-img.qubely-post-img-slide-top .qubely-post-image {\n  transition: transform 0.35s;\n  transform: translate3d(0, -20px, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:not(.qubely-postgrid-style-4) .qubely-post-img.qubely-post-img-slide-right .qubely-post-image {\n  transition: transform 0.35s;\n  transform: translate3d(20px, 0, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:not(.qubely-postgrid-style-4) .qubely-post-img.qubely-post-img-slide-left .qubely-post-image {\n  transition: transform 0.35s;\n  transform: translate3d(-20px, 0, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:hover:not(.qubely-postgrid-style-4) .qubely-post-img-zoom-out .qubely-post-image {\n  transform: scale(1); }\n\n.qubely-postgrid:hover:not(.qubely-postgrid-style-4) .qubely-post-img-zoom-in .qubely-post-image {\n  transform: scale(1.2); }\n\n.qubely-postgrid:hover:not(.qubely-postgrid-style-4) .qubely-post-img-slide-bottom .qubely-post-image {\n  transform: translate3d(0, 0px, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:hover:not(.qubely-postgrid-style-4) .qubely-post-img-slide-top .qubely-post-image {\n  transform: translate3d(0, 0px, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:hover:not(.qubely-postgrid-style-4) .qubely-post-img-slide-right .qubely-post-image {\n  transform: translate3d(0, 0, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid:hover:not(.qubely-postgrid-style-4) .qubely-post-img-slide-left .qubely-post-image {\n  transform: translate3d(0, 0, 0) scale3d(1.2, 1.2, 1); }\n\n.qubely-postgrid {\n  position: relative; }\n  .qubely-postgrid img {\n    display: block; }\n  .qubely-postgrid .qubely-postgrid-title {\n    margin: 0 !important;\n    line-height: 1; }\n    .qubely-postgrid .qubely-postgrid-title a {\n      text-decoration: none !important; }\n      .qubely-postgrid .qubely-postgrid-title a:hover {\n        text-decoration: none; }\n  .qubely-postgrid .qubely-postgrid-intro,\n  .qubely-postgrid .qubely-postgrid-intro p {\n    font-size: 15px;\n    line-height: 24px;\n    margin: 0; }\n  .qubely-postgrid .qubely-postgrid-meta {\n    font-size: 14px;\n    line-height: 22px; }\n  .qubely-postgrid .qubely-postgrid-btn {\n    display: inline-block;\n    text-decoration: none !important; }\n    .qubely-postgrid .qubely-postgrid-btn:hover {\n      text-decoration: none !important; }\n  .qubely-postgrid .qubely-button-fill.is-small {\n    padding: 5px 10px;\n    font-size: 14px; }\n  .qubely-postgrid .qubely-button-fill.is-medium {\n    padding: 8px 15px;\n    font-size: 16px; }\n  .qubely-postgrid .qubely-button-fill.is-large {\n    padding: 13px 20px;\n    font-size: 18px; }\n\n.qubely-post-img {\n  position: relative;\n  overflow: hidden; }\n  .qubely-post-img .qubely-postgrid-cat-position {\n    position: absolute; }\n    .qubely-post-img .qubely-postgrid-cat-position.qubely-postgrid-cat-position-leftTop {\n      top: 20px;\n      left: 20px; }\n    .qubely-post-img .qubely-postgrid-cat-position.qubely-postgrid-cat-position-rightTop {\n      top: 20px;\n      right: 20px; }\n    .qubely-post-img .qubely-postgrid-cat-position.qubely-postgrid-cat-position-leftBottom {\n      bottom: 20px;\n      left: 20px; }\n    .qubely-post-img .qubely-postgrid-cat-position.qubely-postgrid-cat-position-rightBottom {\n      bottom: 20px;\n      right: 20px; }\n\n.qubely-postgrid-category a {\n  transition: 400ms !important;\n  text-decoration: none !important; }\n  .qubely-postgrid-category a:hover {\n    text-decoration: none !important; }\n\n.qubely-postgrid-category.qubely-backend a {\n  pointer-events: none;\n  cursor: default; }\n\n.qubely-postgrid-meta span {\n  padding-left: 12px;\n  position: relative;\n  padding-right: 12px; }\n  .qubely-postgrid-meta span i {\n    font-style: normal;\n    margin-right: 3px; }\n  .qubely-postgrid-meta span:before {\n    position: absolute;\n    content: \"\";\n    background: #d8d8d8;\n    left: -1px;\n    top: 50%;\n    width: 2px;\n    height: 2px;\n    border-radius: 20px;\n    margin-top: -1px; }\n  .qubely-postgrid-meta span:first-child {\n    padding-left: 0; }\n    .qubely-postgrid-meta span:first-child:before {\n      display: none; }\n\n.qubely-postgrid-meta a {\n  text-decoration: none !important; }\n  .qubely-postgrid-meta a:hover {\n    text-decoration: none !important; }\n\n.qubely-post-list-center.qubely-post-list-wrapper {\n  align-items: center; }\n\n.qubely-post-list-top.qubely-post-list-wrapper {\n  align-items: flex-start; }\n\n.qubely-post-list-bottom.qubely-post-list-wrapper {\n  align-items: flex-end; }\n\n.qubely-post-list-view.qubely-postgrid-style-3 .qubely-post-list-wrapper .qubely-post-list-content {\n  background: #fff;\n  padding: 20px;\n  position: relative;\n  z-index: 1; }\n\n.qubely-post-list-view.qubely-postgrid-style-3 .qubely-post-list-wrapper .qubely-post-list-img + .qubely-post-list-content {\n  margin-left: -40px; }\n\n.qubely-post-grid-view.qubely-postgrid-style-3 .qubely-post-grid-content {\n  background: #fff;\n  position: relative;\n  z-index: 1;\n  padding: 20px; }\n\n.qubely-post-grid-view.qubely-postgrid-style-3 .qubely-post-grid-img + .qubely-post-grid-content {\n  margin: -80px auto 0;\n  width: 90%; }\n\n.qubely-post-grid-view.qubely-postgrid-style-3 .qubely-post-grid-left .qubely-post-grid-content {\n  float: left; }\n\n.qubely-post-grid-view.qubely-postgrid-style-3 .qubely-post-grid-right .qubely-post-grid-content {\n  float: right; }\n\n.qubely-postgrid-layout-4 {\n  display: grid;\n  grid-column-gap: 30px;\n  grid-row-gap: 30px;\n  grid-template-columns: 1fr; }\n  .qubely-postgrid-layout-4 .qubely-post-4-wrap {\n    display: grid;\n    grid-column-gap: 30px;\n    grid-row-gap: 30px;\n    grid-template-columns: 0.5fr 1fr; }\n  .qubely-postgrid-layout-4 .qubely-postgrid:nth-child(1) {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    grid-row-end: 6; }\n    .qubely-postgrid-layout-4 .qubely-postgrid:nth-child(1) .qubely-post-4-wrap {\n      grid-template-columns: 1fr; }\n\n@media (min-width: 767px) {\n  .qubely-postgrid-layout-4 {\n    grid-template-columns: 1fr 1fr; } }\n\n@media screen and (max-width: 992px) {\n  .qubely-post-list-center.qubely-post-list-wrapper {\n    align-items: flex-start; }\n  .qubely-post-list-view.qubely-postgrid-style-3\n.qubely-post-list-wrapper\n.qubely-post-list-img\n+ .qubely-post-list-content {\n    margin-left: 0; } }\n\n.qubely-postgrid-column {\n  display: grid;\n  grid-column-gap: 30px;\n  grid-row-gap: 30px; }\n\n.qubely-postgrid-column-xs1 {\n  grid-template-columns: 1fr; }\n  .qubely-postgrid-column-xs1.qubely-postgrid-layout-5 {\n    column-count: 1; }\n\n.qubely-postgrid-column-xs2 {\n  grid-template-columns: 1fr 1fr; }\n  .qubely-postgrid-column-xs2.qubely-postgrid-layout-5 {\n    column-count: 2; }\n\n.qubely-postgrid-column-xs3 {\n  grid-template-columns: 1fr 1fr 1fr; }\n  .qubely-postgrid-column-xs3.qubely-postgrid-layout-5 {\n    column-count: 3; }\n\n@media (min-width: 767px) {\n  .qubely-postgrid-column-sm1 {\n    grid-template-columns: 1fr; }\n    .qubely-postgrid-column-sm1.qubely-postgrid-layout-5 {\n      column-count: 1; }\n  .qubely-postgrid-column-sm2 {\n    grid-template-columns: 1fr 1fr; }\n    .qubely-postgrid-column-sm2.qubely-postgrid-layout-5 {\n      column-count: 2; }\n  .qubely-postgrid-column-sm3 {\n    grid-template-columns: 1fr 1fr 1fr; }\n    .qubely-postgrid-column-sm3.qubely-postgrid-layout-5 {\n      column-count: 3; } }\n\n@media (min-width: 992px) {\n  .qubely-postgrid-column-md1 {\n    grid-template-columns: 1fr; }\n    .qubely-postgrid-column-md1.qubely-postgrid-layout-5 {\n      column-count: 1; }\n  .qubely-postgrid-column-md2 {\n    grid-template-columns: 1fr 1fr; }\n    .qubely-postgrid-column-md2.qubely-postgrid-layout-5 {\n      column-count: 2; }\n  .qubely-postgrid-column-md3 {\n    grid-template-columns: 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md3.qubely-postgrid-layout-5 {\n      column-count: 3; }\n  .qubely-postgrid-column-md4 {\n    grid-template-columns: 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md4.qubely-postgrid-layout-5 {\n      column-count: 3; }\n  .qubely-postgrid-column-md5 {\n    grid-template-columns: 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md5.qubely-postgrid-layout-5 {\n      column-count: 3; }\n  .qubely-postgrid-column-md6 {\n    grid-template-columns: 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md6.qubely-postgrid-layout-5 {\n      column-count: 3; } }\n\n@media (min-width: 1299px) {\n  .qubely-postgrid-column-md4 {\n    grid-template-columns: 1fr 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md4.qubely-postgrid-layout-5 {\n      column-count: 4; }\n  .qubely-postgrid-column-md5 {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md5.qubely-postgrid-layout-5 {\n      column-count: 5; }\n  .qubely-postgrid-column-md6 {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr; }\n    .qubely-postgrid-column-md6.qubely-postgrid-layout-5 {\n      column-count: 6; } }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/pricing/style.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/pricing/style.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-pricing {\n  transition: 400ms;\n  position: relative; }\n  .qubely-block-pricing .qubely-list {\n    list-style: none;\n    padding: 0;\n    margin: 0; }\n    .qubely-block-pricing .qubely-list [contenteditable=true]:empty:before {\n      content: attr(placeholder);\n      color: gray;\n      padding: 0px 5px 0px 5px;\n      display: block; }\n    .qubely-block-pricing .qubely-list .qubely-list-li {\n      position: relative;\n      margin: 0;\n      display: block;\n      transition: color 400ms, background-color 400ms, border-color 400ms, box-shadow 400ms; }\n      .qubely-block-pricing .qubely-list .qubely-list-li .qubely-list-item-icon {\n        transition: color 400ms; }\n      .qubely-block-pricing .qubely-list .qubely-list-li .qubely-list-item {\n        display: inline-block;\n        position: relative; }\n        .qubely-block-pricing .qubely-list .qubely-list-li .qubely-list-item > span,\n        .qubely-block-pricing .qubely-list .qubely-list-li .qubely-list-item > div {\n          display: inline-block; }\n        .qubely-block-pricing .qubely-list .qubely-list-li .qubely-list-item .qubely-action-remove {\n          display: none;\n          font-size: 12px;\n          width: 18px;\n          height: 18px;\n          line-height: 20px;\n          text-align: center;\n          background: rgba(0, 0, 0, 0.8);\n          color: #fff;\n          border-radius: 10px;\n          position: absolute;\n          right: -30px;\n          top: 50%;\n          transform: translateY(-50%);\n          cursor: pointer; }\n      .qubely-block-pricing .qubely-list .qubely-list-li:hover .qubely-action-remove {\n        display: block; }\n  .qubely-block-pricing .qubely-pricing-badge {\n    background-color: #333; }\n    .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-1 {\n      text-align: center;\n      position: absolute;\n      display: block;\n      line-height: 1; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-1.qubely-badge-size-small {\n        top: -15px;\n        height: 60px;\n        padding-top: 35px;\n        width: 180px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-1.qubely-badge-size-regular {\n        top: -17px;\n        height: 70px;\n        padding-top: 40px;\n        width: 180px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-1.qubely-badge-size-large {\n        top: -17px;\n        height: 80px;\n        padding-top: 46px;\n        width: 200px; }\n    .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-2 {\n      text-align: center;\n      position: absolute;\n      display: block; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-2.qubely-badge-size-small {\n        top: 13px;\n        height: 27px;\n        line-height: 27px;\n        width: 160px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-2.qubely-badge-size-regular {\n        top: 18px;\n        height: 34px;\n        line-height: 34px;\n        width: 170px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-2.qubely-badge-size-large {\n        top: 22px;\n        height: 42px;\n        line-height: 42px;\n        width: 180px; }\n    .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 {\n      text-align: center;\n      display: block;\n      position: relative; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:before,\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:after, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3:before, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3:after {\n        content: \" \";\n        position: absolute;\n        border-style: solid; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-small {\n        height: 27px;\n        line-height: 27px;\n        margin-left: -10px;\n        margin-right: -10px; }\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-small > span:before,\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-small > span:after, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-small:before, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-small:after {\n          bottom: -10px;\n          border-width: 5px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-regular {\n        height: 37px;\n        line-height: 37px;\n        margin-left: -15px;\n        margin-right: -15px; }\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-regular > span:before,\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-regular > span:after, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-regular:before, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-regular:after {\n          bottom: -15px;\n          border-width: 7.5px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-large {\n        height: 46px;\n        line-height: 46px;\n        margin-left: -20px;\n        margin-right: -20px; }\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-large > span:before,\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-large > span:after, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-large:before, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3.qubely-badge-size-large:after {\n          bottom: -20px;\n          border-width: 10px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:before, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3:before {\n        left: 0; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:after, .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3:after {\n        right: 0; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:before,\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:after {\n        z-index: 1; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:before {\n        border-color: rgba(0, 0, 0, 0.15) rgba(0, 0, 0, 0.15) transparent transparent; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-3 > span:after {\n        border-color: rgba(0, 0, 0, 0.15) transparent transparent rgba(0, 0, 0, 0.15); }\n    .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-4 {\n      text-align: center;\n      display: block;\n      height: 40px;\n      line-height: 40px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-4.qubely-badge-size-small {\n        height: 27px;\n        line-height: 27px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-4.qubely-badge-size-regular {\n        height: 37px;\n        line-height: 37px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-4.qubely-badge-size-large {\n        height: 46px;\n        line-height: 46px; }\n    .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-5 {\n      text-align: center;\n      display: inline-block;\n      padding: 0 20px;\n      position: absolute; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-5.qubely-badge-size-small {\n        height: 27px;\n        line-height: 27px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-5.qubely-badge-size-regular {\n        height: 37px;\n        line-height: 37px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-5.qubely-badge-size-large {\n        height: 46px;\n        line-height: 46px; }\n    .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6 {\n      text-align: center;\n      position: absolute;\n      top: 0;\n      display: block;\n      line-height: 1; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6 > span {\n        display: inline-block;\n        transform: rotate(90deg); }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6::before {\n        content: \" \";\n        position: absolute;\n        left: 0;\n        border-style: solid; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6.qubely-badge-size-small {\n        width: 27px;\n        padding: 15px 0; }\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6.qubely-badge-size-small::before {\n          bottom: -15px;\n          border-width: 13.5px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6.qubely-badge-size-regular {\n        width: 37px;\n        padding: 18px 0; }\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6.qubely-badge-size-regular::before {\n          bottom: -18px;\n          border-width: 18.5px; }\n      .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6.qubely-badge-size-large {\n        width: 46px;\n        padding: 23px 0; }\n        .qubely-block-pricing .qubely-pricing-badge.qubely-badge-style-6.qubely-badge-size-large::before {\n          bottom: -23px;\n          border-width: 23px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/progressbar/style.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/progressbar/style.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-progress-bar .qubely-block-progress-labels {\n  display: -ms-flexbox;\n  display: flex;\n  justify-content: space-between; }\n\n.qubely-block-progress-bar .qubely-progress .qubely-progress-bar {\n  position: relative;\n  transition: 300ms;\n  height: 100%;\n  overflow: hidden; }\n  .qubely-block-progress-bar .qubely-progress .qubely-progress-bar .qubely-progress-striped {\n    height: 100%;\n    width: 100%;\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-size: 40px 40px;\n    transition: 300ms; }\n\n.qubely-block-progress-bar .qubely-progress .qubely-block-progress-labels {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  padding: 0 10px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/row/style.scss":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/row/style.scss ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-section {\n  position: relative; }\n  .qubely-section .qubely-container {\n    position: relative;\n    width: 100%;\n    margin-right: auto;\n    margin-left: auto; }\n    @media (min-width: 576px) {\n      .qubely-section .qubely-container {\n        max-width: 540px; } }\n    @media (min-width: 768px) {\n      .qubely-section .qubely-container {\n        max-width: 720px; } }\n    @media (min-width: 992px) {\n      .qubely-section .qubely-container {\n        max-width: 960px; } }\n  .qubely-section .qubely-row {\n    display: flex;\n    flex-wrap: wrap;\n    position: relative; }\n    .qubely-section .qubely-row > .wp-block-qubely-column {\n      box-sizing: border-box; }\n    .qubely-section .qubely-row.qubely-row-height-window {\n      min-height: 100vh; }\n    .qubely-section .qubely-row .editor-inner-blocks {\n      width: 100%; }\n  .qubely-section .qubely-row-overlay {\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    left: 0;\n    right: 0; }\n  .qubely-section .qubely-video-bg-wrap {\n    position: absolute;\n    top: 0px;\n    bottom: 0px;\n    right: 0px;\n    left: 0px;\n    overflow: hidden; }\n    .qubely-section .qubely-video-bg-wrap iframe {\n      height: 1300px;\n      position: absolute;\n      left: 50%;\n      width: 200%;\n      transform: translateX(-50%) translateY(-50%);\n      top: 50%; }\n    .qubely-section .qubely-video-bg-wrap .qubely-video-bg {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      min-width: 100%;\n      min-height: 100%;\n      width: auto;\n      height: auto;\n      -webkit-transform: translateX(-50%) translateY(-50%);\n      transform: translateX(-50%) translateY(-50%);\n      background-size: cover;\n      -webkit-transition: 1s opacity;\n      transition: 1s opacity; }\n  .qubely-section .qubely-shape-divider {\n    overflow: hidden;\n    position: absolute;\n    left: 0px;\n    right: 0px;\n    line-height: 0; }\n    .qubely-section .qubely-shape-divider > svg {\n      display: block;\n      width: 100%;\n      position: relative;\n      left: 50%;\n      -webkit-transform: translateX(-50%) scale(1.01);\n      -ms-transform: translateX(-50%) scale(1.01);\n      transform: translateX(-50%) scale(1.01); }\n    .qubely-section .qubely-shape-divider.qubely-bottom-shape {\n      bottom: 0px;\n      top: auto; }\n      .qubely-section .qubely-shape-divider.qubely-bottom-shape > svg {\n        transform: rotateX(180deg) translateX(-50%); }\n    .qubely-section .qubely-shape-divider.qubely-top-shape {\n      top: 0px;\n      bottom: auto; }\n\n.editor-styles-wrapper .qubely-section .qubely-column-inner .components-dropdown-menu.components-toolbar {\n  border-right: none;\n  padding: 0; }\n\n.editor-styles-wrapper .qubely-section .qubely-column-inner .wp-block[data-align=\"full\"] {\n  left: auto;\n  width: 100%;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/scss/style.scss":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/scss/style.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-alert {\n  position: relative;\n  padding: 8px 15px;\n  margin-bottom: 16px;\n  border-radius: 4px; }\n  .qubely-alert .qubely-alert-heading {\n    color: inherit; }\n  .qubely-alert .qubely-alert-dismissible {\n    padding-right: 64px; }\n  .qubely-alert .qubely-alert-dismissible .qubely-close {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 8px 15px;\n    color: inherit; }\n  .qubely-alert.qubely-alert-link {\n    font-weight: 700; }\n  .qubely-alert.qubely-alert-success {\n    color: #416B42;\n    background-color: #D2F7D5; }\n  .qubely-alert.qubely-alert-success hr {\n    border-top-color: #a2c9ab; }\n  .qubely-alert.qubely-alert-success .qubely-alert.qubely-alert-link {\n    color: #0b2e13; }\n  .qubely-alert.qubely-alert-info {\n    color: #0C8B98;\n    background-color: #BAEAF6; }\n  .qubely-alert.qubely-alert-info hr {\n    border-top-color: #abdde5; }\n  .qubely-alert.qubely-alert-info .qubely-alert-link {\n    color: #062c33; }\n  .qubely-alert.qubely-alert-warning {\n    color: #98810C;\n    background-color: #F6EABA; }\n  .qubely-alert.qubely-alert-warning hr {\n    border-top-color: #ffe8a1; }\n  .qubely-alert.qubely-alert-warning .qubely-alert-link {\n    color: #533f03; }\n  .qubely-alert.qubely-alert-danger {\n    color: #981A0C;\n    background-color: #F6BABA; }\n  .qubely-alert.qubely-alert-danger hr {\n    border-top-color: #f1b0b7; }\n  .qubely-alert.qubely-alert-danger .qubely-alert-link {\n    color: #491217; }\n\n.qubely-image-placeholder {\n  width: 210px;\n  height: 210px;\n  background: #f5f5f5;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center; }\n  .qubely-image-placeholder i {\n    font-style: normal;\n    font-size: 64px;\n    color: #D8D8D8; }\n\n[data-qubelyanimation] {\n  opacity: 0; }\n\n.components-modal__frame.edit-post-manage-blocks-modal .block-editor-block-icon img {\n  min-width: 20px;\n  min-height: 20px;\n  max-width: 24px;\n  max-height: 24px; }\n\n.qubely-context-menu-wraper {\n  display: none;\n  position: fixed;\n  background: white;\n  z-index: 100; }\n  .qubely-context-menu-wraper--option {\n    padding: 6px 50px 5px 10px;\n    min-width: 160px;\n    cursor: default;\n    font-size: 12px; }\n    .qubely-context-menu-wraper--option:hover {\n      background: linear-gradient(to top, #555, #333);\n      color: white; }\n    .qubely-context-menu-wraper--option:active {\n      color: #e9e9e9;\n      background: linear-gradient(to top, #555, #444); }\n    .qubely-context-menu-wraper--option__disabled {\n      color: #999999;\n      pointer-events: none; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/socialicons/style.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/socialicons/style.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-social-icons ul.qubely-ul {\n  list-style: none;\n  padding: 0;\n  font-size: 0; }\n  .qubely-block-social-icons ul.qubely-ul li.qubely-li {\n    display: inline-block;\n    font-size: initial;\n    position: relative; }\n    .qubely-block-social-icons ul.qubely-ul li.qubely-li a {\n      text-align: center;\n      display: flex;\n      align-items: center;\n      color: inherit;\n      text-decoration: none !important;\n      font-style: normal;\n      transition: color 300ms, background-color 300ms, border-color 300ms, border-radius 300ms; }\n      .qubely-block-social-icons ul.qubely-ul li.qubely-li a:hover, .qubely-block-social-icons ul.qubely-ul li.qubely-li a:active, .qubely-block-social-icons ul.qubely-ul li.qubely-li a:focus {\n        box-shadow: none;\n        outline: 0;\n        text-decoration: none;\n        font-style: normal; }\n\n.qubely-block-social-icons .qubely-social-icon-insert {\n  margin-left: 10px;\n  color: #0085ba;\n  padding: 10px;\n  font-size: 14px;\n  border-radius: 4px;\n  background: #f8f8f8;\n  border: 1px solid #efefef;\n  cursor: pointer; }\n\n.qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li {\n  position: relative; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li a {\n    background: #333;\n    color: #fff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li a:hover, .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li a:active, .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li a:focus {\n      color: #fff; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-facebook a {\n    background: #3b5998; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-facebook a:hover {\n      background: #2f477c; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-twitter a {\n    background: #1da1f2; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-twitter a:hover {\n      background: #1a93df; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-youtube a {\n    background: #ff0000; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-youtube a:hover {\n      background: #e40000; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-vimeo a {\n    background: #1ab7ea; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-vimeo a:hover {\n      background: #17a4d3; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-dribbble a {\n    background: #ea4c89; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-dribbble a:hover {\n      background: #d3437a; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-behance a {\n    background: #1769ff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-behance a:hover {\n      background: #135add; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-github a {\n    background: #333; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-github a:hover {\n      background: #181818; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-amazon a {\n    background: #ff9900; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-amazon a:hover {\n      background: #e68a00; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-codepen a {\n    background: #0ebeff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-codepen a:hover {\n      background: #0ba6df; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-flickr a {\n    background: #ff0084; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-flickr a:hover {\n      background: #e60077; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-foursquare a {\n    background: #2d5be3; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-foursquare a:hover {\n      background: #264ec7; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-gitlab a {\n    background: #fc6d26; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-gitlab a:hover {\n      background: #dd6021; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-linux a {\n    background: #0b57a4; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-linux a:hover {\n      background: #094886; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-whatsapp a {\n    background: #075e54; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-whatsapp a:hover {\n      background: #053d37; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-tumblr a {\n    background: #35465c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-tumblr a:hover {\n      background: #253141; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-trello a {\n    background: #0079bf; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-trello a:hover {\n      background: #00639c; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-soundcloud a {\n    background: #ff3300; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-soundcloud a:hover {\n      background: #df2d00; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-spotify a {\n    background: #1db954; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-spotify a:hover {\n      background: #1ba34a; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-skype a {\n    background: #00aff0; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-skype a:hover {\n      background: #009fd8; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-slack a {\n    background: #e01563; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-slack a:hover {\n      background: #c01154; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-reddit a {\n    background: #5f99cf; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-reddit a:hover {\n      background: #4f7fac; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-tripadvisor a {\n    background: #00af87; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-tripadvisor a:hover {\n      background: #018f6e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-pinterest a {\n    background: #bd081c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-pinterest a:hover {\n      background: #9c0718; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-product-hunt a {\n    background: #da552f; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-product-hunt a:hover {\n      background: #b34426; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-medium a {\n    background: #00ab6c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-medium a:hover {\n      background: #018a57; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-instagram a {\n    background: #e1306c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-instagram a:hover {\n      background: #c0275a; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-linkedin a {\n    background: #0077b5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-linkedin a:hover {\n      background: #005f92; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-digg a {\n    background: #005be2; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-digg a:hover {\n      background: #004dc0; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-dropbox a {\n    background: #007ee5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-dropbox a:hover {\n      background: #016fc9; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-slideshare a {\n    background: #0077b5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-slideshare a:hover {\n      background: #006196; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-stack-overflow a {\n    background: #f48024; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-stack-overflow a:hover {\n      background: #d67220; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-stumbleupon a {\n    background: #eb4924; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-stumbleupon a:hover {\n      background: #c93e1e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-wordpress a {\n    background: #21759b; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-wordpress a:hover {\n      background: #1b5e7e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-xing a {\n    background: #026466; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-xing a:hover {\n      background: #014849; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-yahoo a {\n    background: #410093; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-yahoo a:hover {\n      background: #32016e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-bitbucket a {\n    background: #205081; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-bitbucket a:hover {\n      background: #17395c; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-jsfiddle a {\n    background: #0084ff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-jsfiddle a:hover {\n      background: #0173dd; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-imdb a {\n    background: #EAB700;\n    color: #333; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-imdb a:hover {\n      background: #c29801; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-snapchat a {\n    background: #fffc00;\n    color: #333; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-snapchat a:hover {\n      background: #dbd801; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-telegram a {\n    background: #0088cc; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-telegram a:hover {\n      background: #0074ad; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-twitch a {\n    background: #6441a5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-twitch a:hover {\n      background: #513486; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-joomla a {\n    background: #f9a541; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-fill ul li.qubely-social-joomla a:hover {\n      background: #d38c36; }\n\n.qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li {\n  position: relative; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li a {\n    color: #333; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li a:hover, .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li a:active, .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li a:focus {\n      color: #333; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-facebook a {\n    color: #3b5998; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-facebook a:hover {\n      color: #2f477c; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-twitter a {\n    color: #1da1f2; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-twitter a:hover {\n      color: #1a93df; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-youtube a {\n    color: #ff0000; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-youtube a:hover {\n      color: #e40000; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-vimeo a {\n    color: #1ab7ea; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-vimeo a:hover {\n      color: #17a4d3; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-dribbble a {\n    color: #ea4c89; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-dribbble a:hover {\n      color: #d3437a; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-behance a {\n    color: #1769ff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-behance a:hover {\n      color: #135add; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-github a {\n    color: #333; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-github a:hover {\n      color: #181818; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-amazon a {\n    color: #ff9900; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-amazon a:hover {\n      color: #e68a00; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-codepen a {\n    color: #0ebeff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-codepen a:hover {\n      color: #0ba6df; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-flickr a {\n    color: #ff0084; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-flickr a:hover {\n      color: #e60077; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-foursquare a {\n    color: #2d5be3; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-foursquare a:hover {\n      color: #264ec7; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-gitlab a {\n    color: #fc6d26; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-gitlab a:hover {\n      color: #dd6021; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-linux a {\n    color: #0b57a4; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-linux a:hover {\n      color: #094886; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-whatsapp a {\n    color: #075e54; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-whatsapp a:hover {\n      color: #053d37; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-tumblr a {\n    color: #35465c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-tumblr a:hover {\n      color: #253141; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-trello a {\n    color: #0079bf; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-trello a:hover {\n      color: #00639c; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-soundcloud a {\n    color: #ff3300; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-soundcloud a:hover {\n      color: #df2d00; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-spotify a {\n    color: #1db954; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-spotify a:hover {\n      color: #1ba34a; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-skype a {\n    color: #00aff0; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-skype a:hover {\n      color: #009fd8; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-slack a {\n    color: #e01563; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-slack a:hover {\n      color: #c01154; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-reddit a {\n    color: #5f99cf; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-reddit a:hover {\n      color: #4f7fac; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-tripadvisor a {\n    color: #00af87; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-tripadvisor a:hover {\n      color: #018f6e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-pinterest a {\n    color: #bd081c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-pinterest a:hover {\n      color: #9c0718; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-product-hunt a {\n    color: #da552f; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-product-hunt a:hover {\n      color: #b34426; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-medium a {\n    color: #00ab6c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-medium a:hover {\n      color: #018a57; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-instagram a {\n    color: #e1306c; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-instagram a:hover {\n      color: #c0275a; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-linkedin a {\n    color: #0077b5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-linkedin a:hover {\n      color: #005f92; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-digg a {\n    color: #005be2; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-digg a:hover {\n      color: #004dc0; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-dropbox a {\n    color: #007ee5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-dropbox a:hover {\n      color: #016fc9; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-slideshare a {\n    color: #0077b5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-slideshare a:hover {\n      color: #006196; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-stack-overflow a {\n    color: #f48024; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-stack-overflow a:hover {\n      color: #d67220; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-stumbleupon a {\n    color: #eb4924; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-stumbleupon a:hover {\n      color: #c93e1e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-wordpress a {\n    color: #21759b; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-wordpress a:hover {\n      color: #1b5e7e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-xing a {\n    color: #026466; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-xing a:hover {\n      color: #014849; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-yahoo a {\n    color: #410093; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-yahoo a:hover {\n      color: #32016e; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-bitbucket a {\n    color: #205081; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-bitbucket a:hover {\n      color: #17395c; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-jsfiddle a {\n    color: #0084ff; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-jsfiddle a:hover {\n      color: #0173dd; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-imdb a {\n    color: #EAB700; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-imdb a:hover {\n      color: #ca9f03; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-snapchat a {\n    color: #FEFC00; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-snapchat a:hover {\n      color: #d3d301; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-telegram a {\n    color: #0088cc; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-telegram a:hover {\n      color: #0074ad; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-twitch a {\n    color: #6441a5; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-twitch a:hover {\n      color: #513486; }\n  .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-joomla a {\n    color: #f9a541; }\n    .qubely-block-social-icons.qubely-style-default.qubely-layout-normal ul li.qubely-social-joomla a:hover {\n      color: #d38c36; }\n\n.qubely-socialicon-picker-popover .components-popover__content:not(.is-mobile) {\n  padding: 20px;\n  min-width: 300px !important;\n  min-height: fit-content;\n  border: 1px solid #e5e5e5;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); }\n  .qubely-socialicon-picker-popover .components-popover__content:not(.is-mobile) .qubely-action-social-icon-apply,\n  .qubely-socialicon-picker-popover .components-popover__content:not(.is-mobile) .qubely-action-social-icon-remove {\n    width: 100%;\n    justify-content: center;\n    margin-top: 10px; }\n  .qubely-socialicon-picker-popover .components-popover__content:not(.is-mobile) .qubely-action-social-icon-remove {\n    color: #c92c2c; }\n    .qubely-socialicon-picker-popover .components-popover__content:not(.is-mobile) .qubely-action-social-icon-remove:hover {\n      color: #a72525; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/tabs/style.scss":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/tabs/style.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-tab .qubely-tab-nav {\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap; }\n  .qubely-block-tab .qubely-tab-nav .qubely-tab-item {\n    display: block;\n    text-align: center;\n    position: relative; }\n    .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title {\n      cursor: pointer;\n      display: block;\n      display: flex;\n      align-items: center;\n      transition: color 400ms, background-color 400ms, border-color 400ms;\n      position: relative;\n      justify-content: center; }\n      .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title.qubely-has-icon-top {\n        flex-direction: column; }\n    .qubely-block-tab .qubely-tab-nav .qubely-tab-item:hover .qubely-action-tab-remove {\n      display: block; }\n  .qubely-block-tab .qubely-tab-nav.qubely-alignment-left {\n    justify-content: flex-start; }\n  .qubely-block-tab .qubely-tab-nav.qubely-alignment-center {\n    justify-content: center; }\n  .qubely-block-tab .qubely-tab-nav.qubely-alignment-right {\n    justify-content: flex-end; }\n  .qubely-block-tab .qubely-tab-nav.qubely-alignment-justify .qubely-tab-item {\n    -ms-flex: 1 1 auto;\n    flex: 1 1 auto; }\n  .qubely-block-tab .qubely-tab-nav .qubely-action-tab-remove {\n    display: none;\n    font-size: 12px;\n    width: 18px;\n    height: 18px;\n    line-height: 20px;\n    text-align: center;\n    background: rgba(0, 0, 0, 0.8);\n    color: #fff;\n    position: absolute;\n    top: -9px;\n    right: -9px;\n    border-radius: 10px;\n    z-index: 1;\n    cursor: pointer; }\n\n.qubely-block-tab.qubely-tab-style-tabs .qubely-tab-nav .qubely-tab-item.qubely-active .qubely-tab-title:after {\n  content: \" \";\n  position: absolute;\n  left: 0;\n  width: 100%;\n  transition: color 400ms, background-color 400ms, border-color 400ms; }\n\n.qubely-block-tab .qubely-add-new-tab {\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  margin-left: 10px;\n  padding: 0px 15px;\n  border-radius: 3px;\n  color: #666;\n  transition: color 300ms; }\n  .qubely-block-tab .qubely-add-new-tab:hover {\n    color: #0085ba;\n    border-color: #0085ba; }\n\n.qubely-block-tab .wp-block-qubely-tab.qubely-tab-content {\n  position: absolute;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 400ms ease-in; }\n  .qubely-block-tab .wp-block-qubely-tab.qubely-tab-content.qubely-active {\n    position: static;\n    visibility: visible;\n    opacity: 1; }\n\n.qubely-block-tab.qubely-tab-style-pills .qubely-tab-item, .qubely-block-tab.qubely-tab-style-tabs .qubely-tab-item {\n  margin-bottom: 10px; }\n\n.wp-block.qubely-tab-content {\n  visibility: hidden;\n  opacity: 0;\n  position: absolute; }\n  .wp-block.qubely-tab-content.qubely-active {\n    position: relative;\n    opacity: 1;\n    visibility: visible;\n    transition: opacity 400ms; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/team/style.scss":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/team/style.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-team {\n  position: relative;\n  transition: border-color 400ms, background-color 400ms, box-shadow 400ms; }\n  .qubely-block-team h1, .qubely-block-team h2, .qubely-block-team h3, .qubely-block-team h4, .qubely-block-team h5, .qubely-block-team h6 {\n    padding: 0;\n    margin: 0;\n    line-height: 1;\n    position: relative; }\n    .qubely-block-team h1::before, .qubely-block-team h1::after, .qubely-block-team h2::before, .qubely-block-team h2::after, .qubely-block-team h3::before, .qubely-block-team h3::after, .qubely-block-team h4::before, .qubely-block-team h4::after, .qubely-block-team h5::before, .qubely-block-team h5::after, .qubely-block-team h6::before, .qubely-block-team h6::after {\n      display: none !important; }\n    .qubely-block-team h1 .qubely-text-has-bgcolor, .qubely-block-team h2 .qubely-text-has-bgcolor, .qubely-block-team h3 .qubely-text-has-bgcolor, .qubely-block-team h4 .qubely-text-has-bgcolor, .qubely-block-team h5 .qubely-text-has-bgcolor, .qubely-block-team h6 .qubely-text-has-bgcolor {\n      padding-left: 10px;\n      padding-right: 10px; }\n  .qubely-block-team .qubely-team-image-wrapper {\n    font-size: 0; }\n  .qubely-block-team.qubely-team-layout-1 .qubely-team-image-wrapper {\n    display: inline-block; }\n  .qubely-block-team.qubely-team-layout-2 .qubely-team-image-wrapper img {\n    width: 100%; }\n  .qubely-block-team.qubely-team-layout-2 .qubely-team-content {\n    display: flex;\n    position: absolute;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    transition: opacity 300ms; }\n    .qubely-block-team.qubely-team-layout-2 .qubely-team-content .qubely-team-content-inner {\n      width: 100%; }\n  .qubely-block-team.qubely-team-layout-2:hover .qubely-team-content {\n    opacity: 1; }\n  .qubely-block-team.qubely-team-layout-3 {\n    display: flex; }\n    .qubely-block-team.qubely-team-layout-3 .qubely-team-content {\n      display: flex; }\n      .qubely-block-team.qubely-team-layout-3 .qubely-team-content .qubely-team-content-inner {\n        width: 100%; }\n  .qubely-block-team .qubely-team-social-links {\n    font-size: 0; }\n    .qubely-block-team .qubely-team-social-links a {\n      display: inline-block;\n      text-decoration: none !important;\n      transition: 400ms; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-layout-fill a {\n      padding: 10px; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-layout-fill a i {\n        font-style: normal;\n        width: 1em;\n        height: 1em;\n        display: block;\n        text-align: center; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-facebook {\n      color: #3b5998; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-facebook:hover {\n        color: #2f477c; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-twitter {\n      color: #1da1f2; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-twitter:hover {\n        color: #1a93df; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-instagram {\n      color: #e1306c; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-instagram:hover {\n        color: #c0275a; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-linkedin {\n      color: #0077b5; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-linkedin:hover {\n        color: #005f92; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-youtube {\n      color: #ff0000; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-youtube:hover {\n        color: #e40000; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-github {\n      color: #333; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-github:hover {\n        color: #181818; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-flickr {\n      color: #ff0084; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-flickr:hover {\n        color: #e60077; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-pinterest {\n      color: #bd081c; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-pinterest:hover {\n        color: #9c0718; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-dribbble {\n      color: #ea4c89; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-dribbble:hover {\n        color: #d3437a; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-behance {\n      color: #1769ff; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-normal .qubely-team-social-behance:hover {\n        color: #135add; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill a {\n      color: #fff; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill a:hover {\n        color: #fff; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-facebook {\n      background-color: #3b5998; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-facebook:hover {\n        background-color: #2f477c; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-twitter {\n      background-color: #1da1f2; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-twitter:hover {\n        background-color: #1a93df; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-instagram {\n      background-color: #e1306c; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-instagram:hover {\n        background-color: #c0275a; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-linkedin {\n      background-color: #0077b5; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-linkedin:hover {\n        background-color: #005f92; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-youtube {\n      background-color: #ff0000; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-youtube:hover {\n        background-color: #e40000; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-github {\n      background-color: #333; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-github:hover {\n        background-color: #181818; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-flickr {\n      background-color: #ff0084; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-flickr:hover {\n        background-color: #e60077; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-pinterest {\n      background-color: #bd081c; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-pinterest:hover {\n        background-color: #9c0718; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-dribbble {\n      background-color: #ea4c89; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-dribbble:hover {\n        background-color: #d3437a; }\n    .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-behance {\n      background-color: #1769ff; }\n      .qubely-block-team .qubely-team-social-links.qubely-team-icon-style-default.qubely-team-icon-layout-fill .qubely-team-social-behance:hover {\n        background-color: #135add; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/testimonial/style.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/testimonial/style.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-testimonial {\n  transition: all 400ms; }\n  .qubely-block-testimonial .editor-rich-text .editor-rich-text__tinymce {\n    line-height: inherit; }\n  .qubely-block-testimonial .qubely-testimonial-quote .qubely-quote-icon {\n    line-height: 1;\n    width: auto;\n    height: auto; }\n  .qubely-block-testimonial .qubely-testimonial-quote.qubely-position-bottom .qubely-quote-icon {\n    transform: scaleY(-1); }\n  .qubely-block-testimonial .qubely-testimonial-avatar.qubely-image-placeholder i {\n    font-style: normal;\n    font-size: .5em; }\n  .qubely-block-testimonial .qubely-testimonial-avatar-layout-left,\n  .qubely-block-testimonial .qubely-testimonial-avatar-layout-right {\n    display: inline-flex;\n    align-items: center; }\n    .qubely-block-testimonial .qubely-testimonial-avatar-layout-left .qubely-testimonial-author-info,\n    .qubely-block-testimonial .qubely-testimonial-avatar-layout-right .qubely-testimonial-author-info {\n      text-align: left; }\n  .qubely-block-testimonial .qubely-testimonial-avatar-layout-right .qubely-testimonial-author-info {\n    text-align: right; }\n  .qubely-block-testimonial .qubely-testimonial-ratings {\n    unicode-bidi: bidi-override;\n    display: inline-block;\n    position: relative;\n    letter-spacing: 5px; }\n    .qubely-block-testimonial .qubely-testimonial-ratings:before, .qubely-block-testimonial .qubely-testimonial-ratings:after {\n      content: \"\\f005\\f005\\f005\\f005\\f005\";\n      font-family: 'Font Awesome\\ 5 Free';\n      font-weight: 400;\n      display: block;\n      white-space: nowrap; }\n    .qubely-block-testimonial .qubely-testimonial-ratings:before {\n      position: absolute;\n      z-index: 1;\n      left: 0px;\n      overflow: hidden;\n      font-family: 'Font Awesome\\ 5 Free';\n      font-weight: 900;\n      content: \"\\f005\\f005\\f005\\f005\\f005\"; }\n    .qubely-block-testimonial .qubely-testimonial-ratings:after {\n      z-index: 0; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"1\"]:before {\n      width: 20%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"1.5\"]:before {\n      width: 29%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"2\"]:before {\n      width: 40%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"2.5\"]:before {\n      width: 49%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"3\"]:before {\n      width: 60%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"3.5\"]:before {\n      width: 69%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"4\"]:before {\n      width: 80%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"4.5\"]:before {\n      width: 89%; }\n    .qubely-block-testimonial .qubely-testimonial-ratings[data-qubelyrating=\"5\"]:before {\n      width: 100%; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/text/style.scss":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/text/style.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".editor-styles-wrapper .qubely-block-text h1, .editor-styles-wrapper .qubely-block-text h2, .editor-styles-wrapper .qubely-block-text h3, .editor-styles-wrapper .qubely-block-text h4, .editor-styles-wrapper .qubely-block-text h5, .editor-styles-wrapper .qubely-block-text h6 {\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  position: relative; }\n  .editor-styles-wrapper .qubely-block-text h1::before, .editor-styles-wrapper .qubely-block-text h1::after, .editor-styles-wrapper .qubely-block-text h2::before, .editor-styles-wrapper .qubely-block-text h2::after, .editor-styles-wrapper .qubely-block-text h3::before, .editor-styles-wrapper .qubely-block-text h3::after, .editor-styles-wrapper .qubely-block-text h4::before, .editor-styles-wrapper .qubely-block-text h4::after, .editor-styles-wrapper .qubely-block-text h5::before, .editor-styles-wrapper .qubely-block-text h5::after, .editor-styles-wrapper .qubely-block-text h6::before, .editor-styles-wrapper .qubely-block-text h6::after {\n    display: none !important; }\n  .editor-styles-wrapper .qubely-block-text h1 .qubely-text-has-bgcolor, .editor-styles-wrapper .qubely-block-text h2 .qubely-text-has-bgcolor, .editor-styles-wrapper .qubely-block-text h3 .qubely-text-has-bgcolor, .editor-styles-wrapper .qubely-block-text h4 .qubely-text-has-bgcolor, .editor-styles-wrapper .qubely-block-text h5 .qubely-text-has-bgcolor, .editor-styles-wrapper .qubely-block-text h6 .qubely-text-has-bgcolor {\n    padding-left: 10px;\n    padding-right: 10px; }\n\n.editor-styles-wrapper .qubely-block-text.qubely-has-drop-cap:after {\n  content: \" \";\n  display: table;\n  clear: both; }\n\n.editor-styles-wrapper .qubely-block-text.qubely-has-drop-cap p::first-letter {\n  float: left;\n  line-height: .68;\n  font-weight: 700;\n  margin: .05em .1em 0 0;\n  text-transform: uppercase;\n  font-style: normal; }\n\n.editor-styles-wrapper .qubely-block-text p {\n  padding: 0;\n  margin: 0;\n  transition: color 300ms ease-in-out, background-color 300ms ease-in-out, border-color 300ms ease-in-out, box-shadow 300ms ease-in-out; }\n\n.editor-styles-wrapper .qubely-block-text .qubely-block-text-title {\n  margin: 0;\n  transition: color 400ms, border-color 400ms, background-color 400ms, box-shadow 400ms; }\n\n.editor-styles-wrapper .qubely-block-text .qubely-separator {\n  font-size: 0; }\n  .editor-styles-wrapper .qubely-block-text .qubely-separator .qubely-separator-type-css,\n  .editor-styles-wrapper .qubely-block-text .qubely-separator .qubely-separator-type-svg {\n    display: inline-block; }\n\n.editor-styles-wrapper .qubely-block-text .qubely-separator-position-left .qubely-block-text-title-inner,\n.editor-styles-wrapper .qubely-block-text .qubely-separator-position-right .qubely-block-text-title-inner,\n.editor-styles-wrapper .qubely-block-text .qubely-separator-position-leftright .qubely-block-text-title-inner {\n  display: inline-flex;\n  align-items: center; }\n  .editor-styles-wrapper .qubely-block-text .qubely-separator-position-left .qubely-block-text-title-inner .qubely-block-text-title,\n  .editor-styles-wrapper .qubely-block-text .qubely-separator-position-left .qubely-block-text-title-inner .qubely-separator,\n  .editor-styles-wrapper .qubely-block-text .qubely-separator-position-right .qubely-block-text-title-inner .qubely-block-text-title,\n  .editor-styles-wrapper .qubely-block-text .qubely-separator-position-right .qubely-block-text-title-inner .qubely-separator,\n  .editor-styles-wrapper .qubely-block-text .qubely-separator-position-leftright .qubely-block-text-title-inner .qubely-block-text-title,\n  .editor-styles-wrapper .qubely-block-text .qubely-separator-position-leftright .qubely-block-text-title-inner .qubely-separator {\n    display: inline-flex; }\n\n.wp-block-qubely-text .qubely-block-text .qubely-block-text-title-container {\n  color: inherit; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/timeline/style.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/timeline/style.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-timeline {\n  position: relative; }\n  .qubely-block-timeline:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    border-radius: 50px; }\n  .qubely-block-timeline.qubely-timeline-orientation-left:after {\n    left: 0; }\n  .qubely-block-timeline.qubely-timeline-orientation-right:after {\n    right: 0; }\n  .qubely-block-timeline .qubely-timeline-date-container {\n    position: relative; }\n  .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-date-container {\n    position: absolute; }\n  .qubely-block-timeline .qubely-timeline-image-container.qubely-empty-image {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    border: 2px dashed #e5e5e5;\n    padding: 30px;\n    border-radius: 5px;\n    min-height: 200px; }\n  .qubely-block-timeline .qubely-timeline-image-container .qubely-timeline-content-image-editor {\n    position: relative;\n    display: inline-block; }\n    .qubely-block-timeline .qubely-timeline-image-container .qubely-timeline-content-image-editor img {\n      display: inline-block; }\n    .qubely-block-timeline .qubely-timeline-image-container .qubely-timeline-content-image-editor .qubely-media-actions {\n      top: 10px;\n      right: 10px;\n      position: absolute;\n      z-index: 2; }\n  .qubely-block-timeline .qubely-timeline-image-container .qubely-insert-image {\n    text-align: center;\n    display: inline-block;\n    color: #2184F9;\n    text-decoration: none;\n    line-height: 1; }\n    .qubely-block-timeline .qubely-timeline-image-container .qubely-insert-image span {\n      margin-top: 5px;\n      display: block; }\n  .qubely-block-timeline .qubely-timeline-connector {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1; }\n  .qubely-block-timeline .qubely-timeline-item {\n    position: relative; }\n  .qubely-block-timeline .qubely-timeline-content {\n    position: relative; }\n    .qubely-block-timeline .qubely-timeline-content .qubely-action-timeline-remove {\n      display: none;\n      font-size: 12px;\n      width: 18px;\n      height: 18px;\n      line-height: 20px;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.8);\n      color: #fff;\n      position: absolute;\n      top: -9px;\n      right: -9px;\n      border-radius: 10px;\n      z-index: 1;\n      cursor: pointer; }\n    .qubely-block-timeline .qubely-timeline-content:before {\n      content: \" \";\n      position: absolute;\n      width: 0;\n      height: 0;\n      border-style: solid;\n      top: 50%;\n      transform: translateY(-50%);\n      border-width: 15px;\n      z-index: 1; }\n    .qubely-block-timeline .qubely-timeline-content.qubely-content-has-border:after {\n      content: \" \";\n      position: absolute;\n      width: 0;\n      height: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      border-style: solid;\n      z-index: 0; }\n    .qubely-block-timeline .qubely-timeline-content:hover .qubely-action-timeline-remove {\n      display: block; }\n  @media (min-width: 768px) {\n    .qubely-block-timeline.qubely-timeline-orientation-center::after {\n      left: 50%;\n      transform: translateX(-50%); }\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-item {\n      width: 50%; }\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-date-container {\n      display: block;\n      top: 50%;\n      transform: translateY(-50%);\n      text-align: left;\n      white-space: nowrap;\n      width: 100%; }\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-left {\n      left: 0; }\n      .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-left .qubely-timeline-content:before {\n        right: -30px; }\n      .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-left .qubely-timeline-date-container {\n        left: 100%;\n        text-align: left; }\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-right {\n      left: 50%; }\n      .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-right .qubely-timeline-content:before {\n        left: -30px; }\n      .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-right .qubely-timeline-date-container {\n        right: 100%;\n        text-align: right; }\n    .qubely-block-timeline.qubely-timeline-orientation-left .qubely-timeline-content:before {\n      left: -30px; }\n    .qubely-block-timeline.qubely-timeline-orientation-left .qubely-timeline-date-container {\n      margin-top: 5px;\n      margin-bottom: 5px;\n      left: 0; }\n    .qubely-block-timeline.qubely-timeline-orientation-right .qubely-timeline-content:before {\n      right: -30px; }\n    .qubely-block-timeline.qubely-timeline-orientation-right .qubely-timeline-date-container {\n      margin-top: 10px;\n      right: 0; } }\n  @media (max-width: 767px) {\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-content:before {\n      left: -30px; }\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-date-container {\n      margin-top: 10px; }\n    .qubely-block-timeline.qubely-timeline-orientation-center .qubely-timeline-date-container {\n      position: relative; }\n    .qubely-block-timeline.qubely-timeline-orientation-center, .qubely-block-timeline.qubely-timeline-orientation-left {\n      margin-left: 20px; }\n    .qubely-block-timeline.qubely-timeline-orientation-left .qubely-timeline-date-container {\n      position: absolute; }\n    .qubely-block-timeline.qubely-timeline-orientation-right {\n      margin-right: 20px; } }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/videopopup/style.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/videopopup/style.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-videopopup-wrapper {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  transition: 400ms; }\n  .qubely-block-videopopup-wrapper.qubely-alignment-left {\n    justify-content: flex-start; }\n  .qubely-block-videopopup-wrapper.qubely-alignment-center {\n    justify-content: center; }\n  .qubely-block-videopopup-wrapper.qubely-alignment-right {\n    justify-content: flex-end; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup a {\n    display: block;\n    text-decoration: none !important; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup .qubely-video-popup-prefix,\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup .qubely-video-popup-postfix {\n    transition: 400ms; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup .qubely-btn-icon-wrapper {\n    display: inline-block; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup .qubely-btn-icon {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    transition: 400ms; }\n    .qubely-block-videopopup-wrapper .qubely-block-videopopup .qubely-btn-icon span.qubely-ripple {\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      left: 0;\n      top: 0;\n      z-index: -1;\n      box-shadow: 0 0 0 15px rgba(255, 255, 255, 0.8), 0 0 0 30px rgba(255, 255, 255, 0.6), 0 0 0 45px rgba(255, 255, 255, 0.4);\n      animation: qubelyRipple 2s infinite; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup.qubely-size-small .qubely-btn-icon {\n    width: 80px;\n    height: 80px;\n    font-size: 24px; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup.qubely-size-medium .qubely-btn-icon {\n    width: 100px;\n    height: 100px;\n    font-size: 30px; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup.qubely-size-large .qubely-btn-icon {\n    width: 140px;\n    height: 140px;\n    font-size: 40px; }\n  .qubely-block-videopopup-wrapper .qubely-block-videopopup-overlay {\n    position: absolute;\n    z-index: -1;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    top: 0;\n    transition: 400ms; }\n\n@keyframes qubelyRipple {\n  0% {\n    opacity: 0;\n    transform: scale(0.5); }\n  10% {\n    opacity: 1; }\n  90% {\n    opacity: 0; }\n  100% {\n    opacity: 0;\n    transform: scale(1); } }\n\n.edit-post-visual-editor i {\n  font-style: initial !important; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/wrapper/style.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/wrapper/style.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-block-wrapper-block {\n  transition: border-color 400ms, background-color 400ms, box-shadow 400ms; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/InnerPanel.scss":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/InnerPanel.scss ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field.qubely-field-inner-panel {\n  border: 1px solid #e2e4e7;\n  margin: -1px 0 0 0; }\n  .qubely-field.qubely-field-inner-panel .qubely-field-inner-panel-title {\n    background: #f8f9f9;\n    padding: 12px 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: pointer; }\n    .qubely-field.qubely-field-inner-panel .qubely-field-inner-panel-title:hover {\n      background: #f0f1f1; }\n  .qubely-field.qubely-field-inner-panel .qubely-field-inner-panel-body {\n    border-top: 1px solid #e2e4e7;\n    padding: 10px 16px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/alignment.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/alignment.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-button-list.qubely-field-button-list-fluid {\n  display: flex;\n  justify-content: space-between; }\n  .qubely-field-button-list.qubely-field-button-list-fluid .qubely-button {\n    width: 100%;\n    justify-content: center; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/animation.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/animation.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-animation-popup {\n  padding: 15px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/border.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/border.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-border-type {\n  width: 16px;\n  display: block;\n  height: 0; }\n  .qubely-field-border-type.qubely-field-border-type-solid {\n    border-top: 3px solid #8D96A0; }\n  .qubely-field-border-type.qubely-field-border-type-dotted {\n    border-top: 3px dotted #8D96A0; }\n  .qubely-field-border-type.qubely-field-border-type-dashed {\n    border-top: 3px dashed #8D96A0; }\n  .qubely-field-border-type.qubely-field-border-type-double {\n    border-top: 6px double #8D96A0; }\n\n.active .qubely-field-border-type.qubely-field-border-type-solid {\n  border-top-color: #2184F9; }\n\n.active .qubely-field-border-type.qubely-field-border-type-dotted {\n  border-top-color: #2184F9; }\n\n.active .qubely-field-border-type.qubely-field-border-type-dashed {\n  border-top-color: #2184F9; }\n\n.active .qubely-field-border-type.qubely-field-border-type-double {\n  border-top-color: #2184F9; }\n\n.qubely-svg-fill {\n  fill: #8D96A0; }\n\n.qubely-svg-stroke {\n  stroke: #8D96A0; }\n\n.active .qubely-svg-fill {\n  fill: #2184F9; }\n\n.active .qubely-svg-stroke {\n  stroke: #2184F9; }\n\n.qubely-border-clear {\n  font-size: 12px;\n  color: #8D96A0; }\n  .qubely-border-clear:hover {\n    color: #2184F9; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/buttonGroup.scss":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/buttonGroup.scss ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-group-btn {\n  align-items: center; }\n  .qubely-field-group-btn label {\n    margin-bottom: 0; }\n  .qubely-field-group-btn .qubely-field-child {\n    display: flex;\n    justify-content: end;\n    align-items: center; }\n    .qubely-field-group-btn .qubely-field-child .qubley-group-button {\n      padding: 4px 6px;\n      color: #8d96a0;\n      font-size: 12px;\n      border-top: 1px solid #d6d9dd;\n      border-bottom: 1px solid #d6d9dd;\n      border-right: 1px solid #d6d9dd;\n      text-transform: capitalize;\n      cursor: pointer; }\n      .qubely-field-group-btn .qubely-field-child .qubley-group-button:last-child {\n        border-bottom-right-radius: 3px;\n        border-top-right-radius: 3px; }\n      .qubely-field-group-btn .qubely-field-child .qubley-group-button:first-child {\n        border-left: 1px solid #d6d9dd;\n        border-top-left-radius: 3px;\n        border-bottom-left-radius: 3px; }\n      .qubely-field-group-btn .qubely-field-child .qubley-group-button.qubley-active-group-btn {\n        color: #2184f9;\n        background: #d2e7ff;\n        border-color: #a9d0ff; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/color.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/color.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-color.qubely-field {\n  display: flex; }\n  .qubely-field-color.qubely-field.qubley-half {\n    display: inline-flex;\n    width: 50%;\n    align-items: center; }\n    .qubely-field-color.qubely-field.qubley-half.qubley-half-first {\n      padding-right: 7.5px; }\n    .qubely-field-color.qubely-field.qubley-half.qubley-half-last {\n      padding-left: 7.5px; }\n  .qubely-field-color.qubely-field .qubely-field-child .qubely-panel {\n    height: 32px;\n    width: 32px;\n    border-radius: 0 3px 3px 0;\n    display: inline-block;\n    vertical-align: middle;\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);\n    transition: 300ms;\n    cursor: pointer; }\n    .qubely-field-color.qubely-field .qubely-field-child .qubely-panel.qubely-color-preview {\n      width: 100%;\n      height: 60px;\n      border-radius: 3px; }\n      .qubely-field-color.qubely-field .qubely-field-child .qubely-panel.qubely-color-preview:hover {\n        transform: none; }\n    .qubely-field-color.qubely-field .qubely-field-child .qubely-panel:hover {\n      transform: scale(1.1); }\n    .qubely-field-color.qubely-field .qubely-field-child .qubely-panel .qubely-gradient {\n      padding: 15px; }\n  .qubely-field-color.qubely-field.qubely-has-preview {\n    display: block; }\n    .qubely-field-color.qubely-field.qubely-has-preview > label {\n      width: 100%; }\n    .qubely-field-color.qubely-field.qubely-has-preview .qubely-field-child {\n      width: 100%; }\n  .qubely-field-color.qubely-field.qubely-no-preview .qubely-field-child {\n    flex-grow: 1;\n    width: 32px; }\n  .qubely-field-color.qubely-field.qubely-no-preview > label {\n    flex-grow: 1;\n    width: calc(100% - 32px);\n    margin: 0;\n    height: 32px;\n    line-height: 32px;\n    padding-left: 10px;\n    border: 1px solid #e4e4e4;\n    border-radius: 3px 0 0 3px; }\n\n.qubely-rgba-palette::after {\n  content: '';\n  display: block;\n  clear: both; }\n\n.qubely-rgba-palette button {\n  position: relative;\n  font-size: 0;\n  height: 28px;\n  width: 28px;\n  padding: 0;\n  margin-right: 10px;\n  border: none;\n  border-radius: 50%;\n  float: left;\n  cursor: pointer;\n  transition: 300ms;\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2), inset 0 0 0 17px;\n  background: transparent; }\n  .qubely-rgba-palette button.active {\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2), inset 0 0 0 4px; }\n  .qubely-rgba-palette button:hover, .qubely-rgba-palette button:focus {\n    transform: scale(1.1); }\n  .qubely-rgba-palette button.clear {\n    box-shadow: none; }\n    .qubely-rgba-palette button.clear::before {\n      content: '\\f05e';\n      -webkit-font-smoothing: antialiased;\n      display: inline-block;\n      font-style: normal;\n      font-variant: normal;\n      text-rendering: auto;\n      line-height: 1;\n      font-family: \"Font Awesome 5 Free\";\n      font-weight: 900;\n      font-size: 28px;\n      color: red;\n      left: 0;\n      top: 0;\n      position: absolute; }\n\n.qubely-rgba-palette > div {\n  display: inline-block; }\n  .qubely-rgba-palette > div button {\n    overflow: hidden;\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2); }\n    .qubely-rgba-palette > div button::before {\n      content: \"\";\n      filter: blur(6px) saturate(0.7) brightness(1.1);\n      display: block;\n      width: 200%;\n      height: 200%;\n      position: absolute;\n      top: -50%;\n      left: -50%;\n      padding-top: 100%;\n      transform: scale(1);\n      background-image: linear-gradient(330deg, transparent 50%, #ff8100 0), linear-gradient(300deg, transparent 50%, #ff5800 0), linear-gradient(270deg, transparent 50%, #c92323 0), linear-gradient(240deg, transparent 50%, #cc42a2 0), linear-gradient(210deg, transparent 50%, #9f49ac 0), linear-gradient(180deg, transparent 50%, #306cd3 0), linear-gradient(150deg, transparent 50%, #179067 0), linear-gradient(120deg, transparent 50%, #0eb5d6 0), linear-gradient(90deg, transparent 50%, #50b517 0), linear-gradient(60deg, transparent 50%, #ede604 0), linear-gradient(30deg, transparent 50%, #fc0 0), linear-gradient(0deg, transparent 50%, #feac00 0);\n      background-clip: content-box,content-box,content-box,content-box,content-box,content-box,padding-box,padding-box,padding-box,padding-box,padding-box,padding-box; }\n\n.qubely-color-picker-container,\n.qubely-color-picker {\n  width: 30px;\n  height: 30px;\n  display: block;\n  border-radius: 50px;\n  cursor: pointer; }\n\n.qubely-color-picker-container {\n  width: 32px;\n  height: 32px;\n  background-image: linear-gradient(45deg, #ddd 25%, transparent 0), linear-gradient(-45deg, #ddd 25%, transparent 0), linear-gradient(45deg, transparent 75%, #ddd 0), linear-gradient(-45deg, transparent 75%, #ddd 0);\n  background-size: 10px 10px;\n  background-position: 0 0,0 5px,5px -5px,-5px 0;\n  border: 1px solid #E9E9E9; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/contextmenu.scss":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/contextmenu.scss ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-context-menu {\n  font-size: 12px;\n  line-height: 1.5;\n  color: #6d7882;\n  font-family: Roboto,Arial,Helvetica,Verdana,sans-serif;\n  font-weight: 400;\n  text-transform: none;\n  overflow: hidden;\n  min-width: 200px !important;\n  background-color: #fff;\n  border: 1px solid #e6e9ec;\n  -webkit-border-radius: 3px;\n  border-radius: 3px;\n  -webkit-box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.09);\n  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.09);\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  z-index: 3;\n  padding: 5px 0px 5px 0px; }\n  .qubely-context-menu .qubely-context-menu-group {\n    padding: 5px 0px 5px 0px; }\n    .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item {\n      padding: 5px 20px 5px 10px;\n      display: flex;\n      cursor: pointer; }\n      .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item .qubely-context-menu-item-icon {\n        width: 20px;\n        color: #c2cbd2; }\n      .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item .qubely-context-menu-item-title {\n        -webkit-box-flex: 1;\n        -webkit-flex-grow: 1;\n        -ms-flex-positive: 1;\n        flex-grow: 1;\n        white-space: nowrap;\n        overflow: hidden;\n        -o-text-overflow: ellipsis;\n        text-overflow: ellipsis; }\n      .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item .qubely-context-menu-item-shortcut {\n        color: #d5dadf; }\n    .qubely-context-menu .qubely-context-menu-group .disable-true {\n      cursor: default;\n      pointer-events: none;\n      opacity: 0.9; }\n    .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item:hover {\n      color: #fff; }\n      .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item:hover .qubely-context-menu-item-icon, .qubely-context-menu .qubely-context-menu-group .qubely-context-menu-item:hover .qubely-context-menu-item-shortcut {\n        color: #fff; }\n  .qubely-context-menu .qubely-context-menu-group:not(:last-child) {\n    border-bottom: 1px solid #e6e9ec; }\n\n.qubely-context-menu-item.with-border-bottom {\n  border-bottom: 1px solid #e6e9ec; }\n\n.qubely-context-menu-item:hover {\n  background-color: #71d7f7;\n  cursor: pointer; }\n\n.disable-true {\n  color: #d5dadf; }\n\n.qubely-context-menu-wraper {\n  display: none;\n  position: fixed;\n  background: white;\n  z-index: 100; }\n  .qubely-context-menu-wraper--option {\n    padding: 6px 50px 5px 10px;\n    min-width: 160px;\n    cursor: default;\n    font-size: 12px; }\n    .qubely-context-menu-wraper--option:hover {\n      background: linear-gradient(to top, #555, #333);\n      color: white; }\n    .qubely-context-menu-wraper--option:active {\n      color: #e9e9e9;\n      background: linear-gradient(to top, #555, #444); }\n    .qubely-context-menu-wraper--option__disabled {\n      color: #999999;\n      pointer-events: none; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dimension.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dimension.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-dimension .qubely-dimension-input-group {\n  overflow: hidden; }\n  .qubely-field-dimension .qubely-dimension-input-group > span {\n    float: left;\n    width: 20%; }\n    .qubely-field-dimension .qubely-dimension-input-group > span input {\n      text-align: center;\n      max-width: 100%;\n      border: 1px solid #E5E7EA !important; }\n    .qubely-field-dimension .qubely-dimension-input-group > span:not(:last-child) input {\n      border-radius: 0;\n      border-right: 0 !important; }\n    .qubely-field-dimension .qubely-dimension-input-group > span input + span {\n      display: block;\n      font-size: 10px;\n      text-transform: capitalize;\n      text-align: center; }\n    .qubely-field-dimension .qubely-dimension-input-group > span:first-child input {\n      border-radius: 4px 0 0 4px; }\n  .qubely-field-dimension .qubely-dimension-input-group > button {\n    width: 20%;\n    justify-content: center;\n    border-radius: 0 4px 4px 0; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dragdimension.scss":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dragdimension.scss ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-drag-dimension-wrap {\n  display: flex;\n  justify-content: center;\n  margin: 0 -14px;\n  padding: 20px; }\n\n/* padding */\n.qubely-dimension-padding {\n  position: relative;\n  height: 60px;\n  width: 110px;\n  background: white; }\n\n.qubely-dimension-padding::before {\n  content: attr(data-text);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  font-size: 12px;\n  transform: translate(-50%, -50%);\n  color: rgba(83, 95, 106, 0.57);\n  text-transform: capitalize; }\n\n.qubely-dimension-padding > .dimension-item > span {\n  content: '';\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%; }\n\n/* margin */\n.qubely-dimension-margin-wrap {\n  padding: 40px 0;\n  display: inline-flex;\n  position: relative;\n  width: 210px;\n  align-items: center;\n  justify-content: center; }\n\n.qubely-dimension-margin::after {\n  content: attr(data-text);\n  position: absolute;\n  top: 0;\n  line-height: 20px;\n  font-size: 12px;\n  left: 25px;\n  color: rgba(83, 95, 106, 0.57);\n  text-transform: capitalize;\n  pointer-events: none; }\n\n.qubely-drag-margin-top.qubely-dimension-margin::after {\n  color: #fff; }\n\n.qubely-dimension-margin > .dimension-item > span {\n  content: '';\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0; }\n\n/* left-right */\n.qubely-dimension-padding > .padding-right > span,\n.qubely-dimension-padding > .padding-left > span,\n.qubely-dimension-margin > .margin-right > span,\n.qubely-dimension-margin > .margin-left > span {\n  width: 20px;\n  clip-path: polygon(0 4px, 100% 22px, 100% calc(100% - 22px), -4px 100%);\n  cursor: w-resize;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='8' height='15' viewBox='0 0 8 15' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ADB3BF'%3E%3Cpath d='M6.663.837c.274 0 .499.098.499.219v13.562c0 .12-.225.219-.499.219s-.499-.099-.499-.219v-13.562c0-.121.225-.219.499-.219'/%3E%3Cpath d='M3.663.837c.274 0 .499.098.499.219v13.562c0 .12-.225.219-.499.219s-.499-.099-.499-.219v-13.562c0-.121.225-.219.499-.219'/%3E%3Cpath d='M.663.837c.274 0 .499.098.499.219v13.562c0 .12-.225.219-.499.219s-.499-.099-.499-.219v-13.562c0-.121.225-.219.499-.219'/%3E%3C/g%3E%3C/svg%3E\"); }\n\n.qubely-dimension-padding > .padding-right > span,\n.qubely-dimension-margin > .margin-right > span {\n  left: auto;\n  right: 0;\n  cursor: e-resize;\n  clip-path: polygon(0 22px, 100% 4px, 100% calc(100% - 4px), 0 calc(100% - 22px)); }\n\n/*top-bottom*/\n.qubely-dimension-padding > .padding-top > span,\n.qubely-dimension-padding > .padding-bottom > span,\n.qubely-dimension-margin > .margin-top > span,\n.qubely-dimension-margin > .margin-bottom > span {\n  height: 20px;\n  cursor: n-resize;\n  clip-path: polygon(0 0, 100% 0, calc(100% - 22px) 100%, 22px 100%);\n  background-image: url(\"data:image/svg+xml,%3Csvg width='15' height='8' viewBox='0 0 15 8' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ADB3BF'%3E%3Cpath d='M.5 1c0-.274.098-.499.219-.499h13.562c.12 0 .219.225.219.499s-.099.499-.219.499h-13.562c-.121 0-.219-.225-.219-.499'/%3E%3Cpath d='M.5 4c0-.274.098-.499.219-.499h13.562c.12 0 .219.225.219.499s-.099.499-.219.499h-13.562c-.121 0-.219-.225-.219-.499'/%3E%3Cpath d='M.5 7c0-.274.098-.499.219-.499h13.562c.12 0 .219.225.219.499s-.099.499-.219.499h-13.562c-.121 0-.219-.225-.219-.499'/%3E%3C/g%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center center; }\n\n.qubely-dimension-padding > .padding-bottom > span,\n.qubely-dimension-margin > .margin-bottom > span {\n  top: auto;\n  bottom: 0;\n  cursor: s-resize;\n  clip-path: polygon(22px 0, calc(100% - 22px) 0, 100% 100%, 0 100%); }\n\n/*background*/\n.qubely-dimension-padding > .dimension-item > span,\n.qubely-dimension-margin > .dimension-item > span {\n  background-color: #DFE1E4; }\n\n.qubely-drag-margin-top .dimension-item.margin-top > span,\n.qubely-drag-margin-left .dimension-item.margin-left > span,\n.qubely-drag-margin-right .dimension-item.margin-right > span,\n.qubely-drag-margin-bottom .dimension-item.margin-bottom > span {\n  background-color: #0286BA; }\n\n.qubely-drag-padding-top .dimension-item.padding-top > span,\n.qubely-drag-padding-left .dimension-item.padding-left > span,\n.qubely-drag-padding-right .dimension-item.padding-right > span,\n.qubely-drag-padding-bottom .dimension-item.padding-bottom > span {\n  background-color: #0286BA; }\n\n.qubely-drag-padding-right .dimension-item.padding-right > span,\n.qubely-drag-padding-left .dimension-item.padding-left > span,\n.qubely-drag-margin-right .dimension-item.margin-right > span,\n.qubely-drag-margin-left .dimension-item.margin-left > span {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='8' height='15' viewBox='0 0 8 15' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff'%3E%3Cpath d='M6.663.837c.274 0 .499.098.499.219v13.562c0 .12-.225.219-.499.219s-.499-.099-.499-.219v-13.562c0-.121.225-.219.499-.219'/%3E%3Cpath d='M3.663.837c.274 0 .499.098.499.219v13.562c0 .12-.225.219-.499.219s-.499-.099-.499-.219v-13.562c0-.121.225-.219.499-.219'/%3E%3Cpath d='M.663.837c.274 0 .499.098.499.219v13.562c0 .12-.225.219-.499.219s-.499-.099-.499-.219v-13.562c0-.121.225-.219.499-.219'/%3E%3C/g%3E%3C/svg%3E\"); }\n\n.qubely-drag-padding-top .dimension-item.padding-top > span,\n.qubely-drag-padding-bottom .dimension-item.padding-bottom > span,\n.qubely-drag-margin-top .dimension-item.margin-top > span,\n.qubely-drag-margin-bottom .dimension-item.margin-bottom > span {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='16' height='8' viewBox='0 0 16 8' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff'%3E%3Cpath d='M.913 1.114c0-.274.1-.499.223-.499h13.805c.122 0 .223.225.223.499s-.1.499-.223.499h-13.805c-.123 0-.223-.225-.223-.499'/%3E%3Cpath d='M.913 4.114c0-.274.1-.499.223-.499h13.805c.122 0 .223.225.223.499s-.1.499-.223.499h-13.805c-.123 0-.223-.225-.223-.499'/%3E%3Cpath d='M.913 7.114c0-.274.1-.499.223-.499h13.805c.122 0 .223.225.223.499s-.1.499-.223.499h-13.805c-.123 0-.223-.225-.223-.499'/%3E%3C/g%3E%3C/svg%3E\"); }\n\n/*item value*/\n.qubley-drag-dimension-popover {\n  padding: 5px; }\n\n.dimension-item > input {\n  position: absolute;\n  line-height: 20px;\n  font-size: 12px;\n  color: #535F6A;\n  background: transparent;\n  padding: 0;\n  border: none;\n  width: 26px !important; }\n\n#wpwrap .qubely-drag-dimension-wrap .dimension-item > input {\n  padding: 0 !important;\n  border: none;\n  text-align: center;\n  height: 16px;\n  background: transparent;\n  text-indent: 0;\n  border-radius: 2px;\n  font-size: 11px;\n  box-shadow: 0 0 0 1px #DFE1E4;\n  margin: 2px; }\n  #wpwrap .qubely-drag-dimension-wrap .dimension-item > input[type=\"number\"]::-webkit-outer-spin-button, #wpwrap .qubely-drag-dimension-wrap .dimension-item > input[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0; }\n  #wpwrap .qubely-drag-dimension-wrap .dimension-item > input[type=\"number\"] {\n    -moz-appearance: textfield; }\n  #wpwrap .qubely-drag-dimension-wrap .dimension-item > input:hover {\n    color: #0286BA; }\n  #wpwrap .qubely-drag-dimension-wrap .dimension-item > input:focus {\n    box-shadow: 0 0 0 1px #0286BA; }\n\n.dimension-item.padding-left > input,\n.dimension-item.margin-left > input {\n  right: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n  text-align: right;\n  padding: 0 5px; }\n\n.dimension-item.padding-right > input,\n.dimension-item.margin-right > input {\n  left: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n  padding: 0 5px; }\n\n.dimension-item.padding-top > input,\n.dimension-item.margin-top > input {\n  left: 50%;\n  transform: translateX(-50%);\n  top: -20px; }\n\n.dimension-item.padding-bottom > input,\n.dimension-item.margin-bottom > input {\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: -20px; }\n\n.qubely-dimension-padding > .padding-top > span {\n  cursor: s-resize; }\n\n.qubely-dimension-padding > .padding-bottom > span {\n  cursor: n-resize; }\n\n.qubely-dimension-padding > .padding-left > span {\n  cursor: e-resize; }\n\n.qubely-dimension-padding > .padding-right > span {\n  cursor: w-resize; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dropdown.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dropdown.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-dropdown .qubely-dropdown {\n  cursor: default;\n  display: flex;\n  display: -ms-flexbox;\n  align-items: center;\n  justify-content: space-between;\n  outline: 0px !important;\n  padding: 6px 8px;\n  box-shadow: 0 0 0 transparent;\n  transition: box-shadow 0.1s linear;\n  border-radius: 4px;\n  border: 1px solid #8d96a0;\n  background-color: white; }\n  .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-selected-options-wrapper {\n    width: 100%;\n    display: flex;\n    cursor: pointer;\n    flex-wrap: wrap;\n    align-items: center; }\n    .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-selected-options-wrapper .qubely-selected-value-label {\n      padding: 2px 0px; }\n    .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-selected-options-wrapper .qubely-dropdown-selected-value {\n      padding: 4px 5px;\n      margin: 0px 5px 5px 0px;\n      border-radius: 15px;\n      vertical-align: top;\n      display: inline-block;\n      border: 1px solid #c2e0ff;\n      border: 1px solid rgba(0, 126, 255, 0.24);\n      background-color: #ebf5ff;\n      background-color: rgba(0, 126, 255, 0.08); }\n      .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-selected-options-wrapper .qubely-dropdown-selected-value .qubely-selected-value-label {\n        border-bottom-right-radius: 2px;\n        border-top-right-radius: 2px;\n        cursor: default;\n        padding: 2px 5px;\n        display: inline;\n        color: #007eff; }\n      .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-selected-options-wrapper .qubely-dropdown-selected-value .qubely-selected-value-icon {\n        cursor: pointer;\n        padding: 3px 6px;\n        color: #fff;\n        background-color: #007eff;\n        border-radius: 50%;\n        font-size: 12px; }\n    .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-selected-options-wrapper .qubely-dropdown-options-search {\n      min-width: 70px;\n      cursor: default;\n      padding: 2px 10px;\n      width: auto;\n      margin: 0px 8px;\n      border: none; }\n  .qubely-field-dropdown .qubely-dropdown .qubely-dropdown-icon {\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n    padding-right: 3px; }\n\n.qubely-field-dropdown .qubely-dropdown-options-wrapper {\n  top: 100%;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 4px 11px;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  position: absolute;\n  width: 70%;\n  box-sizing: border-box;\n  border-radius: 4px;\n  z-index: 100; }\n  .qubely-field-dropdown .qubely-dropdown-options-wrapper .qubely-dropdown-options {\n    max-height: 270px;\n    overflow-y: auto;\n    padding-bottom: 4px;\n    padding-top: 4px;\n    position: relative;\n    box-sizing: border-box; }\n    .qubely-field-dropdown .qubely-dropdown-options-wrapper .qubely-dropdown-options .qubely-dropdown-option {\n      background-color: transparent;\n      color: inherit;\n      cursor: pointer;\n      display: block;\n      font-size: inherit;\n      width: 100%;\n      user-select: none;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      box-sizing: border-box;\n      padding: 8px 12px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/editorinline.scss":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/editorinline.scss ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".components-toolbar.components-toolbar div button {\n  width: auto; }\n  .components-toolbar.components-toolbar div button .qubely-color-picker-icon-wraper {\n    border-radius: 3px;\n    border: none;\n    outline: none;\n    padding: 0px 5px 0px 5px; }\n\n.qubely-toolber-popup .qubely-field-alignment {\n  margin-bottom: 15px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/gradient.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/gradient.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-gradient.qubely-field.popup label {\n  flex-grow: 1; }\n\n.qubely-gradient.qubely-field.popup > .qubely-field-child {\n  text-align: right;\n  flex-grow: 0; }\n  .qubely-gradient.qubely-field.popup > .qubely-field-child .qubely-panel {\n    height: 28px;\n    width: 28px;\n    border-radius: 50%;\n    display: inline-block;\n    vertical-align: middle;\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);\n    transition: 300ms;\n    cursor: pointer; }\n    .qubely-gradient.qubely-field.popup > .qubely-field-child .qubely-panel:hover {\n      transform: scale(1.1); }\n    .qubely-gradient.qubely-field.popup > .qubely-field-child .qubely-panel .qubely-gradient {\n      padding: 15px; }\n\n.qubely-gradient.qubely-field.inline > label {\n  width: 100%;\n  margin-bottom: 10px; }\n\n.qubely-gradient-popup {\n  padding: 0; }\n  .qubely-gradient-popup > div:not(:last-child) {\n    margin-bottom: 15px; }\n\n.qubely-field-gradient-preview {\n  height: 10px;\n  border-radius: 6px;\n  position: relative; }\n  .qubely-field-gradient-preview .qubely-color-picker-container {\n    position: absolute;\n    width: 18px;\n    height: 18px;\n    border: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3); }\n    .qubely-field-gradient-preview .qubely-color-picker-container.qubely-position-left {\n      left: 0; }\n    .qubely-field-gradient-preview .qubely-color-picker-container.qubely-position-right {\n      right: 0; }\n    .qubely-field-gradient-preview .qubely-color-picker-container .qubely-color-picker {\n      width: 18px;\n      height: 18px;\n      border: 4px solid #FFFFFF; }\n\n.qubely-gradient-color.gradient-color-position-left {\n  margin-left: -230px; }\n\n.qubely-gradient-color.gradient-color-position-right {\n  margin-right: -230px; }\n\n.qubely-gradient-color-picker.is-bottom {\n  margin-top: 20px !important; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/iconlist.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/iconlist.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-icon-list .qubely-icon-list-warp {\n  width: 100%;\n  display: block; }\n\n.qubely-field-icon-list .qubely-icon-list-wrapper input {\n  background: #fff;\n  width: 100%;\n  height: 36px;\n  padding: 0 10px !important;\n  border-radius: 3px 3px 0 0;\n  border: 1px solid #E5E7EA;\n  position: relative;\n  z-index: 2; }\n  .qubely-field-icon-list .qubely-icon-list-wrapper input:focus {\n    border: 1px solid #2184F9;\n    outline: 0;\n    box-shadow: none; }\n\n.qubely-field-icon-list .qubely-icon-list-wrapper .qubely-font-list span {\n  border-bottom: .5px solid #E5E7EA; }\n  .qubely-field-icon-list .qubely-icon-list-wrapper .qubely-font-list span.active {\n    color: #555d66; }\n\n.qubely-field-icon-list.qubely-toggle-enabled label {\n  font-size: 16px;\n  line-height: 1;\n  margin: 0;\n  width: auto;\n  display: inline-block; }\n\n.qubely-field-icon-list .qubely-icon-list-icons {\n  max-height: 177px;\n  margin: 0;\n  border: 1px solid #E5E7EA;\n  border-top: 0;\n  margin-top: -1px;\n  overflow: auto;\n  position: relative;\n  z-index: 1; }\n  .qubely-field-icon-list .qubely-icon-list-icons > span {\n    text-align: center;\n    font-size: 15px;\n    float: left;\n    width: 16.666666666666667%;\n    margin: 0; }\n    .qubely-field-icon-list .qubely-icon-list-icons > span span {\n      display: block;\n      height: 37px;\n      line-height: 37px;\n      border: 1px solid #E5E7EA;\n      margin-left: -1px;\n      margin-bottom: -1px;\n      background: #fff;\n      color: #565D66;\n      transition: 300ms; }\n    .qubely-field-icon-list .qubely-icon-list-icons > span:hover {\n      cursor: pointer; }\n      .qubely-field-icon-list .qubely-icon-list-icons > span:hover span {\n        color: #fff;\n        background: #2184F9;\n        border-color: #2184F9; }\n    .qubely-field-icon-list .qubely-icon-list-icons > span.qubely-active span {\n      color: #fff;\n      background: #2184F9;\n      border-color: #2184F9; }\n\n.qubely-field-icon-list .qubely-icon-list-inner {\n  width: 100%;\n  padding: 4px 9px;\n  display: block; }\n  .qubely-field-icon-list .qubely-icon-list-inner:hover {\n    cursor: pointer; }\n  .qubely-field-icon-list .qubely-icon-list-inner > i {\n    font-style: normal;\n    float: right;\n    padding: 3px;\n    font-size: 11px; }\n    .qubely-field-icon-list .qubely-icon-list-inner > i.fa-times:hover {\n      color: red; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/inline_toolbar.scss":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/inline_toolbar.scss ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-toolber-field button {\n  padding: 3px;\n  height: 36px;\n  width: 36px;\n  background: none;\n  text-align: center;\n  display: block;\n  border: none; }\n  .qubely-toolber-field button i {\n    display: block;\n    padding: 5px;\n    border-radius: 4px;\n    height: 30px;\n    width: 30px;\n    line-height: 20px;\n    font-size: 14px;\n    font-style: normal !important;\n    cursor: pointer; }\n  .qubely-toolber-field button:focus i,\n  .qubely-toolber-field button:hover i {\n    box-shadow: inset 0 0 0 1px #555d66, inset 0 0 0 2px #fff;\n    color: #555d66; }\n\n.qubely-toolber-popup {\n  padding: 15px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/interaction.scss":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/interaction.scss ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubley-interaction-panel hr {\n  margin: 1.5em -16px; }\n\n.qubely-animation-timeline-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 9;\n  margin-bottom: 15px; }\n  .qubely-animation-timeline-container .qubely-add-repeat-item-header {\n    width: 95%;\n    margin-left: 10px;\n    display: flex;\n    flex-direction: row;\n    padding-bottom: 13px;\n    justify-content: space-between;\n    margin-top: 6px;\n    margin-bottom: 1px; }\n  .qubely-animation-timeline-container .qubely-animation-view {\n    display: flex;\n    flex: 1 1 auto;\n    height: 100%;\n    flex-direction: column;\n    position: relative;\n    min-height: 200px;\n    justify-content: space-between; }\n    .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area {\n      background: #ffffff;\n      width: 100%;\n      display: flex;\n      flex: 1 1 auto;\n      position: relative;\n      padding-top: 5px;\n      padding-bottom: 5px;\n      min-height: 400px; }\n      .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-animation-flexible-area-inner-box {\n        padding-left: 8px;\n        padding-right: 0;\n        margin-left: 33px;\n        position: relative;\n        display: flex;\n        flex: 1 1 auto;\n        flex-direction: column;\n        align-items: stretch; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-animation-flexible-area-inner-box .qubely-animation-timline-bar {\n          width: 1px;\n          height: 100%;\n          top: 0;\n          left: 0;\n          position: absolute;\n          background: #E6E9ED; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-animation-flexible-area-inner-box .qubely-animation-timline-bar .qubely-timeline-live-action-bar {\n            position: absolute;\n            background: #007bf2;\n            min-width: 24px;\n            font-size: 10px;\n            text-align: center;\n            z-index: 9;\n            transform: translateX(-166%);\n            display: inline-block;\n            padding: 6px 0 6px 6px;\n            font-size: 18px;\n            line-height: 1px;\n            border: 1px solid #007bf2;\n            border-right: none; }\n            .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-animation-flexible-area-inner-box .qubely-animation-timline-bar .qubely-timeline-live-action-bar .qubely-inner-arrow {\n              /* content: ''; */\n              position: absolute;\n              display: inline-block;\n              top: 1px;\n              right: -5px;\n              width: 10px;\n              height: 10px;\n              border-top: 2px solid #007bf2;\n              border-right: 2px solid #007bf2;\n              background: #007bf2;\n              transform: rotate(45deg); }\n      .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-context-menu {\n        position: absolute;\n        background: #ffffff;\n        top: 23px;\n        left: 20%;\n        width: 120px;\n        opacity: 1;\n        z-index: 9999;\n        box-sizing: content-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: #dddddd;\n        border-radius: 3px;\n        box-shadow: rgba(0, 0, 0, 0.15) 0 5px 10px;\n        overflow: hidden; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-context-menu .qubely-action-content-menu-item {\n          outline: 0;\n          cursor: pointer;\n          user-select: none;\n          padding: 4px 8px;\n          font-size: 11px;\n          -webkit-transition: all 0.2s linear 0s;\n          -moz-transition: all 0.2s linear 0s;\n          -ms-transition: all 0.2s linear 0s;\n          -o-transition: all 0.2s linear 0s;\n          transition: all 0.2s linear 0s; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-context-menu .qubely-action-content-menu-item i {\n            margin-right: 5px; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-context-menu .qubely-action-content-menu-item:hover {\n            background: #eff1f4; }\n      .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-parent-item-container {\n        position: relative;\n        width: 100%; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-parent-item-container.qubley-action-mouse-on-item {\n          border-radius: 3px;\n          box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1), 0 0 3px 1px #027af2c7, 0 0 0 0.5px rgba(255, 255, 255, 0.5); }\n      .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item {\n        z-index: 1;\n        width: 100%;\n        background-color: #f5f7fd;\n        border: 1px solid #d8dde3; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-context-menu-active {\n          z-index: 2; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item .qubely-action-item-inner .qubely-action-pointer-range {\n          transform: translate(-102%, -50%);\n          top: 50%;\n          display: flex;\n          z-index: 1;\n          flex-direction: row-reverse;\n          height: 24px;\n          position: absolute;\n          user-select: none;\n          cursor: default;\n          color: #a6a6a6; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item .qubely-action-item-inner .qubely-action-pointer-range .qubely-connect-line {\n            height: 1px;\n            width: 4px;\n            display: inline-block;\n            flex-grow: 1;\n            background: #404040;\n            position: relative;\n            top: 50%;\n            transform: translateY(-50%);\n            visibility: hidden; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item .qubely-action-item-inner .qubely-action-pointer-range .qubely-point-bullet {\n            width: 7px;\n            height: 7px;\n            border-radius: 50%;\n            background: #E6E9ED;\n            border: 1px solid #E6E9ED;\n            display: inline-block;\n            position: relative;\n            top: 50%;\n            transform: translateY(-50%);\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item .qubely-action-item-inner .qubely-action-pointer-range .qubely-point-range {\n            display: flex;\n            float: right;\n            text-align: right;\n            position: relative;\n            justify-content: center;\n            align-items: center;\n            padding-right: 4px;\n            top: 50%;\n            transform: translateY(-50%);\n            font-size: 11px;\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item .qubely-action-item-inner .qubely-action-property {\n          cursor: default;\n          position: relative;\n          height: 22px;\n          font-size: 12px;\n          display: flex;\n          align-items: center;\n          outline: none;\n          color: #949494;\n          text-transform: capitalize;\n          overflow: hidden;\n          padding: 0 4px;\n          -webkit-touch-callout: none;\n          -webkit-user-select: none;\n          -khtml-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-active .qubely-action-item-inner .qubely-action-pointer-range .qubely-point-bullet {\n          background: #027af2;\n          border-color: #027af2;\n          -webkit-touch-callout: none;\n          -webkit-user-select: none;\n          -khtml-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-active .qubely-action-item-inner .qubely-action-pointer-range .qubely-point-range {\n          color: #027af2;\n          -webkit-touch-callout: none;\n          -webkit-user-select: none;\n          -khtml-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box {\n          -webkit-box-shadow: none;\n          -moz-box-shadow: none;\n          box-shadow: none; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box .qubely-action-item-inner {\n            -webkit-box-shadow: none;\n            -moz-box-shadow: none;\n            box-shadow: none; }\n            .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box .qubely-action-item-inner .qubely-action-property {\n              visibility: hidden; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-active {\n          background: #027af2;\n          border-color: #027af2; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-active.qubely-action-similar {\n            background: #027af2;\n            border-color: #027af2; }\n          .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-active .qubely-action-item-inner .qubely-action-property {\n            color: #ffffff;\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item.qubely-action-similar {\n          background: #e6f2ff;\n          border-color: #d4e1f1; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item:last-child {\n          border-bottom-left-radius: 3px;\n          border-bottom-right-radius: 3px; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item:first-child {\n          border-top-left-radius: 3px;\n          border-top-right-radius: 3px; }\n        .qubely-animation-timeline-container .qubely-animation-view .qubely-animation-flexible-area .qubely-action-item:nth-child(n+2) {\n          border-top: none; }\n  .qubely-animation-timeline-container .qubely-animation-trigger-header {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    margin: 5px -16px 0 -16px;\n    border-bottom: 1px solid #e8e8e8;\n    border-top: 1px solid #e8e8e8;\n    padding: 7px 16px;\n    background: #FFFFFF;\n    z-index: 1; }\n    .qubely-animation-timeline-container .qubely-animation-trigger-header .qubely-add-animation-action-btn {\n      cursor: pointer;\n      color: #0077f6;\n      font-size: 17px;\n      border: 1px solid #0077f6;\n      border-radius: 2px;\n      -webkit-transition: all 0.2s ease 0s;\n      -moz-transition: all 0.2s ease 0s;\n      -ms-transition: all 0.2s ease 0s;\n      -o-transition: all 0.2s ease 0s;\n      transition: all 0.2s ease 0s;\n      line-height: 18px;\n      height: 18px;\n      width: 18px; }\n      .qubely-animation-timeline-container .qubely-animation-trigger-header .qubely-add-animation-action-btn:hover {\n        color: #000; }\n  .qubely-animation-timeline-container .qubely-animation-controller-view {\n    max-height: 400px;\n    display: flex;\n    flex-direction: column;\n    flex: 0 0 auto; }\n    .qubely-animation-timeline-container .qubely-animation-controller-view .qubely-animation-controller-header {\n      position: relative;\n      padding: 7px 14px;\n      border-top: 1px solid #e8e8e8;\n      border-bottom: 1px solid #e8e8e8;\n      background: #ffffff;\n      margin: 5px -16px 15px -16px; }\n      .qubely-animation-timeline-container .qubely-animation-controller-view .qubely-animation-controller-header label {\n        margin: 0;\n        position: relative; }\n      .qubely-animation-timeline-container .qubely-animation-controller-view .qubely-animation-controller-header .qubely-live-animation-btn {\n        position: absolute;\n        right: 10px;\n        top: 5px;\n        cursor: pointer; }\n  .qubely-animation-timeline-container .qubely-timeline-pointer-hr-line {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    height: 2px;\n    width: calc(100% + 29px);\n    left: -30px;\n    z-index: 8; }\n    .qubely-animation-timeline-container .qubely-timeline-pointer-hr-line .qubely-action-item-pointer {\n      width: 25px;\n      color: #999999;\n      font-size: 11px;\n      text-align: center;\n      z-index: 10; }\n    .qubely-animation-timeline-container .qubely-timeline-pointer-hr-line .qubely-action-item-pointer-icon {\n      width: 10px;\n      color: #0080FE;\n      font-size: 18px;\n      font-weight: bold;\n      margin-top: -5px;\n      margin-right: 3px; }\n    .qubely-animation-timeline-container .qubely-timeline-pointer-hr-line .qubely-action-item-line-hr-container {\n      flex: 1;\n      height: 2px;\n      background: #0080FE; }\n  .qubely-animation-timeline-container .qubely-animation-action-option-box {\n    position: absolute;\n    width: 120px;\n    background: #ffffff;\n    padding: 5px;\n    -webkit-border-radius: 3px;\n    -moz-border-radius: 3px;\n    border-radius: 3px;\n    box-shadow: rgba(0, 0, 0, 0.15) 0 2px 8px 1px;\n    transform: translateY(15%);\n    right: 40px;\n    z-index: 10; }\n    .qubely-animation-timeline-container .qubely-animation-action-option-box .qubely-animation-action-option-lists {\n      position: relative;\n      width: 100%; }\n      .qubely-animation-timeline-container .qubely-animation-action-option-box .qubely-animation-action-option-lists .qubely-animation-action-option-item {\n        display: block;\n        padding: 2px 4px;\n        cursor: pointer;\n        text-transform: capitalize;\n        font-size: 12px;\n        -webkit-transition: all 0.2s linear 0s;\n        -moz-transition: all 0.2s linear 0s;\n        -ms-transition: all 0.2s linear 0s;\n        -o-transition: all 0.2s linear 0s;\n        transition: all 0.2s linear 0s; }\n        .qubely-animation-timeline-container .qubely-animation-action-option-box .qubely-animation-action-option-lists .qubely-animation-action-option-item:last-child {\n          border-bottom: none; }\n        .qubely-animation-timeline-container .qubely-animation-action-option-box .qubely-animation-action-option-lists .qubely-animation-action-option-item:hover {\n          color: #017bf2; }\n\n.qubely-action-drag-mask {\n  cursor: default;\n  position: absolute;\n  background-color: #1d8af7eb;\n  height: 28px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  outline: none;\n  color: #ffffff;\n  text-transform: capitalize;\n  width: 100%;\n  top: 10px;\n  transform: scale(0.8);\n  border-radius: 2px;\n  z-index: 99;\n  padding: 10px;\n  font-weight: bold; }\n  .qubely-action-drag-mask .qubely-action-mask-peroperty {\n    display: flex;\n    justify-content: flex-start; }\n    .qubely-action-drag-mask .qubely-action-mask-peroperty span:last-child {\n      flex: 1;\n      padding-left: 10px; }\n\n.qubely-animation-timeline-placeholder {\n  position: absolute;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  text-align: center; }\n  .qubely-animation-timeline-placeholder .qubely-animation-timeline-placeholder-text {\n    width: 80%; }\n    .qubely-animation-timeline-placeholder .qubely-animation-timeline-placeholder-text i {\n      color: #0080FE;\n      font-size: 3em; }\n    .qubely-animation-timeline-placeholder .qubely-animation-timeline-placeholder-text .qubely-timeline-placeholder-title {\n      margin: 0;\n      padding: 5px 0;\n      font-size: 15px;\n      color: #666666; }\n    .qubely-animation-timeline-placeholder .qubely-animation-timeline-placeholder-text .qubely-timeline-tutorial-button {\n      display: inline-block;\n      padding: 4px 12px;\n      border: 1px solid #0080FE;\n      color: #0080FE;\n      text-decoration: none;\n      -webkit-border-radius: 2px;\n      -moz-border-radius: 2px;\n      border-radius: 2px;\n      font-size: 12px;\n      text-align: center;\n      font-weight: 500;\n      margin-top: 15px; }\n      .qubely-animation-timeline-placeholder .qubely-animation-timeline-placeholder-text .qubely-timeline-tutorial-button i {\n        font-size: 13px;\n        vertical-align: middle;\n        margin-right: 5px; }\n    .qubely-animation-timeline-placeholder .qubely-animation-timeline-placeholder-text p {\n      font-size: 12px;\n      color: #4A4A4A; }\n\n.qubely-animation-flexible-area .qubely-action-item + .qubely-action-item .qubely-action-item-inner .qubely-action-pointer-range {\n  display: none; }\n\n.qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box, .qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box .qubely-action-item-inner {\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none; }\n\n.qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box, .qubely-animation-flexible-area .qubely-action-item.qubely-action-empty-box .qubely-action-item-inner .qubely-action-property {\n  visibility: hidden; }\n\n.qubely-animation-controller-body {\n  position: relative;\n  min-height: 150px; }\n  .qubely-animation-controller-body .qubely-animation-controller-fields .qubely-animation-control-property-fields {\n    text-transform: capitalize; }\n    .qubely-animation-controller-body .qubely-animation-controller-fields .qubely-animation-control-property-fields .qubely-field {\n      display: flex;\n      align-items: center; }\n      .qubely-animation-controller-body .qubely-animation-controller-fields .qubely-animation-control-property-fields .qubely-field .qubely-mb-10 {\n        margin-bottom: 0;\n        padding-right: 10px; }\n      .qubely-animation-controller-body .qubely-animation-controller-fields .qubely-animation-control-property-fields .qubely-field .qubely-field-child {\n        flex: 1; }\n  .qubely-animation-controller-body .qubely-animation-controller-fields .qubely-animation-control-property-title {\n    border-top: 1px solid #dfdfdf;\n    border-bottom: 1px solid #dfdfdf;\n    color: #222222;\n    padding: 5px 0;\n    margin-top: 15px;\n    margin-bottom: 15px; }\n\n@-webkit-keyframes sonarEffect {\n  0% {\n    opacity: 0.3; }\n  40% {\n    opacity: 0.5;\n    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1), 0 0 5px 5px #3851bc, 0 0 0 5px rgba(255, 255, 255, 0.5); }\n  100% {\n    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1), 0 0 5px 5px #3851bc, 0 0 0 5px rgba(255, 255, 255, 0.5);\n    -webkit-transform: scale(1.2);\n    opacity: 0; } }\n\n.qubley-interaction-transform-origin {\n  margin-bottom: 15px; }\n  .qubley-interaction-transform-origin .qubley-interaction-transform-origin-label {\n    flex: 1;\n    margin-bottom: 15px; }\n\n.qubley-tranform-origin-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center; }\n  .qubley-tranform-origin-wrapper label {\n    flex: 1; }\n  .qubley-tranform-origin-wrapper .qubley-transform-origin-controller {\n    width: 100px;\n    height: 100px;\n    border: 1px solid #dfdfdf;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative; }\n    .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller {\n      display: inline-block;\n      justify-content: center;\n      align-items: center;\n      position: relative;\n      height: 80px;\n      width: 80px; }\n      .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer {\n        position: absolute;\n        height: 12px;\n        width: 12px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 50%;\n        cursor: pointer; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer:after {\n          transition: all .3s linear 0s;\n          position: absolute;\n          content: '';\n          border: 2px solid transparent;\n          height: 12px;\n          width: 12px;\n          border-radius: 50%;\n          display: inline-block;\n          background: transparent;\n          transform: scale(0.9);\n          z-index: -1;\n          box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1); }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer:hover {\n          background: rgba(182, 182, 182, 0.5); }\n          .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer:hover:after {\n            background: rgba(255, 255, 255, 0.05);\n            animation: sonarEffect 1s ease-out 55ms; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer .qubley-pointer-inner {\n          display: inline-block;\n          background: #a5a5a5;\n          border-radius: 50%;\n          height: 4px;\n          width: 4px; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-active-pointer {\n          background: rgba(218, 218, 218, 0.5); }\n          .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-active-pointer .qubley-pointer-inner {\n            background: #ff6060; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-top-left {\n          left: 0;\n          top: 0; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-top-center {\n          left: 46%;\n          top: 0; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-top-right {\n          left: 86%;\n          top: 0; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-right-center {\n          left: 86%;\n          top: 46%; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-bottom-right {\n          left: 86%;\n          top: 86%; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-bottom-left {\n          left: 0;\n          top: 86%; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-bottom-center {\n          left: 46%;\n          top: 86%; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-left-center {\n          left: 0;\n          top: 46%; }\n        .qubley-tranform-origin-wrapper .qubley-transform-origin-controller .qubley-transform-origin-inner-controller .qubley-pointer.qubley-center-center {\n          left: 46%;\n          top: 46%; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/media.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/media.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-media {\n  margin-bottom: 15px; }\n  .qubely-media label {\n    margin-bottom: 10px;\n    display: block; }\n  .qubely-media .qubely-media-actions {\n    position: absolute;\n    top: 10px;\n    right: 10px; }\n  .qubely-media .qubely-single-img .qubely-media-image-parent {\n    position: relative;\n    display: inline-block;\n    min-height: 140px;\n    min-width: 140px; }\n    .qubely-media .qubely-single-img .qubely-media-image-parent img {\n      margin: 0; }\n  .qubely-media .qubely-placeholder-image {\n    border: 1px dashed #dddd;\n    padding: 20px 20px 25px;\n    text-align: center;\n    background: #ffffff;\n    cursor: copy;\n    border-radius: 5px; }\n    .qubely-media .qubely-placeholder-image span {\n      display: block;\n      margin-top: 8px;\n      text-align: center; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/panelTabs.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/panelTabs.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-tabs {\n  margin-left: -16px;\n  margin-right: -16px;\n  background: #F7F8FC; }\n  .qubely-field-tabs:last-child {\n    margin-bottom: -16px !important; }\n  .qubely-field-tabs.qubely-has-label {\n    border-top: 1px solid #E9E9E9; }\n    .qubely-field-tabs.qubely-has-label .qubely-field-tab-header {\n      padding-top: 10px; }\n      .qubely-field-tabs.qubely-has-label .qubely-field-tab-header label {\n        margin: 0 15px; }\n    .qubely-field-tabs.qubely-has-label .qubely-field-tab-menus {\n      margin-top: 10px; }\n  .qubely-field-tabs .qubely-field-tab-menus {\n    display: flex; }\n    .qubely-field-tabs .qubely-field-tab-menus button {\n      flex-grow: 1;\n      justify-content: center;\n      padding: 7px 15px;\n      box-shadow: none;\n      border: none;\n      transition: 400ms;\n      border: 1px solid #E9E9E9;\n      cursor: pointer; }\n      .qubely-field-tabs .qubely-field-tab-menus button:not(:last-child) {\n        border-right: none; }\n      .qubely-field-tabs .qubely-field-tab-menus button.active {\n        background: #2184F9;\n        color: #fff; }\n  .qubely-field-tabs .qubely-field-tab-items {\n    padding: 15px; }\n\n.qubely-field .qubely-field-boxshadow,\n.qubely-field.qubely-field-typography {\n  border: 1px solid #E9E9E9;\n  padding: 12px;\n  border-radius: 5px;\n  background-color: #ffffff; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/range.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/range.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-input-range {\n  display: flex; }\n  .qubely-input-range > *:not(:last-child) {\n    margin-right: 8px; }\n  .qubely-input-range input[type=\"number\"] {\n    width: 55px !important; }\n  .qubely-input-range input[type=range] {\n    -webkit-appearance: none;\n    margin-top: 7px;\n    margin-bottom: 7px;\n    width: 100%;\n    padding-left: 0;\n    padding-right: 0;\n    background: transparent; }\n    .qubely-input-range input[type=range]::-webkit-slider-runnable-track {\n      width: 100%;\n      height: 4px;\n      cursor: pointer;\n      animate: 0.2s;\n      background: #E5E7EA;\n      border-radius: 5px;\n      border: 0px solid black; }\n    .qubely-input-range input[type=range]::-webkit-slider-thumb {\n      border: 1px solid white;\n      height: 14px;\n      width: 14px;\n      border-radius: 8px;\n      background: #606871;\n      cursor: pointer;\n      -webkit-appearance: none;\n      margin-top: -5px; }\n    .qubely-input-range input[type=range]:focus::-webkit-slider-runnable-track {\n      background: #f3f4f5; }\n    .qubely-input-range input[type=range]::-moz-range-track {\n      width: 100%;\n      height: 4px;\n      cursor: pointer;\n      animate: 0.2s;\n      background: #E5E7EA;\n      border-radius: 5px;\n      border: 0px solid black; }\n    .qubely-input-range input[type=range]::-moz-range-thumb {\n      border: 1px solid white;\n      height: 14px;\n      width: 14px;\n      border-radius: 8px;\n      background: #606871;\n      cursor: pointer; }\n    .qubely-input-range input[type=range]::-ms-track {\n      width: 100%;\n      height: 4px;\n      cursor: pointer;\n      animate: 0.2s;\n      background: transparent;\n      border-color: transparent;\n      border-width: 14px 0;\n      color: transparent; }\n    .qubely-input-range input[type=range]::-ms-fill-lower {\n      background: #d7dadf;\n      border: 0px solid black;\n      border-radius: 10px; }\n    .qubely-input-range input[type=range]::-ms-fill-upper {\n      background: #E5E7EA;\n      border: 0px solid black;\n      border-radius: 10px; }\n    .qubely-input-range input[type=range]::-ms-thumb {\n      border: 1px solid white;\n      height: 14px;\n      width: 14px;\n      border-radius: 8px;\n      background: #606871;\n      cursor: pointer; }\n    .qubely-input-range input[type=range]:focus::-ms-fill-lower {\n      background: #E5E7EA; }\n    .qubely-input-range input[type=range]:focus::-ms-fill-upper {\n      background: #f3f4f5; }\n\n.qubely-field-range > label {\n  width: 100%;\n  margin-bottom: 2px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/select.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/select.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-popup-select {\n  position: relative; }\n  .qubely-popup-select select {\n    width: 100%; }\n  .qubely-popup-select .qubely-clear {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    background: #fff;\n    color: #8D96A0;\n    padding: 2px 6px;\n    cursor: pointer; }\n    .qubely-popup-select .qubely-clear:hover {\n      color: #717982; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/selector.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/selector.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-toolber-field button:focus {\n  outline: none; }\n\n.qubely-selector-popup-toolbar .components-popover__content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 150px !important;\n  padding-bottom: 8px;\n  padding-top: 8px;\n  border-radius: 5px; }\n\n.qubely-selector-toolber-popup {\n  width: 100%; }\n\n.qubely-field-selector .qubely-field-child {\n  display: flex;\n  flex-wrap: wrap;\n  flex-basis: auto; }\n  .qubely-field-selector .qubely-field-child .qubely-selector-button-group {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding-left: 2%;\n    padding-right: 2%; }\n    .qubely-field-selector .qubely-field-child .qubely-selector-button-group .qubely-button {\n      display: flex;\n      padding: 5px 0px 5px 0px;\n      margin: 0px 0px 2px 0px;\n      justify-content: space-evenly;\n      background: transparent;\n      border: none; }\n    .qubely-field-selector .qubely-field-child .qubely-selector-button-group .qubely-button.active {\n      background: #007eb1;\n      border-color: #00435d;\n      border-radius: 3px;\n      color: #fff;\n      box-shadow: inset 0 -1px 0 #00435d;\n      border: none; }\n    .qubely-field-selector .qubely-field-child .qubely-selector-button-group .qubely-button:focus {\n      outline: none; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/separator.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/separator.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-separator {\n  width: 100%;\n  height: 1px;\n  background: #E5E7EA; }\n  .qubely-field-separator:not(:first-child-child) {\n    margin-top: 20px; }\n  .qubely-field-separator.qubely-has-label {\n    position: relative; }\n    .qubely-field-separator.qubely-has-label label {\n      position: absolute;\n      top: -8px;\n      display: inline-block;\n      width: auto;\n      background: #fff;\n      padding-right: 10px;\n      margin: 0; }\n\n.qubely-field-separator.qubely-separtor-extra-margin {\n  margin: 20px 0px 30px 0px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/shape.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/shape.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-shape-picker-wrapper {\n  display: flex; }\n  .qubely-shape-picker-wrapper .qubely-shape-picker {\n    width: 100%; }\n  .qubely-shape-picker-wrapper .has-value {\n    width: 90%; }\n\n.qubely-shape-picker-options .qubely-shape-picker-option {\n  padding: 10px 10px 10px 10px; }\n\n.qubely-shape-picker-options .qubely-shape-picker-option:hover {\n  background-color: #e8eaeb;\n  border-radius: 4px; }\n\n.qubely-field-shape-placeholder {\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: white;\n  cursor: default;\n  display: flex;\n  flex-wrap: wrap;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  position: relative;\n  box-sizing: border-box;\n  border-color: #cccccc;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: 1px;\n  transition: all 100ms ease 0s;\n  outline: 0px !important;\n  line-height: 28px;\n  height: 30px;\n  vertical-align: middle;\n  padding-left: 10px; }\n  .qubely-field-shape-placeholder .qubely-icon {\n    display: flex;\n    padding-right: 5px; }\n\n.qubely-field-shape-value:hover {\n  cursor: pointer; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/styles.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/styles.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-styles .qubely-field-style-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between; }\n  .qubely-field-styles .qubely-field-style-list > div {\n    text-align: center;\n    margin: 4px 0;\n    flex-shrink: 0;\n    cursor: pointer;\n    overflow: hidden;\n    padding: 0;\n    margin-bottom: 10px; }\n    .qubely-field-styles .qubely-field-style-list > div .qubely-layout-style {\n      display: block;\n      border: 1px solid #DFE1E3;\n      border-radius: 4px;\n      transition: border-color 400ms; }\n      .qubely-field-styles .qubely-field-style-list > div .qubely-layout-style img {\n        display: block;\n        width: 100%;\n        border-radius: 4px; }\n    .qubely-field-styles .qubely-field-style-list > div .qubely-field-style-icon,\n    .qubely-field-styles .qubely-field-style-list > div .qubely-field-style-svg,\n    .qubely-field-styles .qubely-field-style-list > div .qubely-field-style-label {\n      display: block;\n      text-align: center; }\n    .qubely-field-styles .qubely-field-style-list > div .qubely-field-style-label {\n      margin-top: 5px;\n      transition: color 400ms; }\n    .qubely-field-styles .qubely-field-style-list > div:hover .qubely-layout-style {\n      border-color: #666; }\n    .qubely-field-styles .qubely-field-style-list > div.qubely-active .qubely-layout-style {\n      border-color: #2184F9; }\n    .qubely-field-styles .qubely-field-style-list > div.qubely-active .qubely-field-style-label {\n      color: #2184F9; }\n    .qubely-field-styles .qubely-field-style-list > div.qubely-pro-layout {\n      cursor: no-drop; }\n  .qubely-field-styles .qubely-field-style-list.qubely-field-style-columns-2 > div {\n    width: calc(50% - 4px); }\n  .qubely-field-styles .qubely-field-style-list.qubely-field-style-columns-21 > div {\n    width: calc(50% - 4px); }\n    .qubely-field-styles .qubely-field-style-list.qubely-field-style-columns-21 > div:last-child {\n      width: calc(100% - 4px); }\n  .qubely-field-styles .qubely-field-style-list.qubely-field-style-columns-3 > div {\n    width: calc(33.33% - 4px); }\n  .qubely-field-styles .qubely-field-style-list.qubely-field-style-columns-4 > div {\n    width: calc(25% - 4px); }\n\n.qubely-field-pro-upgrade {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 0px; }\n  .qubely-field-pro-upgrade .qubely-upgrade-message {\n    display: flex;\n    padding: 10px 0px 20px 0px;\n    flex-direction: column;\n    align-items: center; }\n    .qubely-field-pro-upgrade .qubely-upgrade-message .qubely-upgrade-message-title {\n      color: #000;\n      font-weight: 400;\n      font-size: 26px;\n      padding: 20px 0px; }\n    .qubely-field-pro-upgrade .qubely-upgrade-message .qubely-upgrade-message-description {\n      width: 85%;\n      font-size: 15px;\n      font-weight: 100;\n      line-height: 1.5;\n      text-align: center; }\n  .qubely-field-pro-upgrade .qubely-upgrade-button {\n    color: #fff;\n    cursor: pointer;\n    border: 1px #979797;\n    border-radius: 21px;\n    padding: 7px 19px;\n    background-color: #2184F9;\n    text-decoration: none;\n    box-shadow: 0 15px 20px -10px rgba(0, 0, 0, 0.3);\n    font-size: 12px;\n    font-weight: 600;\n    transition: 400ms; }\n    .qubely-field-pro-upgrade .qubely-upgrade-button:hover {\n      background-color: #146dd6;\n      box-shadow: 0 15px 20px -8px rgba(0, 0, 0, 0.4); }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/template.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/template.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-templates-container {\n  background: #D6D9DD;\n  padding: 14px 8px 18px;\n  margin: 0 -16px;\n  margin-bottom: -16px; }\n  .qubely-templates-container h4 {\n    margin: 0;\n    font-size: 13px;\n    color: #565D66;\n    padding: 0 7px; }\n\n.qubely-template-slider {\n  overflow: hidden; }\n  .qubely-template-slider .qubely-template-slider-inner {\n    width: 1400px;\n    display: flex;\n    transition: 300ms; }\n    .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide {\n      padding: 12px 7px 18px; }\n      .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner {\n        background: #ffffff;\n        box-shadow: 0 9px 10px rgba(163, 175, 216, 0.5);\n        border-radius: 3px;\n        overflow: hidden;\n        position: relative; }\n        .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner button {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          border: none;\n          padding: 0 11px;\n          font-size: 11px;\n          height: 21px;\n          line-height: 21px;\n          border-radius: 2px;\n          background: #2184F9;\n          color: #ffffff;\n          opacity: 0;\n          z-index: 2;\n          transition: 200ms; }\n        .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner::before {\n          content: '';\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.6);\n          z-index: 1;\n          opacity: 0;\n          transition: 200ms; }\n        .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner:hover button, .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner:hover::before {\n          opacity: 1; }\n        .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner svg,\n        .qubely-template-slider .qubely-template-slider-inner .qubely-template-slide .qubely-template-slide-inner img {\n          display: block;\n          width: 100%; }\n\n.qubely-template-slider-wrap {\n  position: relative; }\n  .qubely-template-slider-wrap .template-slider-navigations {\n    position: absolute;\n    width: calc(100% - 10px);\n    top: 50%;\n    left: 5px;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: space-between;\n    opacity: 0;\n    transition: 200ms;\n    z-index: 3; }\n\n.template-slider-controls {\n  display: flex;\n  align-items: center;\n  justify-content: center; }\n  .template-slider-controls button.template-slider-dot {\n    background: #BCC1C7;\n    box-shadow: none;\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    display: inline-block;\n    padding: 0;\n    margin: 0;\n    border: 4px solid #D6D9DD;\n    transition: 300ms; }\n    .template-slider-controls button.template-slider-dot:focus {\n      outline: none; }\n    .template-slider-controls button.template-slider-dot.active {\n      background: #616871;\n      height: 19px;\n      width: 19px; }\n    .template-slider-controls button.template-slider-dot span {\n      display: none; }\n  .template-slider-controls button.template-slider-nav {\n    background: none;\n    border: none;\n    box-shadow: none;\n    height: 25px;\n    width: 25px;\n    color: #616871;\n    cursor: pointer;\n    pointer-events: all;\n    transition: 200ms;\n    font-size: 17px; }\n    .template-slider-controls button.template-slider-nav:focus {\n      outline: none; }\n    .template-slider-controls button.template-slider-nav[disabled] {\n      color: #BCC1C7; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/toggle.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/toggle.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field.qubely-field-toggle {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between; }\n  .qubely-field.qubely-field-toggle > label {\n    width: auto;\n    margin-bottom: 0; }\n  .qubely-field.qubely-field-toggle .components-toggle-control,\n  .qubely-field.qubely-field-toggle .components-toggle-control .components-base-control__field {\n    margin-bottom: 0 !important; }\n  .qubely-field.qubely-field-toggle .components-toggle-control .components-base-control__field .components-form-toggle {\n    margin-right: 0; }\n  .qubely-field.qubely-field-toggle .components-form-toggle.is-checked .components-form-toggle__track {\n    background-color: #2184F9; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/typography.scss":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/typography.scss ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-font-family {\n  min-width: calc(65% - 15px); }\n\n.qubely-field-font-weight {\n  min-width: 35%; }\n\n.qubely-font-family-picker, .qubely-font-weight-picker-wrapper {\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: white;\n  cursor: default;\n  display: flex;\n  flex-wrap: wrap;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  position: relative;\n  box-sizing: border-box;\n  border-color: #cccccc;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: 1px;\n  transition: all 100ms ease 0s;\n  outline: 0px !important;\n  line-height: 28px;\n  height: 30px;\n  vertical-align: middle;\n  padding-left: 5px; }\n  .qubely-font-family-picker .editor-rich-text, .qubely-font-weight-picker-wrapper .editor-rich-text {\n    width: 100%; }\n  .qubely-font-family-picker .selected-font-family, .qubely-font-weight-picker-wrapper .selected-font-family {\n    color: black; }\n\n.qubely-font-family-option-wrapper {\n  top: 100%;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 4px 11px;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  position: absolute;\n  width: 70%;\n  box-sizing: border-box;\n  border-radius: 4px;\n  z-index: 100; }\n\n.qubely-font-weight-wrapper {\n  top: 100%;\n  left: 62%;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 4px 11px;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  position: absolute;\n  width: 40%;\n  box-sizing: border-box;\n  border-radius: 4px;\n  z-index: 100; }\n\n.qubely-font-family-options, .qubely-font-family-weights {\n  max-height: 270px;\n  overflow-y: auto;\n  padding-bottom: 4px;\n  padding-top: 4px;\n  position: relative;\n  box-sizing: border-box; }\n\n.qubely-active-font-family, .qubely-active-font-weight {\n  background-color: #2684ff;\n  color: white;\n  cursor: default;\n  display: block;\n  font-size: inherit;\n  width: 100%;\n  user-select: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  box-sizing: border-box;\n  padding: 8px 12px; }\n\n.qubely-font-family-option, .qubely-font-weight-option {\n  background-color: transparent;\n  color: inherit;\n  cursor: default;\n  display: block;\n  font-size: inherit;\n  width: 100%;\n  user-select: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  box-sizing: border-box;\n  padding: 8px 12px; }\n\n.qubely-font-family-option:hover, .qubely-font-weight-option:hover {\n  background-color: #e8eaeb; }\n\n.qubely-font-family-search-wrapper {\n  display: flex;\n  justify-content: space-between;\n  width: 100%; }\n  .qubely-font-family-search-wrapper input.qubely-font-family-search {\n    border: none !important;\n    background-color: transparent !important; }\n    .qubely-font-family-search-wrapper input.qubely-font-family-search:focus, .qubely-font-family-search-wrapper input.qubely-font-family-search:active, .qubely-font-family-search-wrapper input.qubely-font-family-search:hover {\n      outline: 0;\n      box-shadow: none; }\n\n.qubely-font-weight-picker-wrapper {\n  display: flex;\n  justify-content: space-between;\n  width: 100%; }\n\n.qubely-font-select-icon {\n  display: flex;\n  align-items: center;\n  padding-right: 3px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/url.scss":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/url.scss ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-url .qubely-url-input-group {\n  display: flex; }\n  .qubely-field-url .qubely-url-input-group input {\n    flex-grow: 1;\n    margin: 0 6px 0 0; }\n  .qubely-field-url .qubely-url-input-group button {\n    height: 30px;\n    line-height: 28px; }\n\n.qubely-field-url .qubely-url-advance-options {\n  margin-top: 15px; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/wrapper.scss":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/wrapper.scss ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-field-wrapper {\n  margin: 25px -15px 15px -15px;\n  padding: 25px 15px 15px;\n  border-top: 1px solid #EBECEE;\n  border-bottom: 1px solid #EBECEE;\n  background: #FAFAFA;\n  position: relative;\n  z-index: 1; }\n  .qubely-field-wrapper.qubely-field-wrapper-inline {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 300px;\n    z-index: 99;\n    margin: 0;\n    padding: 20px;\n    background: #fff;\n    border: 1px solid #e5e5e5;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); }\n    .qubely-field-wrapper.qubely-field-wrapper-inline .qubely-field-wrapper-content {\n      position: relative; }\n    .qubely-field-wrapper.qubely-field-wrapper-inline.quebly-position-top {\n      top: auto;\n      bottom: 100%; }\n    .qubely-field-wrapper.qubely-field-wrapper-inline.quebly-position-middle {\n      left: 100%; }\n  .qubely-field-wrapper.qubely-padding-0 {\n    padding: 0; }\n    .qubely-field-wrapper.qubely-padding-0 .qubely-icon-list-wrapper {\n      border: 0;\n      border-radius: 0; }\n  .qubely-field-wrapper .qubely-field-wrapper-label {\n    margin: 0;\n    position: absolute;\n    top: 0;\n    left: 15px;\n    display: inline-block;\n    width: auto;\n    background: #fff;\n    border: 1px solid #E2E4E7;\n    padding: 5px 10px;\n    line-height: 1;\n    transform: translateY(-50%);\n    overflow: hidden; }\n  .qubely-field-wrapper .qubely-field-separator {\n    margin-bottom: 15px; }\n    .qubely-field-wrapper .qubely-field-separator label {\n      background: #FAFAFA; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/editor.scss":
/*!******************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/editor.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-row {\n  position: relative; }\n\n.qubely-column-layout {\n  display: flex;\n  flex-wrap: nowrap; }\n\n.qubely-column-1 {\n  flex: 1; }\n\n.qubely-column-2 {\n  flex: 2; }\n\n.qubely-column-3 {\n  flex: 3; }\n\n.qubely-column-4 {\n  flex: 4; }\n\n.wp-block-qubely-row {\n  display: block; }\n\n.wp-block-qubely-row {\n  flex-wrap: wrap; }\n\n.wp-block-qubely-row > .editor-inner-blocks > .editor-block-list__layout {\n  flex-wrap: wrap;\n  display: flex; }\n\n.wp-block-qubely-row .editor-block-list__layout {\n  margin-left: 0;\n  margin-right: 0; }\n\n.qubely-row > .editor-inner-blocks > .editor-block-list__layout {\n  display: flex;\n  flex-wrap: wrap; }\n\n.wp-block-qubely-row > .editor-inner-blocks > .editor-block-list__layout > [data-type=\"qubely/column\"] {\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  padding-right: 0;\n  word-break: break-word;\n  overflow-wrap: break-word;\n  width: 100%; }\n\n.wp-block-qubely-row .editor-block-list__layout .editor-block-list__block {\n  max-width: none; }\n\n.wp-block-qubely-row [data-type=\"qubely/column\"] {\n  pointer-events: none; }\n\n.wp-block-qubely-row > .editor-inner-blocks > .editor-block-list__layout > [data-type=\"qubely/column\"] > .editor-block-list__block-edit {\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-left: 0;\n  margin-right: 0; }\n\n:not(.components-disabled) > .wp-block-qubely-row > .editor-inner-blocks > .editor-block-list__layout > [data-type=\"qubely/column\"] > .editor-block-list__block-edit > * {\n  pointer-events: all; }\n\n.wp-block-qubely-row > .editor-inner-blocks > .editor-block-list__layout > [data-type=\"qubely/column\"] > .editor-block-list__block-edit > div > .editor-inner-blocks {\n  margin-top: -28px;\n  margin-bottom: -28px; }\n\n.wp-block-qubely-row .editor-block-list__layout {\n  margin-left: 0;\n  margin-right: 0; }\n\n.wp-block-qubely-row .editor-block-list__layout .editor-block-list__block {\n  max-width: none; }\n\ndiv[data-type=\"qubely/row\"].is-selected div[data-type=\"qubely/column\"]:last-child > div > div > .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle,\ndiv[data-type=\"qubely/row\"].is-selected div[data-type=\"qubely/column\"]:last-child > div > div > .components-resizable-box__container.qubely-column-resizer::after,\ndiv[data-type=\"qubely/row\"].is-resizing div[data-type=\"qubely/column\"]:last-child > div > div > .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle,\ndiv[data-type=\"qubely/row\"].is-resizing div[data-type=\"qubely/column\"]:last-child > div > div > .components-resizable-box__container.qubely-column-resizer::after {\n  display: none; }\n\n.wp-block-qubely-row [data-type=\"qubely/column\"] .components-resizable-box__container:hover .components-resizable-box__handle {\n  display: block;\n  z-index: 9; }\n\n.components-resizable-box__container.qubely-column-resizer.is-selected-column > span > .components-resizable-box__handle,\ndiv[data-type=\"qubely/row\"].is-selected .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle,\ndiv[data-type=\"qubely/row\"].is-resizing .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle {\n  right: -15px;\n  top: 0;\n  background: transparent;\n  z-index: 9999;\n  width: auto;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  transform: translateX(50%);\n  background: transparent; }\n  .components-resizable-box__container.qubely-column-resizer.is-selected-column > span > .components-resizable-box__handle::before,\n  div[data-type=\"qubely/row\"].is-selected .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle::before,\n  div[data-type=\"qubely/row\"].is-resizing .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle::before {\n    background: #e3e4e7;\n    border: none;\n    opacity: 1;\n    border-radius: 30px;\n    width: 3.5px;\n    right: calc(50% - 2px); }\n\n.components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle {\n  width: 8px; }\n\n.qubely-flex-box {\n  display: flex; }\n\n.qubely-flex-column {\n  flex-direction: column; }\n\n.qubely-flex-1 {\n  flex: 1; }\n\n.qubely-flex-2 {\n  flex: 2; }\n\n.qubely-flex-3 {\n  flex: 3; }\n\n.qubely-flex-4 {\n  flex: 4; }\n\n.item-center {\n  align-items: center; }\n\n.item-left {\n  align-items: flex-start; }\n\n.item-right {\n  align-items: flex-end; }\n\n.justify-center {\n  justify-content: center; }\n\n.justify-left {\n  justify-content: flex-start; }\n\n.justify-right {\n  justify-content: flex-end; }\n\n.qubely-palette-fields .qubely-palette-unit {\n  padding-bottom: 12px;\n  padding-left: 3px; }\n\n[data-type=\"qubely/columns\"] .editor-block-list__layout .editor-block-list__block .editor-block-list__block-edit {\n  margin-top: 14px;\n  margin-bottom: 14px; }\n\n#wpwrap [data-type=\"qubely/columns\"] .editor-block-list__layout .editor-block-list__block .editor-block-list__block-edit p:last-child {\n  margin-bottom: 0; }\n\n#wpwrap [data-type=\"qubely/columns\"] .is-selected .qubely-column[data-gwidth]::before {\n  content: attr(data-gwidth);\n  position: absolute;\n  font-size: 10px;\n  top: -1px;\n  right: -1px;\n  background: #2178c3;\n  padding: 0 8px;\n  border-radius: unset;\n  color: #fff; }\n\n.qubely-field-group {\n  position: relative;\n  display: flex; }\n  .qubely-field-group:not(:last-child) {\n    margin-bottom: 20px; }\n  .qubely-field-group.qubely-65-35 .qubely-field:first-child {\n    max-width: calc(65% - 15px); }\n  .qubely-field-group.qubely-65-35 .qubely-field:last-child {\n    max-width: 35%; }\n  .qubely-field-group .qubely-field {\n    flex-grow: 1; }\n    .qubely-field-group .qubely-field label {\n      font-size: 13px;\n      color: #87888A;\n      display: block; }\n  .qubely-field-group.qubely-wide {\n    display: block; }\n    .qubely-field-group.qubely-wide .qubely-field {\n      width: 100%; }\n      .qubely-field-group.qubely-wide .qubely-field:not(:last-child) {\n        margin-bottom: 15px; }\n  .qubely-field-group:not(.qubely-wide) .qubely-field:not(:last-child) {\n    margin-right: 15px;\n    margin-bottom: 0; }\n\n.qubely-field {\n  position: relative;\n  margin-bottom: 20px; }\n  .qubely-field:last-child {\n    margin-bottom: 0; }\n  .qubely-field .qubely-field-child button:focus {\n    outline: 1px dotted rgba(0, 0, 0, 0.2); }\n  .qubely-field input[type=\"text\"],\n  .qubely-field input[type=\"number\"]:not(.components-range-control__number) {\n    width: 100%;\n    padding: 0 2px 0 0 !important;\n    height: 26px;\n    border: 1px solid #8d96a0;\n    margin: 0;\n    text-indent: 6px; }\n  .qubely-field > label {\n    width: 100%;\n    display: block;\n    line-height: 18px;\n    margin-bottom: 10px; }\n    .qubely-field > label::after {\n      content: '';\n      display: block;\n      clear: both; }\n    .qubely-field > label .qubely-device {\n      margin-left: 5px;\n      display: inline-block; }\n      .qubely-field > label .qubely-device > span {\n        padding: 0 2.5px; }\n\n.qubely-field-group .qubely-device {\n  position: absolute;\n  top: 0;\n  left: 15px;\n  transform: translateY(-50%);\n  background: #fff;\n  border: 1px solid #E2E4E7;\n  padding: 0px 2px;\n  font-size: 0;\n  overflow: hidden; }\n  .qubely-field-group .qubely-device > button {\n    border: none;\n    padding: 4px 2.5px; }\n\n.qubely-device > button {\n  padding: 0px;\n  cursor: pointer;\n  font-weight: 900;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  font-family: \"Font Awesome 5 Free\";\n  font-size: 12px;\n  background: #fff;\n  border: 1px solid #E5E7EA;\n  color: #8D96A0;\n  height: 20px;\n  line-height: 20px;\n  width: 20px;\n  border-radius: 10px; }\n  .qubely-device > button:not(:last-child) {\n    margin-right: 4px; }\n  .qubely-device > button.qubely-device-desktop::before {\n    content: \"\\f108\"; }\n  .qubely-device > button.qubely-device-tablet::before {\n    content: \"\\f3fa\"; }\n  .qubely-device > button.qubely-device-mobile::before {\n    content: \"\\f3cd\"; }\n  .qubely-device > button:focus {\n    outline: 0;\n    box-shadow: 0; }\n  .qubely-device > button.active {\n    background: #E5E7EA;\n    color: #2184F9; }\n\n.qubely-group-color-palatte {\n  margin: 0; }\n  .qubely-group-color-palatte:not(:last-child) {\n    margin-bottom: 20px; }\n  .qubely-group-color-palatte > button {\n    position: relative;\n    float: left !important;\n    margin-right: 10px !important;\n    height: 28px !important;\n    width: 28px !important;\n    font-size: 0px !important;\n    border-radius: 50% !important;\n    border: none;\n    box-shadow: none !important; }\n    .qubely-group-color-palatte > button::after {\n      content: '\\f05e';\n      -webkit-font-smoothing: antialiased;\n      display: inline-block;\n      font-style: normal;\n      font-variant: normal;\n      text-rendering: auto;\n      line-height: 1;\n      font-family: \"Font Awesome 5 Free\";\n      font-weight: 900;\n      font-size: 28px;\n      color: red;\n      left: 50%;\n      top: 50%;\n      position: absolute;\n      transform: translate(-50%, -50%); }\n  .qubely-group-color-palatte .components-color-palette__item-wrapper {\n    margin-bottom: 0;\n    margin-right: 10px; }\n  .qubely-group-color-palatte::after {\n    content: '';\n    display: block;\n    clear: both; }\n\n.qubely-unit-btn-group {\n  overflow: hidden;\n  display: inline-block;\n  font-size: 0; }\n  .qubely-unit-btn-group button {\n    line-height: 1;\n    display: inline-block;\n    border: none;\n    font-size: 10px;\n    padding: 0;\n    border-radius: 2px !important;\n    color: #8D96A0;\n    text-transform: uppercase;\n    background: transparent;\n    cursor: pointer; }\n    .qubely-unit-btn-group button:focus {\n      outline: 0;\n      box-shadow: none; }\n    .qubely-unit-btn-group button.active {\n      color: #2184F9; }\n    .qubely-unit-btn-group button:not(:last-child) {\n      margin-right: 5px; }\n\n.qubely-d-flex {\n  display: flex; }\n\n.qubely-align-center {\n  align-items: center; }\n\n.qubely-align-justified {\n  justify-content: space-evenly; }\n  .qubely-align-justified > div {\n    padding: 0 5px;\n    display: block !important;\n    margin-bottom: 0 !important; }\n    .qubely-align-justified > div label {\n      display: block;\n      margin-bottom: 8px !important;\n      text-align: center; }\n    .qubely-align-justified > div:first-child {\n      padding-left: 0; }\n    .qubely-align-justified > div:last-child {\n      padding-right: 0; }\n\n.qubely-ml-auto {\n  margin-left: auto; }\n\n.qubely-ml-10 {\n  margin-left: 10px; }\n\n.qubely-ml-15 {\n  margin-left: 15px; }\n\n.qubely-mr-auto {\n  margin-right: auto; }\n\n.qubely-mr-15 {\n  margin-right: 15px; }\n\n.qubely-mb-15 {\n  margin-bottom: 15px; }\n\n.qubely-mb-20 {\n  margin-bottom: 20px; }\n\n.qubely-mb-10 {\n  margin-bottom: 10px; }\n\n.qubely-mb-0 {\n  margin-bottom: 0 !important; }\n\n.qubely-w-100 {\n  width: 100%; }\n\n.qubely-text-right {\n  text-align: right; }\n\n.qubely-d-block {\n  display: block; }\n\n.qubely-button {\n  background: #FFF;\n  border: 1px solid #E5E7EA;\n  min-height: 26px;\n  display: inline-flex;\n  align-items: center;\n  padding: 3px 8px;\n  text-align: center;\n  color: #8D96A0;\n  transition: all 400ms;\n  border-radius: 3px;\n  cursor: pointer; }\n  .qubely-button:focus {\n    box-shadow: none;\n    outline: 0; }\n  .qubely-button.active {\n    background: #E5E7EA;\n    color: #2184F9; }\n  .qubely-button.qubely-button-rounded {\n    border-radius: 3px !important; }\n\n.qubely-field-button-list {\n  display: inline-flex;\n  vertical-align: middle; }\n  .qubely-field-button-list .qubely-button {\n    position: relative;\n    flex: 1 1 auto; }\n    .qubely-field-button-list .qubely-button:not(:last-child) {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0; }\n    .qubely-field-button-list .qubely-button:not(:first-child) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0; }\n    .qubely-field-button-list .qubely-button:not(:first-child) {\n      margin-left: -1px; }\n\n.qubely-common-button, .qubely-button-group .qubely-button {\n  border: 1px solid #6c7781;\n  text-align: center;\n  flex-grow: 1;\n  padding: 4px 6px;\n  font-size: 12px;\n  cursor: pointer;\n  color: #555;\n  border-color: #ccc;\n  background: #f7f7f7;\n  box-shadow: inset 0 -1px 0 #ccc;\n  vertical-align: top; }\n  .qubely-common-button:first-child, .qubely-button-group .qubely-button:first-child {\n    border-radius: 4px 0 0 4px; }\n  .qubely-common-button:last-child, .qubely-button-group .qubely-button:last-child {\n    border-radius: 0 4px 4px 0; }\n  .qubely-common-button:not(:last-child), .qubely-button-group .qubely-button:not(:last-child) {\n    border-right: none; }\n  .qubely-common-button:hover, .qubely-button-group .qubely-button:hover {\n    background: #fafafa;\n    border-color: #999;\n    box-shadow: inset 0 -1px 0 #999;\n    color: #23282d;\n    text-decoration: none; }\n  .qubely-common-button.active, .qubely-button-group .active.qubely-button {\n    background: #0085ba;\n    border-color: #00648c;\n    color: #ffffff;\n    box-shadow: inset 0 -1px 0 #00648c; }\n    .qubely-common-button.active:hover, .qubely-button-group .active.qubely-button:hover {\n      background: #007eb1;\n      border-color: #00435d;\n      color: #fff;\n      box-shadow: inset 0 -1px 0 #00435d; }\n\n.qubely-button-group {\n  display: flex;\n  border-radius: 5px;\n  width: 100%;\n  margin: 0; }\n  .qubely-button-group.qubely-popup-button-group button {\n    padding: 5px 9px; }\n\n.qubely-background-tab-wrap .qubely-gradient {\n  margin-bottom: 0; }\n\n.components-resizable-box__container .qubely-column {\n  max-width: 100%; }\n\n.editor-block-list__layout .components-resizable-box__container {\n  max-width: 100% !important; }\n\n.components-resizable-box__container .editor-inner-blocks .editor-block-list__block {\n  padding-left: 0;\n  padding-right: 0; }\n  .components-resizable-box__container .editor-inner-blocks .editor-block-list__block .editor-block-list__block-edit {\n    margin: 0; }\n\n.qubely-row .qubely-column .editor-inner-blocks .editor-block-list__layout {\n  margin-left: 0;\n  margin-right: 0; }\n\n.qubely-row .editor-block-list__layout .editor-block-list__block {\n  padding-left: 0;\n  padding-right: 0; }\n\n.edit-post-visual-editor .qubely-row .editor-block-list__block .editor-block-list__block-edit {\n  margin-left: 0;\n  margin-right: 0; }\n\n.qubely-row .editor-block-list__layout .editor-block-list__block .editor-block-list__block-edit > .editor-block-contextual-toolbar + [data-block] .components-resizable-box__container {\n  position: relative; }\n\n.qubely-row .editor-block-list__layout .editor-block-list__block.is_hovered[data-type=\"qubely/columns\"] > .editor-block-list__block-edit::before {\n  outline: 1px solid green; }\n\n.qubely-row .editor-block-list__layout .editor-block-list__block .editor-block-list__block-edit > .editor-block-contextual-toolbar + [data-block] .components-resizable-box__container {\n  position: relative; }\n\n.qubely-row .editor-block-list__layout .editor-block-list__block.is_hovered .components-resizable-box__container {\n  position: relative; }\n\n.qubely-row .editor-block-list__layout .editor-block-list__block.is_hovered .components-resizable-box__container::before {\n  z-index: 9999;\n  content: \"\";\n  position: absolute;\n  outline: 2px solid green;\n  transition: outline .1s linear;\n  pointer-events: none;\n  right: -14px;\n  left: -14px;\n  top: -14px;\n  bottom: -14px; }\n\n.qubely-row-preset {\n  background: #F7F8FC;\n  padding: 25px 15px; }\n  .qubely-row-preset .qubely-row-preset-title {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    text-align: center;\n    font-size: 16px;\n    margin-bottom: 18px;\n    color: #191E23; }\n  .qubely-row-preset .qubely-row-preset-group {\n    max-width: 700px;\n    margin: 0 auto; }\n    .qubely-row-preset .qubely-row-preset-group button {\n      cursor: pointer;\n      width: calc(16.66% - 14px);\n      background: transparent;\n      border: none;\n      height: 50px;\n      margin: 7px !important;\n      display: inline-flex;\n      padding: 0 !important;\n      outline: 1px solid transparent;\n      transition: 300ms;\n      opacity: 1; }\n      .qubely-row-preset .qubely-row-preset-group button i {\n        height: 50px;\n        background: #E2E6EC;\n        border: 1px solid #E2E6EC;\n        border-radius: 3px;\n        display: inline-block;\n        position: relative;\n        transition: 300ms;\n        font-style: normal; }\n        .qubely-row-preset .qubely-row-preset-group button i:not(:last-of-type) {\n          margin-right: 2px; }\n      .qubely-row-preset .qubely-row-preset-group button:hover {\n        border: none;\n        opacity: 1; }\n        .qubely-row-preset .qubely-row-preset-group button:hover i {\n          font-style: normal;\n          background: #FFFFFF;\n          border: 1px solid #2184F9;\n          box-shadow: 0 0 0 1px rgba(33, 132, 249, 0.2); }\n  .qubely-row-preset .import-layout-btn-container .is-button.is-primary {\n    text-shadow: none;\n    background: #2184F9;\n    box-shadow: none;\n    border: 0;\n    padding: 10px 12px;\n    line-height: 1;\n    height: auto;\n    transition: color 300ms, background-color 300ms; }\n    .qubely-row-preset .import-layout-btn-container .is-button.is-primary:hover {\n      background: #1d74df; }\n\n.qubely-component-remove-button {\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  top: 13px;\n  right: 15px;\n  padding: 0;\n  transition: 200ms;\n  font-size: 17px;\n  color: #CCCFD5; }\n  .qubely-component-remove-button:hover {\n    color: #B4B7BC; }\n\n.qubely-inspect-tabs {\n  border: 1px solid #e2e4e7;\n  padding: 10px;\n  border-radius: 4px;\n  margin-top: 30px;\n  position: relative; }\n  .qubely-inspect-tabs .components-tab-panel__tabs {\n    position: absolute;\n    top: -15px;\n    border: 2px solid #e2e4e7;\n    display: inline-block;\n    border-radius: 4px;\n    overflow: hidden; }\n    .qubely-inspect-tabs .components-tab-panel__tabs button {\n      padding: 7px 15px;\n      box-shadow: none;\n      cursor: pointer;\n      border: none;\n      cursor: pointer;\n      transition: 400ms; }\n      .qubely-inspect-tabs .components-tab-panel__tabs button.active-tab {\n        background: #0085ba;\n        color: #fff; }\n  .qubely-inspect-tabs .components-tab-panel__tab-content {\n    margin-top: 10px; }\n    .qubely-inspect-tabs .components-tab-panel__tab-content .components-panel__body-title {\n      display: none; }\n    .qubely-inspect-tabs .components-tab-panel__tab-content .components-panel__body {\n      border-top: none; }\n\n#qubelyImportLayoutBtn {\n  vertical-align: middle;\n  display: inline-flex;\n  align-items: center;\n  background: #2184F9;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 3px;\n  white-space: nowrap;\n  border-width: 1px;\n  border-style: solid;\n  font-size: 13px;\n  margin: 0 15px 0 15px;\n  padding: 9px 12px;\n  border: 0;\n  cursor: pointer;\n  -webkit-appearance: none;\n  transition: 400ms; }\n  #qubelyImportLayoutBtn:hover, #qubelyImportLayoutBtn:focus, #qubelyImportLayoutBtn:active {\n    color: #fff;\n    text-decoration: none;\n    background: #1d74df; }\n  #qubelyImportLayoutBtn img {\n    height: 16px;\n    width: 16px;\n    margin-right: 10px; }\n\n.qubely-editor-btn {\n  background: none;\n  border: 0;\n  color: inherit;\n  font: inherit;\n  line-height: normal;\n  overflow: visible;\n  padding: 0;\n  -webkit-appearance: button;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none; }\n  .qubely-editor-btn::-moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\n.qubely-field-type-switch .qubely-field-switch-button button {\n  border: 1px solid #D8D8D8;\n  padding: 8px 13px;\n  font-size: 13px;\n  color: #333;\n  cursor: pointer; }\n  .qubely-field-type-switch .qubely-field-switch-button button .qubely-gradient {\n    position: relative;\n    border: 2px solid #333;\n    background-image: linear-gradient(45deg, #333 50%, #ffffff 50%); }\n    .qubely-field-type-switch .qubely-field-switch-button button .qubely-gradient i {\n      font-style: normal;\n      width: 22px;\n      visibility: hidden; }\n  .qubely-field-type-switch .qubely-field-switch-button button:not(:last-child) {\n    border-right: none; }\n  .qubely-field-type-switch .qubely-field-switch-button button:first-child {\n    border-radius: 4px 0 0 4px; }\n  .qubely-field-type-switch .qubely-field-switch-button button:last-child {\n    border-radius: 0 4px 4px 0; }\n  .qubely-field-type-switch .qubely-field-switch-button button.active {\n    background: #0085ba;\n    border-color: #006a95;\n    color: #fff; }\n    .qubely-field-type-switch .qubely-field-switch-button button.active .qubely-gradient {\n      border-color: #fff;\n      background-image: linear-gradient(45deg, #0085ba 50%, #ffffff 50%); }\n    .qubely-field-type-switch .qubely-field-switch-button button.active + button {\n      border-left-color: #006a95; }\n\n.qubely-label-inline-group {\n  display: flex;\n  align-items: center;\n  justify-content: space-between; }\n\n.qubley-margin-indicator,\n.qubley-padding-indicator {\n  opacity: 0; }\n  .qubley-margin-indicator .qubely-indicator-bottom,\n  .qubley-margin-indicator .qubely-indicator-top,\n  .qubley-margin-indicator .qubely-indicator-left,\n  .qubley-margin-indicator .qubely-indicator-right,\n  .qubley-padding-indicator .qubely-indicator-bottom,\n  .qubley-padding-indicator .qubely-indicator-top,\n  .qubley-padding-indicator .qubely-indicator-left,\n  .qubley-padding-indicator .qubely-indicator-right {\n    position: absolute;\n    opacity: .4;\n    background-color: rgba(3, 225, 109, 0.3);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 13px;\n    color: #222;\n    z-index: 1; }\n  .qubley-margin-indicator .qubely-indicator-bottom,\n  .qubley-margin-indicator .qubely-indicator-top,\n  .qubley-padding-indicator .qubely-indicator-bottom,\n  .qubley-padding-indicator .qubely-indicator-top {\n    height: 0px;\n    top: 0;\n    left: 0;\n    right: 0; }\n  .qubley-margin-indicator .qubely-indicator-bottom,\n  .qubley-padding-indicator .qubely-indicator-bottom {\n    top: auto;\n    bottom: 0; }\n  .qubley-margin-indicator .qubely-indicator-left,\n  .qubley-margin-indicator .qubely-indicator-right,\n  .qubley-padding-indicator .qubely-indicator-left,\n  .qubley-padding-indicator .qubely-indicator-right {\n    width: 0px;\n    top: 0;\n    bottom: 0;\n    left: 0; }\n  .qubley-margin-indicator .qubely-indicator-right,\n  .qubley-padding-indicator .qubely-indicator-right {\n    left: auto;\n    right: 0; }\n\n.qubely-section:hover .qubley-margin-indicator,\n.qubely-section:hover .qubley-padding-indicator,\n.qubely-section.active .qubley-margin-indicator,\n.qubely-section.active .qubley-padding-indicator,\n.padding-input-dragging .qubley-margin-indicator,\n.padding-input-dragging .qubley-padding-indicator,\n.margin-input-dragging .qubley-margin-indicator,\n.margin-input-dragging .qubley-padding-indicator,\n.padding-dragging .qubley-margin-indicator,\n.padding-dragging .qubley-padding-indicator,\n.margin-dragging .qubley-margin-indicator,\n.margin-dragging .qubley-padding-indicator {\n  opacity: 1; }\n\n.qubley-margin-indicator .qubely-indicator-bottom,\n.qubley-margin-indicator .qubely-indicator-top,\n.qubley-margin-indicator .qubely-indicator-left,\n.qubley-margin-indicator .qubely-indicator-right {\n  background: rgba(0, 123, 243, 0.3); }\n\n.qubley-margin-indicator .qubely-indicator-bottom {\n  transform: translateY(100%); }\n\n.qubley-margin-indicator .qubely-indicator-top {\n  transform: translateY(-100%); }\n\n.qubley-margin-indicator .qubely-indicator-left {\n  transform: translateX(-100%); }\n\n.qubley-margin-indicator .qubely-indicator-right {\n  transform: translateX(100%); }\n\n.not-clickable, .disable-slide .qubely-field-child {\n  filter: opacity(0.3);\n  pointer-events: none; }\n\n.qubely-row * > [data-type=\"qubely/column\"].has-child-selected .editor-inner-blocks {\n  padding: 14px; }\n\n.editor-styles-wrapper .qubely-row * > [data-type=\"qubely/column\"] [data-block] {\n  margin-top: 0;\n  margin-bottom: 0; }\n\n.editor-styles-wrapper .qubely-row * > [data-type=\"qubely/column\"].has-child-selected [data-block] {\n  margin-top: 28px;\n  margin-bottom: 28px; }\n\n.block-editor-block-list__block .qubely-row * > [data-type=\"qubely/column\"] .block-list-appender {\n  margin: 0; }\n\n.qubely-row * > [data-type=\"qubely/column\"].has-child-selected {\n  z-index: 1; }\n\n.block-editor-block-list__layout .block-editor-block-list__block[data-type=\"qubely/row\"].is-selected {\n  z-index: inherit; }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/helpers/PageLIstModal.scss":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/helpers/PageLIstModal.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".qubely-builder-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none; }\n  .qubely-builder-modal * {\n    box-sizing: border-box;\n    pointer-events: all; }\n  .qubely-builder-modal .qubely-pagelist-modal-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: red;\n    left: 0;\n    top: 0;\n    z-index: -1;\n    background: rgba(0, 0, 0, 0.6); }\n\n.qubely-builder-modal-header {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  z-index: 99999; }\n  .qubely-builder-modal-header .template-search-box {\n    position: relative;\n    width: 270px; }\n    .qubely-builder-modal-header .template-search-box i {\n      font-size: 21px;\n      color: #95C2EE;\n      position: absolute;\n      top: 50%;\n      left: 40px;\n      transform: translateY(-50%); }\n    .qubely-builder-modal-header .template-search-box input {\n      display: block;\n      width: 100%;\n      height: 85px;\n      color: #507A9B;\n      background: #1B3865;\n      border: none;\n      font-size: 20px;\n      padding: 0 20px 0 75px;\n      margin: 0;\n      font-weight: 300;\n      border-radius: 0 !important; }\n      .qubely-builder-modal-header .template-search-box input::-webkit-input-placeholder {\n        /* WebKit browsers */\n        color: #507A9B;\n        opacity: 1; }\n      .qubely-builder-modal-header .template-search-box input:-moz-placeholder {\n        /* Mozilla Firefox 4 to 18 */\n        color: #507A9B;\n        opacity: 1; }\n      .qubely-builder-modal-header .template-search-box input::-moz-placeholder {\n        /* Mozilla Firefox 19+ */\n        color: #507A9B;\n        opacity: 1; }\n      .qubely-builder-modal-header .template-search-box input:-ms-input-placeholder {\n        /* Internet Explorer 10+ */\n        color: #507A9B;\n        opacity: 1; }\n      .qubely-builder-modal-header .template-search-box input:focus {\n        box-shadow: none;\n        outline: 0; }\n\n.qubely-pagelist-modal-inner {\n  padding-top: 85px;\n  position: relative;\n  display: flex;\n  width: 1500px;\n  height: 80%;\n  background: #EBEEF4;\n  max-width: 85%; }\n  .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar {\n    min-width: 270px;\n    background: #0E2244;\n    color: #587E97;\n    overflow-y: auto; }\n    .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content {\n      padding: 30px 40px; }\n      .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content h3 {\n        font-size: 21px;\n        color: #95C2EE;\n        margin: 0 0 30px;\n        font-weight: 500; }\n      .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content ul {\n        list-style: none;\n        margin: 0;\n        padding: 0; }\n        .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content ul li {\n          padding: 6px 0;\n          display: block;\n          font-size: 14px;\n          overflow: hidden;\n          cursor: pointer;\n          transition: 300ms; }\n          .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content ul li:hover {\n            color: #95C2EE; }\n          .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content ul li.active {\n            color: #2184F9; }\n          .qubely-pagelist-modal-inner .qubely-layout-modal-sidebar .qubely-modal-sidebar-content ul li span {\n            float: right; }\n  .qubely-pagelist-modal-inner .qubely-layout-modal-content-area {\n    flex-grow: 1;\n    max-height: 100%;\n    overflow-y: auto;\n    position: relative; }\n\n.qubely-template-list-header {\n  text-align: center;\n  background-color: #fff;\n  position: relative;\n  flex-grow: 1;\n  padding-right: 50px; }\n  .qubely-template-list-header button:not(.qubely-builder-close-modal) {\n    display: inline-block;\n    line-height: 25px;\n    padding: 30px 40px;\n    border: none;\n    cursor: pointer;\n    font-size: 16px;\n    margin: 0 1px 0 0; }\n    .qubely-template-list-header button:not(.qubely-builder-close-modal).active {\n      background-color: #EBEEF4;\n      color: #2184F9; }\n    .qubely-template-list-header button:not(.qubely-builder-close-modal):focus {\n      outline: 1px dotted; }\n  .qubely-template-list-header .qubely-builder-close-modal {\n    position: absolute;\n    font-size: 20px;\n    color: #9B9B9B;\n    border: none;\n    right: 30px;\n    top: 50%;\n    cursor: pointer;\n    transform: translateY(-50%); }\n    .qubely-template-list-header .qubely-builder-close-modal:focus {\n      outline: 1px dotted; }\n\n.qubely-template-list-sub-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 23px 25px 0; }\n  .qubely-template-list-sub-header h4 {\n    font-size: 21px;\n    color: #0E2244;\n    font-weight: 500;\n    margin: 0; }\n  .qubely-template-list-sub-header .qubely-template-filter-button-group {\n    background: #F8FAFB;\n    display: inline-flex;\n    border: 1px solid #D8D8D8;\n    border-radius: 4px; }\n    .qubely-template-list-sub-header .qubely-template-filter-button-group button {\n      display: inline-flex;\n      line-height: 28px;\n      padding: 5px 18px;\n      align-items: center;\n      background: none;\n      border: none;\n      color: #587E97;\n      position: relative;\n      z-index: 1;\n      cursor: pointer; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button:focus {\n        outline: none; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button:last-child {\n        color: #F5A623; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button.active {\n        background: #2184F9;\n        color: #fff; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button img {\n        display: inline-block;\n        width: auto;\n        height: 14px;\n        margin-right: 4px; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button:not(:last-child)::after {\n        content: '';\n        height: 13px;\n        background-color: #C4CBCF;\n        width: 1px;\n        right: 0px;\n        top: 50%;\n        position: absolute;\n        transform: translateY(-50%); }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button.active::after {\n        display: none; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button::before {\n        content: '';\n        position: absolute;\n        background: #2184F9;\n        height: calc(100% + 4px);\n        width: calc(100% + 4px);\n        left: -2px;\n        top: -2px;\n        z-index: -1;\n        border-radius: 4px;\n        box-shadow: 0 0 4px rgba(33, 32, 249, 0.3);\n        opacity: 0; }\n      .qubely-template-list-sub-header .qubely-template-filter-button-group button.active::before {\n        opacity: 1; }\n\n.qubely-modal-loader {\n  display: inline-block;\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  line-height: 80px;\n  text-align: center;\n  left: 50%;\n  margin-left: -50px;\n  top: 50%;\n  margin-top: -50px;\n  font-size: 24px;\n  color: #1e7ed8; }\n\n.qubely-modal-loader img {\n  height: 80px;\n  width: 80px; }\n\n/*block style*/\n.qubely-builder-template-found-empty {\n  text-align: center;\n  border-color: transparent !important; }\n  .qubely-builder-template-found-empty .qubely-builder-empty-title {\n    display: block;\n    width: 100%; }\n\n#layouts-blocks-list {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 10px 35px 10px; }\n  #layouts-blocks-list > div {\n    width: 33.3333%;\n    padding: 15px;\n    position: relative; }\n    @media (max-width: 1199px) {\n      #layouts-blocks-list > div {\n        width: 50%; } }\n    #layouts-blocks-list > div.qubely-builder-template-found-empty {\n      width: 100%;\n      text-align: center;\n      opacity: .5;\n      border: none !important;\n      padding-top: 70px !important; }\n  #layouts-blocks-list .qubely-pro {\n    position: absolute;\n    background: red;\n    padding: 4px 5px;\n    border-radius: 3px;\n    color: #fff;\n    font-size: 10px;\n    right: 20px;\n    top: 20px;\n    text-transform: uppercase;\n    line-height: 1; }\n  #layouts-blocks-list.qubely-frontendd-block-list {\n    display: block;\n    padding-bottom: 35px;\n    padding-top: 0px; }\n    #layouts-blocks-list.qubely-frontendd-block-list > div {\n      width: 100%;\n      display: flex;\n      flex-wrap: nowrap;\n      border-bottom: 1px solid #E2E4E7;\n      font-weight: 600;\n      padding: 12px 0 12px 15px;\n      margin-bottom: 0;\n      align-items: center; }\n      #layouts-blocks-list.qubely-frontendd-block-list > div.qubely-reusable-list-title {\n        color: #ADAFB2; }\n      #layouts-blocks-list.qubely-frontendd-block-list > div:first-child {\n        border-top: 1px solid #E2E4E7; }\n      #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-content {\n        flex-grow: 1; }\n      #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-info {\n        flex-grow: 1;\n        max-width: 165px;\n        display: flex;\n        flex-wrap: nowrap; }\n      #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-button {\n        margin-left: 30px; }\n      #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-button button {\n        display: inline-block;\n        padding: 0;\n        border: none;\n        transition: 300ms;\n        cursor: pointer;\n        background-color: transparent; }\n        #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-button button:not(:last-child) {\n          margin-right: 10px; }\n        #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-button button i {\n          font-size: 16px;\n          color: #CDCFD1; }\n        #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-button button:hover i {\n          color: #007CBA; }\n        #layouts-blocks-list.qubely-frontendd-block-list > div .qubely-reusable-list-button button:last-child:hover i {\n          color: red; }\n\n.qubely-default-template-image {\n  transition: 300ms; }\n  .qubely-default-template-image img {\n    width: 100%;\n    display: block; }\n\n.qubely-single-block-item {\n  margin-bottom: 30px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05); }\n\n.qubely-single-block-item .qubely-tmpl-title {\n  background: #fff;\n  margin: 0;\n  color: #23282D;\n  padding: 13px 15px; }\n\n.qubely-single-block-item .qubely-single-item-inner {\n  position: relative;\n  overflow: hidden; }\n  .qubely-single-block-item .qubely-single-item-inner .qubely-default-template-image {\n    transition: 300ms; }\n  .qubely-single-block-item .qubely-single-item-inner .qubely-tmpl-info {\n    position: absolute;\n    width: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    height: 100%;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    transition: 300ms;\n    opacity: 0; }\n    .qubely-single-block-item .qubely-single-item-inner .qubely-tmpl-info .qubely-tmpl-title {\n      margin: 0 0 15px;\n      color: #fff;\n      font-size: 19px;\n      font-weight: 400; }\n  .qubely-single-block-item .qubely-single-item-inner:hover .qubely-tmpl-info {\n    opacity: 1; }\n  .qubely-single-block-item .qubely-single-item-inner:hover .qubely-default-template-image {\n    filter: blur(3px); }\n\n.qubely-import-button-group span,\n.qubely-import-button-group a {\n  display: inline-block;\n  padding: 0 12px 2px;\n  margin: 2px;\n  height: 33px;\n  line-height: 32px;\n  font-size: 13px;\n  color: #353535;\n  border: 1px solid #f7f7f7;\n  background: #f7f7f7;\n  box-shadow: 0 1px 0 #ccc;\n  vertical-align: top;\n  border-radius: 3px;\n  text-decoration: none;\n  cursor: pointer; }\n\n.qubely-import-button-group span i,\n.qubely-import-button-group a i {\n  font-size: 10px;\n  margin-right: 4px; }\n\n.qubely-import-button-group span {\n  background: #0085ba;\n  border-color: #006a95 #00648c #00648c;\n  box-shadow: inset 0 -1px 0 #00648c;\n  color: #fff;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px #005d82, 1px 0 1px #005d82, 0 1px 1px #005d82, -1px 0 1px #005d82; }\n\n.qubely-import-button-group a.qubely-button-download {\n  border: 1px solid #1e70d6;\n  background: #1e70d6;\n  box-shadow: 0 1px 0 #165cb4;\n  color: #fff; }\n\n.qubely-import-button-group .qubely-button-download {\n  margin-left: 5px; }\n\n/*multiple box*/\n#layouts-blocks-list div.qubely-multiple-template-box {\n  margin-bottom: 5px; }\n  #layouts-blocks-list div.qubely-multiple-template-box .multiple-template-view {\n    border: 1px solid #E2E4E7;\n    background: #fff;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05), 0 10px 0 -5px #fff, 0 10px 1px -4px rgba(0, 0, 0, 0.08), 0 20px 0 -10px #fff, 0 20px 1px -9px rgba(0, 0, 0, 0.08);\n    cursor: pointer; }\n  #layouts-blocks-list div.qubely-multiple-template-box .qubely-tmpl-info {\n    padding: 10px 12px; }\n    #layouts-blocks-list div.qubely-multiple-template-box .qubely-tmpl-info h5 {\n      margin: 0;\n      font-size: 14px;\n      color: #23282D;\n      line-height: 19px; }\n      #layouts-blocks-list div.qubely-multiple-template-box .qubely-tmpl-info h5 span {\n        font-size: 13px;\n        color: #CDCFD1;\n        line-height: 18px; }\n\n.qubely-template-option-header {\n  padding: 20px 20px 0; }\n  .qubely-template-option-header .qubely-template-back {\n    cursor: pointer; }\n    .qubely-template-option-header .qubely-template-back .dashicons {\n      vertical-align: text-bottom; }\n\n#wpwrap .edit-post-visual-editor .import-layout-btn-container {\n  text-align: center;\n  margin-top: 20px; }\n\n#wpwrap .edit-post-visual-editor .import-layout-btn-container #importLayoutBtn {\n  color: #fff;\n  font-size: 13px; }\n\n.qubely-template-back {\n  cursor: pointer; }\n  .qubely-template-back .dashicons {\n    vertical-align: text-bottom; }\n\n/* .qubely-modal-loader span {\n\twidth: 50px;\n\theight: 50px;\n} */\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "./node_modules/deep-copy/index.js":
/*!*****************************************!*\
  !*** ./node_modules/deep-copy/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


;(function (name, root, factory) {
  if (true) {
    module.exports = factory()
  }
  /* istanbul ignore next */
  else {}
}('dcopy', this, function () {
  /**
   * Deep copy objects and arrays
   *
   * @param {Object/Array} target
   * @return {Object/Array} copy
   * @api public
   */

  return function (target) {
    if (/number|string|boolean/.test(typeof target)) {
      return target
    }
    if (target instanceof Date) {
      return new Date(target.getTime())
    }

    var copy = (target instanceof Array) ? [] : {}
    walk(target, copy)
    return copy

    function walk (target, copy) {
      for (var key in target) {
        var obj = target[key]
        if (obj instanceof Date) {
          var value = new Date(obj.getTime())
          add(copy, key, value)
        }
        else if (obj instanceof Function) {
          var value = obj
          add(copy, key, value)
        }
        else if (obj instanceof Array) {
          var value = []
          var last = add(copy, key, value)
          walk(obj, last)
        }
        else if (obj instanceof Object) {
          var value = {}
          var last = add(copy, key, value)
          walk(obj, last)
        }
        else {
          var value = obj
          add(copy, key, value)
        }
      }
    }
  }

  /**
   * Adds a value to the copy object based on its type
   *
   * @api private
   */

  function add (copy, key, value) {
    if (copy instanceof Array) {
      copy.push(value)
      return copy[copy.length - 1]
    }
    else if (copy instanceof Object) {
      copy[key] = value
      return copy[key]
    }
  }
}))


/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "./src/blocks/accordion/Edit.js":
/*!**************************************!*\
  !*** ./src/blocks/accordion/Edit.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _innerItem = __webpack_require__(/*! ./innerItem */ "./src/blocks/accordion/innerItem/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var IconButton = wp.components.IconButton;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    InnerBlocks = _wp$blockEditor.InnerBlocks;
var createBlock = wp.blocks.createBlock;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$qubelyComponents$ = wp.qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings;

var AccordionBlock = function (_Component) {
    _inherits(AccordionBlock, _Component);

    function AccordionBlock() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, AccordionBlock);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AccordionBlock.__proto__ || Object.getPrototypeOf(AccordionBlock)).call.apply(_ref, [this].concat(args))), _this), _this.getAccordionTemplate = function (attributes) {
            var result = [];
            var defaultItems = attributes.defaultItems;
            for (var k = 0; k < defaultItems; k++) {
                var content = 'Create stylish call-to-action buttons with Qubely Buttons. Play around with typography, design, border and more. Add animations and personalize it to engage visitors instantly.';
                result.push(['qubely/accordion-item', { itemNumber: k, defaultText: content }]);
            }
            return result;
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(AccordionBlock, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'insertAccordionItem',
        value: function insertAccordionItem() {
            var newBlockAttributes = void 0;
            var _props2 = this.props,
                clientId = _props2.clientId,
                insertBlock = _props2.insertBlock,
                block = _props2.block;

            if (block.innerBlocks && block.innerBlocks.length) {
                var lastBlockAttributes = block.innerBlocks[block.innerBlocks.length - 1].attributes;
                var itemNumber = lastBlockAttributes.itemNumber + 1;
                var heading = _innerItem.accordionItemSettings.heading;
                newBlockAttributes = Object.assign({}, lastBlockAttributes, { itemNumber: itemNumber, heading: heading, active: false, defaultText: '' });
            } else {
                newBlockAttributes = _innerItem.accordionItemSettings;
            }
            insertBlock(createBlock('qubely/accordion-item', newBlockAttributes), undefined, clientId);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props3 = this.props,
                name = _props3.name,
                attributes = _props3.attributes,
                isSelectedBlockInRoot = _props3.isSelectedBlockInRoot,
                setAttributes = _props3.setAttributes,
                _props3$attributes = _props3.attributes,
                uniqueId = _props3$attributes.uniqueId,
                className = _props3$attributes.className,
                animation = _props3$attributes.animation,
                enablePosition = _props3$attributes.enablePosition,
                selectPosition = _props3$attributes.selectPosition,
                positionXaxis = _props3$attributes.positionXaxis,
                positionYaxis = _props3$attributes.positionYaxis,
                globalZindex = _props3$attributes.globalZindex,
                hideTablet = _props3$attributes.hideTablet,
                hideMobile = _props3$attributes.hideMobile,
                globalCss = _props3$attributes.globalCss,
                interaction = _props3$attributes.interaction;


            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    null,
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-accordion qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(InnerBlocks, {
                        template: this.getAccordionTemplate(attributes),
                        allowedBlocks: ['qubely/accordion-item']
                    })
                ),
                isSelectedBlockInRoot && React.createElement(
                    'div',
                    { className: 'qubely-accordion-add-item' },
                    React.createElement(
                        IconButton,
                        {
                            icon: 'insert',
                            onClick: function onClick() {
                                _this2.insertAccordionItem();
                            }
                        },
                        __('Add Accordion Item')
                    )
                )
            );
        }
    }]);

    return AccordionBlock;
}(Component);

exports.default = compose([withSelect(function (select, ownProps) {
    var clientId = ownProps.clientId;

    var _select = select('core/block-editor'),
        getBlock = _select.getBlock,
        isBlockSelected = _select.isBlockSelected,
        hasSelectedInnerBlock = _select.hasSelectedInnerBlock;

    return {
        block: getBlock(clientId),
        isSelectedBlockInRoot: isBlockSelected(clientId) || hasSelectedInnerBlock(clientId, true)
    };
}), withDispatch(function (dispatch) {
    var _dispatch = dispatch('core/block-editor'),
        insertBlock = _dispatch.insertBlock,
        updateBlockAttributes = _dispatch.updateBlockAttributes;

    return {
        insertBlock: insertBlock,
        updateBlockAttributes: updateBlockAttributes
    };
})])(AccordionBlock);

/***/ }),

/***/ "./src/blocks/accordion/Save.js":
/*!**************************************!*\
  !*** ./src/blocks/accordion/Save.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                animation = _props$attributes.animation,
                uniqueId = _props$attributes.uniqueId,
                itemToggle = _props$attributes.itemToggle,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            var className = 'qubely-block-accordion ' + interactionClass + ' qubely-block-' + uniqueId;
            return React.createElement(
                'div',
                _extends({ className: className }, animationAttr(animation), { 'data-item-toggle': itemToggle }),
                React.createElement(InnerBlocks.Content, null)
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/accordion/index.js":
/*!***************************************!*\
  !*** ./src/blocks/accordion/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/accordion/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/accordion/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/accordion/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/accordion', {
    title: __('Accordion'),
    description: 'Display creative collapsible texts with Qubely Accordion.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-accordion.svg', alt: __('Accordion Block') }),
    keywords: [__('accordion'), __('collapsible'), __('collapse')],
    supports: {
        html: false,
        className: false,
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' },
        defaultItems: { type: 'number', default: 2 },
        itemToggle: { type: 'boolean', default: true }
    }, globalAttributes),

    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/accordion/innerItem/Edit.js":
/*!************************************************!*\
  !*** ./src/blocks/accordion/innerItem/Edit.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    Button = _wp$components.Button;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    InnerBlocks = _wp$blockEditor.InnerBlocks,
    RichText = _wp$blockEditor.RichText;
var _wp$qubelyComponents = wp.qubelyComponents,
    Styles = _wp$qubelyComponents.Styles,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Range = _wp$qubelyComponents.Range,
    Typography = _wp$qubelyComponents.Typography,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Color = _wp$qubelyComponents.Color,
    Toggle = _wp$qubelyComponents.Toggle,
    Padding = _wp$qubelyComponents.Padding,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var AccordionItemBlockEdit = function (_Component) {
    _inherits(AccordionItemBlockEdit, _Component);

    function AccordionItemBlockEdit() {
        _classCallCheck(this, AccordionItemBlockEdit);

        var _this = _possibleConstructorReturn(this, (AccordionItemBlockEdit.__proto__ || Object.getPrototypeOf(AccordionItemBlockEdit)).apply(this, arguments));

        _this.findParentAccordion = _this.findParentAccordion.bind(_this);
        _this.state = { device: 'md' };
        return _this;
    }

    _createClass(AccordionItemBlockEdit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'findParentAccordion',
        value: function findParentAccordion(rootBlock) {
            var _this2 = this;

            var block = this.props.block;

            var result = false;
            if (rootBlock.innerBlocks && rootBlock.innerBlocks.length) {
                rootBlock.innerBlocks.forEach(function (item) {
                    if (!result && item.clientId === block.clientId) {
                        result = rootBlock;
                    } else if (!result) {
                        result = _this2.findParentAccordion(item);
                    }
                });
            }
            return result;
        }
    }, {
        key: 'setGlobalSettings',
        value: function setGlobalSettings(type, val) {
            var updateBlockAttributes = this.props.updateBlockAttributes;

            var parentAccordion = this.findParentAccordion(this.props.rootBlock);
            if (parentAccordion.innerBlocks && parentAccordion.innerBlocks.length) {
                parentAccordion.innerBlocks.forEach(function (item) {
                    updateBlockAttributes(item.clientId, _defineProperty({}, type, val));
                });
            }
        }
    }, {
        key: 'updateRootBlock',
        value: function updateRootBlock(type, val) {
            var updateBlockAttributes = this.props.updateBlockAttributes;

            var parentAccordion = this.findParentAccordion(this.props.rootBlock);
            updateBlockAttributes(parentAccordion.clientId, _defineProperty({}, type, val));
        }
    }, {
        key: 'updateItemNumber',
        value: function updateItemNumber(index) {
            var updateBlockAttributes = this.props.updateBlockAttributes;

            var parentAccordion = this.findParentAccordion(this.props.rootBlock);
            while (index < parentAccordion.innerBlocks.length) {
                updateBlockAttributes(parentAccordion.innerBlocks[index].clientId, { itemNumber: parentAccordion.innerBlocks[index].attributes.itemNumber - 1 });
                index++;
            }
        }
    }, {
        key: '_onClickLabel',
        value: function _onClickLabel() {
            var _props2 = this.props,
                clientId = _props2.clientId,
                rootBlock = _props2.rootBlock,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                updateBlockAttributes = _props2.updateBlockAttributes;

            var parentAccordion = this.findParentAccordion(this.props.rootBlock);
            var itemToggle = rootBlock.attributes.itemToggle;

            if (itemToggle) {
                parentAccordion.innerBlocks.forEach(function (item) {
                    var val = item.clientId != clientId ? false : !attributes.active;
                    updateBlockAttributes(item.clientId, { active: val });
                });
            } else {
                setAttributes({ active: !attributes.active });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props3 = this.props,
                rootBlock = _props3.rootBlock,
                attributes = _props3.attributes,
                setAttributes = _props3.setAttributes,
                isSelected = _props3.isSelected,
                isSelectedBlockInRoot = _props3.isSelectedBlockInRoot;
            var uniqueId = attributes.uniqueId,
                className = attributes.className,
                itemNumber = attributes.itemNumber,
                defaultText = attributes.defaultText,
                fillType = attributes.fillType,
                heading = attributes.heading,
                panelColor = attributes.panelColor,
                panelColorActive = attributes.panelColorActive,
                iconColor = attributes.iconColor,
                iconColorActive = attributes.iconColorActive,
                panelColorActive2 = attributes.panelColorActive2,
                panelBg = attributes.panelBg,
                panelBgActive = attributes.panelBgActive,
                active = attributes.active,
                panelIcon = attributes.panelIcon,
                typography = attributes.typography,
                bodyBoxShadow = attributes.bodyBoxShadow,
                spacing = attributes.spacing,
                spacingBorder = attributes.spacingBorder,
                spacingBorderColor = attributes.spacingBorderColor,
                panelPadding = attributes.panelPadding,
                iconSize = attributes.iconSize,
                customIconSize = attributes.customIconSize,
                iconPosition = attributes.iconPosition,
                borderRadius = attributes.borderRadius,
                bodyBg = attributes.bodyBg,
                bodyPadding = attributes.bodyPadding,
                bodyPaddingAlt = attributes.bodyPaddingAlt,
                iconSpacing = attributes.iconSpacing,
                openFirstItem = attributes.openFirstItem,
                panelBorder = attributes.panelBorder,
                panelBorderColorActive = attributes.panelBorderColorActive,
                panelBorderRadius = attributes.panelBorderRadius,
                panelBorderRadiusActive = attributes.panelBorderRadiusActive,
                panelBoxShadow = attributes.panelBoxShadow,
                panelBoxShadowActive = attributes.panelBoxShadowActive,
                bodyBorder = attributes.bodyBorder;
            var itemToggle = rootBlock.attributes.itemToggle;
            var device = this.state.device;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'accordion-item', uniqueId);
            }
            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    null,
                    React.createElement(
                        PanelBody,
                        { title: __(''), initialOpen: true },
                        React.createElement(Styles, { value: fillType,
                            onChange: function onChange(val) {
                                return _this3.setGlobalSettings('fillType', val);
                            },
                            options: [{ value: 'fill', svg: _icons2.default.accordion_fill, label: __('Fill') }, { value: 'nofill', svg: _icons2.default.accordion_classic, label: __('Classic') }]
                        }),
                        React.createElement(Toggle, { label: __('Toggle'), value: itemToggle, onChange: function onChange(val) {
                                return _this3.updateRootBlock('itemToggle', val);
                            } }),
                        React.createElement(Toggle, { label: __('Open First Item'), value: openFirstItem, onChange: function onChange(val) {
                                return _this3.setGlobalSettings('openFirstItem', val);
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Panel'), initialOpen: false },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Color'), value: panelColor, onChange: function onChange(val) {
                                        return _this3.setGlobalSettings('panelColor', val);
                                    } }),
                                fillType == 'fill' && React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(ColorAdvanced, { label: __('Background'), value: panelBg, onChange: function onChange(val) {
                                            return _this3.setGlobalSettings('panelBg', val);
                                        } }),
                                    React.createElement(Border, { label: __('Border'), value: panelBorder, onChange: function onChange(val) {
                                            return _this3.setGlobalSettings('panelBorder', val);
                                        }, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                            return _this3.setState({ device: value });
                                        } }),
                                    React.createElement(BoxShadow, { label: __('Box-Shadow'), value: panelBoxShadow, onChange: function onChange(value) {
                                            return _this3.setGlobalSettings('panelBoxShadow', value);
                                        }, disableInset: true }),
                                    React.createElement(BorderRadius, {
                                        label: __('Radius'),
                                        value: panelBorderRadius, onChange: function onChange(value) {
                                            return _this3.setGlobalSettings('panelBorderRadius', value);
                                        },
                                        unit: ['px', 'em', '%'], max: 100,
                                        min: 0,
                                        responsive: true,
                                        device: device,
                                        onDeviceChange: function onDeviceChange(value) {
                                            return _this3.setState({ device: value });
                                        }
                                    })
                                )
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Active') },
                                React.createElement(Color, {
                                    label: __('Color'),
                                    value: fillType == 'fill' ? panelColorActive : panelColorActive2,
                                    onChange: function onChange(val) {
                                        return fillType == 'fill' ? _this3.setGlobalSettings('panelColorActive', val) : _this3.setGlobalSettings('panelColorActive2', val);
                                    }
                                }),
                                fillType == 'fill' && React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(ColorAdvanced, { label: __('Background'), value: panelBgActive, onChange: function onChange(val) {
                                            return _this3.setGlobalSettings('panelBgActive', val);
                                        } }),
                                    React.createElement(Color, { label: __('Border Color'), value: panelBorderColorActive, onChange: function onChange(val) {
                                            return _this3.setGlobalSettings('panelBorderColorActive', val);
                                        } }),
                                    React.createElement(BoxShadow, { label: __('Box-Shadow'), value: panelBoxShadowActive, onChange: function onChange(value) {
                                            return _this3.setGlobalSettings('panelBoxShadowActive', value);
                                        }, disableInset: true }),
                                    React.createElement(BorderRadius, {
                                        label: __('Radius'),
                                        value: panelBorderRadiusActive, onChange: function onChange(value) {
                                            return _this3.setGlobalSettings('panelBorderRadiusActive', value);
                                        },
                                        unit: ['px', 'em', '%'], max: 100,
                                        min: 0,
                                        responsive: true,
                                        device: device,
                                        onDeviceChange: function onDeviceChange(value) {
                                            return _this3.setState({ device: value });
                                        }
                                    })
                                )
                            )
                        ),
                        fillType == 'fill' && React.createElement(Padding, {
                            label: __('Padding'),
                            value: panelPadding, onChange: function onChange(value) {
                                return _this3.setGlobalSettings('panelPadding', value);
                            },
                            unit: ['px', 'em', '%'], max: 100,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            }
                        }),
                        React.createElement(Typography, { label: __('Typography'), value: typography, onChange: function onChange(val) {
                                return _this3.setGlobalSettings('typography', val);
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Panel Icon'), initialOpen: false },
                        React.createElement(SelectControl, {
                            label: 'Select Icon',
                            value: panelIcon,
                            options: [{ label: 'None', value: '' }, { label: 'Plus', value: 'fa fa-plus' }, { label: 'Plus Circle', value: 'fa fa-plus-circle' }, { label: 'Plus Square', value: 'fa fa-plus-square' }, { label: 'Arrow Circle Right', value: 'fa fa-arrow-circle-right' }, { label: 'Angle Right', value: 'fa fa-angle-right' }, { label: 'Angle Double Right', value: 'fa fa-angle-double-right' }, { label: 'Chevron Right', value: 'fa fa-chevron-right' }, { label: 'Chevron Rircle Right', value: 'fa fa-chevron-circle-right' }, { label: 'Caret Right', value: 'fa fa-caret-right' }],
                            onChange: function onChange(val) {
                                return _this3.setGlobalSettings('panelIcon', val);
                            }
                        }),
                        panelIcon && React.createElement(
                            Fragment,
                            null,
                            React.createElement(RadioAdvanced, {
                                label: __('Size'),
                                options: [{ label: 'S', value: '14px', title: __('Small') }, { label: 'M', value: '22px', title: __('Medium') }, { label: 'L', value: '30px', title: __('Large') }, { icon: 'fas fa-cog', value: 'custom', title: __('Custom') }],
                                value: iconSize,
                                onChange: function onChange(val) {
                                    return _this3.setGlobalSettings('iconSize', val);
                                }
                            }),
                            iconSize == 'custom' && React.createElement(Range, {
                                value: customIconSize,
                                onChange: function onChange(val) {
                                    return _this3.setGlobalSettings('customIconSize', val);
                                },
                                min: 0,
                                max: 100,
                                unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this3.setState({ device: value });
                                } }),
                            React.createElement(RadioAdvanced, {
                                label: __('Position'),
                                options: [{ label: 'Left', value: 'left' }, { label: 'Right', value: 'right' }],
                                value: iconPosition,
                                onChange: function onChange(val) {
                                    return _this3.setGlobalSettings('iconPosition', val);
                                }
                            }),
                            React.createElement(Range, {
                                label: __('Spacing'),
                                value: iconSpacing,
                                onChange: function onChange(val) {
                                    return _this3.setGlobalSettings('iconSpacing', val);
                                },
                                min: 0,
                                max: 30,
                                unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this3.setState({ device: value });
                                } }),
                            React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(Color, { label: __('Icon Color'), value: iconColor, onChange: function onChange(val) {
                                            return _this3.setGlobalSettings('iconColor', val);
                                        } })
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Active') },
                                    React.createElement(Color, { label: __('Icon Color'), value: iconColorActive, onChange: function onChange(val) {
                                            return _this3.setGlobalSettings('iconColorActive', val);
                                        } })
                                )
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Body'), initialOpen: false },
                        React.createElement(Padding, {
                            label: __('Padding'),
                            value: fillType == 'fill' ? bodyPadding : bodyPaddingAlt, onChange: function onChange(value) {
                                return _this3.setGlobalSettings(fillType == 'fill' ? 'bodyPadding' : 'bodyPaddingAlt', value);
                            },
                            unit: ['px', 'em', '%'], max: 100,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            }
                        }),
                        fillType == 'fill' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(ColorAdvanced, { label: __('Background'), value: bodyBg, onChange: function onChange(val) {
                                    return _this3.setGlobalSettings('bodyBg', val);
                                } }),
                            React.createElement(Border, { label: __('Border'), value: bodyBorder, onChange: function onChange(val) {
                                    return _this3.setGlobalSettings('bodyBorder', val);
                                }, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this3.setState({ device: value });
                                } }),
                            React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bodyBoxShadow, onChange: function onChange(value) {
                                    return _this3.setGlobalSettings('bodyBoxShadow', value);
                                }, disableInset: true }),
                            React.createElement(BorderRadius, {
                                label: __('Radius'),
                                value: borderRadius, onChange: function onChange(value) {
                                    return _this3.setGlobalSettings('borderRadius', value);
                                },
                                unit: ['px', 'em', '%'], max: 100,
                                min: 0,
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this3.setState({ device: value });
                                }
                            })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Separator'), initialOpen: false },
                        React.createElement(Range, { label: __('Spacing'), value: spacing, onChange: function onChange(value) {
                                return _this3.setGlobalSettings('spacing', value);
                            }, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            } }),
                        React.createElement(Range, { label: __('Border Width'), value: spacingBorder, onChange: function onChange(value) {
                                return _this3.setGlobalSettings('spacingBorder', value);
                            }, min: 0, max: 10 }),
                        React.createElement(Color, { label: __('Border Color'), value: spacingBorderColor, onChange: function onChange(val) {
                                return _this3.setGlobalSettings('spacingBorderColor', val);
                            } })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-accordion-item qubely-type-' + fillType + ' ' + (active ? 'qubely-accordion-active' : '') },
                        React.createElement(
                            'div',
                            { className: 'qubely-accordion-panel ' + (panelIcon && 'qubely-icon-position-' + iconPosition) },
                            React.createElement(
                                'span',
                                { className: 'qubely-accordion-panel-handler', onClick: function onClick() {
                                        return _this3._onClickLabel();
                                    }, role: 'button' },
                                panelIcon && iconPosition == 'left' && React.createElement('span', { className: 'qubely-accordion-icon ' + panelIcon }),
                                React.createElement(RichText, {
                                    tagName: 'span',
                                    placeholder: __('Add Accordion Item..'),
                                    className: 'qubely-accordion-panel-handler-label',
                                    value: heading,
                                    onChange: function onChange(value) {
                                        return setAttributes({ heading: value });
                                    },
                                    allowedFormats: ['bold', 'italic', 'strikethrough'],
                                    isSelected: isSelected,
                                    keepPlaceholderOnFocus: true,
                                    onClick: function onClick() {
                                        return _this3.updateLabel();
                                    }
                                }),
                                panelIcon && iconPosition == 'right' && React.createElement('span', { className: 'qubely-accordion-icon ' + panelIcon })
                            ),
                            isSelectedBlockInRoot && React.createElement(
                                Button,
                                {
                                    onClick: function onClick() {
                                        var parentAccordion = _this3.findParentAccordion(_this3.props.rootBlock);
                                        if (parentAccordion && parentAccordion.clientId) {

                                            _this3.updateItemNumber(itemNumber);
                                            _this3.props.removeBlock(_this3.props.clientId);

                                            if (parentAccordion.innerBlocks.length <= 1) {
                                                _this3.props.removeBlock(parentAccordion.clientId);
                                            }
                                        }
                                    },
                                    className: 'qubely-accordion-item-remove-button'
                                },
                                React.createElement('i', { className: 'fa fa-times' })
                            )
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-accordion-body' },
                            React.createElement(InnerBlocks, {
                                template: defaultText ? [['core/paragraph', { content: defaultText }]] : '',
                                templateLock: false
                            })
                        )
                    )
                )
            );
        }
    }]);

    return AccordionItemBlockEdit;
}(Component);

exports.default = compose([withSelect(function (select, ownProps) {
    var clientId = ownProps.clientId;

    var _select = select('core/block-editor'),
        getBlockHierarchyRootClientId = _select.getBlockHierarchyRootClientId,
        getBlock = _select.getBlock,
        isBlockSelected = _select.isBlockSelected,
        hasSelectedInnerBlock = _select.hasSelectedInnerBlock;

    return {
        block: getBlock(clientId),
        isSelectedBlockInRoot: isBlockSelected(clientId) || hasSelectedInnerBlock(clientId, true),
        rootBlock: clientId ? getBlock(getBlockHierarchyRootClientId(clientId)) : null
    };
}), withDispatch(function (dispatch) {
    var _dispatch = dispatch('core/block-editor'),
        removeBlock = _dispatch.removeBlock,
        updateBlockAttributes = _dispatch.updateBlockAttributes;

    return {
        removeBlock: removeBlock,
        updateBlockAttributes: updateBlockAttributes
    };
})])(AccordionItemBlockEdit);

/***/ }),

/***/ "./src/blocks/accordion/innerItem/Save.js":
/*!************************************************!*\
  !*** ./src/blocks/accordion/innerItem/Save.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$blockEditor = wp.blockEditor,
    InnerBlocks = _wp$blockEditor.InnerBlocks,
    RichText = _wp$blockEditor.RichText;
var animationAttr = wp.qubelyComponents.HelperFunction.animationAttr;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                itemNumber = _props$attributes.itemNumber,
                heading = _props$attributes.heading,
                panelIcon = _props$attributes.panelIcon,
                iconPosition = _props$attributes.iconPosition,
                fillType = _props$attributes.fillType,
                animation = _props$attributes.animation,
                openFirstItem = _props$attributes.openFirstItem;

            var className = 'qubely-accordion-item qubely-type-' + fillType + ' ' + (openFirstItem && itemNumber == 0 && 'qubely-accordion-active');
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: className },
                    React.createElement(
                        'div',
                        { className: 'qubely-accordion-panel ' + (panelIcon && 'qubely-icon-position-' + iconPosition) },
                        React.createElement(
                            'span',
                            { className: 'qubely-accordion-panel-handler', role: 'button' },
                            panelIcon && iconPosition == 'left' && React.createElement('span', { className: 'qubely-accordion-icon ' + panelIcon }),
                            React.createElement(RichText.Content, { tagName: 'span', className: 'qubely-accordion-panel-handler-label', value: heading }),
                            panelIcon && iconPosition == 'right' && React.createElement('span', { className: 'qubely-accordion-icon ' + panelIcon })
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-accordion-body', style: openFirstItem && itemNumber == 0 && 'display: block;' },
                        React.createElement(InnerBlocks.Content, null)
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/accordion/innerItem/index.js":
/*!*************************************************!*\
  !*** ./src/blocks/accordion/innerItem/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.accordionItemSettings = undefined;

__webpack_require__(/*! ../style.scss */ "./src/blocks/accordion/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/accordion/innerItem/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/accordion/innerItem/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var accordionItemSettings = exports.accordionItemSettings = {
    title: __('Accordion'),
    description: 'Display creative collapsible texts with Qubely Accordion.',
    parent: ['qubely/accordion'],
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-accordion.svg', alt: __('Accordion Block') }),
    category: 'qubely',
    supports: {
        html: false,
        inserter: false,
        reusable: false
    },
    attributes: {
        uniqueId: { type: 'string', default: '' },
        itemNumber: { type: 'number' },
        heading: { type: 'string', default: 'Accordion Item' },
        active: { type: 'boolean', default: false },
        defaultText: { type: 'string', default: '' },
        fillType: { type: 'string', default: 'fill' },
        openFirstItem: { type: 'boolean', default: true },

        // Panel
        panelColor: {
            type: 'string',
            default: '#000',
            style: [{
                selector: '{{QUBELY}} .qubely-accordion-panel { color: {{panelColor}}; }'
            }]
        },
        panelColorActive: {
            type: 'string',
            default: '#FFF',
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel { color:{{panelColorActive}}; }'
            }]
        },
        panelColorActive2: {
            type: 'string',
            default: '#222',
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'nofill' }],
                selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel { color:{{panelColorActive}}; }'
            }]
        },
        panelBg: {
            type: 'object',
            default: {
                type: 'color',
                openColor: 1,
                color: '#EEEEEE',
                gradient: {
                    color1: '#EEEEEE',
                    color2: '#e5e5e5',
                    direction: 0,
                    start: 0,
                    stop: 100
                }
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-panel'
            }]
        },
        panelBgActive: {
            type: 'object',
            default: {
                type: 'color',
                openColor: 1,
                color: '#2476CA',
                gradient: {
                    color1: '#2476CA',
                    color2: '#1A5FA4',
                    direction: 0,
                    start: 0,
                    stop: 100
                }
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel'
            }]
        },
        panelBorder: {
            type: 'object',
            default: {
                borderType: 'global'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-panel'
            }]
        },
        panelBorderColorActive: {
            type: 'object',
            default: {
                borderType: 'global'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel {border-color: {{panelBorderColorActive}};}'
            }]
        },
        panelBoxShadow: {
            type: 'object',
            default: {},
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-panel' }]
        },
        panelBoxShadowActive: {
            type: 'object',
            default: {},
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel' }]
        },

        typography: {
            type: 'object',
            default: {},
            style: [{ selector: '{{QUBELY}} .qubely-accordion-panel' }]
        },
        panelPadding: {
            type: 'object',
            default: {
                openPadding: 1,
                paddingType: 'global',
                global: {
                    md: 15
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-panel'
            }]
        },
        panelBorderRadius: {
            type: 'object',
            default: {
                radiusType: 'global'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-panel'
            }]
        },
        panelBorderRadiusActive: {
            type: 'object',
            default: {
                radiusType: 'global'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel'
            }]
        },

        // Body
        bodyBg: {
            type: 'object',
            default: {
                type: 'color',
                openColor: 1,
                color: '#fff',
                gradient: {
                    color1: '#f2f2f2',
                    color2: '#e5e5e5',
                    direction: 0,
                    start: 0,
                    stop: 100
                }
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-body'
            }]
        },
        bodyPadding: {
            type: 'object',
            default: {
                openPadding: 1,
                paddingType: 'global',
                global: {
                    md: 15
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-body'
            }]
        },
        bodyPaddingAlt: {
            type: 'object',
            default: {
                openPadding: 1,
                paddingType: 'custom',
                custom: {
                    md: '15 0 0 0'
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'nofill' }],
                selector: '{{QUBELY}} .qubely-accordion-body'
            }]
        },
        bodyBoxShadow: {
            type: 'object',
            default: {},
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-body'
            }]
        },

        bodyBorder: {
            type: 'object',
            default: {
                borderType: 'global'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-body'
            }]
        },
        borderRadius: {
            type: 'object',
            default: {
                radiusType: 'global'
            },
            style: [{
                condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-accordion-body'
            }]
        },

        // Panel Icon
        panelIcon: { type: 'string', default: 'fa fa-plus' },
        iconSize: { type: 'string', default: '14px', style: [{ condition: [{ key: 'iconSize', relation: '!=', value: 'custom' }], selector: '{{QUBELY}} .qubely-accordion-panel .qubely-accordion-icon { font-size:{{iconSize}}; }' }] },
        customIconSize: { type: 'string', default: { md: 16, unit: 'px' }, style: [{ condition: [{ key: 'iconSize', relation: '==', value: 'custom' }], selector: '{{QUBELY}} .qubely-accordion-panel .qubely-accordion-icon { font-size:{{customIconSize}}; }' }] },
        iconColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-accordion-panel .qubely-accordion-icon { color:{{iconColor}}; }' }] },
        iconColorActive: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-accordion-active .qubely-accordion-panel .qubely-accordion-icon { color:{{iconColorActive}}; }' }] },
        iconPosition: { type: 'string', default: 'right' },
        iconSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-accordion-panel.qubely-icon-position-left .qubely-accordion-icon { margin-right:{{iconSpacing}}; } {{QUBELY}} .qubely-accordion-panel.qubely-icon-position-right .qubely-accordion-icon { margin-left:{{iconSpacing}}; }' }] },

        //Spacing
        spacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} { margin-bottom: calc( {{spacing}} / 2); padding-bottom: calc( {{spacing}} / 2); }' }] },
        spacingBorder: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} { border-bottom: {{spacingBorder}}px solid; }' }] },
        spacingBorderColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} { border-bottom-color: {{spacingBorderColor}}; }' }] }

    },

    edit: _Edit2.default,
    save: _Save2.default
};

registerBlockType('qubely/accordion-item', accordionItemSettings);

/***/ }),

/***/ "./src/blocks/accordion/style.scss":
/*!*****************************************!*\
  !*** ./src/blocks/accordion/style.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/accordion/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/advancedlist/Edit.js":
/*!*****************************************!*\
  !*** ./src/blocks/advancedlist/Edit.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    Tooltip = _wp$components.Tooltip;
var _wp$qubelyComponents = wp.qubelyComponents,
    Typography = _wp$qubelyComponents.Typography,
    Alignment = _wp$qubelyComponents.Alignment,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings,
    Styles = _wp$qubelyComponents.Styles,
    Range = _wp$qubelyComponents.Range,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Border = _wp$qubelyComponents.Border,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Color = _wp$qubelyComponents.Color,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Toggle = _wp$qubelyComponents.Toggle,
    Separator = _wp$qubelyComponents.Separator,
    IconSelector = _wp$qubelyComponents.IconSelector,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Padding = _wp$qubelyComponents.Padding,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.handleListItemChanges = function (newValues) {
            var _this$props = _this.props,
                listItems = _this$props.attributes.listItems,
                setAttributes = _this$props.setAttributes;

            var newItem = newValues.length - listItems.length == 9;
            var emptyItemIndex = newValues.indexOf("<li></li>");
            if (emptyItemIndex == -1) {
                setAttributes({ listItems: newValues });
            } else {
                !newItem && _this.removeEmptyItem(newValues, emptyItemIndex);
            }
        };

        _this.removeEmptyItem = function (currentList, emptyItemIndex) {
            var setAttributes = _this.props.setAttributes;

            var newList = [].concat(_toConsumableArray(currentList));
            newList.splice(emptyItemIndex, 9);
            newList = newList.join('');
            setAttributes({ listItems: newList });
        };

        _this.updateListItems = function (index, operation) {
            var _this$props2 = _this.props,
                listItems = _this$props2.attributes.listItems,
                setAttributes = _this$props2.setAttributes;

            var newList = JSON.parse(JSON.stringify(listItems));
            operation == 'add' ? newList.splice(index + 1, 0, '') : newList.splice(index, 1);
            setAttributes({ listItems: newList });
        };

        _this.modifySpecificItem = function (value, index) {
            var _this$props3 = _this.props,
                listItems = _this$props3.attributes.listItems,
                setAttributes = _this$props3.setAttributes;

            var modifiedListItems = listItems.map(function (listItem, currentIndex) {
                var temp = listItem;
                if (index === currentIndex) {
                    temp = value;
                }
                return temp;
            });
            setAttributes({ listItems: modifiedListItems });
        };

        _this.renderDeleteOption = function (index, alignment) {
            var focusedItem = _this.state.focusedItem;

            return React.createElement(
                Tooltip,
                { text: __('Delete this item') },
                React.createElement(
                    'span',
                    { className: 'qubely-action-remove alignment-' + (alignment == 'right' ? 'left' : 'right'), role: 'button',
                        onClick: function onClick() {
                            _this.updateListItems(index, 'delete');
                            index == focusedItem ? _this.setState({ focusedItem: index > 0 ? index - 1 : index }) : _this.setState({ focusedItem: focusedItem > 0 ? focusedItem - 1 : focusedItem });
                        } },
                    React.createElement('i', { className: 'fas fa-times' })
                )
            );
        };

        _this.renderListItems = function () {
            var _this$props$attribute = _this.props.attributes,
                listItems = _this$props$attribute.listItems,
                alignment = _this$props$attribute.alignment,
                listType = _this$props$attribute.listType,
                bulletStyle = _this$props$attribute.bulletStyle;
            var _this$state = _this.state,
                focusedItem = _this$state.focusedItem,
                removeItemViaBackSpace = _this$state.removeItemViaBackSpace;

            var ListTag = listType == 'ordered' ? 'ol' : 'ul';
            return listItems.length > 0 ? React.createElement(
                ListTag,
                { className: 'qubely-list qubely-list-type-' + listType + ' qubely-list-bullet-' + bulletStyle.name },
                listItems.map(function (item, index) {
                    return React.createElement(
                        'li',
                        { className: 'qubely-list-item' },
                        item.length > 0 && alignment == 'right' && _this.renderDeleteOption(index, alignment),
                        React.createElement(
                            'div',
                            {
                                className: 'qubely-list-item-text-' + index,
                                id: 'qubely-list-item-text-' + index,
                                contenteditable: 'true',
                                placeholder: 'Enter new item',
                                onClick: function onClick() {
                                    return _this.setState({ focusedItem: index });
                                },
                                onBlur: function onBlur(event) {
                                    return _this.modifySpecificItem(event.target.innerText, index);
                                },
                                onKeyPress: function onKeyPress(event) {
                                    if (event.key == 'Enter') {
                                        event.preventDefault();
                                        _this.updateListItems(index, 'add');
                                        _this.setState({ focusedItem: index + 1 == listItems.length ? listItems.length : focusedItem + 1 });
                                    }
                                },
                                onKeyUp: function onKeyUp(event) {
                                    if (event.key == 'Backspace') {
                                        event.target.innerText.length == 0 && _this.setState({ removeItemViaBackSpace: index });
                                        if (removeItemViaBackSpace == index) {
                                            _this.updateListItems(index, 'delete');
                                            _this.setState({ focusedItem: index > 0 ? index - 1 : index });
                                        }
                                    }
                                }
                            },
                            item
                        ),
                        item.length > 0 && alignment != 'right' && _this.renderDeleteOption(index, alignment)
                    );
                })
            ) : React.createElement(
                'button',
                { onClick: function onClick() {
                        _this.setState({ focusedItem: listItems.length });
                        _this.updateListItems(listItems.length, 'add');
                    }, className: 'button is-default qubely-action-button', role: 'button' },
                React.createElement('i', { className: 'fas fa-plus' }),
                ' ',
                __('Add List Item')
            );
        };

        _this.placeCaretAtEnd = function (el) {
            el.focus();
            if (typeof window.getSelection != "undefined" && typeof document.createRange != "undefined") {
                var range = document.createRange();
                range.selectNodeContents(el);
                range.collapse(false);
                var sel = window.getSelection();
                sel.removeAllRanges();
                sel.addRange(range);
            } else if (typeof document.body.createTextRange != "undefined") {
                var textRange = document.body.createTextRange();
                textRange.moveToElementText(el);
                textRange.collapse(false);
                textRange.select();
            }
        };

        _this.state = {
            device: 'md',
            spacer: true,
            removeItemViaBackSpace: 999,
            focusedItem: _this.props.attributes.listItems.length - 1
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
            this.placeCaretAtEnd(document.querySelector('.qubely-block-' + uniqueId + ' .qubely-list-item-text-' + this.state.focusedItem));
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (this.props.attributes.listItems.length > prevProps.attributes.listItems.length) {
                var focusedListItem = document.querySelector('.qubely-block-' + prevProps.attributes.uniqueId + ' .qubely-list-item-text-' + this.state.focusedItem);
                focusedListItem.focus();
            } else if (this.props.attributes.listItems.length < prevProps.attributes.listItems.length) {
                var focusedItem = this.state.focusedItem;

                var _focusedListItem = document.querySelector('.qubely-block-' + prevProps.attributes.uniqueId + ' .qubely-list-item-text-' + focusedItem);
                _focusedListItem && this.placeCaretAtEnd(_focusedListItem);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                isSelected = _props2.isSelected,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                alignment = _props2$attributes.alignment,
                layout = _props2$attributes.layout,
                listType = _props2$attributes.listType,
                typography = _props2$attributes.typography,
                spacing = _props2$attributes.spacing,
                color = _props2$attributes.color,
                colorHover = _props2$attributes.colorHover,
                backgroundSize = _props2$attributes.backgroundSize,
                background = _props2$attributes.background,
                backgroundHover = _props2$attributes.backgroundHover,
                borderRadius = _props2$attributes.borderRadius,
                border = _props2$attributes.border,
                borderColorHover = _props2$attributes.borderColorHover,
                shadow = _props2$attributes.shadow,
                shadowHover = _props2$attributes.shadowHover,
                bulletStyle = _props2$attributes.bulletStyle,
                bulletSize = _props2$attributes.bulletSize,
                bulletSizeCustom = _props2$attributes.bulletSizeCustom,
                bulletColor = _props2$attributes.bulletColor,
                bulletColorHover = _props2$attributes.bulletColorHover,
                bulletSpacing = _props2$attributes.bulletSpacing,
                numberCorner = _props2$attributes.numberCorner,
                numberFontSize = _props2$attributes.numberFontSize,
                numberBgSize = _props2$attributes.numberBgSize,
                useNumberBg = _props2$attributes.useNumberBg,
                numberBg = _props2$attributes.numberBg,
                numberBgHover = _props2$attributes.numberBgHover,
                animation = _props2$attributes.animation,
                globalZindex = _props2$attributes.globalZindex,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction;
            var device = this.state.device;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'advancedlist', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __('Options'), initialOpen: true },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 'fill', svg: _icons2.default.list_fill, label: __('Fill') }, { value: 'classic', svg: _icons2.default.list_classic, label: __('Classic') }]
                        }),
                        React.createElement(Alignment, { label: __('Alignment'), alignmentType: 'content', value: alignment, onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, disableJustify: true, disableToggle: true }),
                        React.createElement(Separator, null),
                        React.createElement(Typography, { label: __('Typography'), value: typography, onChange: function onChange(val) {
                                return setAttributes({ typography: val });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: listType == 'unordered' ? __('Bullet') : __('Number'), initialOpen: false },
                        listType == 'unordered' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(IconSelector, {
                                label: 'Icon',
                                value: bulletStyle.name,
                                enableSearch: true,
                                icons: [{ name: 'check', value: 'fas fa-check' }, { name: 'check-square', value: 'fas fa-check-square' }, { name: 'check-square-outline', value: 'far fa-check-square' }, { name: 'check-double', value: 'fas fa-check-double' }, { name: 'check-circle', value: 'fas fa-check-circle' }, { name: 'check-circle-outline', value: 'far fa-check-circle' }, { name: 'square', value: 'fas fa-square' }, { name: 'square-outline', value: 'far fa-square' }, { name: 'circle', value: 'fas fa-circle' }, { name: 'circle-outline', value: 'far fa-circle' }, { name: 'arrow-right', value: 'fas fa-arrow-right' }, { name: 'arrow-left', value: 'fas fa-arrow-left' }, { name: 'arrow-circle-right', value: 'fas fa-arrow-circle-right' }, { name: 'arrow-circle-left', value: 'fas fa-arrow-circle-left' }, { name: 'arrow-alt-circle-right', value: 'far fa-arrow-alt-circle-right' }, { name: 'arrow-alt-circle-left', value: 'far fa-arrow-alt-circle-left' }, { name: 'long-arrow-alt-right', value: 'fas fa-long-arrow-alt-right' }, { name: 'long-arrow-alt-left', value: 'fas fa-long-arrow-alt-left' }, { name: 'chevron-right', value: 'fas fa-chevron-right' }, { name: 'chevron-left', value: 'fas fa-chevron-left' }, { name: 'angle-right', value: 'fas fa-angle-right' }, { name: 'angle-left', value: 'fas fa-angle-left' }, { name: 'star', value: 'fas fa-star' }, { name: 'star-outline', value: 'far fa-star' }],
                                onChange: function onChange(val) {
                                    return setAttributes({ bulletStyle: val });
                                }
                            }),
                            React.createElement(RadioAdvanced, { label: __('Size'), value: bulletSize, onChange: function onChange(val) {
                                    return setAttributes({ bulletSize: val });
                                },
                                options: [{ label: 'S', value: '12px', title: __('Small') }, { label: 'M', value: '16px', title: __('Medium') }, { label: 'L', value: '20px', title: __('Large') }, { label: 'XL', value: '28px', title: __('Extra Large') }, { icon: 'fas fa-cog', value: 'custom', title: __('Custom') }]
                            }),
                            bulletSize == 'custom' && React.createElement(Range, { label: __('Custom Size'), value: bulletSizeCustom, onChange: function onChange(value) {
                                    return setAttributes({ bulletSizeCustom: value });
                                }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        ),
                        listType == 'ordered' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, { label: __('Font Size'), value: numberFontSize, onChange: function onChange(value) {
                                    return setAttributes({ numberFontSize: value });
                                }, min: 10, max: 100 }),
                            React.createElement(Toggle, { label: __('Use Background'), value: useNumberBg, onChange: function onChange(val) {
                                    return setAttributes({ useNumberBg: val });
                                } }),
                            useNumberBg == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Range, { label: __('Background Size'), value: numberBgSize, onChange: function onChange(value) {
                                        return setAttributes({ numberBgSize: value });
                                    }, min: 1, max: 15 }),
                                React.createElement(Range, { label: __('Corner'), value: numberCorner, onChange: function onChange(value) {
                                        return setAttributes({ numberCorner: value });
                                    }, min: 0, max: 100 })
                            )
                        ),
                        React.createElement(Range, { label: __('Spacing'), value: bulletSpacing, onChange: function onChange(val) {
                                return setAttributes({ bulletSpacing: val });
                            }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Color'), disableAlpha: true, value: bulletColor, onChange: function onChange(val) {
                                        return setAttributes({ bulletColor: val });
                                    } }),
                                listType == 'ordered' && useNumberBg == 1 && React.createElement(Color, { label: __('Background Color'), value: numberBg, onChange: function onChange(val) {
                                        return setAttributes({ numberBg: val });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Color'), disableAlpha: true, value: bulletColorHover, onChange: function onChange(val) {
                                        return setAttributes({ bulletColorHover: val });
                                    } }),
                                listType == 'ordered' && useNumberBg == 1 && React.createElement(Color, { label: __('Background Color'), value: numberBgHover, onChange: function onChange(val) {
                                        return setAttributes({ numberBgHover: val });
                                    } })
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Design'), initialOpen: false },
                        React.createElement(Range, { label: __('Spacing'), value: spacing, onChange: function onChange(val) {
                                return setAttributes({ spacing: val });
                            }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Padding, { label: __('Padding'), value: backgroundSize, onChange: function onChange(val) {
                                return setAttributes({ backgroundSize: val });
                            }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        layout == 'fill' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Separator, null),
                            React.createElement(BorderRadius, { label: __('Radius'), value: borderRadius, onChange: function onChange(value) {
                                    return setAttributes({ borderRadius: value });
                                }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        ),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Color'), value: color, onChange: function onChange(val) {
                                        return setAttributes({ color: val });
                                    } }),
                                layout == 'fill' && React.createElement(Color, { label: __('Background Color'), value: background, onChange: function onChange(val) {
                                        return setAttributes({ background: val });
                                    } }),
                                React.createElement(Border, { label: __('Border'), value: border, unit: ['px', 'em'], onChange: function onChange(val) {
                                        return setAttributes({ border: val });
                                    }, min: 0, max: 10, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                layout == 'fill' && React.createElement(BoxShadow, { label: __('Box-Shadow'), value: shadow, onChange: function onChange(value) {
                                        return setAttributes({ shadow: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Color'), value: colorHover, onChange: function onChange(val) {
                                        return setAttributes({ colorHover: val });
                                    } }),
                                layout == 'fill' && React.createElement(Color, { label: __('Background Color'), value: backgroundHover, onChange: function onChange(val) {
                                        return setAttributes({ backgroundHover: val });
                                    } }),
                                border.openBorder != undefined && border.openBorder == 1 && React.createElement(Color, { label: __('Border Color'), value: borderColorHover, onChange: function onChange(value) {
                                        return setAttributes({ borderColorHover: value });
                                    } }),
                                layout == 'fill' && React.createElement(BoxShadow, { label: __('Box-Shadow'), value: shadowHover, onChange: function onChange(value) {
                                        return setAttributes({ shadowHover: value });
                                    } })
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state }))
                    ),
                    React.createElement(Toolbar, { controls: [{
                            icon: 'editor-ul',
                            title: 'Convert to unordered list',
                            onClick: function onClick() {
                                return setAttributes({ listType: 'unordered' });
                            },
                            className: 'qubely-action-change-listype ' + (listType == 'unordered' ? 'is-active' : '')
                        }, {
                            icon: 'editor-ol',
                            title: 'Convert to ordered list',
                            onClick: function onClick() {
                                return setAttributes({ listType: 'ordered' });
                            },
                            className: 'qubely-action-change-listype ' + (listType == 'ordered' ? 'is-active' : '')
                        }] })
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-advanced-list qubely-alignment-' + alignment, onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        this.renderListItems(),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/advancedlist/Save.js":
/*!*****************************************!*\
  !*** ./src/blocks/advancedlist/Save.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Save);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderListItems = function () {
            var listItems = _this.props.attributes.listItems;


            return listItems.map(function (item) {
                return React.createElement(
                    'li',
                    null,
                    item
                );
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                alignment = _props$attributes.alignment,
                bulletStyle = _props$attributes.bulletStyle,
                listType = _props$attributes.listType,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            var ListTag = listType == 'ordered' ? 'ol' : 'ul';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-advanced-list ' + interactionClass + ' qubely-alignment-' + alignment },
                    React.createElement(
                        ListTag,
                        { className: 'qubely-list qubely-list-type-' + listType + ' qubely-list-bullet-' + bulletStyle.name },
                        this.renderListItems()
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/advancedlist/index.js":
/*!******************************************!*\
  !*** ./src/blocks/advancedlist/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/advancedlist/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/advancedlist/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/advancedlist/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/advancedlist', {
    title: __('Advanced List'),
    description: __('Include stylish lists to display in your site with Qubely Advanced List.'),
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-advanced-list.svg', alt: __('Advanced List') }),
    keywords: [__('Advanced', 'list', 'advanced list', 'Advanced List')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {
            background: '#fff'
        }
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        listType: { type: 'string', default: 'unordered' },
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        alignment: { type: 'string', default: 'left', style: [{ selector: '{{QUBELY}} .qubely-block-advanced-list {text-align: {{alignment}};}' }] },
        layout: { type: 'string', default: 'fill' },

        listItems: {
            type: 'array',
            default: ['Create advanced list items', 'Options to choose list design', 'Beautiful interaction transitions']
        },

        bulletStyle: { type: 'object', default: { name: 'check-circle-outline', value: 'far fa-check-circle' } },
        bulletSize: {
            type: 'string', default: '16px',
            style: [{
                condition: [{ key: 'bulletSize', relation: '!=', value: 'custom' }, { key: 'listType', relation: '==', value: 'unordered' }],
                selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after { font-size: {{bulletSize}};}'
            }]
        },
        bulletSizeCustom: { type: 'object', default: { md: 18, unit: 'px' }, style: [{ condition: [{ key: 'bulletSize', relation: '==', value: 'custom' }, { key: 'listType', relation: '==', value: 'unordered' }], selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after { font-size: {{bulletSizeCustom}};}' }] },
        bulletSpacing: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'alignment', relation: '==', value: 'left' }],
                selector: '{{QUBELY}} .qubely-list li::before { margin-right: {{bulletSpacing}};}'
            }, {
                condition: [{ key: 'alignment', relation: '==', value: 'center' }],
                selector: '{{QUBELY}} .qubely-list li::before { margin-right: {{bulletSpacing}};}'
            }, {
                condition: [{ key: 'alignment', relation: '==', value: 'right' }],
                selector: '{{QUBELY}} .qubely-list li::after { margin-left: {{bulletSpacing}};}'
            }]
        },

        bulletColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after {color: {{bulletColor}};}' }] },
        bulletColorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list li:hover::before, {{QUBELY}} .qubely-list li:hover::after {color: {{bulletColorHover}};}' }] },

        useNumberBg: { type: 'boolean', default: true },
        numberFontSize: { type: 'string', default: '14', style: [{ condition: [{ key: 'listType', relation: '==', value: 'ordered' }], selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after { font-size: {{numberFontSize}}px;}' }] },
        numberBgSize: { type: 'string', default: '5', style: [{ condition: [{ key: 'listType', relation: '==', value: 'ordered' }, { key: 'useNumberBg', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after { padding: {{numberBgSize}}px; }' }] },
        numberBg: { type: 'string', default: '#c2e5ff', style: [{ condition: [{ key: 'listType', relation: '==', value: 'ordered' }, { key: 'useNumberBg', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after { background-color: {{numberBg}};}' }] },
        numberBgHover: { type: 'string', default: '', style: [{ condition: [{ key: 'listType', relation: '==', value: 'ordered' }, { key: 'useNumberBg', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-list li:hover::before, {{QUBELY}} .qubely-list li:hover::after { background-color: {{numberBgHover}};}' }] },
        numberCorner: { type: 'string', default: '50', style: [{ condition: [{ key: 'listType', relation: '==', value: 'ordered' }, { key: 'useNumberBg', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after { border-radius: {{numberCorner}}%;}' }] },

        typography: {
            type: 'object',
            default: { openTypography: 1, size: { md: 16, unit: 'px' } },
            style: [{ selector: '{{QUBELY}} .qubely-list li' }, { condition: [{ key: 'listType', relation: '==', value: 'ordered' }], selector: '{{QUBELY}} .qubely-list li::before, {{QUBELY}} .qubely-list li::after ' }]
        },
        color: { type: 'string', default: '#333', style: [{ selector: '{{QUBELY}} .qubely-list li {color: {{color}};}' }] },
        colorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list li:hover {color: {{colorHover}};}' }] },
        spacing: { type: 'object', default: { md: 5, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-list li:not(:last-child) {margin-bottom: {{spacing}};}' }] },

        backgroundSize: { type: 'object', default: { openPadding: 1, paddingType: 'global', global: { md: '10', unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-list li' }] },

        background: { type: 'string', default: '#f5f5f5', style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list li {background-color: {{background}};}' }] },
        backgroundHover: { type: 'string', default: '', style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list li:hover {background-color: {{backgroundHover}};}' }] },

        borderRadius: { type: 'object', default: { openBorderRadius: 1, radiusType: 'global' }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list li' }] },
        shadow: { type: 'object', default: { color: '' }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list li' }] },
        shadowHover: { type: 'object', default: { color: '' }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list li:hover' }] },

        border: {
            type: 'object',
            default: {
                color: "#006fbf"
            },
            style: [{ selector: '{{QUBELY}} .qubely-list li' }]
        },
        borderColorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list li:hover {border-bottom-color: {{borderColorHover}};}' }] },

        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/advancedlist/style.scss":
/*!********************************************!*\
  !*** ./src/blocks/advancedlist/style.scss ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/advancedlist/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/animatedheadline/Edit.js":
/*!*********************************************!*\
  !*** ./src/blocks/animatedheadline/Edit.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    AlignmentToolbar = _wp$blockEditor.AlignmentToolbar,
    BlockControls = _wp$blockEditor.BlockControls,
    InspectorControls = _wp$blockEditor.InspectorControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment,
    RawHTML = _wp$element.RawHTML;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    FormTokenField = _wp$components.FormTokenField,
    TextControl = _wp$components.TextControl;
var _wp$qubelyComponents = wp.qubelyComponents,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Color = _wp$qubelyComponents.Color,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings,
    HeadingToolbar = _wp$qubelyComponents.HeadingToolbar,
    Typography = _wp$qubelyComponents.Typography,
    Range = _wp$qubelyComponents.Range;


var defaultTexts = ['Demo-one', 'Demo-two'];

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this._getAnimationClass = _this._getAnimationClass.bind(_this);
        _this._handleTypeChange = _this._handleTypeChange.bind(_this);
        _this.state = {
            device: 'md',
            animationClass: _this._getAnimationClass(_this.props.attributes.animationType)
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                name = _props.name,
                clientId = _props.clientId,
                attributes = _props.attributes,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }

            this.anim = new window.animatedHeading({ heading: $(this.animatedHeading) });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var _this2 = this;

            var _props$attributes = this.props.attributes,
                animationType = _props$attributes.animationType,
                animatedText = _props$attributes.animatedText,
                level = _props$attributes.level;
            var attributes = prevProps.attributes;

            if (animationType !== attributes.animationType || animatedText.length !== attributes.animatedText.length || level !== attributes.level) {
                if (this.anim) {
                    this.anim.destroy();
                    delete this.anim;
                    setTimeout(function () {
                        _this2.anim = new window.animatedHeading({ heading: $(_this2.animatedHeading) });
                    }, 100);
                }
            }
        }
    }, {
        key: '_handleTypeChange',
        value: function _handleTypeChange(val) {
            var _props2 = this.props,
                animatedTextColor = _props2.attributes.animatedTextColor,
                setAttributes = _props2.setAttributes;

            this.setState({ animationClass: this._getAnimationClass(val) });
            setAttributes(!(val === 'clip' || val === 'flip' || val === 'fade-in' || val === 'loading-bar' || val === 'push') ? { animationType: val, animatedTextColor: _extends({}, animatedTextColor, { type: 'color' }) } : { animationType: val });
        }
    }, {
        key: '_getAnimationClass',
        value: function _getAnimationClass() {
            var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            var animationClass = '';
            switch (value) {
                case 'blinds':
                    animationClass = 'letters animation-blinds';
                    break;
                case 'delete-typing':
                    animationClass = 'letters type';
                    break;
                case 'flip':
                    animationClass = 'text-animation-flip';
                    break;
                case 'fade-in':
                    animationClass = 'zoom';
                    break;
                case 'loading-bar':
                    animationClass = 'loading-bar';
                    break;
                case 'scale':
                    animationClass = 'letters scale';
                    break;
                case 'push':
                    animationClass = 'push';
                    break;
                case 'wave':
                    animationClass = 'letters animation-wave';
                    break;
                default:
                    animationClass = 'text-clip';
            }

            return animationClass;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props3 = this.props,
                name = _props3.name,
                clientId = _props3.clientId,
                className = _props3.className,
                attributes = _props3.attributes,
                setAttributes = _props3.setAttributes,
                _props3$attributes = _props3.attributes,
                uniqueId = _props3$attributes.uniqueId,
                align = _props3$attributes.align,
                level = _props3$attributes.level,
                animatedText = _props3$attributes.animatedText,
                titleBefore = _props3$attributes.titleBefore,
                titleAfter = _props3$attributes.titleAfter,
                animationType = _props3$attributes.animationType,
                typography = _props3$attributes.typography,
                color = _props3$attributes.color,
                barColor = _props3$attributes.barColor,
                animatedTextColor = _props3$attributes.animatedTextColor,
                animatedTextBgColor = _props3$attributes.animatedTextBgColor,
                animatedTextPadding = _props3$attributes.animatedTextPadding,
                animatedTextSpacing = _props3$attributes.animatedTextSpacing,
                textBorderRadius = _props3$attributes.textBorderRadius,
                animation = _props3$attributes.animation,
                interaction = _props3$attributes.interaction,
                enablePosition = _props3$attributes.enablePosition,
                selectPosition = _props3$attributes.selectPosition,
                positionXaxis = _props3$attributes.positionXaxis,
                positionYaxis = _props3$attributes.positionYaxis,
                globalZindex = _props3$attributes.globalZindex,
                hideTablet = _props3$attributes.hideTablet,
                hideMobile = _props3$attributes.hideMobile,
                globalCss = _props3$attributes.globalCss;
            var _state = this.state,
                device = _state.device,
                animationClass = _state.animationClass;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'animatedheadline', uniqueId);
            }
            var gradientTextColor = animationType === 'clip' || animationType === 'flip' || animationType === 'fade-in' || animationType === 'loading-bar' || animationType === 'push';
            var CustomHeadingTag = 'h' + level;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    null,
                    React.createElement(
                        PanelBody,
                        { title: __('Headline level'), opened: true },
                        React.createElement(HeadingToolbar, { minLevel: 1, maxLevel: 6, selectedLevel: level, isCollapsed: false, onChange: function onChange(newLevel) {
                                return setAttributes({ level: newLevel });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Animated Text') },
                        React.createElement(TextControl, {
                            label: __('Text Before'),
                            value: titleBefore,
                            onChange: function onChange(titleBefore) {
                                return setAttributes({ titleBefore: titleBefore });
                            }
                        }),
                        React.createElement(TextControl, {
                            label: __('Text After'),
                            value: titleAfter,
                            onChange: function onChange(titleAfter) {
                                return setAttributes({ titleAfter: titleAfter });
                            }
                        }),
                        React.createElement(FormTokenField, {
                            label: __('Animated Texts'),
                            value: animatedText,
                            placeholder: __('Add new text'),
                            onChange: function onChange(tokens) {
                                return setAttributes({ animatedText: tokens });
                            }
                        }),
                        React.createElement(SelectControl, {
                            label: __('Animation Type'),
                            value: animationType,
                            options: [{ label: __('Blinds'), value: 'blinds' }, { label: __('Clip'), value: 'clip' }, { label: __('Delete Typing'), value: 'delete-typing' }, { label: __('Flip'), value: 'flip' }, { label: __('Fade In'), value: 'fade-in' }, { label: __('Loading Bar'), value: 'loading-bar' }, { label: __('Scale'), value: 'scale' }, { label: __('Push'), value: 'push' }, { label: __('Twist/Wave'), value: 'wave' }],
                            onChange: function onChange(val) {
                                return _this3._handleTypeChange(val);
                            }
                        }),
                        animationType === 'loading-bar' && React.createElement(Color, { label: __('Bar Color'), value: barColor, onChange: function onChange(val) {
                                return setAttributes({ barColor: val });
                            } }),
                        gradientTextColor ? React.createElement(ColorAdvanced, {
                            textColor: true,
                            label: __('Color'),
                            value: animatedTextColor,
                            onChange: function onChange(val) {
                                return setAttributes({ animatedTextColor: val });
                            }
                        }) : React.createElement(Color, { label: __('Color'), value: animatedTextColor.color, onChange: function onChange(val) {
                                return setAttributes({ animatedTextColor: _extends({}, animatedTextColor, { color: val }) });
                            } }),
                        React.createElement(ColorAdvanced, {
                            textColor: true,
                            label: __('Background'),
                            value: animatedTextBgColor,
                            onChange: function onChange(val) {
                                return setAttributes({ animatedTextBgColor: val });
                            }
                        }),
                        React.createElement(BorderRadius, {
                            min: 0,
                            max: 100,
                            responsive: true,
                            device: device,
                            label: __('Radius'),
                            value: textBorderRadius,
                            unit: ['px', 'em', '%'],
                            onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            },
                            onChange: function onChange(val) {
                                return setAttributes({ textBorderRadius: val });
                            }
                        }),
                        React.createElement(Range, {
                            label: __('Padding X'),
                            value: animatedTextPadding,
                            onChange: function onChange(animatedTextPadding) {
                                return setAttributes({ animatedTextPadding: animatedTextPadding });
                            },
                            min: 0, max: 100,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            } }),
                        React.createElement(Range, {
                            label: __('Spacing X'),
                            value: animatedTextSpacing,
                            onChange: function onChange(animatedTextSpacing) {
                                return setAttributes({ animatedTextSpacing: animatedTextSpacing });
                            },
                            min: 0, max: 100,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Design'), initialOpen: false },
                        React.createElement(Typography, {
                            device: device,
                            value: typography,
                            label: __('Typography'),
                            onChange: function onChange(value) {
                                return setAttributes({ typography: value });
                            },
                            onDeviceChange: function onDeviceChange(value) {
                                return _this3.setState({ device: value });
                            }
                        }),
                        React.createElement(Color, { label: __('Color'), value: color, onChange: function onChange(val) {
                                return setAttributes({ color: val });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(HeadingToolbar, { minLevel: 1, maxLevel: 6, selectedLevel: level, onChange: function onChange(newLevel) {
                            return setAttributes({ level: newLevel });
                        } }),
                    React.createElement(AlignmentToolbar, { value: align, onChange: function onChange(nextAlign) {
                            return setAttributes({ align: nextAlign });
                        } })
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + ' qubely-block-animated-heading qubely-block-animated-heading-backend ' + className, onContextMenu: function onContextMenu(event) {
                            return handleContextMenu(event, _this3.refs.qubelyContextMenu);
                        } },
                    React.createElement(
                        CustomHeadingTag,
                        { className: 'animated-heading-text ' + animationClass + ' ' + (align ? ' has-text-align-' + align : ''), ref: function ref(el) {
                                return _this3.animatedHeading = el;
                            } },
                        titleBefore,
                        React.createElement(
                            'span',
                            { className: 'qubely-animated-text' },
                            React.createElement(
                                'span',
                                { className: 'animated-text-words-wrapper' },
                                [].concat(_toConsumableArray(animatedText.length > 0 ? animatedText : defaultTexts)).map(function (item, index) {
                                    var isVisible = index === 0 ? 'is-visible' : 'is-hidden';
                                    var className = 'animated-text ' + isVisible;
                                    return React.createElement(
                                        'span',
                                        { className: className },
                                        item
                                    );
                                })
                            )
                        ),
                        titleAfter
                    ),
                    React.createElement(
                        'div',
                        { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                        React.createElement(ContextMenu, {
                            name: name,
                            clientId: clientId,
                            attributes: attributes,
                            setAttributes: setAttributes,
                            qubelyContextMenu: this.refs.qubelyContextMenu
                        })
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/animatedheadline/Save.js":
/*!*********************************************!*\
  !*** ./src/blocks/animatedheadline/Save.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var RichText = wp.editor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: '_getAnimationClass',
        value: function _getAnimationClass() {
            var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            var animationClass = '';
            switch (value) {
                case 'blinds':
                    animationClass = 'letters animation-blinds';
                    break;
                case 'delete-typing':
                    animationClass = 'letters type';
                    break;
                case 'flip':
                    animationClass = 'text-animation-flip';
                    break;
                case 'fade-in':
                    animationClass = 'zoom';
                    break;
                case 'loading-bar':
                    animationClass = 'loading-bar';
                    break;
                case 'scale':
                case 'slide':
                    animationClass = 'letters scale';
                    break;
                case 'push':
                    animationClass = 'push';
                    break;
                case 'wave':
                    animationClass = 'letters animation-wave';
                    break;
                default:
                    animationClass = 'text-clip';
            }

            return animationClass;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                className = _props.className,
                _props$attributes = _props.attributes,
                uniqueId = _props$attributes.uniqueId,
                align = _props$attributes.align,
                level = _props$attributes.level,
                animation = _props$attributes.animation,
                animatedText = _props$attributes.animatedText,
                titleBefore = _props$attributes.titleBefore,
                titleAfter = _props$attributes.titleAfter,
                animationType = _props$attributes.animationType,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            var CustomHeadingTag = 'h' + level;
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId + ' qubely-block-animated-heading ' + (className ? className : '') + ' ' + interactionClass + ' ' }, animationAttr(animation)),
                React.createElement(
                    CustomHeadingTag,
                    { className: 'animated-heading-text ' + this._getAnimationClass(animationType) + (align ? ' has-text-align-' + align : ''), ref: function ref(el) {
                            return _this2.animatedHeading = el;
                        } },
                    React.createElement(RichText.Content, {
                        value: titleBefore
                    }),
                    React.createElement(
                        'span',
                        { className: 'qubely-animated-text' },
                        React.createElement(
                            'span',
                            { className: 'animated-text-words-wrapper' },
                            animatedText.map(function (item, index) {
                                var isVisible = index === 0 ? 'is-visible' : 'is-hidden';
                                var className = 'animated-text ' + isVisible;
                                return React.createElement(
                                    'span',
                                    { className: className },
                                    item
                                );
                            })
                        )
                    ),
                    React.createElement(RichText.Content, {
                        value: titleAfter
                    })
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/animatedheadline/attributes.js":
/*!***************************************************!*\
  !*** ./src/blocks/animatedheadline/attributes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;
var attributes = exports.attributes = _extends({
    uniqueId: { type: 'string', default: '' }
}, globalAttributes, { // Global Settings
    level: {
        type: 'number',
        default: 4
    },
    align: {
        type: 'string',
        style: []
    },
    spacer: {
        type: 'object',
        default: {
            spaceTop: { md: '10', unit: 'px' },
            spaceBottom: { md: '10', unit: 'px' }
        },
        style: [{ selector: '{{QUBELY}}' }]
    },
    animatedText: { type: 'array', default: ['imagination', 'fascination', 'attention', 'passion', 'curiosity'] },
    animationType: {
        type: 'string',
        default: 'clip'
    },
    typography: {
        type: 'object',
        default: {
            openTypography: false,
            height: {
                md: "1.2",
                unit: "em"
            },
            size: {
                md: "28",
                unit: "px"
            }
        },
        style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading .animated-heading-text' }]
    },
    textBorderRadius: {
        type: 'object',
        default: {
            openBorderRadius: 0,
            radiusType: 'global',
            global: {},
            unit: 'px'
        },
        style: [{
            selector: '{{QUBELY}}.qubely-block-animated-heading .qubely-animated-text'
        }]
    },
    // animatedTextTypography: {
    //     type: 'object',
    //     default: {},
    //     style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading .animated-text-words-wrapper' }]
    // },

    titleBefore: {
        type: 'string',
        default: 'The power of'
    },
    titleAfter: {
        type: 'string',
        default: 'makes us infinite'
    },
    color: {
        type: 'string', default: '#000',
        style: [{
            selector: '{{QUBELY}}.qubely-block-animated-heading .animated-heading-text{ color:{{color}}; }'
        }]
    },
    barColor: {
        type: 'string', default: '#22b8f0',
        style: [{

            selector: '{{QUBELY}}.qubely-block-animated-heading .animated-heading-text.loading-bar .animated-text-words-wrapper::after { background:{{barColor}}; }'
        }]
    },
    animatedTextColor: {
        type: 'object',
        default: {
            type: 'gradient',
            textColor: true,
            openColor: 1,
            color: '#2184F9',
            gradient: {
                color1: '#1066CC',
                color2: '#55cd37',
                direction: 0,
                start: 0,
                stop: 100,
                clip: false,
                radial: "center"
            }
        },
        style: [{

            selector: '{{QUBELY}}.qubely-block-animated-heading .animated-text-words-wrapper span'
        }]
    },
    animatedTextBgColor: {
        type: 'object',
        default: {
            type: 'color',
            openColor: 0,
            color: '#eae212',
            gradient: {
                color1: '#1066CC',
                color2: '#55cd37',
                direction: 0,
                start: 0,
                stop: 100,
                type: "linear",
                radial: "center"
            }
        },
        style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading .qubely-animated-text' }]
    },

    // animatedTextPadding: {
    //     type: 'object',
    //     default: {
    //         openPadding: 0,
    //         paddingType: 'custom',
    //         global: { md: '5' },
    //         custom: { },
    //         unit: 'px'
    //     },
    //     style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading .qubely-animated-text' }]
    // },

    animatedTextPadding: {
        type: 'object',
        default: {
            md: 0,
            unit: 'px'
        },
        style: [{
            selector: '{{QUBELY}}.qubely-block-animated-heading .qubely-animated-text {padding: 0 {{animatedTextPadding}};}'
        }]
    },

    animatedTextSpacing: {
        type: 'object',
        default: {
            md: 0,
            unit: 'px'
        },
        style: [{
            selector: '{{QUBELY}}.qubely-block-animated-heading .qubely-animated-text {margin: 0 {{animatedTextSpacing}};}'
        }]
    },

    animatedTextBorderRadius: {
        type: 'object',
        default: {
            radiusType: 'global',
            global: {},
            unit: 'px'
        },
        style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading .animated-text-words-wrapper' }]
    },
    border: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading' }] },
    bgBorderColorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading:hover {border-color: {{bgBorderColorHover}};}' }] },

    bgShadow: { type: 'object', default: { openShadow: 0, horizontal: 1, vertical: 1, blur: 2, color: 'rgba(0, 0, 0, .2)', spread: 0 }, style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading' }] },
    bgShadowHover: { type: 'object', default: { color: '' }, style: [{ selector: '{{QUBELY}}.qubely-block-animated-heading:hover' }] },

    showGlobalSettings: {
        type: 'boolean',
        default: true
    },
    showContextMenu: {
        type: 'boolean',
        default: true
    }
});

/***/ }),

/***/ "./src/blocks/animatedheadline/index.js":
/*!**********************************************!*\
  !*** ./src/blocks/animatedheadline/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! ./style.scss */ "./src/blocks/animatedheadline/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/animatedheadline/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/animatedheadline/Save.js");

var _Save2 = _interopRequireDefault(_Save);

var _attributes = __webpack_require__(/*! ./attributes */ "./src/blocks/animatedheadline/attributes.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var registerBlockType = wp.blocks.registerBlockType;
var __ = wp.i18n.__;


registerBlockType('qubely/animatedheadline', {
    title: __('Animated Headline'),
    description: '', //@TODO: _QUBELY Description
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-animatedheadline.svg', alt: __('Animated Headline') }),
    keywords: [__('headline'), __('animated'), __('heading'), __('title')],
    example: {
        attributes: {}
    },
    attributes: _attributes.attributes,
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/animatedheadline/style.scss":
/*!************************************************!*\
  !*** ./src/blocks/animatedheadline/style.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/animatedheadline/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/button/Edit.js":
/*!***********************************!*\
  !*** ./src/blocks/button/Edit.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    Tooltip = _wp$components.Tooltip;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Alignment = _wp$qubelyComponents.Alignment,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    IconList = _wp$qubelyComponents.IconList,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    Select = _wp$qubelyComponents.Select,
    Styles = _wp$qubelyComponents.Styles,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Range = _wp$qubelyComponents.Range,
    Url = _wp$qubelyComponents.Url,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Separator = _wp$qubelyComponents.Separator,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Padding = _wp$qubelyComponents.Padding,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit() {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

        _this.state = { device: 'md', spacer: true };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                removeBlock = _props2.removeBlock,
                updateBlockAttributes = _props2.updateBlockAttributes,
                buttonGroupAttributes = _props2.buttonGroupAttributes,
                setAttributes = _props2.setAttributes,
                isSelected = _props2.isSelected,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                parentClientId = _props2$attributes.parentClientId,
                buttonGroup = _props2$attributes.buttonGroup,
                disableFullWidth = _props2$attributes.disableFullWidth,
                fillType = _props2$attributes.fillType,
                buttonSize = _props2$attributes.buttonSize,
                buttonWidthType = _props2$attributes.buttonWidthType,
                buttonWidth = _props2$attributes.buttonWidth,
                buttonPadding = _props2$attributes.buttonPadding,
                typography = _props2$attributes.typography,
                textField = _props2$attributes.textField,
                url = _props2$attributes.url,
                enableAlignment = _props2$attributes.enableAlignment,
                alignment = _props2$attributes.alignment,
                buttonBorderRadius = _props2$attributes.buttonBorderRadius,
                iconName = _props2$attributes.iconName,
                iconPosition = _props2$attributes.iconPosition,
                iconSize = _props2$attributes.iconSize,
                iconGap = _props2$attributes.iconGap,
                buttonBorder = _props2$attributes.buttonBorder,
                borderHoverColor = _props2$attributes.borderHoverColor,
                buttonColor = _props2$attributes.buttonColor,
                buttonColor2 = _props2$attributes.buttonColor2,
                buttonHoverColor = _props2$attributes.buttonHoverColor,
                buttonHoverColor2 = _props2$attributes.buttonHoverColor2,
                bgColor = _props2$attributes.bgColor,
                bgHoverColor = _props2$attributes.bgHoverColor,
                buttonShadow = _props2$attributes.buttonShadow,
                buttonHoverShadow = _props2$attributes.buttonHoverShadow,
                animation = _props2$attributes.animation,
                interaction = _props2$attributes.interaction,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                globalZindex = _props2$attributes.globalZindex,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss;
            var device = this.state.device;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'button', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __('') },
                        React.createElement(Styles, { value: fillType,
                            onChange: function onChange(value) {
                                return setAttributes({ fillType: value });
                            },
                            options: [{ value: 'fill', svg: _icons2.default.btn_fill, label: __('Fill') }, { value: 'outline', svg: _icons2.default.btn_outline, label: __('Outline') }]
                        }),
                        React.createElement(Separator, null),
                        React.createElement(Url, { label: __('Button URL'), value: url, onChange: function onChange(value) {
                                return setAttributes({ url: value });
                            } }),
                        enableAlignment && React.createElement(Alignment, { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, responsive: true, disableJustify: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Size'), initialOpen: false },
                        React.createElement(RadioAdvanced, {
                            label: __('Button Size'),
                            options: [{ label: 'S', value: 'small', title: 'Small' }, { label: 'M', value: 'medium', title: 'Medium' }, { label: 'L', value: 'large', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
                            value: buttonSize,
                            onChange: function onChange(value) {
                                return setAttributes({ buttonSize: value });
                            } }),
                        buttonSize == 'custom' && React.createElement(Padding, {
                            label: __('Padding'),
                            value: buttonPadding,
                            onChange: function onChange(value) {
                                return setAttributes({ buttonPadding: value });
                            },
                            unit: ['px', 'em', '%'],
                            max: 150,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(RadioAdvanced, {
                            label: __('Button Width'),
                            options: [{ label: __('Auto'), value: 'auto', title: __('Auto') }].concat(_toConsumableArray(!disableFullWidth && [{ label: __('Full'), value: 'block', title: __('Full') }]), [{ label: __('Fixed'), value: 'fixed', title: __('Fixed') }]),
                            value: buttonWidthType,
                            onChange: function onChange(value) {
                                return setAttributes({ buttonWidthType: value });
                            } }),
                        buttonWidthType == 'fixed' && React.createElement(Range, {
                            label: __('Fixed Width'),
                            value: buttonWidth,
                            onChange: function onChange(value) {
                                return setAttributes({ buttonWidth: value });
                            },
                            unit: ['px', 'em', '%'],
                            min: buttonWidth.unit === '%' ? 5 : 30,
                            max: buttonWidth.unit === '%' ? 100 : 800,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Design'), initialOpen: false },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Text Color'), value: fillType == 'fill' ? buttonColor : buttonColor2, onChange: function onChange(value) {
                                        return fillType == 'fill' ? setAttributes({ buttonColor: value }) : setAttributes({ buttonColor2: value });
                                    } }),
                                fillType == 'fill' && React.createElement(ColorAdvanced, { label: __('Background'), value: bgColor, onChange: function onChange(value) {
                                        return setAttributes({ bgColor: value });
                                    } }),
                                React.createElement(Border, { label: __('Border'), value: buttonBorder, onChange: function onChange(val) {
                                        return setAttributes({ buttonBorder: val });
                                    }, min: 0, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(BoxShadow, { label: __('Box-Shadow'), value: buttonShadow, onChange: function onChange(value) {
                                        return setAttributes({ buttonShadow: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Text Color'), value: fillType == 'fill' ? buttonHoverColor : buttonHoverColor2, onChange: function onChange(value) {
                                        return fillType == 'fill' ? setAttributes({ buttonHoverColor: value }) : setAttributes({ buttonHoverColor2: value });
                                    } }),
                                React.createElement(ColorAdvanced, { label: __('Background'), value: bgHoverColor, onChange: function onChange(value) {
                                        return setAttributes({ bgHoverColor: value });
                                    } }),
                                React.createElement(Color, { label: __('Border Color'), value: borderHoverColor, onChange: function onChange(value) {
                                        return setAttributes({ borderHoverColor: value });
                                    } }),
                                React.createElement(BoxShadow, { label: __('Box-Shadow'), value: buttonHoverShadow, onChange: function onChange(value) {
                                        return setAttributes({ buttonHoverShadow: value });
                                    } })
                            )
                        ),
                        React.createElement(BorderRadius, {
                            label: __('Radius'),
                            value: buttonBorderRadius,
                            onChange: function onChange(value) {
                                return setAttributes({ buttonBorderRadius: value });
                            },
                            min: 0,
                            max: 100,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Icon'), initialOpen: false },
                        React.createElement(IconList, {
                            label: __('Icon'),
                            value: iconName,
                            onChange: function onChange(value) {
                                return _this2.props.setAttributes({ iconName: value });
                            } }),
                        iconName && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Select, {
                                label: __('Position'),
                                options: ['left', 'right'],
                                value: iconPosition,
                                onChange: function onChange(value) {
                                    return setAttributes({ iconPosition: value });
                                } }),
                            React.createElement(Range, {
                                label: __('Size'),
                                value: iconSize,
                                onChange: function onChange(value) {
                                    return setAttributes({ iconSize: value });
                                },
                                unit: ['px', 'em', '%'],
                                min: 5,
                                max: 48,
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, {
                                label: __('Gap'),
                                value: iconGap,
                                onChange: function onChange(val) {
                                    return setAttributes({ iconGap: val });
                                },
                                unit: ['px', 'em', '%'],
                                min: 0,
                                max: 64,
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Typography'), initialOpen: false },
                        React.createElement(Typography, {
                            label: __('Typography'),
                            value: typography,
                            onChange: function onChange(value) {
                                return setAttributes({ typography: value });
                            },
                            disableLineHeight: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-btn-wrapper', onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        React.createElement(
                            'div',
                            { className: 'qubely-block-btn' },
                            React.createElement(
                                'span',
                                { className: 'qubely-block-btn-anchor is-' + buttonSize },
                                iconName.trim() != "" && iconPosition == 'left' && React.createElement('i', { className: 'qubely-btn-icon ' + iconName }),
                                React.createElement(RichText, {
                                    keepPlaceholderOnFocus: true,
                                    className: 'qubely-button-text',
                                    placeholder: __('Add Text...'),
                                    onChange: function onChange(value) {
                                        return setAttributes({ textField: value });
                                    },
                                    value: textField
                                }),
                                iconName.trim() != "" && iconPosition == 'right' && React.createElement('i', { className: 'qubely-btn-icon ' + iconName })
                            )
                        ),
                        buttonGroup && React.createElement(
                            Tooltip,
                            { text: __('Delete this button') },
                            React.createElement(
                                'span',
                                { className: 'qubely-action-button-remove',
                                    onClick: function onClick() {
                                        updateBlockAttributes(parentClientId, Object.assign(buttonGroupAttributes, { buttons: buttonGroupAttributes.buttons - 1 }));
                                        removeBlock(clientId);
                                    },
                                    role: 'button' },
                                React.createElement('i', { className: 'fas fa-times' })
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = compose([withSelect(function (select, ownProps) {
    var parentClientId = ownProps.attributes.parentClientId;

    var _select = select('core/block-editor'),
        getBlockAttributes = _select.getBlockAttributes;

    return { buttonGroupAttributes: getBlockAttributes(parentClientId) };
}), withDispatch(function (dispatch) {
    var _dispatch = dispatch('core/block-editor'),
        removeBlock = _dispatch.removeBlock,
        updateBlockAttributes = _dispatch.updateBlockAttributes;

    return {
        removeBlock: removeBlock,
        updateBlockAttributes: updateBlockAttributes
    };
})])(Edit);

/***/ }),

/***/ "./src/blocks/button/Save.js":
/*!***********************************!*\
  !*** ./src/blocks/button/Save.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    textField = _props$attributes.textField,
			    url = _props$attributes.url,
			    iconName = _props$attributes.iconName,
			    iconPosition = _props$attributes.iconPosition,
			    buttonSize = _props$attributes.buttonSize,
			    customClassName = _props$attributes.customClassName,
			    animation = _props$attributes.animation,
			    interaction = _props$attributes.interaction;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId + ' ' + (customClassName ? customClassName : '') }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-btn-wrapper ' + interactionClass },
					React.createElement(
						'div',
						{ className: 'qubely-block-btn' },
						React.createElement(
							'a',
							_extends({ className: 'qubely-block-btn-anchor is-' + buttonSize, href: url.url ? url.url : '#' }, url.target && { target: '_blank' }, url.nofollow ? { rel: 'nofollow noopener noreferrer' } : _extends({}, url.target && { rel: 'noopener noreferrer' })),
							iconName.trim() != "" && iconPosition == 'left' && React.createElement('i', { className: 'qubely-btn-icon ' + iconName }),
							React.createElement(RichText.Content, { value: textField == '' ? 'Add Text...' : textField }),
							iconName.trim() != "" && iconPosition == 'right' && React.createElement('i', { className: 'qubely-btn-icon ' + iconName })
						)
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/button/index.js":
/*!************************************!*\
  !*** ./src/blocks/button/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/button/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/button/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/button/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/button', {
    title: __('Button'),
    description: __('Create stylish call-to-action buttons with Qubely Buttons.'),
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-button.svg', alt: __('Button Block') }),
    supports: {
        align: ['center', 'wide', 'full']
    },
    keywords: [__('button'), __('link')],
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, (_extends2 = {
        buttonGroup: { type: 'boolean', default: false },
        disableFullWidth: {
            type: 'boolean',
            default: false,
            style: [{
                condition: [{ key: 'disableFullWidth', relation: '==', value: true }],
                selector: '{{QUBELY}}  {width:fit-content;}'
            }]
        },
        parentClientId: { type: 'string', default: '' },
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        enableAlignment: { type: 'boolean', default: true },
        customClassName: { type: 'string', default: '' }
    }, _defineProperty(_extends2, 'spacer', { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] }), _defineProperty(_extends2, 'textField', { type: 'string', default: '' }), _defineProperty(_extends2, 'buttonWidthType', {
        type: 'string',
        default: 'auto',
        style: [{
            condition: [{ key: 'buttonWidthType', relation: '==', value: 'block' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor {display: -webkit-box; display: -ms-flexbox; display: flex;}'
        }]
    }), _defineProperty(_extends2, 'buttonWidth', {
        type: 'object',
        default: {
            md: 260,
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'buttonWidthType', relation: '==', value: 'fixed' }, { key: 'disableFullWidth', relation: '==', value: false }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor {width: {{buttonWidth}};}'
        }, {
            condition: [{ key: 'buttonWidthType', relation: '==', value: 'fixed' }, { key: 'disableFullWidth', relation: '==', value: true }],
            selector: '{{QUBELY}}, {{QUBELY}} .qubely-block-btn-anchor {width: {{buttonWidth}};}'
        }]
    }), _defineProperty(_extends2, 'alignment', {
        type: 'object', default: { md: 'center' },
        style: [{
            condition: [{ key: 'enableAlignment', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-block-btn-wrapper {text-align: {{alignment}};}'
        }]
    }), _defineProperty(_extends2, 'fillType', { type: 'string', default: 'fill' }), _defineProperty(_extends2, 'url', { type: 'object', default: { url: '#' } }), _defineProperty(_extends2, 'buttonSize', { type: 'string', default: 'large' }), _defineProperty(_extends2, 'buttonPadding', {
        type: 'object',
        default: {
            openPadding: 1,
            paddingType: 'global',
            global: { md: 18 },
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'buttonSize', relation: '==', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor'
        }]
    }), _defineProperty(_extends2, 'typography', { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor' }] }), _defineProperty(_extends2, 'buttonColor', {
        type: 'string', default: '#fff',
        style: [{
            condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor { color:{{buttonColor}}; }'
        }]
    }), _defineProperty(_extends2, 'buttonColor2', {
        type: 'string', default: '#2184F9',
        style: [{
            condition: [{ key: 'fillType', relation: '!=', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor { color:{{buttonColor2}}; }'
        }]
    }), _defineProperty(_extends2, 'buttonHoverColor', {
        type: 'string', default: '#fff',
        style: [{
            condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover { color:{{buttonHoverColor}}; }'
        }]
    }), _defineProperty(_extends2, 'buttonHoverColor2', {
        type: 'string', default: '#fff',
        style: [{
            condition: [{ key: 'fillType', relation: '!=', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover { color:{{buttonHoverColor2}}; }'
        }]
    }), _defineProperty(_extends2, 'bgColor', {
        type: 'object', default: { type: 'color', openColor: 1, color: '#2184F9', gradient: { color1: '#1066CC', color2: '#2184F9', direction: 0, start: 0, stop: 100 } },
        style: [{
            condition: [{ key: 'fillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor'
        }]
    }), _defineProperty(_extends2, 'bgHoverColor', {
        type: 'object', default: { type: 'color', openColor: 1, color: '#1066CC', gradient: { color1: '#16d03e', color2: '#1f91f3', direction: 0, start: 0, stop: 100 } },
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor:before' }]
    }), _defineProperty(_extends2, 'buttonBorder', {
        type: 'object', default: { openBorder: 1, widthType: "global", global: { md: "1" }, type: 'solid', color: '#2184F9' },
        style: [{
            selector: '{{QUBELY}} .qubely-block-btn-anchor'
        }]
    }), _defineProperty(_extends2, 'borderHoverColor', {
        type: 'string', default: '#1066CC',
        style: [{
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover {border-color: {{borderHoverColor}};}'
        }]
    }), _defineProperty(_extends2, 'buttonBorderRadius', {
        type: 'object',
        default: {
            openBorderRadius: 1,
            radiusType: 'global',
            global: { md: 4 },
            unit: 'px'

        },
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor' }]
    }), _defineProperty(_extends2, 'buttonShadow', {
        type: 'object', default: {},
        style: [{
            selector: '{{QUBELY}} .qubely-block-btn-anchor'
        }]
    }), _defineProperty(_extends2, 'buttonHoverShadow', {
        type: 'object', default: {},
        style: [{
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover'
        }]
    }), _defineProperty(_extends2, 'iconName', { type: 'string', default: '' }), _defineProperty(_extends2, 'iconPosition', { type: 'string', default: 'right' }), _defineProperty(_extends2, 'iconSize', {
        type: 'object', default: {},
        style: [{
            condition: [{ key: 'iconName', relation: '!=', value: '' }],
            selector: '{{QUBELY}} .qubely-btn-icon {font-size: {{iconSize}}}'
        }]
    }), _defineProperty(_extends2, 'iconGap', {
        type: 'object', default: { md: 8, unit: 'px' },
        style: [{
            condition: [{ key: 'iconName', relation: '!=', value: '' }, { key: 'iconPosition', relation: '==', value: 'left' }],
            selector: '{{QUBELY}} .qubely-btn-icon { margin-right: {{iconGap}}; }'
        }, {
            condition: [{ key: 'iconName', relation: '!=', value: '' }, { key: 'iconPosition', relation: '==', value: 'right' }],
            selector: '{{QUBELY}} .qubely-btn-icon { margin-left: {{iconGap}}; }'
        }]
    }), _defineProperty(_extends2, 'sourceOfCopiedStyle', { type: 'boolean', default: false }), _extends2)),
    getEditWrapperProps: function getEditWrapperProps(attributes) {
        if (attributes.customClassName != '') {
            return { className: 'wp-block editor-block-list__block block-editor-block-list__block ' + attributes.customClassName };
        }
    },

    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/button/style.scss":
/*!**************************************!*\
  !*** ./src/blocks/button/style.scss ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/button/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/buttongroup/Edit.js":
/*!****************************************!*\
  !*** ./src/blocks/buttongroup/Edit.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Tooltip = _wp$components.Tooltip;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$blockEditor = wp.blockEditor,
    InnerBlocks = _wp$blockEditor.InnerBlocks,
    InspectorControls = _wp$blockEditor.InspectorControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Range = _wp$qubelyComponents.Range,
    Alignment = _wp$qubelyComponents.Alignment,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = {
            device: 'md'
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                alignment = _props2$attributes.alignment,
                buttons = _props2$attributes.buttons,
                spacing = _props2$attributes.spacing,
                padding = _props2$attributes.padding,
                interaction = _props2$attributes.interaction,
                animation = _props2$attributes.animation,
                globalZindex = _props2$attributes.globalZindex,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                setAttributes = _props2.setAttributes,
                block = _props2.block,
                clientId = _props2.clientId,
                isSelected = _props2.isSelected,
                name = _props2.name,
                updateBlockAttributes = _props2.updateBlockAttributes;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'buttongroup', uniqueId);
            }
            var device = this.state.device;

            var index = 0;
            while (index < buttons) {
                block.innerBlocks[index] && updateBlockAttributes(block.innerBlocks[index].clientId, Object.assign(block.innerBlocks[index].attributes, { parentClientId: clientId }));
                index++;
            }
            index = 0;
            var iterator = [];
            while (index < buttons) {
                iterator.push(index);
                index++;
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '', initialOpen: true },
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, flex: true, disableJustify: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Range, {
                            label: __('Button Spacing'),
                            value: spacing,
                            onChange: function onChange(value) {
                                return setAttributes({ spacing: value });
                            },
                            min: 0, max: 100,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-button-group' },
                        React.createElement(InnerBlocks, {
                            tagName: 'div',
                            className: '',
                            template: iterator.map(function (buttonIndex) {
                                return ['qubely/button', {
                                    buttonGroup: true,
                                    parentClientId: clientId,
                                    enableAlignment: false,
                                    spacer: {
                                        spaceTop: { md: '0', unit: "px" },
                                        spaceBottom: { md: '0', unit: "px" }
                                    },
                                    customClassName: 'qubely-group-button',
                                    disableFullWidth: true
                                }];
                            }),
                            templateLock: 'all',
                            allowedBlocks: ['qubely/button'] }),
                        React.createElement(
                            Tooltip,
                            { text: __('Add new Button') },
                            React.createElement(
                                'span',
                                { className: 'qubely-add-new', onClick: function onClick() {
                                        return setAttributes({ buttons: buttons + 1 });
                                    }, role: 'button', areaLabel: __('Add new button') },
                                React.createElement('i', { className: 'fas fa-plus-circle' })
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = compose([withSelect(function (select, ownProps) {
    var clientId = ownProps.clientId;

    var _select = select('core/block-editor'),
        getBlock = _select.getBlock;

    return {
        block: getBlock(clientId)
    };
}), withDispatch(function (dispatch) {
    var _dispatch = dispatch('core/block-editor'),
        updateBlockAttributes = _dispatch.updateBlockAttributes;

    return {
        updateBlockAttributes: updateBlockAttributes
    };
})])(Edit);

/***/ }),

/***/ "./src/blocks/buttongroup/Save.js":
/*!****************************************!*\
  !*** ./src/blocks/buttongroup/Save.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    IsInteraction = _wp$qubelyComponents$.IsInteraction,
    animationAttr = _wp$qubelyComponents$.animationAttr;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    interaction = _props$attributes.interaction,
			    animation = _props$attributes.animation;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-button-group ' + interactionClass },
					React.createElement(InnerBlocks.Content, null)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/buttongroup/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/buttongroup/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/buttongroup/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/buttongroup/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/buttongroup/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    IsInteraction = _wp$qubelyComponents.HelperFunction.IsInteraction;


var attributes = _extends({
    uniqueId: { type: 'string', default: '' }
}, globalAttributes, {
    buttons: { type: 'number', default: 2 },
    alignment: {
        type: 'object',
        default: { md: 'flex-start' },
        style: [{ selector: '{{QUBELY}} .qubely-block-button-group {justify-content: {{alignment}}; }' }]
    },
    spacing: {
        type: 'object',
        default: { unit: "px", md: "5" },
        style: [{ selector: '{{QUBELY}} .qubely-block-button-group {margin: -{{spacing}};} {{QUBELY}} .qubely-block-button-group .qubely-block-btn-wrapper {margin: {{spacing}};}' }]
    }
});

registerBlockType('qubely/buttongroup', {
    title: __('Button Group'),
    description: 'Bunch together a group of useful buttons with Qubely Button Group.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-button-group.svg', alt: __('Button Group Block') }),
    supports: {
        align: ['center', 'wide', 'full']
    },
    keywords: [__('button'), __('link'), __('button group')],
    example: {
        attributes: {
            buttons: 2,
            alignment: {
                md: "center"
            },
            spacing: {
                md: "15",
                unit: "px"
            }
        }

    },
    attributes: attributes,
    edit: _Edit2.default,
    save: _Save2.default,
    deprecated: [{
        attributes: attributes,
        save: function save(props) {
            var _props$attributes = props.attributes,
                uniqueId = _props$attributes.uniqueId,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            return React.createElement(
                'div',
                { className: 'qubely-block-' + uniqueId },
                React.createElement(
                    'div',
                    { className: 'qubely-block-button-group ' + interactionClass },
                    React.createElement(InnerBlocks.Content, null)
                )
            );
        }
    }]
});

/***/ }),

/***/ "./src/blocks/buttongroup/style.scss":
/*!*******************************************!*\
  !*** ./src/blocks/buttongroup/style.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/buttongroup/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/contactform/Edit.js":
/*!****************************************!*\
  !*** ./src/blocks/contactform/Edit.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    TextareaControl = _wp$components.TextareaControl,
    Toolbar = _wp$components.Toolbar;
var _wp$qubelyComponents = wp.qubelyComponents,
    Styles = _wp$qubelyComponents.Styles,
    Range = _wp$qubelyComponents.Range,
    Toggle = _wp$qubelyComponents.Toggle,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Border = _wp$qubelyComponents.Border,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    QubelyButtonEdit = _wp$qubelyComponents.QubelyButtonEdit,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Separator = _wp$qubelyComponents.Separator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    buttonSettings = _wp$qubelyComponents.QubelyButton.buttonSettings,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = {
            device: 'md',
            spacer: true,
            selectedItem: -1
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(type, val) {
            var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;

            var selectedItem = index !== -1 ? index : this.state.selectedItem;
            var _props2 = this.props,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes;

            var formItems = [].concat(_toConsumableArray(attributes.formItems));
            formItems[selectedItem][type] = val;
            setAttributes({ formItems: formItems });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _state = this.state,
                selectedItem = _state.selectedItem,
                device = _state.device;
            var _props3 = this.props,
                name = _props3.name,
                clientId = _props3.clientId,
                attributes = _props3.attributes,
                setAttributes = _props3.setAttributes;
            var uniqueId = attributes.uniqueId,
                className = attributes.className,
                formItems = attributes.formItems,
                labelTypography = attributes.labelTypography,
                labelColor = attributes.labelColor,
                labelColorFocus = attributes.labelColorFocus,
                inputTypography = attributes.inputTypography,
                inputColor = attributes.inputColor,
                inputColorFocus = attributes.inputColorFocus,
                inputColorHover = attributes.inputColorHover,
                inputBg = attributes.inputBg,
                inputBgFocus = attributes.inputBgFocus,
                inputBgHover = attributes.inputBgHover,
                inputBorder = attributes.inputBorder,
                inputBorderMaterial = attributes.inputBorderMaterial,
                inputBorderColorFocus = attributes.inputBorderColorFocus,
                inputBorderColorHover = attributes.inputBorderColorHover,
                inputBorderRadius = attributes.inputBorderRadius,
                inputSize = attributes.inputSize,
                inputPaddingX = attributes.inputPaddingX,
                inputPaddingY = attributes.inputPaddingY,
                textareaHeight = attributes.textareaHeight,
                placeholderColor = attributes.placeholderColor,
                placeholderColorFocus = attributes.placeholderColorFocus,
                placeholderColorHover = attributes.placeholderColorHover,
                enableButton = attributes.enableButton,
                buttonTag = attributes.buttonTag,
                buttonSize = attributes.buttonSize,
                buttonFillType = attributes.buttonFillType,
                buttonText = attributes.buttonText,
                buttonIconName = attributes.buttonIconName,
                buttonIconPosition = attributes.buttonIconPosition,
                spacing = attributes.spacing,
                gutter = attributes.gutter,
                fieldErrorMessage = attributes.fieldErrorMessage,
                formSuccessMessage = attributes.formSuccessMessage,
                formErrorMessage = attributes.formErrorMessage,
                reCaptcha = attributes.reCaptcha,
                reCaptchaSiteKey = attributes.reCaptchaSiteKey,
                reCaptchaSecretKey = attributes.reCaptchaSecretKey,
                emailReceiver = attributes.emailReceiver,
                emailHeaders = attributes.emailHeaders,
                emailFrom = attributes.emailFrom,
                emailSubject = attributes.emailSubject,
                emailBody = attributes.emailBody,
                layout = attributes.layout,
                animation = attributes.animation,
                enablePosition = attributes.enablePosition,
                selectPosition = attributes.selectPosition,
                positionXaxis = attributes.positionXaxis,
                positionYaxis = attributes.positionYaxis,
                globalZindex = attributes.globalZindex,
                hideTablet = attributes.hideTablet,
                hideMobile = attributes.hideMobile,
                globalCss = attributes.globalCss;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'contactform', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __(''), initialOpen: true },
                        React.createElement(Styles, {
                            value: layout,
                            onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 'classic', img: _icons2.default.form_classic, label: __('Classic') }, { value: 'material', img: _icons2.default.form_material, label: __('Material') }]
                        })
                    ),
                    selectedItem >= 0 && React.createElement(
                        PanelBody,
                        { title: formItems[selectedItem].label ? formItems[selectedItem].label : __('Input Settings') },
                        React.createElement(TextControl, {
                            label: __('Label'),
                            value: formItems[selectedItem].label,
                            onChange: function onChange(val) {
                                return _this2.setSettings('label', val);
                            },
                            placeholder: __('Enter Label')
                        }),
                        React.createElement(TextControl, {
                            label: __('Name'),
                            value: formItems[selectedItem].name,
                            onChange: function onChange(val) {
                                return _this2.setSettings('name', val);
                            },
                            placeholder: __('Enter Name'),
                            help: __('You must write field name with hyphen(-) with lowercase. No space, UPPERCASE, Capitalize is not allowed. This name should match with Form template value. Never keep empty this name.')
                        }),
                        React.createElement(TextControl, {
                            label: __('Placeholder'),
                            value: formItems[selectedItem].placeholder,
                            onChange: function onChange(val) {
                                return _this2.setSettings('placeholder', val);
                            },
                            placeholder: __('Enter Placeholder')
                        }),
                        React.createElement(Range, {
                            label: __('Width'),
                            value: formItems[selectedItem].width,
                            onChange: function onChange(val) {
                                return _this2.setSettings('width', val);
                            },
                            max: 100,
                            min: 33,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Toggle, {
                            label: __('Required'),
                            value: formItems[selectedItem].required,
                            onChange: function onChange(val) {
                                return _this2.setSettings('required', val);
                            }
                        }),
                        layout == 'classic' && React.createElement(Toggle, {
                            label: __('Hide Label'),
                            value: formItems[selectedItem].hideLabel,
                            onChange: function onChange(val) {
                                return _this2.setSettings('hideLabel', val);
                            }
                        })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Label'), initialOpen: false },
                        React.createElement(Typography, {
                            label: __('Typography'),
                            value: labelTypography,
                            onChange: function onChange(val) {
                                return setAttributes({ labelTypography: val });
                            },
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Color, {
                            label: __('Color'),
                            value: labelColor,
                            onChange: function onChange(val) {
                                return setAttributes({ labelColor: val });
                            }
                        }),
                        layout == 'material' && React.createElement(Color, {
                            label: __('Focus Color'),
                            value: labelColorFocus,
                            onChange: function onChange(val) {
                                return setAttributes({ labelColorFocus: val });
                            }
                        })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Input'), initialOpen: false },
                        React.createElement(RadioAdvanced, {
                            label: __('Input Size'),
                            options: [{ label: 'S', value: 'small', title: 'Small' }, { label: 'M', value: 'medium', title: 'Medium' }, { label: 'L', value: 'large', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
                            value: inputSize,
                            onChange: function onChange(value) {
                                return setAttributes({ inputSize: value });
                            }
                        }),
                        inputSize == 'custom' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, {
                                label: React.createElement('span', { className: 'dashicons dashicons-sort', title: 'Padding Y' }),
                                value: inputPaddingY,
                                onChange: function onChange(value) {
                                    return setAttributes({ inputPaddingY: value });
                                },
                                unit: ['px', 'em', '%'],
                                min: 0,
                                max: 50,
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                }
                            }),
                            layout == 'classic' && React.createElement(Range, {
                                label: React.createElement('span', { className: 'dashicons dashicons-leftright', title: 'X Padding' }),
                                value: inputPaddingX,
                                onChange: function onChange(value) {
                                    return setAttributes({ inputPaddingX: value });
                                },
                                unit: ['px', 'em', '%'],
                                min: 0,
                                max: 50,
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                }
                            }),
                            React.createElement(Separator, null)
                        ),
                        React.createElement(Range, {
                            label: __('Textarea Height'),
                            value: textareaHeight,
                            onChange: function onChange(value) {
                                return setAttributes({ textareaHeight: value });
                            },
                            unit: ['px', 'em', '%'],
                            min: 100,
                            max: 500,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Range, {
                            label: __('Spacing'),
                            value: spacing,
                            onChange: function onChange(value) {
                                return setAttributes({ spacing: value });
                            },
                            unit: ['px', 'em', '%'],
                            min: 0,
                            max: 60,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Range, {
                            label: __('Gutter'),
                            value: gutter,
                            onChange: function onChange(value) {
                                return setAttributes({ gutter: value });
                            },
                            unit: ['px', 'em', '%'],
                            min: 0,
                            max: 60,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Color'), value: inputColor, onChange: function onChange(val) {
                                        return setAttributes({ inputColor: val });
                                    } }),
                                layout == 'classic' && React.createElement(Color, { label: __('Background Color'), value: inputBg, onChange: function onChange(val) {
                                        return setAttributes({ inputBg: val });
                                    } }),
                                React.createElement(Color, { label: __('Placeholder Color'), value: placeholderColor, onChange: function onChange(val) {
                                        return setAttributes({ placeholderColor: val });
                                    } }),
                                React.createElement(Separator, null),
                                layout == 'classic' && React.createElement(Border, { label: __('Border'), value: inputBorder, onChange: function onChange(val) {
                                        return setAttributes({ inputBorder: val });
                                    }, min: 0, max: 10, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                layout == 'material' && React.createElement(Border, { label: __('Border'), value: inputBorderMaterial, onChange: function onChange(val) {
                                        return setAttributes({ inputBorderMaterial: val });
                                    }, min: 0, max: 10, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Focus') },
                                React.createElement(Color, { label: __('Color'), value: inputColorFocus, onChange: function onChange(val) {
                                        return setAttributes({ inputColorFocus: val });
                                    } }),
                                layout == 'classic' && React.createElement(Color, { label: __('Background Color'), value: inputBgFocus, onChange: function onChange(val) {
                                        return setAttributes({ inputBgFocus: val });
                                    } }),
                                React.createElement(Color, { label: __('Placeholder Color'), value: placeholderColorFocus, onChange: function onChange(val) {
                                        return setAttributes({ placeholderColorFocus: val });
                                    } }),
                                React.createElement(Color, { label: __('Border Color'), value: inputBorderColorFocus, onChange: function onChange(value) {
                                        return setAttributes({ inputBorderColorFocus: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Color'), value: inputColorHover, onChange: function onChange(val) {
                                        return setAttributes({ inputColorHover: val });
                                    } }),
                                layout == 'classic' && React.createElement(Color, { label: __('Background Color'), value: inputBgHover, onChange: function onChange(val) {
                                        return setAttributes({ inputBgHover: val });
                                    } }),
                                React.createElement(Color, { label: __('Placeholder Color'), value: placeholderColorHover, onChange: function onChange(val) {
                                        return setAttributes({ placeholderColorHover: val });
                                    } }),
                                React.createElement(Color, { label: __('Border Color'), value: inputBorderColorHover, onChange: function onChange(value) {
                                        return setAttributes({ inputBorderColorHover: value });
                                    } })
                            )
                        ),
                        React.createElement(BorderRadius, {
                            label: __('Radius'),
                            value: inputBorderRadius,
                            onChange: function onChange(value) {
                                return setAttributes({ inputBorderRadius: value });
                            },
                            min: 0,
                            max: 100, unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Typography, { label: __('Typography'), value: inputTypography, onChange: function onChange(val) {
                                return setAttributes({ inputTypography: val });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Settings'), initialOpen: false },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Form') },
                                React.createElement(TextControl, {
                                    label: __('Required Field Error Message'),
                                    value: fieldErrorMessage,
                                    onChange: function onChange(val) {
                                        return setAttributes({ fieldErrorMessage: val });
                                    },
                                    help: __('Set required field error message here. Leave blank for default message.')
                                }),
                                React.createElement(TextareaControl, {
                                    label: __('Form Submit Success Message'),
                                    value: formSuccessMessage,
                                    onChange: function onChange(val) {
                                        return setAttributes({ formSuccessMessage: val });
                                    },
                                    help: __('Set your desired message after successful form submission. Leave blank for default.')
                                }),
                                React.createElement(TextareaControl, {
                                    label: __('Form Submit Failed Message'),
                                    value: formErrorMessage,
                                    onChange: function onChange(val) {
                                        return setAttributes({ formErrorMessage: val });
                                    },
                                    help: __('Set your desired message for form submission error. Leave blank for default.')
                                }),
                                React.createElement(Toggle, { label: __('Enable reCAPTCHA'), value: reCaptcha, onChange: function onChange(val) {
                                        return setAttributes({ reCaptcha: val });
                                    } }),
                                reCaptcha && React.createElement(
                                    'div',
                                    null,
                                    React.createElement(TextControl, {
                                        label: __('Site Key '),
                                        value: reCaptchaSiteKey,
                                        onChange: function onChange(val) {
                                            return setAttributes({ reCaptchaSiteKey: val });
                                        },
                                        placeholder: __('Enter Google Site Key')
                                    }),
                                    React.createElement(TextControl, {
                                        label: __('Secret Key '),
                                        value: reCaptchaSecretKey,
                                        onChange: function onChange(val) {
                                            return setAttributes({ reCaptchaSecretKey: val });
                                        },
                                        placeholder: __('Enter Google Secret Key')
                                    }),
                                    React.createElement(
                                        'span',
                                        { className: 'qubely-recaptcha-help' },
                                        'Get reCAPTCHA(v2) keys from ',
                                        React.createElement(
                                            'a',
                                            { href: '//www.google.com/recaptcha/admin/' },
                                            __('www.google.com/recaptcha/admin/'),
                                            ' '
                                        )
                                    )
                                )
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Email') },
                                React.createElement(TextControl, {
                                    label: __('Recipient Email'),
                                    value: emailReceiver,
                                    onChange: function onChange(val) {
                                        return setAttributes({ emailReceiver: val });
                                    },
                                    placeholder: __('Enter Recipient Email'),
                                    help: __('Enter the recipient email address. This field is mandatory. Without a recipient email, contact form will not work.')
                                }),
                                React.createElement(TextareaControl, {
                                    label: __('Email Headers'),
                                    value: emailHeaders,
                                    onChange: function onChange(val) {
                                        return setAttributes({ emailHeaders: val });
                                    }
                                }),
                                React.createElement(TextControl, {
                                    label: __('From Email'),
                                    value: emailFrom,
                                    onChange: function onChange(val) {
                                        return setAttributes({ emailFrom: val });
                                    },
                                    placeholder: __('Your Name: admin@example.com')
                                }),
                                React.createElement(TextControl, {
                                    label: __('Subject'),
                                    value: emailSubject,
                                    onChange: function onChange(val) {
                                        return setAttributes({ emailSubject: val });
                                    },
                                    placeholder: __('Enter Subject')
                                }),
                                React.createElement(TextareaControl, {
                                    label: __('Email Body'),
                                    value: emailBody,
                                    onChange: function onChange(val) {
                                        return setAttributes({ emailBody: val });
                                    },
                                    help: __("Set your form email body here. In editor don't add any CSS style or others option just add your form field name between double curly braces {{field-name}} as you set in 'Field Name'.")
                                })
                            )
                        )
                    ),
                    buttonSettings(this.props.attributes, device, function (key, value) {
                        setAttributes(_defineProperty({}, key, value));
                    }, function (key, value) {
                        _this2.setState(_defineProperty({}, key, value));
                    }),
                    animationSettings(uniqueId, animation, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-contact-form qubely-layout-' + layout, onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        React.createElement(
                            'form',
                            { className: 'qubely-form' },
                            formItems.map(function (item, index) {
                                return React.createElement(
                                    'div',
                                    { key: index, className: 'qubely-form-group qubely-form-group-index-' + index, style: { width: item.width.md + '%' } },
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-form-group-inner' },
                                        !item.hideLabel && layout == 'classic' && React.createElement(
                                            'label',
                                            { className: 'qubely-form-label' },
                                            React.createElement(
                                                'span',
                                                { contenteditable: 'true', onBlur: function onBlur(e) {
                                                        return _this2.setSettings('label', e.target.innerText, index);
                                                    } },
                                                __(item.label),
                                                ' '
                                            ),
                                            ' ',
                                            item.required && '*'
                                        ),
                                        (item.type == 'text' || item.type == 'email') && React.createElement('input', { className: 'qubely-form-control is-' + inputSize, type: item.type, placeholder: __(item.placeholder), required: item.required, onClick: function onClick() {
                                                return _this2.setState({ selectedItem: index });
                                            } }),
                                        item.type == 'textarea' && React.createElement('textarea', { className: 'qubely-form-control', placeholder: __(item.placeholder), required: item.required, onClick: function onClick() {
                                                return _this2.setState({ selectedItem: index });
                                            } }),
                                        layout == 'material' && React.createElement(
                                            'label',
                                            { className: 'qubely-form-label' },
                                            React.createElement(
                                                'span',
                                                { contenteditable: 'true', onBlur: function onBlur(e) {
                                                        return _this2.setSettings('label', e.target.innerText, index);
                                                    } },
                                                __(item.label),
                                                ' '
                                            ),
                                            ' ',
                                            item.required && '*'
                                        )
                                    )
                                );
                            }),
                            React.createElement(
                                'div',
                                { className: 'qubely-form-group', style: { width: '100%' } },
                                React.createElement(QubelyButtonEdit, {
                                    enableButton: enableButton,
                                    buttonFillType: buttonFillType,
                                    buttonSize: buttonSize,
                                    buttonText: buttonText,
                                    buttonIconName: buttonIconName,
                                    buttonIconPosition: buttonIconPosition,
                                    buttonTag: buttonTag,
                                    onTextChange: function onTextChange(value) {
                                        return setAttributes({ buttonText: value });
                                    }
                                })
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/contactform/Save.js":
/*!****************************************!*\
  !*** ./src/blocks/contactform/Save.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var QubelyButtonSave = wp.qubelyComponents.QubelyButtonSave;
var animationAttr = wp.qubelyComponents.HelperFunction.animationAttr;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: '_encrypt',
        value: function _encrypt(str) {
            return window.btoa(str);
        }
    }, {
        key: '_renderField',
        value: function _renderField(item, index, inputSize) {
            var fieldID = 'qubely-form-input-' + index;
            var fieldName = 'qubely-form-input[' + item.name + (item.required ? '*' : '') + ']';
            var fieldClass = 'qubely-form-control is-' + inputSize;
            switch (item.type) {
                case 'text':
                case 'email':
                    return React.createElement('input', { id: fieldID, name: fieldName, className: fieldClass, type: item.type, placeholder: __(item.placeholder), required: item.required });
                case 'textarea':
                    return React.createElement('textarea', { id: fieldID, name: fieldName, className: fieldClass, placeholder: __(item.placeholder), required: item.required });
                default:
                    return '';
            }
        }
    }, {
        key: '_renderFormGroupCss',
        value: function _renderFormGroupCss() {
            var formItems = this.props.attributes.formItems;

            var formGroupCss = '';
            formItems.forEach(function (item, index) {
                formGroupCss += (item.width.md ? '.qubely-form-group.qubely-form-group-index-' + index + ' { width: ' + item.width.md + '% }' : '') + '\n                ' + (item.width.sm ? '@media (max-width: 991px) { .qubely-form-group.qubely-form-group-index-' + index + ' { width: ' + item.width.sm + '% } }' : '') + '\n                ' + (item.width.xs ? '@media (max-width: 767px) { .qubely-form-group.qubely-form-group-index-' + index + ' { width: ' + item.width.xs + '% } }' : '');
            });
            return formGroupCss;
        }
    }, {
        key: 'render',
        value: function render() {
            var _encrypt = this._encrypt,
                _renderField = this._renderField;
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                formItems = _props$attributes.formItems,
                inputSize = _props$attributes.inputSize,
                fieldErrorMessage = _props$attributes.fieldErrorMessage,
                formSuccessMessage = _props$attributes.formSuccessMessage,
                formErrorMessage = _props$attributes.formErrorMessage,
                reCaptcha = _props$attributes.reCaptcha,
                reCaptchaSiteKey = _props$attributes.reCaptchaSiteKey,
                reCaptchaSecretKey = _props$attributes.reCaptchaSecretKey,
                emailReceiver = _props$attributes.emailReceiver,
                emailHeaders = _props$attributes.emailHeaders,
                emailFrom = _props$attributes.emailFrom,
                emailSubject = _props$attributes.emailSubject,
                emailBody = _props$attributes.emailBody,
                layout = _props$attributes.layout,
                buttonFillType = _props$attributes.buttonFillType,
                buttonSize = _props$attributes.buttonSize,
                buttonText = _props$attributes.buttonText,
                buttonIconName = _props$attributes.buttonIconName,
                buttonIconPosition = _props$attributes.buttonIconPosition,
                buttonTag = _props$attributes.buttonTag,
                animation = _props$attributes.animation;

            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'style',
                    null,
                    this._renderFormGroupCss()
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-block-contact-form qubely-layout-' + layout },
                    React.createElement(
                        'form',
                        { className: 'qubely-form' },
                        formItems.map(function (item, index) {
                            return React.createElement(
                                'div',
                                { key: index, className: 'qubely-form-group qubely-form-group-index-' + index },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-form-group-inner' },
                                    !item.hideLabel && layout == 'classic' && React.createElement(
                                        'label',
                                        { 'for': 'qubely-form-input-' + index, className: 'qubely-form-label' },
                                        ' ',
                                        __(item.label),
                                        ' ',
                                        item.required && '*'
                                    ),
                                    _renderField(item, index, inputSize),
                                    layout == 'material' && React.createElement(
                                        'label',
                                        { className: 'qubely-form-label' },
                                        ' ',
                                        __(item.label),
                                        ' ',
                                        item.required && '*'
                                    )
                                )
                            );
                        }),
                        reCaptcha && React.createElement(
                            'div',
                            { className: 'qubely-form-group' },
                            React.createElement('div', { className: 'qubely-google-recaptcha' })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-form-group', style: { width: '100%' } },
                            React.createElement(QubelyButtonSave, {
                                buttonFillType: buttonFillType,
                                buttonSize: buttonSize,
                                buttonText: buttonText,
                                buttonIconName: buttonIconName,
                                buttonIconPosition: buttonIconPosition,
                                buttonTag: buttonTag
                            }),
                            React.createElement('input', { type: 'hidden', name: 'field-error-message', value: _encrypt(fieldErrorMessage) }),
                            React.createElement('input', { type: 'hidden', name: 'form-success-message', value: _encrypt(formSuccessMessage) }),
                            React.createElement('input', { type: 'hidden', name: 'form-error-message', value: _encrypt(formErrorMessage) }),
                            React.createElement('input', { type: 'hidden', name: 'recaptcha', value: reCaptcha ? 'true' : 'false' }),
                            React.createElement('input', { type: 'hidden', name: 'recaptcha-site-key', value: reCaptchaSiteKey }),
                            React.createElement('input', { type: 'hidden', name: 'recaptcha-secret-key', value: reCaptchaSecretKey }),
                            React.createElement('input', { type: 'hidden', name: 'email-receiver', value: _encrypt(emailReceiver) }),
                            React.createElement('input', { type: 'hidden', name: 'email-headers', value: _encrypt(emailHeaders) }),
                            React.createElement('input', { type: 'hidden', name: 'email-from', value: _encrypt(emailFrom) }),
                            React.createElement('input', { type: 'hidden', name: 'email-subject', value: _encrypt(emailSubject) }),
                            React.createElement('input', { type: 'hidden', name: 'email-body', value: _encrypt(emailBody) })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-form-group' },
                            React.createElement(
                                'div',
                                { className: 'qubely-form-group-inner' },
                                React.createElement('div', { className: 'qubely-form-message' })
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/contactform/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/contactform/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/contactform/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/contactform/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/contactform/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    buttonAttributes = _wp$qubelyComponents.QubelyButton.buttonAttributes;


var formItems = [{ type: 'text', label: 'Full Name', name: 'full-name ', placeholder: 'Full Name', width: { md: 50 }, required: true, hideLabel: false }, { type: 'email', label: 'Email', name: 'email', placeholder: 'Email', width: { md: 50 }, required: true, hideLabel: false }, { type: 'text', label: 'Subject', name: 'subject', placeholder: 'Subject', width: { md: 100 }, required: true, hideLabel: false }, { type: 'textarea', label: 'Message', name: 'message', placeholder: 'Message', width: { md: 100 }, required: true, hideLabel: false }];

registerBlockType('qubely/contactform', {
    title: __('Contact Form'),
    description: __('Encourage site visitor interactions with Qubely Contact Form List'),
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-contact-form.svg', alt: __('Contact Form') }),
    keywords: [__('Contact'), __('Form')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, buttonAttributes, {
        layout: { type: 'string', default: 'classic' },
        useDefaultStyle: { type: 'boolean', default: true },
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        enableButtonAlignment: { type: 'boolean', default: true },
        enableButton: { type: 'boolean', default: true },
        buttonTag: { type: 'string', default: 'button' },
        buttonText: { type: 'string', default: 'Submit' },
        formItems: { type: 'array', default: formItems },

        spacing: {
            type: 'object', default: { md: 30, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-form .qubely-form-group:not(:last-child) {margin-bottom: {{spacing}};}'
            }]
        },

        gutter: {
            type: 'object', default: { md: 30, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-form {margin: 0 calc(-{{gutter}}/2);} {{QUBELY}} .qubely-form .qubely-form-group {padding: 0 calc({{gutter}}/2);}'
            }]
        },

        labelTypography: {
            type: 'obejct', default: { openTypography: 1, size: { md: 16, unit: 'px' } },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-label'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 'material' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-label'
            }]
        },

        labelColor: {
            type: 'string', default: "",
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-label {color: {{labelColor}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 'material' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-label {color: {{labelColor}};}'
            }]
        },

        labelColorFocus: {
            type: 'string', default: "",
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'material' }],
                selector: '{{QUBELY}} .qubely-form-control:focus ~ .qubely-form-label, {{QUBELY}} .qubely-form-control:valid ~ .qubely-form-label {color: {{labelColorFocus}};}'
            }]
        },

        inputTypography: {
            type: 'obejct', default: { openTypography: 1, size: { md: 14, unit: 'px' } },
            style: [{
                selector: '{{QUBELY}} .qubely-form .qubely-form-control, {{QUBELY}} .qubely-form .qubely-form-control::placeholder'
            }]
        },

        inputColor: { type: 'string', default: "#495057", style: [{ selector: '{{QUBELY}} .qubely-form .qubely-form-control {color: {{inputColor}};}' }] },
        // inputColorHover: { type: 'string', default: "#495057", style: [{ selector: '{{QUBELY}} .qubely-form .qubely-form-control:Hover {color: {{inputColorHover}};}' }] },
        inputColorFocus: { type: 'string', default: "#495057", style: [{ selector: '{{QUBELY}} .qubely-form .qubely-form-control:focus {color: {{inputColorFocus}};}' }] },

        placeholderColor: { type: 'string', default: "#818181", style: [{ selector: '{{QUBELY}} .qubely-form .qubely-form-control::placeholder {color: {{placeholderColor}};}' }] },
        placeholderColorHover: { type: 'string', default: "", style: [{ selector: '{{QUBELY}} .qubely-form .qubely-form-control::placeholder:Hover {color: {{placeholderColorHover}};}' }] },
        placeholderColorFocus: { type: 'string', default: "", style: [{ selector: '{{QUBELY}} .qubely-form .qubely-form-control::placeholder:focus {color: {{placeholderColorFocus}};}' }] },

        inputBg: {
            type: 'string', default: "#fff",
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control {background-color: {{inputBg}};}'
            }]
        },

        inputBgHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:hover {background-color: {{inputBgHover}};}'
            }]
        },

        inputBgFocus: {
            type: 'string', default: "#fff",
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:focus {background-color: {{inputBgFocus}};}'
            }]
        },

        inputBorder: {
            type: 'object',
            default: {
                openBorder: 1,
                type: 'solid',
                widthType: 'global',
                global: { md: 1 },
                custom: { md: '1 1 1 1' },
                color: '#ced4da'
            },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control'
            }]
        },

        inputBorderMaterial: {
            type: 'object',
            default: { openBorder: 1, type: 'solid', widthType: 'custom', custom: { md: '0 0 2 0' }, color: '#ced4da' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'material' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control'
            }]
        },

        inputBorderColorHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:hover {border-color: {{inputBorderColorHover}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 'material' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:hover {border-bottom-color: {{inputBorderColorHover}};}'
            }]
        },

        inputBorderColorFocus: {
            type: 'string', default: '#2184F9',
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:focus {border-color: {{inputBorderColorFocus}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 'material' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:focus {border-bottom-color: {{inputBorderColorFocus}};}'
            }]
        },

        inputColorHover: {
            type: 'string', default: '',
            style: [{
                selector: '{{QUBELY}} .qubely-form .qubely-form-control:hover {color: {{inputColorHover}};}'
            }]
        },

        inputBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global',
                global: {
                    md: 5
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control'
            }]
        },

        inputSize: { type: 'string', default: 'medium' },
        inputPaddingY: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }, { key: 'inputSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control {padding-top: {{inputPaddingY}}; padding-bottom: {{inputPaddingY}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 'material' }, { key: 'inputSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control {padding-top: {{inputPaddingY}}; padding-bottom: {{inputPaddingY}};}'
            }]
        },
        inputPaddingX: {
            type: 'object', default: { md: 15, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 'classic' }, { key: 'inputSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-form .qubely-form-control {padding-left: {{inputPaddingX}}; padding-right: {{inputPaddingX}};}'
            }]
        },
        textareaHeight: {
            type: 'object', default: { md: 200, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-form .qubely-form-group textarea.qubely-form-control {height: {{textareaHeight}};}'
            }]
        },

        fieldErrorMessage: { type: 'string', default: 'Please fill the required field.' },
        formSuccessMessage: { type: 'string', default: 'Email successfully sent!' },
        formErrorMessage: { type: 'string', default: 'Email sent failed, fill required field and try again!' },
        reCaptcha: { type: 'boolean', default: false },
        reCaptchaSiteKey: { type: 'string', default: '' },
        reCaptchaSecretKey: { type: 'string', default: '' },
        emailReceiver: { type: 'string', default: '' },
        emailHeaders: { type: 'string', default: 'Reply-To: {{email}}\nReply-name: {{full-name }} \nCc: {{email}}\nBcc: admin@yourcompany.com' },
        emailFrom: { type: 'string', default: 'Your Name: admin@example.com' },
        emailSubject: { type: 'string', default: '{{subject}} | {{email}} | {{site-name}}' },
        emailBody: { type: 'string', default: '<p><strong>From:</strong> {{full-name }}</p><strong>Email:</strong> {{email}}</p>\n<p><strong>Subject:</strong> {{subject}}</p>\n<p><strong>Message:</strong> {{message}}</p>' },
        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/contactform/style.scss":
/*!*******************************************!*\
  !*** ./src/blocks/contactform/style.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/contactform/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/counter/Edit.js":
/*!************************************!*\
  !*** ./src/blocks/counter/Edit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar;
var _wp$qubelyComponents = wp.qubelyComponents,
    Counter = _wp$qubelyComponents.Counter,
    Range = _wp$qubelyComponents.Range,
    Alignment = _wp$qubelyComponents.Alignment,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit(props) {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

		_this.state = {
			device: 'md',
			spacer: true
		};
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    uniqueId = _props.attributes.uniqueId;

			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    name = _props2.name,
			    clientId = _props2.clientId,
			    attributes = _props2.attributes,
			    isSelected = _props2.isSelected,
			    setAttributes = _props2.setAttributes,
			    _props2$attributes = _props2.attributes,
			    uniqueId = _props2$attributes.uniqueId,
			    className = _props2$attributes.className,
			    alignment = _props2$attributes.alignment,
			    counterLimit = _props2$attributes.counterLimit,
			    counterDuration = _props2$attributes.counterDuration,
			    counterTypo = _props2$attributes.counterTypo,
			    counterColor = _props2$attributes.counterColor,
			    postfix = _props2$attributes.postfix,
			    prefix = _props2$attributes.prefix,
			    prepostTypo = _props2$attributes.prepostTypo,
			    prepostSpacing = _props2$attributes.prepostSpacing,
			    prepostColor = _props2$attributes.prepostColor,
			    interaction = _props2$attributes.interaction,
			    animation = _props2$attributes.animation,
			    globalZindex = _props2$attributes.globalZindex,
			    enablePosition = _props2$attributes.enablePosition,
			    selectPosition = _props2$attributes.selectPosition,
			    positionXaxis = _props2$attributes.positionXaxis,
			    positionYaxis = _props2$attributes.positionYaxis,
			    hideTablet = _props2$attributes.hideTablet,
			    hideMobile = _props2$attributes.hideMobile,
			    globalCss = _props2$attributes.globalCss;
			var device = this.state.device;


			if (uniqueId) {
				CssGenerator(this.props.attributes, 'counter', uniqueId);
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: __('Counter Settings') },
						React.createElement(TextControl, { label: __('Counter Limit'), type: 'number', value: counterLimit, onChange: function onChange(value) {
								setAttributes({ counterLimit: value });
							} }),
						counterLimit > 0 && React.createElement(
							Fragment,
							null,
							React.createElement(TextControl, { label: __('Counter Duration'), type: 'number', value: counterDuration, onChange: function onChange(value) {
									setAttributes({ counterDuration: value });
								} }),
							React.createElement(Alignment, {
								label: __('Alignment'),
								alignmentType: 'content',
								value: alignment,
								onChange: function onChange(val) {
									return setAttributes({ alignment: val });
								},
								disableJustify: true,
								responsive: true,
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					counterLimit > 0 && React.createElement(
						PanelBody,
						{ title: __('Counter'), initialOpen: false },
						React.createElement(
							Fragment,
							null,
							React.createElement(Typography, {
								label: __('Typography'),
								value: counterTypo,
								onChange: function onChange(value) {
									return setAttributes({ counterTypo: value });
								},
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(Color, {
								label: __('Color'),
								value: counterColor,
								onChange: function onChange(val) {
									return setAttributes({ counterColor: val });
								} })
						)
					),
					counterLimit > 0 && React.createElement(
						PanelBody,
						{ title: __('Prefix & Postfix'), initialOpen: false },
						React.createElement(TextControl, { label: __('Prefix'), value: prefix, placeholder: __('Example: $'), onChange: function onChange(value) {
								return setAttributes({ prefix: value });
							} }),
						React.createElement(TextControl, { label: __('Postfix'), value: postfix, placeholder: __('Example: +'), onChange: function onChange(value) {
								return setAttributes({ postfix: value });
							} }),
						(prefix || postfix) && React.createElement(
							Fragment,
							null,
							React.createElement(Typography, {
								label: __('Typography'),
								value: prepostTypo,
								onChange: function onChange(value) {
									return setAttributes({ prepostTypo: value });
								},
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								}
							}),
							React.createElement(Range, {
								label: __('Spacing'),
								value: prepostSpacing,
								min: 0, max: 50,
								unit: ['px', 'em', '%'],
								onChange: function onChange(value) {
									return setAttributes({ prepostSpacing: value });
								},
								responsive: true,
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(Color, {
								label: __('Color'),
								value: prepostColor,
								onChange: function onChange(val) {
									return setAttributes({ prepostColor: val });
								} })
						)
					),
					animationSettings(uniqueId, animation, setAttributes),
					interactionSettings(uniqueId, interaction, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true }]
						}, this.props, {
							prevState: this.state
						}))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					React.createElement(
						'div',
						{ className: 'qubely-block-counter', onContextMenu: function onContextMenu(event) {
								return handleContextMenu(event, _this2.refs.qubelyContextMenu);
							} },
						counterLimit <= 0 && React.createElement(
							'div',
							null,
							'Please enter counter number'
						),
						counterDuration <= 0 && React.createElement(
							'div',
							null,
							'Please enter counter Duration'
						),
						React.createElement(
							'div',
							{ className: 'qubely-block-counter-content' },
							counterLimit > 0 && counterDuration > 0 && React.createElement(
								Fragment,
								null,
								prefix && React.createElement(
									'span',
									{ className: 'qubely-block-counter-prefix' },
									prefix
								),
								React.createElement(
									'span',
									{ className: 'qubely-block-counter-number' },
									React.createElement(Counter, { number: counterLimit, counterDuration: counterDuration })
								),
								postfix && React.createElement(
									'span',
									{ className: 'qubely-block-counter-postfix' },
									postfix
								)
							)
						),
						React.createElement(
							'div',
							{ ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
							React.createElement(ContextMenu, {
								name: name,
								clientId: clientId,
								attributes: attributes,
								setAttributes: setAttributes,
								qubelyContextMenu: this.refs.qubelyContextMenu
							})
						)
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/counter/Save.js":
/*!************************************!*\
  !*** ./src/blocks/counter/Save.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                counterLimit = _props$attributes.counterLimit,
                counterDuration = _props$attributes.counterDuration,
                postfix = _props$attributes.postfix,
                prefix = _props$attributes.prefix,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-counter ' + interactionClass },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-counter-content' },
                        counterLimit > 0 && React.createElement(
                            Fragment,
                            null,
                            prefix && React.createElement(
                                'span',
                                { className: 'qubely-block-counter-prefix' },
                                prefix
                            ),
                            React.createElement(
                                'span',
                                { className: 'qubely-block-counter-number', 'data-limit': counterLimit, 'data-start': 0, 'data-counterDuration': counterDuration },
                                0
                            ),
                            postfix && React.createElement(
                                'span',
                                { className: 'qubely-block-counter-postfix' },
                                postfix
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/counter/index.js":
/*!*************************************!*\
  !*** ./src/blocks/counter/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/counter/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/counter/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/counter', {
    title: __('Counter'),
    description: 'Set counters in your pages and posts with Qubely Counter.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-counter.svg', alt: __('Counter Block') }),
    keywords: [__('Counter'), __('Animated Number'), __('Count up')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {
            counterLimit: 9999,
            postfix: '+',
            counterTypo: {
                openTypography: 1,
                size: {
                    md: 82,
                    unit: 'px'
                }
            }
        }
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        alignment: { type: 'object', default: { md: 'center' }, style: [{ selector: '{{QUBELY}} .qubely-block-counter {text-align: {{alignment}};}' }] },
        prefix: { type: 'string', default: '' },
        postfix: { type: 'string', default: '' },
        counterLimit: { type: 'string', default: "500" },
        counterDuration: { type: 'string', default: "500" },
        prepostTypo: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-counter-prefix, {{QUBELY}} .qubely-block-counter-postfix' }] },
        prepostColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-counter-prefix {color: {{prepostColor}};} {{QUBELY}} .qubely-block-counter-postfix {color: {{prepostColor}};}' }] },
        prepostSpacing: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-counter-prefix {margin-right: {{prepostSpacing}};} {{QUBELY}} .qubely-block-counter-postfix {margin-left: {{prepostSpacing}};}' }] },
        counterTypo: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-counter-content' }] },
        counterColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-counter-content {color: {{counterColor}};}' }] },
        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/divider/Edit.js":
/*!************************************!*\
  !*** ./src/blocks/divider/Edit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icon = __webpack_require__(/*! ../divider/icon */ "./src/blocks/divider/icon.js");

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    Dropdown = _wp$components.Dropdown;
var _wp$qubelyComponents = wp.qubelyComponents,
    Alignment = _wp$qubelyComponents.Alignment,
    Range = _wp$qubelyComponents.Range,
    Color = _wp$qubelyComponents.Color,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var dividerOptions = ['fill', 'dot', 'dash', 'branch', 'dashes', 'leaf', 'line1', 'line2', 'line3', 'line4', 'line5', 'line6', 'line7', 'line8', 'line9', 'line10', 'line11', 'line12', 'line13', 'liner', 'mustache', 'shadow', 'slash', 'spring', 'valla', 'wave1', 'wave2', 'wave3'];

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.renderDividerOptions = function () {
            var setAttributes = _this.props.setAttributes;

            return React.createElement(
                'div',
                { className: 'qubely-divider-picker-options' },
                React.createElement(
                    'ul',
                    null,
                    dividerOptions.map(function (item, index) {
                        return React.createElement(
                            'li',
                            {
                                className: 'qubely-divider-picker-option ' + index,
                                onClick: function onClick() {
                                    setAttributes({ style: item });
                                } },
                            _icon2.default[item]
                        );
                    })
                )
            );
        };

        _this.state = { device: 'md', isOpen: false, spacer: true };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                isSelected = _props2.isSelected,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                color = _props2$attributes.color,
                height = _props2$attributes.height,
                width = _props2$attributes.width,
                alignment = _props2$attributes.alignment,
                style = _props2$attributes.style,
                animation = _props2$attributes.animation,
                globalZindex = _props2$attributes.globalZindex,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction;
            var device = this.state.device;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'divider', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __('Divider Options'), initialOpen: true },
                        React.createElement(Dropdown, {
                            className: "qubely-divider-picker",
                            contentClassName: "qubely-divider-picker-content",
                            position: 'bottom center',
                            renderToggle: function renderToggle(_ref) {
                                var isOpen = _ref.isOpen,
                                    onToggle = _ref.onToggle;
                                return React.createElement(
                                    'span',
                                    { onClick: onToggle, 'aria-expanded': isOpen },
                                    ' ',
                                    _icon2.default[style]
                                );
                            },
                            renderContent: function renderContent() {
                                return _this2.renderDividerOptions();
                            }
                        }),
                        React.createElement(Alignment, {
                            label: __('Alignment'),
                            alignmentType: 'content',
                            disableJustify: true,
                            value: alignment,
                            onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            },
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Divider Settings', 'qubely'), initialOpen: false },
                        React.createElement(Color, {
                            label: __('Color'),
                            value: color,
                            onChange: function onChange(val) {
                                return setAttributes({ color: val });
                            } }),
                        React.createElement(Range, {
                            label: __('Height'),
                            value: height,
                            onChange: function onChange(val) {
                                return setAttributes({ height: val });
                            },
                            min: 0,
                            max: 15,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Range, {
                            label: __('Width'),
                            value: width,
                            onChange: function onChange(val) {
                                return setAttributes({ width: val });
                            },
                            min: 0,
                            max: 1000,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : ''), onContextMenu: function onContextMenu(event) {
                            return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                        } },
                    React.createElement(Dropdown, {
                        className: "qubely-divider-picker",
                        contentClassName: "qubely-divider-picker-content",
                        position: 'bottom center',
                        renderToggle: function renderToggle(_ref2) {
                            var isOpen = _ref2.isOpen,
                                onToggle = _ref2.onToggle;
                            return React.createElement(
                                'div',
                                { className: 'qubely-block-divider', onClick: onToggle, 'aria-expanded': isOpen },
                                style == 'fill' || style == 'dot' || style == 'dash' ? React.createElement('div', { className: 'qubely-block-divider-style-' + style }) : React.createElement(
                                    'span',
                                    null,
                                    _icon2.default[style]
                                )
                            );
                        },
                        renderContent: function renderContent() {
                            return _this2.renderDividerOptions();
                        }
                    }),
                    React.createElement(
                        'div',
                        { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                        React.createElement(ContextMenu, {
                            name: name,
                            clientId: clientId,
                            attributes: attributes,
                            setAttributes: setAttributes,
                            qubelyContextMenu: this.refs.qubelyContextMenu
                        })
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/divider/Save.js":
/*!************************************!*\
  !*** ./src/blocks/divider/Save.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icon = __webpack_require__(/*! ../divider/icon */ "./src/blocks/divider/icon.js");

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                style = _props$attributes.style,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-divider ' + interactionClass },
                    style == 'fill' || style == 'dot' || style == 'dash' ? React.createElement('div', { className: 'qubely-block-divider-style-' + style }) : _icon2.default[style]
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/divider/icon.js":
/*!************************************!*\
  !*** ./src/blocks/divider/icon.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var icons = {};
icons.fill = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40" },
  React.createElement("path", { d: "M23.6 19h192.7v2H23.6v-2z" })
);
icons.dot = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40" },
  React.createElement("circle", { "class": "st0", cx: "31.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "47.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "35.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "43.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "39.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "51.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "67.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "55.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "63.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "59.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "71.7", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "87.7", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "75.7", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "83.7", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "79.7", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "91.9", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "107.9", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "95.9", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "103.9", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "99.9", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "112", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "128", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "116", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "124", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "120", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "132.1", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "148.1", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "136.1", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "144.1", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "140.1", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "152.3", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "168.3", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "156.3", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "164.3", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "160.3", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "172.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "188.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "176.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "184.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "180.4", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "192.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "208.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "196.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "204.6", cy: "20", r: "1" }),
  React.createElement("circle", { "class": "st0", cx: "200.6", cy: "20", r: "1" })
);
icons.dash = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40" },
  React.createElement("path", { d: "M48.4 19h2v2h-4v-2h2zm-10 0v2h4v-2h-4zm-8 0v2h4v-2h-4zm32.2 0v2h4v-2h-4zm-8 0v2h4v-2h-4zm32.1 0v2h4v-2h-4zm-16 0v2h4v-2h-4zm8 0v2h4v-2h-4zm16.2 0v2h4v-2h-4zm8 0v2h4v-2h-4zm8.1 0v2h4v-2h-4zm8 0v2h4v-2h-4zm8 0v2h4v-2h-4zm16.1 0v2h4v-2h-4zm-8 0v2h4v-2h-4zm24.2 0v2h4v-2h-4zm8 0v2h4v-2h-4zm-16 0v2h4v-2h-4zm24.1 0v2h4v-2h-4zm8 0v2h4v-2h-4zm16.2 0v2h4v-2h-4zm-8 0v2h4v-2h-4zm18 0h-2v2h4v-2h-2z" })
);
icons.branch = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M217.3 15.8c-2.1-.3-4.3-.2-6.3.4.9-2.7 1.2-7.3-2.1-7.7-1.4-.2-2.3.9-2.6 2.1-.4 2 .9 3.9 1.1 5.8 0 .3.6.3.6 0 .4-2-1.4-4-.5-5.9.4-1 1.8-.8 2.3.1.3.6.4 1.3.5 1.9.1 1.4-.2 2.8-.8 4.1v.1c-.2.1-.2.3-.2.5-.3-.6-1-.9-1.6-.3-4 3.9-8.5 5.5-13.3 5.8.8-.4 1.5-.9 2.2-1.5 1.4-1.2 3.3-3.2 2-5-.2-.3-.4-.4-.7-.3-2.8.5-6.3 2.5-6.9 5.6-.1.3.4.7.6.4.9-1 1.5-2.1 2.6-2.9 1-.8 2.3-1.3 3.6-1.6.4 1.4-1.7 2.8-2.6 3.5-1.3 1-2.9 1.8-4.5 1.3-.4-.1-.8.2-.8.5-8.4-.7-17.4-4.2-25.3-5.5.8-.4 1.5-.9 2.2-1.5 1.1-.9 2.9-3 1.9-4.5s-3.8.2-4.8.9c-1.9 1.2-3.4 2.8-4.4 4.7-6.8-.1-13.3 1.4-19.9 3 2.3-2.9 5.7-8.4 1.5-8.6-4.3-.2-6.2 6.1-5.1 9.4v.1c-5.3 1.3-10.6 2.6-16.1 3 2.5-2.3 6.7-6.9 3.4-8.5-1.7-.8-3.5 1-4.4 2.3-1.3 1.8-2.3 4.1-2.4 6.3-5.6-.1-11-1.3-16.3-2.7.1-.1.2-.3.1-.5-.4-1.5-3.9-11.2-6.6-7.7-1 1.3.1 3.6.9 4.7.7 1 1.6 1.9 2.6 2.7-7.5-2-15.1-3.9-23.1-3.1-.3 0-.7.1-1 .1-1.3-3.2-4.5-5.2-7.9-5.2-.3 0-.7.3-.7.6.1 2.3 1.4 4.4 3.4 5.5-6.1 1.3-12.6 3.1-18.9 3.9-1-2.1-2.5-3.9-4.4-5.2-1.1-.8-3.7-2.4-4.9-1-1.1 1.3.1 3.1 1 4 1.4 1.4 3.5 2.4 5.5 2.5-6 .4-11.8-.4-16.9-3.9 2.7-2.3 3.3-6.6 1.2-9.6-.2-.3-.6-.4-.9-.1-1.7 1.8-2.7 4.3-2.4 6.8-1.6-2.3-4.5-3.7-7.2-4.1-.4-.1-.7.4-.6.8 1 2.9 3.6 5.5 6.7 5.6.1 0 .2 0 .2-.1 2.2 2.3 4.7 3.9 7.4 4.9-3.7.2-9.6 1.2-7.4 4.5 1.2 1.8 3.9 1.1 5.6.5 2.2-.8 4.1-2.1 5.6-3.9 6.3 1.2 13.2.2 19.8-1.2-1.1.8-2.1 1.7-3 2.7-1 1.1-3.5 3.6-1.8 5.1 1.5 1.4 4.2-.8 5.4-1.8 1.9-1.6 3.6-4 4-6.5 0-.2 0-.3-.1-.4 2-.5 4-.9 5.8-1.3 4.9-1 9.5-1.3 14.2-1-1.1.4-2.1.9-3 1.5-1.3.9-3.8 2.4-3.6 4.3.2 1.6 2.1 2.2 3.5 1.7 1-.4 1.8-1.2 2.6-1.9 1.3-1.2 2.6-2.4 3.8-3.6.3-.3.2-.7 0-.9.3-.2.6-.4.8-.7 2.9.4 5.8 1 8.8 1.8 4.4 1.2 8.8 2.5 13.2 3.4-3.1.9-6 3.1-7.9 5.7-.3.4.1 1.1.6 1.1 4.1-.2 8.2-2.4 10.2-6.1 0-.1 0-.1.1-.2 2.7.4 5.5.6 8.4.4 2-.1 4.1-.4 6.1-.7 1.5 1.7 3.4 3 5.4 3.9 1.2.5 3.6 1.7 4.7.4.8-1 .1-2.4-.7-3.2-1-1-2.3-1.7-3.6-2.2 3.7-.8 7.4-1.8 11-2.7.5.9 1.4 2 1.6 2.2 2.3 2.1 5.2 3.3 8.3 3.5.5 0 .8-.5.7-.9-.8-2.9-3.2-5.2-6.1-5.9 7.7-1.5 15.2-1.8 23 .1 1.4.3 2.8.7 4.2 1-.2.1-.3.3-.3.5-.8 1.4-.4 3.1.5 4.4 1.2 1.8 3.3 2.6 5.3 3.2.5.2.9-.3.8-.8-.4-2.5-2.1-5.5-4.5-6.8 7.5 1.9 15.5 3.9 22.8 2.5 1.9 1.6 4.1 2.7 6.5 3.2 1.3.3 4.4 1.2 5.4 0 2.2-2.6-3.9-4.1-7.3-4.6 2.1-.9 4.1-2.2 6-4 .1.2.2.3.4.4 2.6 1 5.3 1.4 8 1 1.2-.2 3.9-.4 4-2.2-.3-2-3-2.2-4.2-2.4zM25.6 17.2c-2.2-.9-4-2.2-5-4.3 2.3.5 4 1.9 5.5 3.7-.3.1-.5.3-.5.6zm1.9.3c.1-.2.2-.4.1-.6 0 0 0-.1-.1-.1 0 0 .1-.1.1-.2-.1-2.5.4-4.6 1.9-6.5 1.3 2.6.6 5.7-1.6 7.6-.1 0-.2-.1-.4-.2zm5.3 8.3c-1 .5-3.4 1.5-4.5 1.1-.8.1-1-.4-.6-1.6.4-.1.8-.3 1.1-.4.7-.2 1.3-.4 2-.6 1.6-.3 3.1-.4 4.7-.4h.2c-.8.7-1.8 1.4-2.9 1.9zm14-3.5c.3-.2.3-.6-.1-.6-1.7-.3-3.2-.7-4.5-1.7-.6-.5-1.4-1.2-1.7-1.9-.5-1.2.6-1.4 1.5-1 2.3 1.1 4.1 2.9 5.3 5.2h-.5zm10.8 4c-.4.5-3.9 3.8-4.5 2.3-.3-.8 2.8-3.6 3.4-4.2 1-1 2.1-1.8 3.3-2.6.1 0 .2 0 .3-.1-.7 1.8-1.3 3.3-2.5 4.6zm11.9-8.5c-2-.6-3.6-2.2-4-4.4 2.6.3 4.6 1.8 5.9 4-.7.1-1.3.3-1.9.4zm14.2 2l-.1.1c-.4.4-.8.7-1.1 1.1-.1.1-.1.3 0 .4-.9.8-1.7 1.6-2.6 2.4-.5.4-1.1 1.1-1.7 1.4-2.2 1.2-1.6-1.2-.7-2.1 1.9-1.8 4-2.8 6.4-3.6-.2.1-.2.2-.2.3zM94.3 15c-.1-.3-.1-.6-.1-1 .6-.4 1.1-.4 1.4.2.6.5 1 1.5 1.4 2.2.6 1.2 1.1 2.4 1.5 3.7-1.9-1.5-3.7-2.9-4.2-5.1zm7.5 14.9c1.9-2 4.1-3.3 6.7-4.3-1.7 2.2-3.9 3.8-6.7 4.3zm15.5-6.3c-.1 0-.1 0 0 0h-.3c.4-1.3.8-2.6 1.5-3.9.6-1 1.6-3.2 2.9-3.4 2.7-.4-.4 3.7-.9 4.3-1 1.2-2.1 2.2-3.2 3zm14.1 2.2c.6.3 1.3.7 1.8 1.2.6.4.6.7.1 1-.2.5-.5.6-1 .3-1.2 0-2.7-1-3.7-1.6-1-.6-1.9-1.2-2.7-2 .7-.1 1.4-.3 2.1-.4 1.2.5 2.3.9 3.4 1.5zm5.1-5.5c-.5-2.7.4-7.4 3.7-7.9 2.2-.3 0 3.2-.5 4-.8 1.3-1.8 2.5-2.7 3.7-.2.2-.4.2-.5.2zm14 5.1c-1.4-.2-2.8-.6-4.1-1.3-.3-.2-3.1-2.1-3.9-3.2.4-.1.7-.2 1.1-.2 0 .3.2.6.6.7 2.8.1 5.1 1.5 6.3 4zm10.9-8.6c-.5 0-.9-.1-1.4-.1.6-.9 1.4-1.7 2.2-2.5.7-.6 3.9-3.1 4.7-2.2 1 1.1-2 3.2-2.9 3.6-.8.5-1.7.9-2.6 1.2zm15.2 8.1c.7.8 1.2 1.8 1.5 2.8-2.4-.9-4.7-2.4-4.4-5.1 1 .7 2 1.2 2.9 2.3zm29.1-.4c.7.2 1.8.5 2.2 1 .9 1 .5 1.2-.7 1.1-3-.2-5.6-1.2-8.1-2.7.4-.1.8-.2 1.1-.3.1.1.2.1.4.1 1.7.1 3.4.2 5.1.8zm8.8-5.6c-1.8 0-3.5-.5-5.2-1.1h-.1c0-.2 0-.4-.1-.6.1.2.2.3.4.3.2.2.6.2.8-.1 2.3-.4 8.7-1 8.6.6.1 1-3.4.9-4.4.9z" })
);
icons.dashes = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M44.5 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.2.5-.5.5zM61.4 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.2.5-.5.5z" }),
  React.createElement("circle", { cx: "71.4", cy: "20", r: ".5" }),
  React.createElement("path", { d: "M88.2 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.2.5-.5.5zM105.1 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.3.5-.5.5z" }),
  React.createElement("circle", { cx: "115", cy: "20", r: ".5" }),
  React.createElement("path", { d: "M131.8 20.5h-6.8c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.3.5-.6.5zM148.7 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.2.5-.5.5z" }),
  React.createElement("circle", { cx: "158.7", cy: "20", r: ".5" }),
  React.createElement("path", { d: "M175.5 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.2.5-.5.5zM192.4 20.5h-6.9c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h6.9c.3 0 .5.2.5.5s-.3.5-.5.5z" }),
  React.createElement("circle", { cx: "202.3", cy: "20", r: ".5" })
);
icons.leaf = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M201.1 16.2c-2.5-.1-4.8.7-6.9 2.1-1.4.1-2.9.1-4.3.2 2.1-1.4 3.8-3.5 4.6-5.9.2-.5-.4-.9-.8-.8-3.3.7-7.1 3.4-7.7 6.9-1.4.1-2.7.1-4.1.1.5-.4 1-.8 1.3-1.2 1.6-1.7 2.7-3.8 3.2-6 .1-.5-.3-1-.8-.8-3.7.9-7.7 4-8.1 8.1 0 .1-.1.1-.1.2-38.5 1.3-76.9 1.6-115.4 1.5-.2-.2-.5-.2-.7-.2.1-.2.1-.4 0-.6-.9-1.8-3.9-8.8-6.9-6-1.2 1.1-.2 3 .5 4.1.9 1.2 2.1 2.2 3.5 2.7h-5.8c.6-2.4-2.8-7.9-5.7-6.2-1.6.9-.7 3 .1 4.1.6.8 1.4 1.6 2.4 2.1h-3.6c.1-.1 0-.3-.1-.5-1.5-1.6-3.7-2.4-5.9-2.5-1.5-.1-4.1 0-4.7 1.7-1.4 4 8.3 3.3 10.1 2.9.4-.1.6-.5.5-.9 1.5.1 3 .1 4.5.2-1.5.5-2.9 1.4-4.2 2.4-1 .8-2.8 2.5-1.8 3.9 1 1.5 3.5-.1 4.5-.8 1.8-1.2 3.5-2.8 4.5-4.7.1-.2.1-.5 0-.6 1.3.1 2.6.1 3.9.1-1 .7-1.9 1.4-2.7 2.3-.9 1-3 3.1-1.9 4.6 1.2 1.6 3.9-.6 4.9-1.4 1.9-1.4 3.4-3.2 4.5-5.3 38.3 1.3 77 .6 115.3-1.2.7 1.8 1.9 3.5 3.2 4.9.9 1 2.6 2.5 4.1 1.6 1.7-1 .5-3.2-.2-4.4-.5-.9-1.2-1.7-2-2.4 1.3-.1 2.6-.1 4-.2.4 2.1 1.9 4.1 3.6 5.4 1.2.9 3.2 2.2 4.6 1 1.6-1.3.2-3.4-.8-4.4-.8-.8-1.9-1.6-3-2.2 1.5-.1 2.9-.2 4.4-.2.3 0 .5-.2.6-.3 2.2.8 4.7 1.5 6.9 1.1 1.2-.2 3-1.1 2.8-2.7-.5-1.7-3.1-1.7-4.3-1.8zM44.2 20.9c-1.1.1-2.1.2-3.2.1-.5 0-4.1-.3-4.3-.9-.2-.7 2.2-.9 2.4-.9.7 0 1.5 0 2.2.2 1.1.2 2.2.7 3.2 1.2-.2-.1-.3.1-.3.3zm4.7-2.3c-.4-.4-2.3-2.8-1-3 1-.2 2 1.1 2.4 1.8.6.9.7 1.9 1 2.8-.9-.5-1.7-.9-2.4-1.6zm.3 6.2c-.6.5-2.6 2.2-3.4 1.8-.6-.3.4-1 .7-1.3.5-.5 1-1 1.6-1.4 1.1-.8 2.3-1.3 3.5-1.8-.7.9-1.4 1.9-2.4 2.7zm7.3-6.7c-.4-.4-2.6-3.3-.8-3.5 1.1-.1 2.1 2 2.6 2.8.6 1 1.1 2 1.7 3-.2 0-.3.1-.5.1h-.2c.1-.2.1-.5-.1-.6-1-.4-1.9-1-2.7-1.8zm1.3 6.6c-.6.6-1.3 1.2-2 1.7-.3.2-1.9 1.4-2.2 1.2-.5-.3 2.4-3.4 2.8-3.7.9-.8 1.8-1.4 2.8-2h.7c-.5 1-1.2 2-2.1 2.8zm120.5-6.1c.7-1.3 1.3-2.7 2.5-3.8 1.1-1.1 2.4-1.9 3.9-2.4-.4 1.3-1.1 2.6-2.1 3.7-.6.7-1.2 1.2-2 1.7-.3.2-.7.4-1 .6-.1.1-.3.1-.4.2-.3 0-.5 0-.6.1-.1 0-.2-.1-.3-.1zm4 3.9c.4.6 2.3 3.5.8 3.4-1.1-.1-2.3-2-2.8-2.8-.5-.8-1-1.6-1.4-2.4.5 0 1-.1 1.6-.1.6.6 1.2 1.2 1.8 1.9zm7.1-7.2c1-.8 2-1.4 3.2-1.8-1.1 2.3-3.1 4-5.6 4.8.8-1.1 1.4-2.1 2.4-3zm1.3 6.4c.6.4 1.2.9 1.8 1.5.5.5 2.1 2.6 0 2.4-1.1-.1-2.5-1.5-3.2-2.3-.8-.9-1.2-2-1.7-3.1h.3c.9.5 1.9.9 2.8 1.5zm10.6-2.2c-.6 0-1.2 0-1.8-.1-1.2-.1-2.4-.3-3.5-.5 1-.6 2-1 3.2-1.2.8-.1 4.2-.5 4.6.5.2.7-2.2 1.2-2.5 1.3z" })
);
icons.line1 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40" },
  React.createElement("path", { d: "M199 18.7H41c-.6 0-1-.5-1-1 0-.6.5-1 1-1h158c.6 0 1 .5 1 1 0 .6-.5 1-1 1zm0 4.9H41c-.6 0-1-.5-1-1 0-.6.5-1 1-1h158c.6 0 1 .5 1 1s-.5 1-1 1z" })
);
icons.line2 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M89.3 19.8c-2.1-.1-4.2-.1-6.3-.1-4.2 0-8.4 0-12.7.1l-12.7.1L45 20l12.7.1 12.7.1c4.2 0 8.4.1 12.7.1 2.1 0 4.2 0 6.3-.1l3.2-.1c1.1 0 2.1-.1 3.2-.1-1.1-.1-2.1-.1-3.2-.1l-3.3-.1z" }),
  React.createElement("circle", { cx: "120.2", cy: "20", r: "2.5", fill: "none", stroke: "#231f20", "stroke-width": "1.5", "stroke-miterlimit": "10" }),
  React.createElement("ellipse", { transform: "rotate(-4.731 103.392 20)", cx: "103.4", cy: "20", rx: "1.9", ry: "1.9" }),
  React.createElement("path", { d: "M98.6 19c-.5 0-1 .4-1 1 0 .5.4 1 1 1s1-.4 1-1c0-.5-.4-1-1-1zM111.5 19.7c-.7 0-1.4 0-2.1.1-.7.1-1.4.1-2.1.3l2.1.3c.7.1 1.4.1 2.1.1.7 0 1.4 0 2.1-.1.7-.1 1.4-.1 2.1-.3l-2.1-.3c-.7-.1-1.4-.1-2.1-.1zM182.3 19.8l-12.7-.1c-4.2 0-8.4-.1-12.7-.1-2.1 0-4.2 0-6.3.1l-3.2.1c-1.1 0-2.1.1-3.2.1v.1c1.1.1 2.1.1 3.2.1l3.2.1c2.1.1 4.2.1 6.3.1 4.2 0 8.4 0 12.7-.1l12.7-.1L195 20l-12.7-.2zM136.6 18.1c-1.1 0-1.9.9-1.9 1.9 0 1.1.9 1.9 1.9 1.9s1.9-.9 1.9-1.9c0-1.1-.8-1.9-1.9-1.9zM141.4 19c-.5 0-1 .4-1 1 0 .5.4 1 1 1 .5 0 1-.4 1-1 0-.5-.5-1-1-1zM128.5 19.7c-.7 0-1.4 0-2.1.1-.7.1-1.4.1-2.1.3l2.1.3c.7.1 1.4.1 2.1.1.7 0 1.4 0 2.1-.1.7-.1 1.4-.1 2.1-.3l-2.1-.3c-.7-.1-1.4-.1-2.1-.1z" })
);
icons.line3 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M171.7 21.4c-4.4-.1-8.9-.1-13.3-.2l-13.3-.1-13-.1-2.3-2.8-.5-.6-.5.6-1.9 2.3-1.9-2.3-.5-.6-.5.6-1.9 2.3-1.8-2.3-.5-.6-.5.6-1.8 2.3-1.9-2.3-.5-.6-.5.6-1.9 2.3-1.9-2.3-.5-.6-.5.6-2.3 2.8-13 .1-13.3.1c-4.4 0-8.9.1-13.3.2s-8.9.1-13.3.2c4.4.1 8.9.2 13.3.2 4.4.1 8.9.1 13.3.2l13.3.1 13.3.1h.3l.2-.2 2-2.4 1.9 2.3.5.6.5-.6 1.9-2.3 1.9 2.3.5.6.5-.6 1.9-2.3 1.9 2.3.5.6.5-.6 1.9-2.3 1.9 2.3.5.6.5-.6 1.9-2.3 2 2.4.2.2h.3l13.3-.1 13.3-.1c4.4 0 8.9-.1 13.3-.2s8.9-.1 13.3-.2c-4.6-.1-9.1-.2-13.5-.2z" })
);
icons.line4 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M130.5 24.4l-3.9-5.2-2 2.5-4.6-6.1-4.6 6.1-2-2.5-3.9 5.2 3.9-4.6 1.8 2.1-1.9 2.5 2.1-2.4 2 2.4-1.9-2.5 4.5-5.2 4.5 5.2-1.9 2.5 2-2.4 2.1 2.4-1.9-2.5 1.8-2.1zM99.4 23c-2.6-.1-5.2-.1-7.8-.1-5.2-.1-10.4 0-15.5.1H60.5l-15.5.2v.1l15.5.2 15.5.1c5.2.1 10.4.2 15.5.1 2.6 0 5.2-.1 7.8-.1l3.9-.1c1.3-.1 2.6-.1 3.9-.2v-.1c-1.3-.1-2.6-.1-3.9-.2h-3.8zM179.5 23l-15.5-.1c-5.2-.1-10.4-.2-15.5-.1-2.6 0-5.2.1-7.8.1l-3.9.1c-1.3.1-2.6.1-3.9.2v.1c1.3.1 2.6.1 3.9.2l3.9.1c2.6.1 5.2.1 7.8.1 5.2.1 10.4 0 15.5-.1l15.5-.1 15.5-.2v-.1l-15.5-.2z" })
);
icons.line5 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M113.8 20.8H68.2c-.4 0-.8-.3-.8-.8 0-.4.3-.8.8-.8h45.6c.4 0 .8.3.8.8 0 .4-.4.8-.8.8zM172.4 20.8h-45.6c-.4 0-.8-.3-.8-.8 0-.4.3-.8.8-.8h45.6c.4 0 .7.3.7.8.1.4-.3.8-.7.8z" }),
  React.createElement("circle", { cx: "120.2", cy: "20", r: "2.5", fill: "none", stroke: "#231f20", "stroke-width": "1.5", "stroke-miterlimit": "10" })
);
icons.line6 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M123.3 20.9l-2.4 2.4c-.5.5-1.4.5-1.9 0l-2.4-2.4c-.5-.5-.5-1.4 0-1.9l2.4-2.4c.5-.5 1.4-.5 1.9 0l2.4 2.4c.5.6.5 1.4 0 1.9z" }),
  React.createElement("path", { d: "M169.2 20.8H70.8c-.4 0-.8-.3-.8-.8 0-.4.3-.8.8-.8h98.5c.4 0 .8.3.8.8-.1.4-.4.8-.9.8z" })
);
icons.line7 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M65.9 20.2v-.5c0-.3.2-.5.5-.5h107.2c.3 0 .5.2.5.5v.5c0 .3-.2.5-.5.5H66.4c-.3.1-.5-.2-.5-.5z" }),
  React.createElement("path", { d: "M175.2 20.4l-3.7 3.7c-.2.2-.6.2-.9 0-.2-.2-.2-.6 0-.9l3.3-3.3-3.3-3.3c-.2-.2-.2-.6 0-.9.2-.2.6-.2.9 0l3.7 3.7c.1.1.2.3.2.4-.1.4-.1.5-.2.6zM65.1 19.6l3.7-3.7c.2-.2.6-.2.9 0 .2.2.2.6 0 .9L66.4 20l3.3 3.3c.2.2.2.6 0 .9-.2.2-.6.2-.9 0l-3.7-3.7c-.1-.1-.2-.3-.2-.4 0-.3.1-.4.2-.5z" })
);
icons.line8 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M117.7 13.5c-.5 0-.9.4-.9.9v4.8H70.3c-.5 0-.9.4-.9.9s.4.9.9.9h46.6v4.8c0 .5.4.9.9.9s.9-.4.9-.9V14.3c-.1-.5-.5-.8-1-.8zM169.7 19.1h-46.6v-4.8c0-.5-.4-.9-.9-.9s-.9.4-.9.9v11.4c0 .5.4.9.9.9s.9-.4.9-.9v-4.8h46.6c.5 0 .9-.4.9-.9s-.4-.9-.9-.9z" })
);
icons.line9 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M220.6 20.8l.9-.8-.9-.8c-.1-.1-2.6-2.2-5.7-2.2 1.6-2.7 1.1-5.9 1-6l-.2-1.2-1.1.4c-.1 0-3.2 1.2-4.8 3.9-.7 1.1-.9 2.3-1.1 3.3-.5-.4-1.2-.7-1.9-.7-1.4 0-2.6.9-3 2.2H36.5c-.4-1.3-1.6-2.2-3-2.2-.9 0-1.7.4-2.2.9-.1-1.1-.4-2.4-1.1-3.6-1.6-2.7-4.6-3.8-4.8-3.9l-1.1-.4-.2 1.3c0 .1-.5 3.3 1 6-3.1 0-5.6 2.1-5.7 2.2l-1 .8.9.8c.1.1 2.6 2.2 5.7 2.2-1.6 2.7-1.1 5.9-1 6l.2 1.2 1.1-.4c.1 0 3.2-1.2 4.8-3.9.7-1.2 1-2.5 1.1-3.6.6.6 1.4.9 2.2.9 1.4 0 2.6-.9 3-2.2h167.3c.4 1.3 1.6 2.2 3 2.2.7 0 1.4-.3 1.9-.7.1 1 .4 2.2 1.1 3.3 1.6 2.7 4.6 3.8 4.8 3.9l1.1.4.2-1.2c0-.1.5-3.3-1-6 3.2 0 5.7-2 5.8-2.1zM26.8 16.1c-.6-1.1-.8-2.4-.8-3.3.8.5 1.8 1.3 2.4 2.4.6 1 .8 2.2.8 3.1-.3-.1-.6-.3-.9-.4-.5-.6-1.1-1.1-1.5-1.8zm-5 3.9c.8-.4 2-.9 3.3-.9.8 0 1.6.2 2.3.5.2.2.4.3.7.5-.2.1-.4.3-.7.5-.7.3-1.4.5-2.3.5-1.3-.2-2.5-.7-3.3-1.1zm6.6 4.9c-.6 1.1-1.7 1.9-2.5 2.4 0-.9.2-2.2.9-3.3.4-.7 1-1.3 1.5-1.7.3-.1.6-.3.9-.4 0 .8-.2 1.9-.8 3zm5.1-3.7c-.7 0-1.2-.5-1.2-1.2s.5-1.2 1.2-1.2 1.2.5 1.2 1.2-.6 1.2-1.2 1.2zM218.2 20c-.8.4-2 .9-3.3.9-.8 0-1.6-.2-2.3-.5-.2-.2-.4-.3-.7-.5.2-.1.4-.3.7-.5.7-.3 1.4-.5 2.3-.5 1.3.2 2.5.7 3.3 1.1zm-6.6-4.9c.6-1.1 1.7-1.9 2.5-2.4 0 .9-.2 2.2-.9 3.3-.4.7-1 1.3-1.5 1.7-.3.1-.6.3-.9.4 0-.8.2-1.9.8-3zm-4.7 6.1c-.7 0-1.2-.5-1.2-1.2s.5-1.2 1.2-1.2 1.2.5 1.2 1.2-.6 1.2-1.2 1.2zm6.3 2.7c.6 1.1.8 2.4.9 3.3-.8-.5-1.8-1.3-2.4-2.4-.6-1-.8-2.2-.8-3.1.3.1.6.3.9.4.4.6 1 1.1 1.4 1.8z" })
);
icons.line10 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M119.8 23.3c-.4.2-.9 0-1.1-.4l-4.5-10.4c-.2-.4 0-.9.4-1.1.4-.2.9 0 1.1.4l4.5 10.4c.2.4 0 .9-.4 1.1z" }),
  React.createElement("path", { d: "M69.3 17.7c0-.5.4-.9.9-.9h46.9c.5 0 .9.4.9.9s-.4.9-.9.9H70.2c-.5-.1-.9-.5-.9-.9zM119.7 11.3c.4-.2.9 0 1.1.4l4.5 10.4c.2.4 0 .9-.4 1.1-.4.2-.9 0-1.1-.4l-4.5-10.4c-.2-.4 0-.9.4-1.1z" }),
  React.createElement("path", { d: "M170.2 17c0 .5-.4.9-.9.9h-46.9c-.5 0-.9-.4-.9-.9s.4-.9.9-.9h46.9c.5 0 .9.4.9.9z" })
);
icons.line11 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M124.6 14l-4.6 4.6-4.6-4.6-1.4 1.4 4.6 4.6-4.6 4.6 1.4 1.4 4.6-4.6 4.6 4.6 1.4-1.4-4.6-4.6 4.6-4.6zM129.8 19h25v2h-25zM85.2 19h25v2h-25z" })
);
icons.line12 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { "class": "st1", d: "M204.2 25.6h-98.8c-3.4 0-6.2-2.9-6.2-6.4 0-1 .4-2 1-2.8 1.3-1.7 3.1-2.3 4.6-1.8 1.4.5 2.3 1.8 2.3 3.3 0 1.5-1.3 2.8-2.8 2.8-1.2 0-2.4-.8-2.4-2.1h2v-.1s.2.1.4.1c.4 0 .8-.4.8-.8 0-.7-.4-1.2-1-1.4-.7-.3-1.6.1-2.4 1.1-.4.5-.6 1-.6 1.6 0 2.3 2 4.4 4.2 4.4h98.8c1.9 0 3.5-1.6 3.5-3.5h2c.2 3.1-2.3 5.6-5.4 5.6z" }),
  React.createElement("path", { "class": "st1", d: "M134.6 25.6H35.8c-3 0-5.5-2.5-5.5-5.5h2c0 1.9 1.6 3.5 3.5 3.5h98.8c2.2 0 4.2-2 4.2-4.4 0-.6-.2-1.1-.6-1.6-.8-1-1.7-1.4-2.4-1.1-.6.2-1 .8-1 1.4 0 .4.4.8.8.8.2 0 .4-.1.4-.1l2 .1c0 1.3-1.2 2.1-2.4 2.1-1.5 0-2.8-1.3-2.8-2.8 0-1.5.9-2.8 2.3-3.3 1.6-.6 3.3.1 4.7 1.8.7.8 1 1.8 1 2.8 0 3.4-2.9 6.3-6.2 6.3z" }),
  React.createElement("path", { "class": "st1", d: "M120 25.6c-2.6 0-4.8-2.1-4.8-4.8 0-2.6 2.1-4.8 4.8-4.8s4.8 2.1 4.8 4.8c0 2.6-2.2 4.8-4.8 4.8zm0-7.6c-1.5 0-2.8 1.3-2.8 2.8s1.3 2.8 2.8 2.8 2.8-1.3 2.8-2.8-1.3-2.8-2.8-2.8z" })
);
icons.line13 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M234.3 19.3c-1.5-.1-3.1-1.7-3.2-3.2-.1-.9-1.4-.9-1.4 0-.1 1.5-1.7 3.1-3.2 3.2h-89.9c-.4-1.7-1.8-3-3.6-3-1.7 0-3.2 1.3-3.6 2.9-4.3-.4-8.4-4.6-8.8-8.9-.1-.9-1.4-.9-1.4 0-.3 4.3-4.4 8.5-8.8 8.9-.3-1.6-1.8-2.9-3.4-2.9-1.9-.1-3.3 1.2-3.7 3H13.4c-1.5-.1-3.1-1.7-3.2-3.2-.1-.9-1.4-.9-1.4 0-.1 1.5-1.7 3.1-3.2 3.2-.9.1-.9 1.4 0 1.4 1.5.1 3.1 1.7 3.2 3.2 0 .5.3.7.7.7.4 0 .8-.2.7-.7.1-1.5 1.7-3.1 3.2-3.2h89.9c.4 1.7 1.8 3 3.6 3 1.7 0 3.3-1.3 3.6-2.9 4.3.4 8.4 4.6 8.8 8.9 0 .5.3.7.7.7.4 0 .8-.2.7-.7.3-4.3 4.4-8.5 8.8-8.9.3 1.6 1.8 2.9 3.4 2.9 1.9.1 3.3-1.2 3.7-3h89.9c1.5.1 3.1 1.7 3.2 3.2 0 .5.3.7.7.7.4 0 .8-.2.7-.7.1-1.5 1.7-3.1 3.2-3.2a.7.7 0 0 0 0-1.4zM9.6 21.8c-.4-.7-1.1-1.4-1.8-1.8.7-.4 1.4-1.1 1.8-1.8.4.7 1 1.2 1.6 1.7v.2c-.7.5-1.2 1-1.6 1.7zm95.1-1.8c.2-2.9 4.5-2.9 4.5 0s-4.4 2.9-4.5 0zm15.3 6.7c-1.2-3-3.7-5.5-6.7-6.7 3-1.2 5.5-3.7 6.7-6.7 1.2 3 3.7 5.5 6.7 6.7-3 1.2-5.5 3.7-6.7 6.7zm10.8-6.7c0-2.9 4.3-2.9 4.5 0-.1 2.9-4.5 2.9-4.5 0zm99.6 1.8c-.4-.7-1.1-1.4-1.8-1.8.7-.4 1.4-1.1 1.8-1.8.4.7 1.1 1.4 1.8 1.8-.7.4-1.3 1.1-1.8 1.8z" })
);
icons.liner = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M32 15.8c2 0 4 .1 6 .5s3.8 1.2 5.7 1.8c3.7 1.4 7.8 1.6 11.7 1.3 2-.2 3.9-.6 5.7-1.2 1.8-.7 3.7-1.5 5.7-2s4-.7 6-.8c2 0 4 0 6.1.4 2 .3 4 1.1 5.8 1.8 1.8.7 3.7 1.2 5.6 1.5 3.9.4 7.9.3 11.6-.9 1.8-.6 3.7-1.4 5.6-2 2-.6 4-.8 6-.9 2-.1 4.1 0 6.1.3s4 1 5.9 1.7c1.9.7 3.7 1.4 5.6 1.6 1.9.3 3.9.4 5.8.3 2-.1 3.9-.3 5.8-.8s3.7-1.4 5.6-2c1.9-.6 4-1 6-1.1 2-.1 4.1-.1 6.1.2 2 .3 4 .8 5.9 1.6 1.9.7 3.7 1.4 5.6 1.8 1.9.4 3.9.5 5.9.5 2 0 3.9-.2 5.8-.7 1.9-.4 3.7-1.2 5.6-1.9 1.9-.7 3.9-1 5.9-1.2 4-.2 8.1.1 11.9 1.6 1.9.7 3.7 1.5 5.6 2 1.9.5 3.9.6 5.9.7-2 0-4-.1-6-.5s-3.8-1.2-5.7-1.8c-3.7-1.4-7.8-1.6-11.7-1.3-2 .2-3.9.6-5.7 1.2-1.8.7-3.7 1.5-5.7 2s-4 .7-6 .8c-2 0-4 0-6.1-.4-2-.3-4-1.1-5.8-1.8-1.8-.7-3.7-1.2-5.6-1.5-3.9-.4-7.9-.3-11.6.9-1.8.6-3.7 1.4-5.6 2-2 .6-4 .8-6 .9-2 .1-4.1 0-6.1-.3s-4-1-5.9-1.7c-1.9-.7-3.7-1.4-5.6-1.6-1.9-.3-3.9-.4-5.8-.3-2 .1-3.9.3-5.8.8s-3.7 1.4-5.6 2c-1.9.6-4 1-6 1.1-2 .1-4.1.1-6.1-.2-2-.3-4-.8-5.9-1.6-1.9-.7-3.7-1.4-5.6-1.8-1.9-.4-3.9-.5-5.9-.5-2 0-3.9.2-5.8.7-1.9.4-3.7 1.2-5.6 1.9-1.9.7-3.9 1-5.9 1.2-4 .2-8.1-.1-11.9-1.6-1.9-.7-3.7-1.5-5.6-2-1.9-.5-3.9-.7-5.9-.7z" })
);
icons.mustache = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M143.9 16.8c-4.5-.2-9.8-.2-14.3 1.5-5.1-8.4-23.3-5.1-30.9-3.1-9.3 2.4-18.2 6.2-27.5 8.6-8.2 2.2-31 6.6-33.8-5.5.1-.1.1-.1.1-.2v-.2c3 1.5 7 1.7 8.2-1.1.6-.5.9-1.2.7-2.1-.4-1.5-2.1-2.2-3.5-2.4-2.7-.3-6.1 1.3-6.6 4-.7-.4-1.3-.9-1.7-1.5-.2-.2-.5.1-.4.3.4.7 1.1 1.4 2 2-3.1 12.6 23 11.1 29.5 9.8 9.7-1.9 53.1-20.9 61.9-7.8-1.1.6-2.1 1.3-2.9 2.2-.1 0-.1.1-.2.1-.2.2-.4.4-.5.6-.3.3-.5.6-.7.9-.2.2 0 .4.2.5-.2 1.8 1.2 3.6 3.2 3.8 1.8.2 3.2-.9 3.7-2.4.2-.1.4-.3.4-.7.1-1.7-.1-3.2-.6-4.4 4.2-1.4 8.7-1.5 13.5-1.4 1.3.2 1.3-1.5.2-1.5zm-103.1-3c.9-.2 1.8-.2 2.7 0 .9.2 2.4 1.1 2.1 2.1-.1 0-.2 0-.3.2-1.4 2.3-4.8 2.1-7.5.9.4-1.5 1.3-2.7 3-3.2zm88.6 10.5c0 .1 0 .1.1.2-.5.8-1.3 1.3-2.3 1.3-1.9-.1-2.4-2.2-1.4-3.5.1-.1.1-.1.1-.2.9-.6 1.8-1.1 2.7-1.5.4 1 .7 2.3.8 3.7z" }),
  React.createElement("path", { d: "M96.1 18.5c4.9-.1 9.3 0 13.5 1.4-.4 1.3-.7 2.7-.6 4.4 0 .3.2.5.4.7.5 1.5 1.9 2.5 3.7 2.4 2-.2 3.3-2 3.2-3.8.2 0 .4-.2.2-.5s-.5-.6-.7-.9c-.1-.2-.3-.4-.5-.6-.1 0-.1-.1-.2-.1-.9-.9-1.9-1.6-2.9-2.2 8.8-13.1 52.2 5.9 61.9 7.8 6.5 1.2 32.7 2.8 29.5-9.8.9-.6 1.6-1.3 2-2 .1-.2-.2-.5-.4-.3-.4.5-1 1-1.7 1.5-.5-2.7-4-4.3-6.6-4-1.4.2-3.1.9-3.5 2.4-.2.8.1 1.6.7 2.1 1.2 2.9 5.2 2.6 8.2 1.1v.2c0 .1.1.2.1.2-2.7 12.1-25.5 7.7-33.9 5.5-9.3-2.5-18.2-6.2-27.5-8.6-7.5-1.9-25.8-5.3-30.9 3.1-4.4-1.7-9.7-1.7-14.3-1.5-.8-.2-.8 1.5.3 1.5zM202.2 17c-2.7 1.2-6 1.4-7.5-.9-.1-.1-.2-.2-.3-.2-.3-1 1.1-1.9 2.1-2.1.9-.2 1.8-.2 2.7 0 1.7.5 2.6 1.7 3 3.2zm-90.8 3.6c.9.4 1.8.9 2.7 1.5 0 .1 0 .1.1.2 1 1.4.5 3.4-1.4 3.5-1 .1-1.8-.5-2.3-1.3 0-.1 0-.1.1-.2.1-1.4.4-2.7.8-3.7z" })
);
icons.shadow = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M56.2 20c5.3-.1 10.6-.2 16-.3l16-.2c10.6-.1 21.3-.1 31.9-.2 10.6.1 21.3 0 31.9.1l16 .2c5.3.1 10.6.2 16 .3-5.3.1-10.6.2-16 .3l-16 .2c-10.6.1-21.3.1-31.9.1-10.6-.1-21.3 0-31.9-.2l-16-.2c-5.4.1-10.7 0-16-.1z" })
);
icons.slash = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M3.3 22.1c-.5-.2-.9-.5-1.3-.9-.3-.2-.5-.4-.8-.6.8-.7 1.5-1.3 2.3-2 .9-.7 1.8-1.6 2.4-2.6.1-.1.1-.2 0-.3-.1-.2-.3-.2-.5-.2-1.1.5-2 1.3-2.8 2.2-.8.9-1.7 1.7-2.5 2.5l-.1.1v.1c-.1.2-.1.5.2.6.5.3.9.5 1.4.8.4.3.9.6 1.2 1 .8.7 1.7 1.3 2.6 1.8.1.1.3 0 .4-.1.2-.1.2-.3.1-.5-.8-.8-1.6-1.4-2.6-1.9z" }),
  React.createElement("path", { d: "M112.3 20c-4.5-.2-9-.3-13.5-.3-2.2 0-4.5-.1-6.7 0s-4.5.2-6.7.1c-4.5 0-9-.1-13.5-.2-1.1 0-2.2 0-3.4.1-1.1.1-2.2.1-3.4.2-2.2 0-4.5 0-6.7-.1-4.5-.1-9 0-13.5-.2-2.2-.1-4.5-.1-6.7 0s-4.5.3-6.7.3c-4.5.1-9-.1-13.5-.1s-9 0-13.5.2c-.1 0-.2.1-.2.2s.1.3.2.3c4.5.1 9 .2 13.5.2s9-.1 13.5-.1c2.2 0 4.5.2 6.7.3 2.2.1 4.5 0 6.7 0 4.5-.1 9 0 13.5-.2 2.2-.1 4.5-.1 6.7-.1 1.1 0 2.2.1 3.4.2 1.1 0 2.2.1 3.4.1 4.5-.1 9-.1 13.5-.2 2.2 0 4.5 0 6.7.1s4.5.1 6.7 0c4.5 0 9-.1 13.5-.3.1 0 .2-.1.2-.2 0-.2-.1-.3-.2-.3zM239.9 20.3c-.8-.9-1.7-1.7-2.5-2.6-.8-.9-1.7-1.7-2.8-2.2h-.3c-.2.1-.2.3-.1.5.6 1.1 1.4 1.9 2.4 2.6.8.6 1.5 1.3 2.3 2-.2.2-.5.4-.8.6-.4.3-.9.6-1.3.9-.9.5-1.8 1.2-2.5 2-.1.1-.1.2-.1.4.1.2.3.2.5.2 1-.5 1.9-1 2.6-1.8.4-.4.8-.7 1.2-1 .4-.3.9-.6 1.4-.8l.1-.1c0-.3.1-.6-.1-.7z" }),
  React.createElement("path", { d: "M235.7 20.2c0-.1-.1-.3-.2-.3-4.5-.1-9-.2-13.5-.2s-9 .1-13.5.1c-2.2 0-4.5-.2-6.7-.3-2.2-.1-4.5 0-6.7 0-4.5.1-9 0-13.5.2-2.2.1-4.5.1-6.7.1-1.1 0-2.2-.1-3.4-.2-1.1 0-2.2-.1-3.4-.1-4.5.1-9 .1-13.5.2-2.2 0-4.5 0-6.7-.1s-4.5-.1-6.7 0c-4.5 0-9 .1-13.5.3-.1 0-.2.1-.2.2s.1.3.2.3c4.5.2 9 .3 13.5.3 2.2 0 4.5.1 6.7 0s4.5-.2 6.7-.1c4.5 0 9 .1 13.5.2 1.1 0 2.2 0 3.4-.1 1.1-.1 2.2-.1 3.4-.2 2.2 0 4.5 0 6.7.1 4.5.1 9 0 13.5.2 2.2.1 4.5.1 6.7 0s4.5-.3 6.7-.3c4.5-.1 9 .1 13.5.1s9 0 13.5-.2c.1 0 .2-.1.2-.2zM118.3 16.1c-.4.6-.8 1.2-1.1 1.8-.4.6-.4 1.3-.8 1.9l-.9 1.8c-.3.6-.5 1.3-.7 2 0 .2 0 .4.2.5.2.2.5.1.7-.1.4-.6.7-1.2 1-1.8.3-.6.5-1.3.8-1.9.2-.6.7-1.2.9-1.9.2-.6.5-1.3.6-2 0-.2 0-.3-.2-.4-.1-.1-.4-.1-.5.1zM124.4 16.1c-.4.6-.8 1.2-1.1 1.8-.4.6-.4 1.3-.8 1.9l-.9 1.8c-.3.6-.5 1.3-.7 2 0 .2 0 .4.2.5.2.2.5.1.7-.1.4-.6.7-1.2 1-1.8.3-.6.5-1.3.8-1.9.2-.6.7-1.2.9-1.9.2-.6.5-1.3.6-2 0-.2 0-.3-.2-.4-.1-.1-.3-.1-.5.1z" })
);
icons.spring = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M126.9 15.2c-2.4-7.2-11.6-8.1-15.6-2-.1.2.2.4.3.3 4.8-5.5 14.9-3.4 14.5 4.9-.3 5.9-5.2 9.6-10.5 10.7-.1-.2-.3-.4-.5-.3-3.9 1-7.9.5-11.7-.7-1.6-.5-5.4-2.5-7.3-4.9 0 0 .1 0 .1-.1.1.1.3.2.5.3 2.2.2 4.3-2.1 3.7-4.3-.5-1.9-2.8-2.9-4.6-2-.1.1-.1.2-.1.3-1.8 1-1.8 3.1-1.1 5.1-3 .6-6 1.4-9.2 1.3-2-.1-6.1-1-8.5-2.9 1.8-.4 3-2.6 2.3-4.3-.7-1.6-2.8-2.2-4.3-1.4-.2 0-.3.1-.4.3h-.1c-.1.1-.1.2-.1.2-.9 1.7-.4 3.4.6 4.9-9.5 3.2-22.1 4.2-24.6-8.4-.2-.8-1.5-.6-1.4.2 1.1 13.6 17.2 14 26.7 9 1.1 1.2 2.6 2.1 3.9 2.7 4.8 2.1 10.6 1.3 15.5-.5.6 1.2 1.4 2.2 2.1 2.9 4 3.6 10.8 5.2 16.2 3.9.1.1.2.1.3.1 7.5.1 15.9-7.3 13.3-15.3zm-51.4.8c.1-.1.1-.3 0-.4 1-.2 2.1.2 2.6 1.1.9 1.5-.7 3.1-2.2 3.1-.7-1-1-2.3-.4-3.8zm21.3 1.6s.1-.1 0 0c1.1 0 2.1.6 2.4 1.7.4 1.4-.8 2.6-2.1 2.8h-.4c-.1 0-.2 0-.3.1-.3.1-.6.1-.9.2-1.1-1.7-1-3.4 1.3-4.8z" }),
  React.createElement("path", { d: "M126.4 30.5c.1 0 .2-.1.3-.1 5.4 1.4 12.2-.2 16.2-3.9.7-.7 1.5-1.7 2.1-2.9 4.9 1.8 10.7 2.6 15.5.5 1.3-.6 2.8-1.5 3.9-2.7 9.5 5 25.6 4.6 26.7-9 .1-.8-1.3-1-1.4-.2-2.5 12.6-15.1 11.6-24.6 8.4 1.1-1.4 1.5-3.1.6-4.9 0-.1 0-.2-.1-.2h-.1c-.1-.2-.3-.3-.4-.3-1.5-.8-3.6-.3-4.3 1.4-.8 1.7.5 3.9 2.3 4.3-2.4 1.9-6.5 2.8-8.5 2.9-3.1.1-6.1-.6-9.2-1.3.7-2 .7-4.1-1.1-5.1 0-.1 0-.2-.1-.3-1.7-.9-4 .2-4.6 2-.6 2.2 1.5 4.5 3.7 4.3.2 0 .4-.1.5-.3 0 0 .1 0 .1.1-2 2.3-5.7 4.4-7.3 4.9-3.8 1.3-7.8 1.7-11.7.7-.2-.1-.4.1-.5.3-5.3-1.1-10.2-4.9-10.5-10.7-.4-8.3 9.7-10.4 14.5-4.9.2.2.5-.1.3-.3-4-6.2-13.3-5.2-15.6 2-2.6 8 5.8 15.4 13.3 15.3zM164 19.8c-1.5 0-3.1-1.6-2.2-3.1.5-.9 1.7-1.3 2.6-1.1v.4c.7 1.5.4 2.8-.4 3.8zm-19.4 2.5c-.3-.1-.6-.1-.9-.2-.1-.1-.2-.1-.3-.1h-.3-.1c-1.3-.2-2.5-1.3-2.1-2.8.3-1.1 1.3-1.7 2.3-1.8 0 0 0 .1.1.1 2.2 1.5 2.3 3.2 1.3 4.8z" })
);
icons.valla = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M210.6 19.2c-.1-.1-3.2-2.6-8.6-2.6-4.5 0-7.4 1.7-8.3 2.4H46.3c-.9-.6-3.8-2.4-8.3-2.4-5.4 0-8.5 2.5-8.6 2.6l-1 .8.9.8c.1.1 3.1 2.6 8.7 2.6 4.6 0 7.4-1.7 8.3-2.4h147.3c.9.6 3.7 2.4 8.3 2.4 5.5 0 8.5-2.5 8.7-2.6l.9-.8-.9-.8zM38 21.4c-2.8 0-4.9-.8-6.1-1.4 1.2-.6 3.3-1.4 6.1-1.4s4.9.8 6.1 1.4c-1.2.6-3.3 1.4-6.1 1.4zm164 0c-2.8 0-4.9-.8-6.1-1.4 1.2-.6 3.3-1.4 6.1-1.4s4.9.8 6.1 1.4c-1.2.6-3.3 1.4-6.1 1.4z" })
);
icons.wave1 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M213.6 22c-4.6-3.1-10.9-6.9-16.7-4.6-3.7 1.5-6.1 5.6-10.7 3.4-2.4-1.2-4.4-3.1-7-4-5.2-1.8-9.7 1.1-14.3 3.2-4.7 2.2-8.2 2.1-12.8-.3-2.5-1.2-4.8-2.9-7.6-3.3-6.5-1.1-10.2 5.5-16.4 5.5-6.5.1-11.8-5.3-18.3-5.2-2.6 0-4.9 1-7.2 2.1-4.9 2.3-8.5 3.1-13.5.7-5.7-2.7-9.4-3.8-15.5-1.3-4.6 1.9-8.2 3.4-13.3 1.8-3.6-1.1-6.8-3.3-10.6-3.9-2.4-.4-4.7-.1-7 .9-3.8 1.7-12.5 9.4-15.4 2.1-.3-.7-1.5-.5-1.2.3 1.1 3.6 4.9 4.7 8.3 4 3-.6 5.3-2.8 7.9-4.1 5.4-2.7 9.5-.6 14.6 1.5 5.9 2.5 10.2 2.3 16.1-.2 5.1-2.2 8.8-2.4 13.8 0 2.5 1.2 4.8 2.6 7.6 2.7 2.6.2 4.9-.7 7.3-1.8 4.7-2.2 8.1-3.5 13.2-1.8 5.5 1.8 10.8 5.6 16.8 3.6 2.9-1 5.1-3.2 7.9-4.3 4.9-2 8.6 1.1 12.8 3.1 5.4 2.6 9.8 1.6 14.9-1 4.7-2.3 8.5-4.1 13.5-1.4 2.6 1.4 5 3.7 8 3.9 2.7.2 4.2-1.1 6.2-2.6 6.2-4.5 12.1-1.3 17.7 2.5.9 1 2-.8.9-1.5z", fill: "#1c1c1b" })
);
icons.wave2 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40", preserveAspectRatio: "none" },
  React.createElement("path", { d: "M218.3,19.1c-5,0-7.5-1-10.1-2c-2.6-1-5.3-2-10.6-2c-5.3,0-7.9,1-10.5,2c-2.6,1-5.1,2-10.2,2c-5,0-7.5-0.9-10.1-1.9\nc-2.6-1-5.3-2.1-10.6-2.1c-5.3,0-7.9,1-10.5,2c-2.6,1-5.1,2-10.2,2c-5,0-7.5-0.9-10.1-1.9c-2.6-1-5.3-2.1-10.6-2.1 c-5.3,0-7.9,1-10.5,2c-2.6,1-5.1,2-10.2,2c-5,0-7.5-0.9-10.1-1.9c-2.6-1-5.3-2.1-10.6-2.1c-5.3,0-7.9,1-10.5,2c-2.6,1-5.1,2-10.2,2 c-5,0-7.5-0.9-10.1-1.9c-2.6-1-5.3-2.1-10.6-2.1c-0.4,0-0.6,0.3-0.6,0.6s0.3,0.6,0.6,0.6c5.1,0,7.6,1,10.2,2c2.6,1,5.3,2,10.5,2 c5.3,0,8-1,10.6-2.1c2.6-1,5-1.9,10.1-1.9c5.1,0,7.6,1,10.2,2c2.6,1,5.3,2,10.5,2c5.3,0,8-1,10.6-2.1c2.6-1,5-1.9,10.1-1.9 c5.1,0,7.6,1,10.2,2c2.6,1,5.3,2,10.5,2c5.3,0,8-1,10.6-2.1c2.6-1,5-1.9,10.1-1.9c5.1,0,7.6,1,10.2,2c2.6,1,5.3,2,10.5,2 c5.3,0,8-1,10.6-2.1c2.6-1,5-1.9,10.1-1.9c5,0,7.5,1,10.1,2c2.6,1,5.3,2,10.6,2c0.4,0,0.7-0.3,0.7-0.6S218.7,19.1,218.3,19.1z" })
);
icons.wave3 = React.createElement(
  "svg",
  { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 240 40" },
  React.createElement("path", { d: "M216.4 22.2c-2.2 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.2 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.2 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.2 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.1 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6s-3.3-.9-4.3-1.6c-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6s-3.3-.9-4.3-1.6c-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.2 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.2 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.1 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.1 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6-2.1 0-3.3-.9-4.3-1.6-.9-.7-1.8-1.4-3.5-1.4s-2.5.6-3.5 1.4c-1 .8-2.1 1.6-4.3 1.6s-3.3-.9-4.3-1.6c-.9-.7-1.7-1.4-3.5-1.4v-1.3c2.1 0 3.3.9 4.3 1.6.9.7 1.7 1.4 3.5 1.4 1.7 0 2.5-.6 3.5-1.4 1-.8 2.1-1.6 4.3-1.6 2.1 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.1 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.1 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.2 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.2 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6s3.3.9 4.3 1.6c.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6s3.3.9 4.3 1.6c.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.1 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6s3.3.9 4.3 1.6c.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6s3.3.9 4.3 1.6c.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.2 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4s2.5-.6 3.5-1.4c1-.8 2.1-1.6 4.3-1.6 2.2 0 3.3.9 4.3 1.6.9.7 1.8 1.4 3.5 1.4v1.3z" })
);
exports.default = icons;

/***/ }),

/***/ "./src/blocks/divider/index.js":
/*!*************************************!*\
  !*** ./src/blocks/divider/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/divider/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/divider/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/divider/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/divider', {
    title: __('Divider'),
    description: 'Use beautiful pre-designed dividers with Qubely Divider.',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-divider.svg', alt: __('Divider Block') }),
    category: 'qubely',
    keywords: [__('Divider'), __('Separator')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        style: { type: 'string', default: 'slash' },
        color: { type: 'string', default: '#252525', style: [{ selector: '{{QUBELY}} .qubely-block-divider > div { border-top-color: {{color}}; } {{QUBELY}} .qubely-block-divider path { fill: {{color}}; } {{QUBELY}} .qubely-block-divider circle { stroke: {{color}}; }  {{QUBELY}} .qubely-block-divider ellipse { stroke: {{color}}; fill: {{color}}; }' }] },
        height: { type: 'object', default: { md: '2', unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-block-divider > div { border-top-width: {{height}};}' }] },
        width: { type: 'object', default: { md: '280', unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-block-divider > div { width: {{width}};} {{QUBELY}} .qubely-block-divider svg { width: {{width}};}' }] },
        alignment: { type: 'object', default: { md: 'center' }, style: [{ selector: '{{QUBELY}} .qubely-block-divider {text-align: {{alignment}};}' }] },
        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/divider/style.scss":
/*!***************************************!*\
  !*** ./src/blocks/divider/style.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/divider/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/heading/Edit.js":
/*!************************************!*\
  !*** ./src/blocks/heading/Edit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../../components/fields/inline/editorInline */ "./src/components/fields/inline/editorInline.js");

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    SelectControl = _wp$components.SelectControl;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Color = _wp$qubelyComponents.Color,
    Typography = _wp$qubelyComponents.Typography,
    Alignment = _wp$qubelyComponents.Alignment,
    Range = _wp$qubelyComponents.Range,
    Toggle = _wp$qubelyComponents.Toggle,
    Headings = _wp$qubelyComponents.Headings,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.Inline,
    InlineToolbar = _wp$qubelyComponents$2.InlineToolbar,
    InlineSelector = _wp$qubelyComponents$2.InlineSelector,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$3 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$3.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$3.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit() {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

        _this.state = { device: 'md', selector: true, spacer: true };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                isSelected = _props2.isSelected,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                content = _props2$attributes.content,
                typography = _props2$attributes.typography,
                alignment = _props2$attributes.alignment,
                selector = _props2$attributes.selector,
                textColor = _props2$attributes.textColor,
                separatorStyle = _props2$attributes.separatorStyle,
                separatorColor = _props2$attributes.separatorColor,
                separatorStroke = _props2$attributes.separatorStroke,
                separatorPosition = _props2$attributes.separatorPosition,
                separatorWidth = _props2$attributes.separatorWidth,
                separatorSpacing = _props2$attributes.separatorSpacing,
                subHeading = _props2$attributes.subHeading,
                subHeadingLevel = _props2$attributes.subHeadingLevel,
                subHeadingContent = _props2$attributes.subHeadingContent,
                subHeadingTypography = _props2$attributes.subHeadingTypography,
                subHeadingColor = _props2$attributes.subHeadingColor,
                subHeadingSpacing = _props2$attributes.subHeadingSpacing,
                subHeadingPosition = _props2$attributes.subHeadingPosition,
                animation = _props2$attributes.animation,
                globalZindex = _props2$attributes.globalZindex,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction;
            var device = this.state.device;


            var separators = {
                solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
                double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
                dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
                dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
                pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
                pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
                zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
                zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
            };

            var subHeadingTagName = 'h' + subHeadingLevel;

            var renderSeparators = React.createElement(
                Fragment,
                null,
                separatorStyle && React.createElement(
                    Fragment,
                    null,
                    separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
                    separators[separatorStyle].type == 'svg' && React.createElement(
                        'span',
                        { className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
                        separators[separatorStyle].svg
                    )
                )
            );

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'heading', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '', initialOpen: true },
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Heading'), initialOpen: false },
                        React.createElement(Color, { label: __('Color'), value: textColor, onChange: function onChange(val) {
                                return setAttributes({ textColor: val });
                            } }),
                        React.createElement(Typography, { label: __('Typography'), value: typography, onChange: function onChange(val) {
                                return setAttributes({ typography: val });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Sub Heading'), initialOpen: false },
                        React.createElement(Toggle, { label: __('Enable'), value: subHeading, onChange: function onChange(val) {
                                return setAttributes({ subHeading: val });
                            } }),
                        subHeading == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Headings, { selectedLevel: subHeadingLevel, onChange: function onChange(value) {
                                    return setAttributes({ subHeadingLevel: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), value: subHeadingTypography, onChange: function onChange(val) {
                                    return setAttributes({ subHeadingTypography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: subHeadingColor, onChange: function onChange(val) {
                                    return setAttributes({ subHeadingColor: val });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: subHeadingSpacing, onChange: function onChange(value) {
                                    return setAttributes({ subHeadingSpacing: value });
                                }, unit: ['px', 'em', '%'], min: 0, max: 60, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(RadioAdvanced, { label: __('Position'), value: subHeadingPosition, onChange: function onChange(val) {
                                    return setAttributes({ subHeadingPosition: val });
                                },
                                options: [{ label: __('After Title'), value: 'after_title', title: __('After Title') }, { label: __('Before Title'), value: 'before_title', title: __('Before Title') }]
                            })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Separator'), initialOpen: false },
                        React.createElement(SelectControl, {
                            label: 'Style',
                            value: separatorStyle,
                            options: [{ label: '--Select--', value: '' }, { label: 'Line', value: 'solid' }, { label: 'Line Doubled', value: 'double' }, { label: 'Dashed', value: 'dashed' }, { label: 'Dotted', value: 'dotted' }, { label: 'Pin', value: 'pin' }, { label: 'Pin Filled', value: 'pin_filled' }, { label: 'Zigzag', value: 'zigzag' }, { label: 'Zigzag Large', value: 'zigzag_large' }],
                            onChange: function onChange(val) {
                                return setAttributes({ separatorStyle: val });
                            }
                        }),
                        separatorStyle && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Color, { label: __('Separator Color'), value: separatorColor, onChange: function onChange(val) {
                                    return setAttributes({ separatorColor: val });
                                } }),
                            separatorStyle != 'pin' && separatorStyle != 'pin_filled' && React.createElement(Range, { label: __('Stroke'), value: separatorStroke, onChange: function onChange(val) {
                                    return setAttributes({ separatorStroke: parseInt(val) });
                                }, min: 1, max: separators[separatorStyle].stroke }),
                            React.createElement(Range, { label: __('Width'), value: separatorWidth, onChange: function onChange(val) {
                                    return setAttributes({ separatorWidth: val });
                                }, min: 20, max: separators[separatorStyle].width, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: separatorSpacing, onChange: function onChange(val) {
                                    return setAttributes({ separatorSpacing: val });
                                }, min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(SelectControl, {
                                label: 'Position',
                                value: separatorPosition,
                                options: [{ label: 'Top', value: 'top' }, { label: 'Bottom', value: 'bottom' }, { label: 'Left', value: 'left' }, { label: 'Right', value: 'right' }, { label: 'Left & Right', value: 'leftright' }],
                                onChange: function onChange(val) {
                                    return setAttributes({ separatorPosition: val });
                                }
                            })
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(InlineSelector, {
                        options: [['h1', 'Heading 1'], ['h2', 'Heading 2'], ['h3', 'Heading 3'], ['h4', 'Heading 4'], ['h5', 'Heading 5'], ['h6', 'Heading 6']],
                        selector: selector,
                        setAttributes: setAttributes }),
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        {
                            onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            },
                            className: 'qubely-block-heading ' + (separatorStyle ? 'qubely-has-separator qubely-separator-position-' + separatorPosition : '') },
                        subHeading == 1 && subHeadingPosition == 'before_title' && React.createElement(RichText, {
                            key: 'editable',
                            tagName: subHeadingTagName,
                            className: 'qubely-sub-heading-selector',
                            keepPlaceholderOnFocus: true,
                            placeholder: __('Add Text...'),
                            onChange: function onChange(value) {
                                return setAttributes({ subHeadingContent: value });
                            },
                            value: subHeadingContent }),
                        React.createElement(
                            'div',
                            { className: 'qubely-heading-container' },
                            separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') ? React.createElement(
                                'div',
                                { className: 'qubely-separator qubely-separator-before' },
                                renderSeparators
                            ) : '',
                            React.createElement(RichText, {
                                key: 'editable',
                                tagName: selector,
                                className: 'qubely-heading-selector',
                                keepPlaceholderOnFocus: true,
                                placeholder: __('Add Text...'),
                                onChange: function onChange(value) {
                                    return setAttributes({ content: value });
                                },
                                value: content }),
                            separatorStyle != '' && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') ? React.createElement(
                                'div',
                                { className: 'qubely-separator qubely-separator-after' },
                                renderSeparators
                            ) : ''
                        ),
                        subHeading == 1 && subHeadingPosition == 'after_title' && React.createElement(RichText, {
                            key: 'editable',
                            tagName: subHeadingTagName,
                            className: 'qubely-sub-heading-selector',
                            keepPlaceholderOnFocus: true,
                            placeholder: __('Add Text...'),
                            onChange: function onChange(value) {
                                return setAttributes({ subHeadingContent: value });
                            },
                            value: subHeadingContent }),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/heading/Save.js":
/*!************************************!*\
  !*** ./src/blocks/heading/Save.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Save);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderSeparators = function () {
            var separatorStyle = _this.props.attributes.separatorStyle;

            var separators = {
                solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
                double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
                dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
                dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
                pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
                pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
                zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
                zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
            };
            return React.createElement(
                Fragment,
                null,
                separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
                separators[separatorStyle].type == 'svg' && React.createElement(
                    'span',
                    { className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
                    separators[separatorStyle].svg
                )
            );
        }, _this.rendeSubHeading = function () {
            var _this$props$attribute = _this.props.attributes,
                subHeading = _this$props$attribute.subHeading,
                subHeadingLevel = _this$props$attribute.subHeadingLevel,
                subHeadingContent = _this$props$attribute.subHeadingContent;


            if (subHeading) {
                var subSubTagName = 'h' + subHeadingLevel;
                return React.createElement(RichText.Content, {
                    tagName: subSubTagName,
                    className: 'qubely-sub-heading-selector',
                    value: subHeadingContent });
            } else return null;
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                content = _props$attributes.content,
                selector = _props$attributes.selector,
                separatorStyle = _props$attributes.separatorStyle,
                separatorPosition = _props$attributes.separatorPosition,
                subHeadingPosition = _props$attributes.subHeadingPosition,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-heading ' + interactionClass + ' ' + (separatorStyle ? 'qubely-has-separator qubely-separator-position-' + separatorPosition : '') },
                    subHeadingPosition == 'before_title' && this.rendeSubHeading(),
                    React.createElement(
                        'div',
                        { className: 'qubely-heading-container' },
                        separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') && React.createElement(
                            'div',
                            { className: 'qubely-separator qubely-separator-before' },
                            this.renderSeparators()
                        ),
                        React.createElement(RichText.Content, { tagName: selector, className: 'qubely-heading-selector', value: content }),
                        separatorStyle && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') && React.createElement(
                            'div',
                            { className: 'qubely-separator qubely-separator-after' },
                            this.renderSeparators()
                        )
                    ),
                    subHeadingPosition == 'after_title' && this.rendeSubHeading()
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/heading/index.js":
/*!*************************************!*\
  !*** ./src/blocks/heading/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/heading/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/heading/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/heading/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/heading', {
	title: __('Heading'),
	description: 'Make headlines/titles that attract users with Qubely Heading.',
	category: 'qubely',
	icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-heading.svg', alt: __('Heading Block') }),
	supports: {
		align: ['center', 'wide', 'full']
	},
	keywords: [__('heading'), __('head'), __('title')],
	example: {
		attributes: {
			content: __('Make headlines/titles that attract users with Qubely Heading.', 'qubely')
		}
	},
	attributes: _extends({
		uniqueId: { type: 'string', default: '' }
	}, globalAttributes, {
		spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
		content: {
			type: 'string',
			source: 'html',
			selector: '.qubely-heading-selector',
			default: 'Qubely - A Full-fledged Gutenberg Builder'
		},
		alignment: {
			type: 'object',
			default: {},
			style: [{ selector: '{{QUBELY}}{text-align: {{alignment}}; }' }]
		},
		typography: {
			type: 'object',
			default: { openTypography: 1, size: { md: 24, unit: 'px' } },
			style: [{ selector: '{{QUBELY}} .qubely-block-heading .qubely-heading-selector' }]
		},
		separatorStyle: {
			type: 'string',
			default: '',
			style: [{
				condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-separator-type-css {border-top-style: {{separatorStyle}};}'
			}]
		},
		separatorPosition: { type: 'string', default: 'top' },
		separatorColor: {
			type: 'string',
			default: '#5D7FEB',
			style: [{
				condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-separator-type-svg svg .qubely-separator-stroke {stroke: {{separatorColor}};} {{QUBELY}} .qubely-block-heading svg .qubely-separator-fill {fill: {{separatorColor}};} {{QUBELY}} .qubely-separator-type-css {border-top-color: {{separatorColor}};}'
			}]
		},
		separatorStroke: {
			type: 'number',
			default: 3,
			style: [{
				condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-separator-type-svg svg .qubely-separator-stroke {stroke-width: {{separatorStroke}}px;} {{QUBELY}} .qubely-block-heading .qubely-separator-type-css {border-top-width: {{separatorStroke}}px;}'
			}]
		},
		separatorWidth: {
			type: 'object',
			default: { md: 60 },
			style: [{
				condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-separator-type-css {width: {{separatorWidth}}px;} {{QUBELY}} .qubely-block-heading .qubely-separator-type-svg svg {width: {{separatorWidth}}px;}'
			}]
		},
		separatorSpacing: {
			type: 'object',
			default: { md: 10 },
			style: [{
				condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
				selector: '{{QUBELY}} .qubely-separator-position-left .qubely-separator {margin-right: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-position-right .qubely-separator {margin-left: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-position-leftright .qubely-separator-before {margin-right: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-position-leftright .qubely-separator-after {margin-left: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-position-top .qubely-separator {margin-bottom: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-position-bottom .qubely-separator {margin-top: {{separatorSpacing}}px;}'
			}]
		},

		subHeading: { type: 'boolean', default: false },
		subHeadingLevel: { type: 'number', default: 3 },
		subHeadingContent: {
			type: 'string',
			source: 'html',
			selector: '.qubely-sub-heading-selector',
			default: 'Sub Heading'
		},
		subHeadingTypography: {
			type: 'object',
			default: { openTypography: 1, size: { md: 16, unit: 'px' } },
			style: [{
				selector: '{{QUBELY}} .qubely-block-heading .qubely-sub-heading-selector'
			}]
		},
		subHeadingColor: {
			type: 'string', default: '#333',
			style: [{
				condition: [{ key: 'subHeading', relation: '==', value: 1 }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-sub-heading-selector {color: {{subHeadingColor}};}'
			}]
		},
		subHeadingPosition: {
			type: 'string',
			default: 'after_title'
		},
		subHeadingSpacing: {
			type: 'object',
			default: {
				md: 10,
				unit: 'px'
			},
			style: [{
				condition: [{ key: 'subHeading', relation: '==', value: 1 }, { key: 'subHeadingPosition', relation: '==', value: 'after_title' }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-sub-heading-selector {margin-top: {{subHeadingSpacing}};}'
			}, {
				condition: [{ key: 'subHeading', relation: '==', value: 1 }, { key: 'subHeadingPosition', relation: '==', value: 'before_title' }],
				selector: '{{QUBELY}} .qubely-block-heading .qubely-sub-heading-selector {margin-bottom: {{subHeadingSpacing}};}'
			}]
		},

		selector: { type: 'string', default: 'h2' },
		textColor: {
			type: 'string', default: '',
			style: [{
				selector: '{{QUBELY}} .qubely-block-heading .qubely-heading-selector { color:{{textColor}}; }'
			}]
		},
		sourceOfCopiedStyle: { type: 'boolean', default: false }
	}),
	edit: _Edit2.default,
	save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/heading/separators.js":
/*!******************************************!*\
  !*** ./src/blocks/heading/separators.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var separators = {};
separators.zigzag = React.createElement(
  "svg",
  { width: "88", height: "11", viewBox: "0 0 88 11", xmlns: "http://www.w3.org/2000/svg" },
  React.createElement("path", { d: "M87.387 9.066c-7.279 0-7.279-6.787-14.557-6.787-7.28 0-7.28 6.787-14.561 6.787-7.283 0-7.283-6.787-14.565-6.787l-14.562 6.787c-7.286 0-7.286-6.787-14.57-6.787-7.287 0-7.287 6.787-14.571 6.787", "class": "qubely-separator-stroke", fill: "none" })
);
separators.zigzag_large = React.createElement(
  "svg",
  { width: "161", height: "11", viewBox: "0 0 161 11", xmlns: "http://www.w3.org/2000/svg" },
  React.createElement("path", { d: "M161 9c-8.05 0-8.05-7-16.099-7-8.043 0-8.043 7-16.088 7-8.047 0-8.047-7-16.095-7-8.05 0-8.05 7-16.097 7-8.045 0-8.045-7-16.095-7-8.05 0-8.05 7-16.099 7-8.047 0-8.047-7-16.092-7-8.05 0-8.05 7-16.104 7-8.059 0-8.059-7-16.116-7s-8.057 7-16.116 7", "class": "qubely-separator-stroke", fill: "none" })
);
separators.pin_filled = React.createElement(
  "svg",
  { width: "100", height: "20", viewBox: "0 0 100 20", xmlns: "http://www.w3.org/2000/svg" },
  React.createElement("path", { d: "M18.948 8.5h80.196v3h-80.196c-.719 4.534-4.646 8-9.382 8-5.247 0-9.5-4.253-9.5-9.5s4.253-9.5 9.5-9.5c4.736 0 8.663 3.466 9.382 8z", "class": "qubely-separator-fill", "fill-rule": "nonzero" })
);
separators.pin = React.createElement(
  "svg",
  { width: "99", height: "19", viewBox: "0 0 99 19", xmlns: "http://www.w3.org/2000/svg" },
  React.createElement("path", { d: "M18.946 8h79.793v3h-79.793c-.719 4.534-4.646 8-9.382 8-5.247 0-9.5-4.253-9.5-9.5s4.253-9.5 9.5-9.5c4.736 0 8.663 3.466 9.382 8zm-15.882 1.5c0 3.59 2.91 6.5 6.5 6.5s6.5-2.91 6.5-6.5-2.91-6.5-6.5-6.5-6.5 2.91-6.5 6.5z", "class": "qubely-separator-fill", "fill-rule": "nonzero" })
);
exports.default = separators;

/***/ }),

/***/ "./src/blocks/heading/style.scss":
/*!***************************************!*\
  !*** ./src/blocks/heading/style.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/heading/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/icon/Edit.js":
/*!*********************************!*\
  !*** ./src/blocks/icon/Edit.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Color = _wp$qubelyComponents.Color,
    IconList = _wp$qubelyComponents.IconList,
    Styles = _wp$qubelyComponents.Styles,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Range = _wp$qubelyComponents.Range,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Url = _wp$qubelyComponents.Url,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Alignment = _wp$qubelyComponents.Alignment,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit() {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

		_this.changeIconStyle = function (newStyle) {
			var _this$props = _this.props,
			    setAttributes = _this$props.setAttributes,
			    _this$props$attribute = _this$props.attributes,
			    border = _this$props$attribute.border,
			    iconStyle = _this$props$attribute.iconStyle;

			var newBorder = JSON.parse(JSON.stringify(border));
			if (newStyle == 'outline') {
				newBorder.widthType = border.widthType ? border.widthType : 'global';
				newBorder.global = border.global ? border.global : { md: '1', sm: '1', xs: '1' };
				newBorder.type = border.type ? border.type : 'solid';
				newBorder.unit = border.unit ? border.unit : 'px';
				newBorder.openBorder = border.openBorder ? border.openBorder : 1;
			}
			if (newStyle == 'fill') {
				newBorder.type = iconStyle == 'fill' ? border.type : '';
				newBorder.openBorder = iconStyle == 'fill' ? border.openBorder : 0;
			}

			setAttributes({ iconStyle: newStyle, border: newBorder });
		};

		_this.state = { device: 'md', spacer: true };
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    uniqueId = _props.attributes.uniqueId;

			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    clientId = _props2.clientId,
			    isSelected = _props2.isSelected,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes,
			    _props2$attributes = _props2.attributes,
			    uniqueId = _props2$attributes.uniqueId,
			    className = _props2$attributes.className,
			    name = _props2$attributes.name,
			    url = _props2$attributes.url,
			    alignment = _props2$attributes.alignment,
			    iconSize = _props2$attributes.iconSize,
			    iconSizeCustom = _props2$attributes.iconSizeCustom,
			    iconBorderRadius = _props2$attributes.iconBorderRadius,
			    iconBackgroundSize = _props2$attributes.iconBackgroundSize,
			    iconColor = _props2$attributes.iconColor,
			    iconHoverColor = _props2$attributes.iconHoverColor,
			    bgColor = _props2$attributes.bgColor,
			    bgHoverColor = _props2$attributes.bgHoverColor,
			    border = _props2$attributes.border,
			    borderHoverColor = _props2$attributes.borderHoverColor,
			    iconShadow = _props2$attributes.iconShadow,
			    iconHoverShadow = _props2$attributes.iconHoverShadow,
			    iconStyle = _props2$attributes.iconStyle,
			    animation = _props2$attributes.animation,
			    enablePosition = _props2$attributes.enablePosition,
			    selectPosition = _props2$attributes.selectPosition,
			    positionXaxis = _props2$attributes.positionXaxis,
			    positionYaxis = _props2$attributes.positionYaxis,
			    globalZindex = _props2$attributes.globalZindex,
			    hideTablet = _props2$attributes.hideTablet,
			    hideMobile = _props2$attributes.hideMobile,
			    globalCss = _props2$attributes.globalCss,
			    interaction = _props2$attributes.interaction;


			if (uniqueId) {
				CssGenerator(this.props.attributes, 'icon', uniqueId);
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: '' },
						React.createElement(Styles, {
							value: iconStyle,
							columns: 3,
							onChange: function onChange(val) {
								return _this2.changeIconStyle(val);
							},
							options: [{ value: 'nofill', svg: _icons2.default.icon_classic, label: __('Classic') }, { value: 'fill', svg: _icons2.default.icon_fill, label: __('Fill') }, { value: 'outline', svg: _icons2.default.icon_line, label: __('Outline') }]
						}),
						React.createElement(Alignment, {
							label: __('Alignment'),
							value: alignment,
							onChange: function onChange(val) {
								return setAttributes({ alignment: val });
							}, alignmentType: 'content', disableJustify: true, responsive: true, device: this.state.device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Icon'), initialOpen: false },
						React.createElement(IconList, {
							value: name,
							onChange: function onChange(val) {
								return setAttributes({ name: val });
							} }),
						React.createElement(RadioAdvanced, {
							label: __('Icon Size'),
							options: [{ label: 'S', value: '36px', title: 'Small' }, { label: 'M', value: '64px', title: 'Medium' }, { label: 'L', value: '128px', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
							value: iconSize,
							onChange: function onChange(value) {
								return setAttributes({ iconSize: value });
							} }),
						iconSize == 'custom' && React.createElement(Range, {
							label: __('Custom Size'),
							value: iconSizeCustom,
							onChange: function onChange(val) {
								return setAttributes({ iconSizeCustom: val });
							},
							min: 12,
							max: 300,
							unit: ['px', 'em', '%'],
							responsive: true,
							device: this.state.device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Url, {
							label: __('Url'),
							value: url,
							onChange: function onChange(val) {
								return setAttributes({ url: val });
							} }),
						React.createElement(
							Tabs,
							null,
							React.createElement(
								Tab,
								{ tabTitle: __('Normal') },
								React.createElement(Color, {
									label: __('Color'),
									value: iconColor,
									onChange: function onChange(val) {
										return setAttributes({ iconColor: val });
									} })
							),
							React.createElement(
								Tab,
								{ tabTitle: __('Hover') },
								React.createElement(Color, {
									label: __('Color'),
									value: iconHoverColor,
									onChange: function onChange(val) {
										return setAttributes({ iconHoverColor: val });
									} })
							)
						)
					),
					iconStyle != 'nofill' && React.createElement(
						PanelBody,
						{ title: __('Background'), initialOpen: false },
						React.createElement(
							Tabs,
							null,
							React.createElement(
								Tab,
								{ tabTitle: __('Normal') },
								iconStyle == 'fill' && React.createElement(ColorAdvanced, {
									label: __('Background Color'),
									value: bgColor,
									onChange: function onChange(val) {
										return setAttributes({ bgColor: val });
									} }),
								React.createElement(Border, {
									label: __('Border'),
									value: border,
									unit: ['px', 'em'],
									responsive: true,
									min: 0, max: 10,
									onChange: function onChange(val) {
										return setAttributes({ border: val });
									},
									device: this.state.device,
									onDeviceChange: function onDeviceChange(value) {
										return _this2.setState({ device: value });
									} })
							),
							React.createElement(
								Tab,
								{ tabTitle: __('Hover') },
								React.createElement(ColorAdvanced, {
									label: __('Background Color'),
									value: bgHoverColor,
									onChange: function onChange(val) {
										return setAttributes({ bgHoverColor: val });
									} }),
								border.type && React.createElement(Color, {
									label: __('Border Color'),
									value: borderHoverColor,
									onChange: function onChange(val) {
										return setAttributes({ borderHoverColor: val });
									} })
							)
						),
						React.createElement(Range, {
							label: __('Background Size'),
							value: iconBackgroundSize,
							min: 0,
							max: 200,
							unit: ['px', 'em', '%'],
							responsive: true,
							device: this.state.device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							},
							onChange: function onChange(val) {
								return setAttributes({ iconBackgroundSize: val });
							}
						}),
						React.createElement(BorderRadius, {
							label: __('Border Radius'),
							value: iconBorderRadius,
							min: 0,
							max: 100,
							unit: ['px', 'em', '%'],
							responsive: true,
							device: this.state.device,
							onChange: function onChange(val) {
								return setAttributes({ iconBorderRadius: val });
							},
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							}
						})
					),
					iconStyle != 'nofill' && React.createElement(
						PanelBody,
						{ title: __('Shadow'), initialOpen: false },
						React.createElement(
							Tabs,
							null,
							React.createElement(
								Tab,
								{ tabTitle: __('Normal') },
								React.createElement(BoxShadow, {
									label: __('Box-shadow'),
									value: iconShadow,
									onChange: function onChange(val) {
										return setAttributes({ iconShadow: val });
									} })
							),
							React.createElement(
								Tab,
								{ tabTitle: __('Hover') },
								React.createElement(BoxShadow, {
									label: __('Box-shadow'),
									value: iconHoverShadow,
									onChange: function onChange(val) {
										return setAttributes({ iconHoverShadow: val });
									} })
							)
						)
					),
					animationSettings(uniqueId, animation, setAttributes),
					interactionSettings(uniqueId, interaction, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
						}, this.props, {
							prevState: this.state
						}))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					React.createElement(
						'div',
						{ className: 'qubely-block-icon-wrapper', onContextMenu: function onContextMenu(event) {
								return handleContextMenu(event, _this2.refs.qubelyContextMenu);
							} },
						React.createElement(
							'div',
							{ className: 'qubely-block-icon' },
							React.createElement('i', { className: name })
						),
						React.createElement(
							'div',
							{ ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
							React.createElement(ContextMenu, {
								name: this.props.name,
								clientId: clientId,
								attributes: attributes,
								setAttributes: setAttributes,
								qubelyContextMenu: this.refs.qubelyContextMenu
							})
						)
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/icon/Save.js":
/*!*********************************!*\
  !*** ./src/blocks/icon/Save.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    name = _props$attributes.name,
			    url = _props$attributes.url,
			    animation = _props$attributes.animation,
			    interaction = _props$attributes.interaction;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-icon-wrapper ' + interactionClass },
					React.createElement(
						'div',
						{ className: 'qubely-block-icon' },
						url.url ? React.createElement(
							'a',
							_extends({ className: 'qubely-icon-block-anchor', href: url.url || '#' }, url.target && { target: '_blank' }, url.nofollow && { rel: 'nofollow noopener noreferrer' }),
							React.createElement('i', { className: name })
						) : React.createElement('i', { className: name })
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/icon/index.js":
/*!**********************************!*\
  !*** ./src/blocks/icon/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/icon/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/icon/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/icon/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/icon', {
	title: __('Icon'),
	description: 'Place icons of various preset styles with Qubely icons.',
	category: 'qubely',
	icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-icon.svg', alt: __('Icon Block') }),
	supports: {
		align: ['center', 'wide', 'full']
	},
	keywords: [__('Icon'), __('Font Awesome'), __('Line Icon')],
	example: {
		attributes: {
			name: 'fas fa-rocket'
		}
	},
	attributes: _extends({
		uniqueId: { type: 'string', default: '' }
	}, globalAttributes, {
		spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
		name: { type: 'string', default: 'fas fa-rocket' },
		url: { type: 'object', default: {} },
		alignment: { type: 'object', default: { md: 'center' }, style: [{ selector: '{{QUBELY}} .qubely-block-icon-wrapper {text-align: {{alignment}};}' }] },
		iconStyle: { type: 'string', default: 'nofill' },
		iconColor: { type: 'string', default: '#338FEC', style: [{ selector: '{{QUBELY}} .qubely-block-icon i {color: {{iconColor}};}' }] },
		iconHoverColor: { type: 'string', default: '#2476CA', style: [{ selector: '{{QUBELY}} .qubely-block-icon:hover i {color: {{iconHoverColor}};}' }] },
		bgColor: { type: 'object', default: { openColor: 1, type: 'color', color: '#D6EBFF' }, style: [{ condition: [{ key: 'iconStyle', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-block-icon' }] },
		bgHoverColor: { type: 'object', default: { openColor: 1, type: 'color', color: '#B4D9FF', gradient: {} }, style: [{ condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }], selector: '{{QUBELY}} .qubely-block-icon:hover' }] },
		border: {
			type: 'object',
			default: {
				color: "#338FEC"
			},
			style: [{ condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }], selector: '{{QUBELY}} .qubely-block-icon' }]
		},
		borderHoverColor: { type: 'string', default: '#2476CA', style: [{ condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }], selector: '{{QUBELY}} .qubely-block-icon:hover {border-color: {{borderHoverColor}};}' }] },
		iconSize: { type: 'string', default: '64px', style: [{ condition: [{ key: 'iconSize', relation: '!=', value: 'custom' }], selector: '{{QUBELY}} .qubely-block-icon {font-size: {{iconSize}};}' }] },
		iconSizeCustom: { type: 'object', default: { md: 64, unit: 'px' }, style: [{ condition: [{ key: 'iconSize', relation: '==', value: 'custom' }], selector: '{{QUBELY}} .qubely-block-icon {font-size: {{iconSizeCustom}};}' }] },
		iconBackgroundSize: { type: 'object', default: { md: '20', unit: 'px' }, style: [{ condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }], selector: '{{QUBELY}} .qubely-block-icon { padding: {{iconBackgroundSize}};}' }] },
		iconBorderRadius: {
			type: 'object',
			default: {
				openBorderRadius: 1,
				radiusType: 'global',
				global: {
					md: 100
				},
				unit: '%'
			},
			style: [{
				condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }],
				selector: '{{QUBELY}} .qubely-block-icon'
			}]
		},

		iconShadow: {
			type: 'object',
			default: {},
			style: [{
				condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }],
				selector: '{{QUBELY}} .qubely-block-icon'
			}]
		},
		iconHoverShadow: {
			type: 'object',
			default: {},
			style: [{
				condition: [{ key: 'iconStyle', relation: '!=', value: 'nofill' }],
				selector: '{{QUBELY}} .qubely-block-icon:hover'
			}]
		},
		sourceOfCopiedStyle: { type: 'boolean', default: false }
	}),
	edit: _Edit2.default,
	save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/icon/style.scss":
/*!************************************!*\
  !*** ./src/blocks/icon/style.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/icon/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/iconlist/Edit.js":
/*!*************************************!*\
  !*** ./src/blocks/iconlist/Edit.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var InspectorControls = wp.blockEditor.InspectorControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Tooltip = _wp$components.Tooltip,
    Popover = _wp$components.Popover;
var _wp$qubelyComponents = wp.qubelyComponents,
    Typography = _wp$qubelyComponents.Typography,
    Alignment = _wp$qubelyComponents.Alignment,
    Padding = _wp$qubelyComponents.Padding,
    Styles = _wp$qubelyComponents.Styles,
    Range = _wp$qubelyComponents.Range,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    IconList = _wp$qubelyComponents.IconList,
    Color = _wp$qubelyComponents.Color,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Separator = _wp$qubelyComponents.Separator,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.modifySpecificItem = function (value, index) {
            var _this$props = _this.props,
                listItems = _this$props.attributes.listItems,
                setAttributes = _this$props.setAttributes;

            var modifiedListItems = listItems.map(function (listItem, currentIndex) {
                if (index === currentIndex) {
                    listItem = _extends({}, listItem, value);
                }
                return listItem;
            });
            setAttributes({ listItems: modifiedListItems });
        };

        _this.updateListItems = function (index, operation) {
            var _this$props2 = _this.props,
                listItems = _this$props2.attributes.listItems,
                setAttributes = _this$props2.setAttributes;

            var newList = JSON.parse(JSON.stringify(listItems));
            operation == 'add' ? newList.splice(index + 1, 0, { icon: 'fas fa-arrow-right', text: '' }) : newList.splice(index, 1);
            _this.setState({ openIconPopUp: false });
            setAttributes({ listItems: newList });
        };

        _this.placeCaretAtEnd = function (el) {
            el.focus();
            if (typeof window.getSelection != "undefined" && typeof document.createRange != "undefined") {
                var range = document.createRange();
                range.selectNodeContents(el);
                range.collapse(false);
                var sel = window.getSelection();
                sel.removeAllRanges();
                sel.addRange(range);
            } else if (typeof document.body.createTextRange != "undefined") {
                var textRange = document.body.createTextRange();
                textRange.moveToElementText(el);
                textRange.collapse(false);
                textRange.select();
            }
        };

        _this.renderListItems = function () {
            var _this$props3 = _this.props,
                isSelected = _this$props3.isSelected,
                _this$props3$attribut = _this$props3.attributes,
                iconPosition = _this$props3$attribut.iconPosition,
                listItems = _this$props3$attribut.listItems;
            var _this$state = _this.state,
                focusedItem = _this$state.focusedItem,
                removeItemViaBackSpace = _this$state.removeItemViaBackSpace,
                currentListItemIndex = _this$state.currentListItemIndex,
                openIconPopUp = _this$state.openIconPopUp;

            return listItems.map(function (item, index) {
                return React.createElement(
                    'li',
                    { className: 'qubely-list-li qubely-list-li-editor' },
                    React.createElement(
                        'div',
                        { ref: 'avoidOnClick', className: 'qubely-list-item qubely-list-item-' + index, onClick: function onClick() {
                                return _this.setState({ currentListItemIndex: index });
                            } },
                        iconPosition == 'left' && React.createElement('span', { className: 'qubely-list-item-icon ' + item.icon + ' fa-fw', onClick: function onClick() {
                                return _this.setState({ openIconPopUp: openIconPopUp ? currentListItemIndex == index ? false : true : true });
                            } }),
                        React.createElement(
                            'div',
                            {
                                className: 'qubely-list-item-text-' + index,
                                id: 'qubely-list-item-text-' + index,
                                contenteditable: 'true',
                                placeholder: 'Enter new list item',
                                onBlur: function onBlur(event) {
                                    return _this.modifySpecificItem({ text: event.target.innerText }, index);
                                },
                                onKeyPress: function onKeyPress(event) {
                                    if (event.key == 'Enter') {
                                        event.preventDefault();
                                        _this.updateListItems(index, 'add');
                                        _this.setState({ focusedItem: index + 1 == listItems.length ? listItems.length : focusedItem + 1 });
                                    }
                                },
                                onKeyUp: function onKeyUp(event) {
                                    if (event.key == 'Backspace') {
                                        event.target.innerText.length == 0 && _this.setState({ removeItemViaBackSpace: index });
                                        if (removeItemViaBackSpace == index) {
                                            _this.updateListItems(index, 'delete');
                                            _this.setState({ focusedItem: index > 0 ? index - 1 : index, removeItemViaBackSpace: -1 });
                                        }
                                    }
                                },
                                onClick: function onClick() {
                                    return _this.setState({ focusedItem: index });
                                } },
                            item.text
                        ),
                        iconPosition == 'right' && React.createElement('span', { className: 'qubely-list-item-icon ' + item.icon + ' fa-fw', onClick: function onClick() {
                                return _this.setState({ openIconPopUp: openIconPopUp ? currentListItemIndex == index ? false : true : true });
                            } }),
                        item.text.length > 0 && React.createElement(
                            Tooltip,
                            { text: __('Delete this item') },
                            React.createElement(
                                'span',
                                { className: 'qubely-action-remove', role: 'button',
                                    onClick: function onClick() {
                                        _this.updateListItems(index, 'delete');
                                        index == focusedItem ? _this.setState({ focusedItem: index > 0 ? index - 1 : index }) : _this.setState({ focusedItem: focusedItem > 0 ? focusedItem - 1 : focusedItem });
                                    } },
                                React.createElement('i', { className: 'fas fa-times' })
                            )
                        ),
                        currentListItemIndex == index && openIconPopUp && isSelected && React.createElement(
                            Popover,
                            {
                                position: 'bottom ' + iconPosition,
                                className: 'qubely-iconlist-icons-popover'
                            },
                            React.createElement(IconList, {
                                disableToggle: true,
                                value: listItems.length > 0 && listItems[index].icon,
                                onChange: function onChange(value) {
                                    return _this.modifySpecificItem({ icon: value }, index);
                                } })
                        )
                    )
                );
            });
        };

        _this.textInput = React.createRef();
        _this.state = {
            device: 'md',
            currentListItemIndex: 0,
            openIconPopUp: false,
            removeItemViaBackSpace: -1,
            focusedItem: _this.props.attributes.listItems.length - 1
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
            this.placeCaretAtEnd(document.querySelector('.qubely-block-' + uniqueId + ' .qubely-list-item-text-' + this.state.focusedItem));
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (this.props.attributes.listItems.length > prevProps.attributes.listItems.length) {
                var focusedListItem = document.querySelector('.qubely-block-' + prevProps.attributes.uniqueId + ' .qubely-list-item-text-' + this.state.focusedItem);
                focusedListItem.focus();
            } else if (this.props.attributes.listItems.length < prevProps.attributes.listItems.length) {
                var focusedItem = this.state.focusedItem;

                var _focusedListItem = document.querySelector('.qubely-block-' + prevProps.attributes.uniqueId + ' .qubely-list-item-text-' + focusedItem);
                _focusedListItem && this.placeCaretAtEnd(_focusedListItem);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                isSelected = _props2.isSelected,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                iconSize = _props2$attributes.iconSize,
                iconSizeCustom = _props2$attributes.iconSizeCustom,
                iconSpacing = _props2$attributes.iconSpacing,
                layout = _props2$attributes.layout,
                iconPosition = _props2$attributes.iconPosition,
                listItems = _props2$attributes.listItems,
                typography = _props2$attributes.typography,
                alignment = _props2$attributes.alignment,
                iconColor = _props2$attributes.iconColor,
                iconHoverColor = _props2$attributes.iconHoverColor,
                spacing = _props2$attributes.spacing,
                color = _props2$attributes.color,
                colorHover = _props2$attributes.colorHover,
                padding = _props2$attributes.padding,
                background = _props2$attributes.background,
                backgroundHover = _props2$attributes.backgroundHover,
                border = _props2$attributes.border,
                borderRadius = _props2$attributes.borderRadius,
                borderColorHover = _props2$attributes.borderColorHover,
                shadow = _props2$attributes.shadow,
                shadowHover = _props2$attributes.shadowHover,
                animation = _props2$attributes.animation,
                globalZindex = _props2$attributes.globalZindex,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction;
            var device = this.state.device;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'iconlist', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __('Alignment'), initialOpen: true },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 'fill', svg: _icons2.default.list_fill, label: __('Fill') }, { value: 'classic', svg: _icons2.default.list_classic, label: __('Classic') }]
                        }),
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, disableJustify: true, responsive: true })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Typography'), initialOpen: false },
                        React.createElement(Typography, { label: __('Typography'), value: typography, onChange: function onChange(val) {
                                return setAttributes({ typography: val });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Icon'), initialOpen: false },
                        React.createElement(RadioAdvanced, { label: __('Size'), value: iconSize, onChange: function onChange(val) {
                                return setAttributes({ iconSize: val });
                            },
                            options: [{ label: 'S', value: '12px', title: __('Small') }, { label: 'M', value: '16px', title: __('Medium') }, { label: 'L', value: '20px', title: __('Large') }, { label: 'XL', value: '28px', title: __('Extra Large') }, { icon: 'fas fa-cog', value: 'custom', title: __('Custom') }]
                        }),
                        iconSize == 'custom' && React.createElement(Range, { label: __('Custom Size'), value: iconSizeCustom, onChange: function onChange(value) {
                                return setAttributes({ iconSizeCustom: value });
                            }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(RadioAdvanced, { label: __('Position'), value: iconPosition, onChange: function onChange(val) {
                                return setAttributes({ iconPosition: val });
                            },
                            options: [{ label: 'Left', value: 'left', title: __('Left') }, { label: 'Right', value: 'right', title: __('Right') }]
                        }),
                        React.createElement(Range, { label: __('Spacing'), value: iconSpacing, onChange: function onChange(val) {
                                return setAttributes({ iconSpacing: val });
                            }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __(' Color'), value: iconColor, onChange: function onChange(value) {
                                        return setAttributes({ iconColor: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __(' Color'), value: iconHoverColor, onChange: function onChange(value) {
                                        return setAttributes({ iconHoverColor: value });
                                    } })
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Design'), initialOpen: false },
                        React.createElement(Range, { label: __('Spacing'), value: spacing, onChange: function onChange(val) {
                                return setAttributes({ spacing: val });
                            }, min: 0, max: 60 }),
                        layout == 'fill' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Padding, {
                                label: __('Padding'),
                                value: padding,
                                min: 0,
                                max: 100,
                                responsive: true,
                                device: device,
                                unit: ['px', 'em', '%'],
                                onChange: function onChange(val) {
                                    return setAttributes({ padding: val });
                                },
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                }
                            }),
                            React.createElement(Separator, null),
                            React.createElement(BorderRadius, {
                                label: __('Radius'),
                                value: borderRadius,
                                onChange: function onChange(val) {
                                    return setAttributes({ borderRadius: val });
                                },
                                min: 0,
                                max: 100,
                                unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                }
                            })
                        ),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Text Color'), value: color, onChange: function onChange(val) {
                                        return setAttributes({ color: val });
                                    } }),
                                layout == 'fill' && React.createElement(Color, { label: __('Background Color'), value: background, onChange: function onChange(val) {
                                        return setAttributes({ background: val });
                                    } }),
                                React.createElement(Border, { label: __('Border'), value: border, onChange: function onChange(val) {
                                        return setAttributes({ border: val });
                                    }, min: 0, max: 10, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Text Color'), value: colorHover, onChange: function onChange(val) {
                                        return setAttributes({ colorHover: val });
                                    } }),
                                layout == 'fill' && React.createElement(Color, { label: __('Background Color'), value: backgroundHover, onChange: function onChange(val) {
                                        return setAttributes({ backgroundHover: val });
                                    } }),
                                border.openBorder != undefined && border.openBorder == 1 && React.createElement(Color, { label: __('Border Color'), value: borderColorHover, onChange: function onChange(value) {
                                        return setAttributes({ borderColorHover: value });
                                    } })
                            )
                        )
                    ),
                    layout == 'fill' && React.createElement(
                        PanelBody,
                        { title: __('Shadow'), initialOpen: false },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(BoxShadow, { value: shadow, onChange: function onChange(value) {
                                        return setAttributes({ shadow: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(BoxShadow, { value: shadowHover, onChange: function onChange(value) {
                                        return setAttributes({ shadowHover: value });
                                    } })
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-icon-list', onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        React.createElement(
                            'ul',
                            { className: 'qubely-list' },
                            this.renderListItems()
                        ),
                        React.createElement(
                            'button',
                            { onClick: function onClick() {
                                    _this2.setState({ currentListItemIndex: listItems.length, focusedItem: listItems.length });
                                    _this2.updateListItems(listItems.length, 'add');
                                }, className: 'button is-default qubely-action-button', role: 'button' },
                            React.createElement('i', { className: 'fas fa-plus' }),
                            ' ',
                            __('Add New')
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/iconlist/Save.js":
/*!*************************************!*\
  !*** ./src/blocks/iconlist/Save.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    IsInteraction = _wp$qubelyComponents$.IsInteraction,
    animationAttr = _wp$qubelyComponents$.animationAttr;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Save);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderListItems = function () {
            var _this$props$attribute = _this.props.attributes,
                listItems = _this$props$attribute.listItems,
                iconPosition = _this$props$attribute.iconPosition;

            return listItems.map(function (item, index) {
                return React.createElement(
                    'li',
                    { className: 'qubely-list-li' },
                    iconPosition == 'left' && React.createElement('span', { className: 'qubely-list-item-icon ' + item.icon + ' fa-fw' }),
                    React.createElement(RichText.Content, { tagName: 'span', value: item.text }),
                    iconPosition == 'right' && React.createElement('span', { className: 'qubely-list-item-icon ' + item.icon + ' fa-fw' })
                );
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                interaction = _props$attributes.interaction,
                animation = _props$attributes.animation;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-icon-list ' + interactionClass },
                    React.createElement(
                        'ul',
                        { className: 'qubely-list' },
                        this.renderListItems()
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/iconlist/index.js":
/*!**************************************!*\
  !*** ./src/blocks/iconlist/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/iconlist/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/iconlist/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/iconlist/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var RichText = wp.blockEditor.RichText;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    IsInteraction = _wp$qubelyComponents.HelperFunction.IsInteraction;


var attributes = _extends({
    uniqueId: { type: 'string', default: '' }
}, globalAttributes, {
    listStyle: { type: 'string', default: 'ordered' },
    ordered: { type: 'boolean', default: false },
    alignment: {
        type: 'object', default: { md: 'left' },
        style: [{
            selector: '{{QUBELY}} .qubely-block-icon-list {text-align: {{alignment}};}'
        }]
    },

    layout: { type: 'string', default: 'classic' },

    listItems: {
        type: 'array',
        default: [{
            icon: 'far fa-star',
            text: 'Add beautiful icons and text'
        }, {
            icon: 'far fa-heart',
            text: 'Set icon color for normal and hover state'
        }, {
            icon: 'fas fa-check',
            text: 'Manage space between icon and the text'
        }, {
            icon: 'fas fa-burn',
            text: 'Choose a desired layout from the list'
        }]
    },

    spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },

    typography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li' }] },
    iconSize: {
        type: 'string',
        default: '16px',
        style: [{
            condition: [{ key: 'iconSize', relation: '!=', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {font-size: {{iconSize}};}'
        }]
    },
    iconSizeCustom: {
        type: 'object', default: { md: 16, unit: 'px' },
        style: [{
            condition: [{ key: 'iconSize', relation: '==', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {font-size: {{iconSizeCustom}};}'
        }]
    },
    iconPosition: { type: 'string', default: 'left' },
    iconSpacing: {
        type: 'object', default: { md: 10, unit: 'px' },
        style: [{
            condition: [{ key: 'iconPosition', relation: '==', value: 'left' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {margin-right: {{iconSpacing}};}'
        }, {
            condition: [{ key: 'iconPosition', relation: '==', value: 'right' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {margin-left: {{iconSpacing}};}'
        }]
    },

    iconColor: { type: 'string', default: '#5D7FEB', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li .qubely-list-item-icon {color: {{iconColor}};}' }] },
    iconHoverColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li:hover .qubely-list-item-icon {color: {{iconHoverColor}};}' }] },

    color: { type: 'string', default: '#333', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li {color: {{color}};}' }] },
    colorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li:hover {color: {{colorHover}};}' }] },
    spacing: { type: 'string', default: '5', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li:not(:last-child) {margin-bottom: {{spacing}}px;}' }] },
    padding: {
        type: 'object',
        default: {
            openPadding: 1,
            paddingType: 'custom',
            global: { md: '5' },
            custom: { md: '5 10 5 10' },
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-li '
        }]
    },
    background: {
        type: 'string', default: '#f5f5f5',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-li {background-color: {{background}};}'
        }]
    },
    backgroundHover: {
        type: 'string', default: '',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-li:hover {background-color: {{backgroundHover}};}'
        }]
    },

    shadow: { type: 'object', default: { color: '' }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list .qubely-list-li' }] },
    shadowHover: { type: 'object', default: { color: '' }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-list .qubely-list-li:hover' }] },

    border: {
        type: 'object',
        default: {},
        style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li' }]
    },

    borderRadius: {
        type: 'object',
        default: {},
        style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li' }]
    },
    borderColorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li:hover {border-bottom-color: {{borderColorHover}};}' }] },
    sourceOfCopiedStyle: { type: 'boolean', default: false }
});

registerBlockType('qubely/iconlist', {
    title: __('Icon List'),
    description: __('Include attractive icon lists with Qubely Icon List.'),
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-icon-list.svg', alt: __('Icon List') }),
    keywords: [__('icon', 'list', 'icon list')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {}
    },

    attributes: attributes,
    edit: _Edit2.default,
    save: _Save2.default,
    deprecated: [{
        attributes: attributes,
        save: function save(props) {
            var _props$attributes = props.attributes,
                uniqueId = _props$attributes.uniqueId,
                interaction = _props$attributes.interaction;


            var renderListItems = function renderListItems() {
                var _props$attributes2 = props.attributes,
                    listItems = _props$attributes2.listItems,
                    iconPosition = _props$attributes2.iconPosition;

                return listItems.map(function (item, index) {
                    return React.createElement(
                        'li',
                        { className: 'qubely-list-li' },
                        iconPosition == 'left' && React.createElement('span', { className: 'qubely-list-item-icon ' + item.icon + ' fa-fw' }),
                        React.createElement(RichText.Content, { tagName: 'span', value: item.text }),
                        iconPosition == 'right' && React.createElement('span', { className: 'qubely-list-item-icon ' + item.icon + ' fa-fw' })
                    );
                });
            };

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

            return React.createElement(
                'div',
                { className: 'qubely-block-' + uniqueId },
                React.createElement(
                    'div',
                    { className: 'qubely-block-icon-list ' + interactionClass },
                    React.createElement(
                        'ul',
                        { className: 'qubely-list' },
                        renderListItems()
                    )
                )
            );
        }
    }]
});

/***/ }),

/***/ "./src/blocks/iconlist/style.scss":
/*!****************************************!*\
  !*** ./src/blocks/iconlist/style.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/iconlist/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/image/Edit.js":
/*!**********************************!*\
  !*** ./src/blocks/image/Edit.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar,
    SelectControl = _wp$components.SelectControl;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Media = _wp$qubelyComponents.Media,
    Range = _wp$qubelyComponents.Range,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    ButtonGroup = _wp$qubelyComponents.ButtonGroup,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Typography = _wp$qubelyComponents.Typography,
    Toggle = _wp$qubelyComponents.Toggle,
    Styles = _wp$qubelyComponents.Styles,
    Alignment = _wp$qubelyComponents.Alignment,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Color = _wp$qubelyComponents.Color,
    Headings = _wp$qubelyComponents.Headings,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Padding = _wp$qubelyComponents.Padding,
    Separator = _wp$qubelyComponents.Separator,
    Select = _wp$qubelyComponents.Select,
    Margin = _wp$qubelyComponents.Margin,
    Url = _wp$qubelyComponents.Url,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.handlePanelOpenings = function (panelName) {
            _this.setState(_extends({}, _this.state, { openPanelSetting: panelName }));
        };

        _this.state = { device: 'md', selector: true, spacer: true, openPanelSetting: '' };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this,
                _React$createElement,
                _React$createElement2;

            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                className = _props$attributes.className,
                layout = _props$attributes.layout,
                alignment = _props$attributes.alignment,
                animateOnHover = _props$attributes.animateOnHover,
                title = _props$attributes.title,
                titleLevel = _props$attributes.titleLevel,
                titleTypography = _props$attributes.titleTypography,
                titleColor = _props$attributes.titleColor,
                titleVisibleOnHover = _props$attributes.titleVisibleOnHover,
                enableSubTitle = _props$attributes.enableSubTitle,
                subTitle = _props$attributes.subTitle,
                subTitleTypography = _props$attributes.subTitleTypography,
                subTitleColor = _props$attributes.subTitleColor,
                subTitleSpacing = _props$attributes.subTitleSpacing,
                subTitleVisibleOnHover = _props$attributes.subTitleVisibleOnHover,
                contentAnimation = _props$attributes.contentAnimation,
                contentPadding = _props$attributes.contentPadding,
                contentVerticalAlign = _props$attributes.contentVerticalAlign,
                contentAlignment = _props$attributes.contentAlignment,
                imgSize = _props$attributes.imgSize,
                image = _props$attributes.image,
                imageType = _props$attributes.imageType,
                externalImageUrl = _props$attributes.externalImageUrl,
                image2x = _props$attributes.image2x,
                imgAlt = _props$attributes.imgAlt,
                imageUrl = _props$attributes.imageUrl,
                imageSize = _props$attributes.imageSize,
                imageSizeCustom = _props$attributes.imageSizeCustom,
                imageBorderRadius = _props$attributes.imageBorderRadius,
                imageOpacity = _props$attributes.imageOpacity,
                imageBoxShadow = _props$attributes.imageBoxShadow,
                imageBoxShadowHover = _props$attributes.imageBoxShadowHover,
                enableCaption = _props$attributes.enableCaption,
                imageCaption = _props$attributes.imageCaption,
                captionTypography = _props$attributes.captionTypography,
                captionColor = _props$attributes.captionColor,
                captionSpacing = _props$attributes.captionSpacing,
                enableOverlay = _props$attributes.enableOverlay,
                overlayBg = _props$attributes.overlayBg,
                overlayHoverBg = _props$attributes.overlayHoverBg,
                overlayBlend = _props$attributes.overlayBlend,
                enableFrame = _props$attributes.enableFrame,
                frameBorder = _props$attributes.frameBorder,
                frameMargin = _props$attributes.frameMargin,
                frameSendToBack = _props$attributes.frameSendToBack,
                frameAnimateOnHover = _props$attributes.frameAnimateOnHover,
                frameBorderRadius = _props$attributes.frameBorderRadius,
                animation = _props$attributes.animation,
                globalZindex = _props$attributes.globalZindex,
                enablePosition = _props$attributes.enablePosition,
                selectPosition = _props$attributes.selectPosition,
                positionXaxis = _props$attributes.positionXaxis,
                positionYaxis = _props$attributes.positionYaxis,
                hideTablet = _props$attributes.hideTablet,
                hideMobile = _props$attributes.hideMobile,
                globalCss = _props$attributes.globalCss,
                interaction = _props$attributes.interaction;
            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                isSelected = _props2.isSelected;
            var _state = this.state,
                openPanelSetting = _state.openPanelSetting,
                device = _state.device;


            var titleTagName = 'h' + titleLevel;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'image', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '' },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 'simple', svg: _icons2.default.image.simple, label: __('Simple') }, { value: 'blurb', svg: _icons2.default.image.blurb, label: __('Blurb') }]
                        }),
                        React.createElement(Alignment, (_React$createElement = { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            } }, _defineProperty(_React$createElement, 'alignmentType', 'content'), _defineProperty(_React$createElement, 'disableJustify', true), _defineProperty(_React$createElement, 'responsive', true), _defineProperty(_React$createElement, 'device', device), _defineProperty(_React$createElement, 'onDeviceChange', function onDeviceChange(value) {
                            return _this2.setState({ device: value });
                        }), _React$createElement)),
                        React.createElement(Separator, null),
                        React.createElement(ButtonGroup, {
                            label: __('Image Type'),
                            options: [[__('Local'), 'local'], [__('External'), 'external']],
                            value: imageType,
                            onChange: function onChange(value) {
                                return setAttributes({ imageType: value });
                            }
                        }),
                        imageType === 'local' ? React.createElement(
                            Fragment,
                            null,
                            React.createElement(Media, { label: __('Image'), multiple: false, type: ['image'], panel: true, value: image, onChange: function onChange(val) {
                                    return setAttributes({ image: val });
                                } }),
                            React.createElement(Media, { label: __('Retina Image (@2x)'), multiple: false, type: ['image'], panel: true, value: image2x, onChange: function onChange(val) {
                                    return setAttributes({ image2x: val });
                                } })
                        ) : React.createElement(Url, { label: __('Image Source'), disableAdvanced: true, value: externalImageUrl, onChange: function onChange(newUrl) {
                                return setAttributes({ externalImageUrl: newUrl });
                            } }),
                        layout === 'simple' && React.createElement(Url, { label: __('URL'), value: imageUrl, onChange: function onChange(value) {
                                return setAttributes({ imageUrl: value });
                            } }),
                        React.createElement(TextControl, { label: __('Alt Text'), value: imgAlt, onChange: function onChange(val) {
                                return setAttributes({ imgAlt: val });
                            } }),
                        React.createElement(RadioAdvanced, { label: __('Size'), value: imageSize, onChange: function onChange(value) {
                                return setAttributes({ imageSize: value });
                            },
                            options: [{ label: __('Auto'), value: 'auto', title: __('Auto') }, { label: __('S'), value: '300px', title: __('Small') }, { label: __('M'), value: '600px', title: __('Medium') }, { label: __('L'), value: '800px', title: __('Large') }, { icon: 'fas fa-cog', value: 'custom', title: __('Custom') }]
                        }),
                        imageSize == 'custom' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, { label: __('Custom Width'), value: imageSizeCustom, onChange: function onChange(val) {
                                    return setAttributes({ imageSizeCustom: val });
                                }, min: 10, max: 1920, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Separator, null)
                        ),
                        React.createElement(Range, { label: __('Opacity'), value: imageOpacity, onChange: function onChange(val) {
                                return setAttributes({ imageOpacity: parseFloat(val) });
                            }, min: 0.1, max: 1, step: .1 }),
                        React.createElement(BorderRadius, { label: __('Radius'), value: imageBorderRadius, onChange: function onChange(val) {
                                return setAttributes({ imageBorderRadius: val });
                            }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(BoxShadow, { label: __('Box-Shadow'), value: imageBoxShadow, onChange: function onChange(val) {
                                        return setAttributes({ imageBoxShadow: val });
                                    }, disableInset: true })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(BoxShadow, { label: __('Box-Shadow Hover'), value: imageBoxShadowHover, onChange: function onChange(val) {
                                        return setAttributes({ imageBoxShadowHover: val });
                                    }, disableInset: true })
                            )
                        )
                    ),
                    layout == 'blurb' && React.createElement(
                        Fragment,
                        null,
                        React.createElement(
                            PanelBody,
                            { title: __('Title'), initialOpen: false },
                            React.createElement(Headings, { label: __('Title Tag'), selectedLevel: titleLevel, onChange: function onChange(value) {
                                    return setAttributes({ titleLevel: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), value: titleTypography, onChange: function onChange(val) {
                                    return setAttributes({ titleTypography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: titleColor, onChange: function onChange(val) {
                                    return setAttributes({ titleColor: val });
                                } })
                        ),
                        React.createElement(
                            PanelBody,
                            { title: __('Sub Title'), initialOpen: false },
                            React.createElement(Toggle, { label: __('Enable'), value: enableSubTitle, onChange: function onChange(val) {
                                    return setAttributes({ enableSubTitle: val });
                                } }),
                            enableSubTitle == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Color, { label: __('Color'), value: subTitleColor, onChange: function onChange(val) {
                                        return setAttributes({ subTitleColor: val });
                                    } }),
                                React.createElement(Typography, { label: __('Typography'), value: subTitleTypography, onChange: function onChange(val) {
                                        return setAttributes({ subTitleTypography: val });
                                    }, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Range, { label: __('Spacing'), value: subTitleSpacing, onChange: function onChange(val) {
                                        return setAttributes({ subTitleSpacing: val });
                                    }, min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            )
                        ),
                        React.createElement(
                            PanelBody,
                            { title: __('Content'), initialOpen: false },
                            React.createElement(Toggle, { label: __('Animate on Hover'), value: animateOnHover, onChange: function onChange(val) {
                                    return setAttributes({ animateOnHover: val });
                                } }),
                            animateOnHover == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Select, { label: __('Animation'), options: [['none', __('No Animation')], ['slide-top', __('Slide From Top')], ['slide-right', __('Slide From Right')], ['slide-bottom', __('Slide From Bottom')], ['slide-left', __('Slide From Left')], ['zoom-in', __('Zoom In')], ['zoom-out', __('Zoom Out')], ['scale', __('Scale')]], value: contentAnimation, onChange: function onChange(val) {
                                        return setAttributes({ contentAnimation: val });
                                    } }),
                                React.createElement(Separator, null),
                                React.createElement(Toggle, { label: __('Title Reveal on Hover'), value: titleVisibleOnHover, onChange: function onChange(val) {
                                        return setAttributes({ titleVisibleOnHover: val });
                                    } }),
                                enableSubTitle == 1 && titleVisibleOnHover != 1 && React.createElement(Toggle, { label: __('Sub Title Reveal on Hover'), value: subTitleVisibleOnHover, onChange: function onChange(val) {
                                        return setAttributes({ subTitleVisibleOnHover: val });
                                    } }),
                                React.createElement(Separator, null)
                            ),
                            React.createElement(Padding, { label: __('Padding'), value: contentPadding, onChange: function onChange(val) {
                                    return setAttributes({ contentPadding: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(RadioAdvanced, { label: __('Vertical Align'), value: contentVerticalAlign, onChange: function onChange(value) {
                                    return setAttributes({ contentVerticalAlign: value });
                                },
                                options: [{ label: __('Top'), value: 'top', title: __('Top') }, { label: __('Middle'), value: 'center', title: __('Middle') }, { label: __('Bottom'), value: 'bottom', title: __('Bottom') }]
                            }),
                            React.createElement(Alignment, (_React$createElement2 = { label: __('Horizontal Alignment'), value: contentAlignment, alignmentType: 'content', onChange: function onChange(val) {
                                    return setAttributes({ contentAlignment: val });
                                } }, _defineProperty(_React$createElement2, 'alignmentType', 'content'), _defineProperty(_React$createElement2, 'disableJustify', true), _React$createElement2))
                        ),
                        React.createElement(
                            PanelBody,
                            { title: __('Overlay'), initialOpen: false },
                            React.createElement(Toggle, { label: __('Enable'), value: enableOverlay, onChange: function onChange(val) {
                                    return setAttributes({ enableOverlay: val });
                                } }),
                            enableOverlay == 1 && React.createElement(
                                Fragment,
                                null,
                                animateOnHover == 1 ? React.createElement(
                                    Tabs,
                                    null,
                                    React.createElement(
                                        Tab,
                                        { tabTitle: __('Normal') },
                                        React.createElement(ColorAdvanced, { label: __('Background'), value: overlayBg, onChange: function onChange(value) {
                                                return setAttributes({ overlayBg: value });
                                            } })
                                    ),
                                    React.createElement(
                                        Tab,
                                        { tabTitle: __('Hover') },
                                        React.createElement(ColorAdvanced, { label: __('Background'), value: overlayHoverBg, onChange: function onChange(value) {
                                                return setAttributes({ overlayHoverBg: value });
                                            } })
                                    )
                                ) : React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(ColorAdvanced, { label: __('Background'), value: overlayBg, onChange: function onChange(value) {
                                            return setAttributes({ overlayBg: value });
                                        } }),
                                    React.createElement(Separator, null)
                                ),
                                React.createElement(Select, { label: __('Blend Mode'), options: [['normal', __('Normal')], ['multiply', __('Multiply')], ['screen', __('Screen')], ['overlay', __('Overlay')], ['darken', __('Darken')], ['lighten', __('Lighten')], ['color-dodge', __('Color Dodge')], ['saturation', __('Saturation')], ['luminosity', __('Luminosity')], ['color', __('Color')], ['color-burn', __('Color Burn')], ['exclusion', __('Exclusion')], ['hue', __('Hue')]], value: overlayBlend, onChange: function onChange(val) {
                                        return setAttributes({ overlayBlend: val });
                                    } })
                            )
                        ),
                        React.createElement(
                            PanelBody,
                            { title: __('Frame'), initialOpen: false },
                            React.createElement(Toggle, { label: __('Enable'), value: enableFrame, onChange: function onChange(val) {
                                    return setAttributes({ enableFrame: val });
                                } }),
                            enableFrame == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Border, { label: __('Frame'), value: frameBorder, onChange: function onChange(val) {
                                        return setAttributes({ frameBorder: val });
                                    }, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Margin, {
                                    label: __('Margin'),
                                    value: frameMargin,
                                    onChange: function onChange(value) {
                                        return setAttributes({ frameMargin: value });
                                    },
                                    unit: ['px', 'em', '%'],
                                    max: 150,
                                    min: -150,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(BorderRadius, { label: __('Radius'), value: frameBorderRadius, onChange: function onChange(val) {
                                        return setAttributes({ frameBorderRadius: val });
                                    }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Toggle, { label: __('Send to Back'), value: frameSendToBack, onChange: function onChange(val) {
                                        return setAttributes({ frameSendToBack: val });
                                    } }),
                                animateOnHover == 1 && React.createElement(Toggle, { label: __('Visible on Hover'), value: frameAnimateOnHover, onChange: function onChange(val) {
                                        return setAttributes({ frameAnimateOnHover: val });
                                    } })
                            )
                        )
                    ),
                    layout == 'simple' && React.createElement(
                        PanelBody,
                        { title: __('Caption'), initialOpen: false },
                        React.createElement(Toggle, { label: __('Enable'), value: enableCaption, onChange: function onChange(val) {
                                return setAttributes({ enableCaption: val });
                            } }),
                        enableCaption == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Typography, { label: __('Typography'), value: captionTypography, onChange: function onChange(val) {
                                    return setAttributes({ captionTypography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: captionColor, onChange: function onChange(val) {
                                    return setAttributes({ captionColor: val });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: captionSpacing, onChange: function onChange(val) {
                                    return setAttributes({ captionSpacing: val });
                                }, min: 0, max: 100, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-image qubely-image-layout-' + layout, onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        React.createElement(
                            'div',
                            { className: 'qubely-image-media' + (layout == 'blurb' && animateOnHover == 1 ? ' qubely-hover-animation-on' : '') + (layout == 'blurb' && animateOnHover == 1 ? ' qubely-hover-animation-type-' + contentAnimation : '') + ' qubely-vertical-alignment-' + contentVerticalAlign + ' qubely-horizontal-alignment-' + contentAlignment + (enableFrame == 1 ? animateOnHover == 1 && frameAnimateOnHover == 1 ? ' qubely-has-frame qubely-frame-animate-on-hover' : ' qubely-has-frame' : ''), onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Media');
                                } },
                            React.createElement(
                                'figure',
                                null,
                                React.createElement(
                                    'div',
                                    { className: 'qubely-image-container' },
                                    imageType === 'local' && image.url != undefined ? React.createElement(
                                        Fragment,
                                        null,
                                        image2x.url != undefined ? React.createElement('img', { className: 'qubely-image-image', src: image.url, srcset: image.url + ' 1x, ' + image2x.url + ' 2x', alt: imgAlt && imgAlt }) : React.createElement('img', { className: 'qubely-image-image', src: image.url, alt: imgAlt && imgAlt })
                                    ) : imageType === 'external' && externalImageUrl.url != undefined ? React.createElement('img', { className: 'qubely-image-image', src: externalImageUrl.url, alt: imgAlt && imgAlt }) : React.createElement(
                                        'div',
                                        { className: 'qubely-image-image qubely-image-placeholder' },
                                        React.createElement('i', { className: 'far fa-image' })
                                    ),
                                    layout == 'blurb' && React.createElement(
                                        'div',
                                        { className: 'qubely-image-content' },
                                        React.createElement(
                                            'div',
                                            { className: 'qubely-image-content-inner' },
                                            React.createElement(RichText, {
                                                className: 'qubely-image-title' + (animateOnHover == 1 && subTitleVisibleOnHover == 1 && titleVisibleOnHover != 1 ? ' qubely-visible-on-hover-enabled' : '') + (animateOnHover == 1 && titleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : ''),
                                                tagName: titleTagName,
                                                value: title,
                                                onChange: function onChange(value) {
                                                    return setAttributes({ title: value });
                                                },
                                                placeholder: __('Add Title…')
                                            }),
                                            enableSubTitle == 1 && React.createElement(RichText, {
                                                className: 'qubely-image-sub-title' + (animateOnHover == 1 && subTitleVisibleOnHover == 1 && titleVisibleOnHover != 1 ? ' qubely-visible-on-hover-enabled' : '') + (titleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : animateOnHover == 1 && subTitleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : ''),
                                                tagName: 'div',
                                                value: subTitle,
                                                onChange: function onChange(value) {
                                                    return setAttributes({ subTitle: value });
                                                },
                                                placeholder: __('Add Sub Title…')
                                            })
                                        )
                                    )
                                ),
                                layout == 'simple' && enableCaption == 1 && React.createElement(RichText, {
                                    key: 'editable',
                                    tagName: 'figcaption',
                                    className: 'qubely-image-caption',
                                    keepPlaceholderOnFocus: true,
                                    placeholder: __('Add Caption...'),
                                    onChange: function onChange(value) {
                                        return setAttributes({ imageCaption: value });
                                    },
                                    value: imageCaption
                                })
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/image/Save.js":
/*!**********************************!*\
  !*** ./src/blocks/image/Save.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    IsInteraction = _wp$qubelyComponents$.IsInteraction,
    animationAttr = _wp$qubelyComponents$.animationAttr;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Save);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderImage = function () {
            var _this$props$attribute = _this.props.attributes,
                image = _this$props$attribute.image,
                imageType = _this$props$attribute.imageType,
                image2x = _this$props$attribute.image2x,
                imgAlt = _this$props$attribute.imgAlt,
                externalImageUrl = _this$props$attribute.externalImageUrl;

            return React.createElement(
                Fragment,
                null,
                imageType === 'local' && image.url != undefined ? React.createElement(
                    Fragment,
                    null,
                    image2x.url != undefined ? React.createElement('img', { className: 'qubely-image-image', src: image.url, srcset: image.url + ' 1x, ' + image2x.url + ' 2x', alt: imgAlt && imgAlt }) : React.createElement('img', { className: 'qubely-image-image', src: image.url, alt: imgAlt && imgAlt })
                ) : imageType === 'external' && externalImageUrl.url != undefined ? React.createElement('img', { className: 'qubely-image-image', src: externalImageUrl.url, alt: imgAlt && imgAlt }) : React.createElement(
                    'div',
                    { className: 'qubely-image-image qubely-image-placeholder' },
                    React.createElement('i', { className: 'far fa-image' })
                )
            );
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                layout = _props$attributes.layout,
                imageUrl = _props$attributes.imageUrl,
                animateOnHover = _props$attributes.animateOnHover,
                titleVisibleOnHover = _props$attributes.titleVisibleOnHover,
                subTitleVisibleOnHover = _props$attributes.subTitleVisibleOnHover,
                title = _props$attributes.title,
                titleLevel = _props$attributes.titleLevel,
                subTitle = _props$attributes.subTitle,
                enableSubTitle = _props$attributes.enableSubTitle,
                imageCaption = _props$attributes.imageCaption,
                enableCaption = _props$attributes.enableCaption,
                contentAnimation = _props$attributes.contentAnimation,
                contentVerticalAlign = _props$attributes.contentVerticalAlign,
                contentAlignment = _props$attributes.contentAlignment,
                enableFrame = _props$attributes.enableFrame,
                frameAnimateOnHover = _props$attributes.frameAnimateOnHover,
                interaction = _props$attributes.interaction,
                animation = _props$attributes.animation;


            var titleTagName = 'h' + titleLevel;
            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-image ' + interactionClass + ' qubely-image-layout-' + layout },
                    React.createElement(
                        'div',
                        { className: 'qubely-image-media' + (layout == 'blurb' && animateOnHover == 1 ? ' qubely-hover-animation-on' : '') + (layout == 'blurb' && animateOnHover == 1 ? ' qubely-hover-animation-type-' + contentAnimation : '') + ' qubely-vertical-alignment-' + contentVerticalAlign + ' qubely-horizontal-alignment-' + contentAlignment + (enableFrame == 1 ? animateOnHover == 1 && frameAnimateOnHover == 1 ? ' qubely-has-frame qubely-frame-animate-on-hover' : ' qubely-has-frame' : '') },
                        React.createElement(
                            'figure',
                            null,
                            React.createElement(
                                'div',
                                { className: 'qubely-image-container' },
                                imageUrl.url && layout === 'simple' ? React.createElement(
                                    'a',
                                    _extends({ href: imageUrl.url ? '//' + imageUrl.url : '#' }, imageUrl.target && { target: '_blank' }, imageUrl.nofollow ? { rel: 'nofollow noopener noreferrer' } : _extends({}, imageUrl.target && { rel: 'noopener noreferrer' })),
                                    this.renderImage()
                                ) : this.renderImage(),
                                layout == 'blurb' && React.createElement(
                                    'div',
                                    { className: 'qubely-image-content' },
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-image-content-inner' },
                                        React.createElement(RichText.Content, {
                                            tagName: titleTagName,
                                            className: 'qubely-image-title' + (animateOnHover == 1 && enableSubTitle == 1 && subTitleVisibleOnHover == 1 && titleVisibleOnHover != 1 ? ' qubely-visible-on-hover-enabled' : '') + (animateOnHover == 1 && titleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : ''),
                                            value: title }),
                                        enableSubTitle == 1 && React.createElement(RichText.Content, {
                                            tagName: 'div',
                                            className: 'qubely-image-sub-title' + (animateOnHover == 1 && subTitleVisibleOnHover == 1 && titleVisibleOnHover != 1 ? ' qubely-visible-on-hover-enabled' : '') + (titleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : animateOnHover == 1 && subTitleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : ''),
                                            value: subTitle })
                                    )
                                )
                            ),
                            layout == 'simple' && enableCaption == 1 && React.createElement(RichText.Content, {
                                tagName: 'figcaption',
                                className: 'qubely-image-caption',
                                value: imageCaption })
                        )
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/image/index.js":
/*!***********************************!*\
  !*** ./src/blocks/image/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/image/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/image/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/image/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var RichText = wp.blockEditor.RichText;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    _wp$qubelyComponents$ = _wp$qubelyComponents.HelperFunction,
    IsInteraction = _wp$qubelyComponents$.IsInteraction,
    animationAttr = _wp$qubelyComponents$.animationAttr;


var attributes = _extends({

    uniqueId: {
        type: 'string',
        default: ''
    }
}, globalAttributes, {
    spacer: {
        type: 'object',
        default: {
            spaceTop: {
                md: '10',
                unit: "px"
            },
            spaceBottom: {
                md: '10',
                unit: "px"
            }
        },
        style: [{ selector: '{{QUBELY}}' }]
    },

    alignment: {
        type: 'object',
        default: {
            md: 'left'
        },
        style: [{
            selector: '{{QUBELY}} .qubely-block-image {text-align: {{alignment}};}'
        }]
    },

    animateOnHover: {
        type: 'boolean',
        default: true
    },

    layout: {
        type: 'string',
        default: 'simple'
    },
    imgSize: {
        type: 'string',
        default: 'full'
    },

    image: {
        type: 'object',
        default: {}
    },
    imageType: {
        type: 'string',
        default: 'local'
    },
    externalImageUrl: {
        type: 'object',
        default: {}
    },

    image2x: {
        type: 'object',
        default: {}
    },
    imageUrl: { type: 'object', default: {} },
    imageSize: {
        type: 'string',
        default: 'auto',
        style: [{
            condition: [{ key: 'imageSize', relation: '!=', value: 'auto' }, { key: 'imageSize', relation: '!=', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-image-image {width: {{imageSize}};}'
        }]
    },

    imageSizeCustom: {
        type: 'object',
        default: {
            md: 300,
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'imageSize', relation: '==', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-image-image {width: {{imageSizeCustom}};}'
        }]
    },

    imgAlt: {
        type: 'string',
        default: ''
    },

    imageOpacity: {
        type: 'number',
        default: 1,
        style: [{
            selector: '{{QUBELY}} .qubely-image-image {opacity: {{imageOpacity}};}'
        }]
    },

    imageBorderRadius: {
        type: 'object',
        default: {
            openBorderRadius: 0,
            radiusType: 'global',
            global: {},
            unit: 'px'

        },
        style: [{
            selector: '{{QUBELY}} .qubely-image-container'
        }]
    },

    imageBoxShadow: {
        type: 'object',
        default: {},
        style: [{
            selector: '{{QUBELY}} .qubely-image-container'
        }]
    },

    imageBoxShadowHover: {
        type: 'object',
        default: {},
        style: [{
            selector: '{{QUBELY}} .qubely-image-media:hover .qubely-image-container'
        }]
    },

    // Caption
    enableCaption: {
        type: 'boolean',
        default: false
    },

    imageCaption: {
        type: 'string',
        default: 'Image Caption'
    },

    captionTypography: {
        type: 'object',
        default: {
            openTypography: 1,
            size: {
                md: 16,
                unit: 'px'
            }
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'simple' }, { key: 'enableCaption', relation: '==', value: 1 }],
            selector: '{{QUBELY}} .qubely-image-caption'
        }]
    },
    captionColor: {
        type: 'string',
        default: '#566372',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'simple' }, { key: 'enableCaption', relation: '==', value: 1 }],
            selector: '{{QUBELY}} .qubely-image-caption {color: {{captionColor}};}'
        }]
    },

    captionSpacing: {
        type: 'object',
        default: {
            md: 20,
            unit: 'px'
        },
        style: [{
            selector: '{{QUBELY}} .qubely-image-caption {margin-top: {{captionSpacing}};}'
        }]
    },

    // Title
    title: {
        type: 'string',
        default: 'Image Block'
    },
    titleLevel: {
        type: 'number',
        default: 3
    },
    titleTypography: {
        type: 'object',
        default: {
            openTypography: 1,
            size: {
                md: 38,
                unit: 'px'
            }
        },
        style: [{
            selector: '{{QUBELY}} .qubely-image-title'
        }]
    },
    titleColor: {
        type: 'string',
        default: '#FFF',
        style: [{
            selector: '{{QUBELY}} .qubely-image-title {color: {{titleColor}};}'
        }]
    },

    titleVisibleOnHover: {
        type: 'boolean',
        default: false
    },

    // Sub Title
    enableSubTitle: {
        type: 'boolean',
        default: true
    },
    subTitle: {
        type: 'string',
        default: 'Insert images and beautify them with Qubely Image Block.'
    },
    subTitleTypography: {
        type: 'object',
        default: {
            openTypography: 1,
            size: {
                md: 21,
                unit: 'px'
            }
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableSubTitle', relation: '==', value: 1 }],
            selector: '{{QUBELY}} .qubely-image-sub-title'
        }]
    },
    subTitleColor: {
        type: 'string',
        default: '#FFF',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableSubTitle', relation: '==', value: 1 }],
            selector: '{{QUBELY}} .qubely-image-sub-title {color: {{subTitleColor}};}'
        }]
    },
    subTitleSpacing: {
        type: 'object',
        default: {
            md: 10,
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableSubTitle', relation: '==', value: 1 }],
            selector: '{{QUBELY}} .qubely-image-sub-title {margin-top: {{subTitleSpacing}};}'
        }]
    },

    subTitleVisibleOnHover: {
        type: 'boolean',
        default: false
    },

    // Overlay
    enableOverlay: {
        type: 'boolean',
        default: true
    },

    overlayBg: {
        type: 'object',
        default: {
            openColor: 1,
            type: 'gradient',
            color: 'rgba(6, 80, 183, 0.7)',
            gradient: {
                color1: 'rgba(6, 80, 183, 0.7)',
                color2: 'rgba(96, 10, 255, 0.7)',
                direction: 45,
                start: 0,
                stop: 100,
                type: 'linear'
            }
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableOverlay', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-image-container:before'
        }]
    },

    overlayHoverBg: {
        type: 'object',
        default: {
            type: 'gradient',
            openColor: 1,
            color: 'rgba(6, 80, 183, 0.85)',
            gradient: {
                color1: 'rgba(6, 80, 183, 0.85)',
                color2: 'rgba(96, 10, 255, 0.85)',
                direction: 45,
                start: 0,
                stop: 100,
                type: 'linear'
            }
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableOverlay', relation: '==', value: true }, { key: 'animateOnHover', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-image-container:after'
        }]
    },

    overlayBlend: {
        type: 'string',
        default: '',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableOverlay', relation: '==', value: true }, { key: 'overlayBlend', relation: '!=', value: 'normal' }],
            selector: '{{QUBELY}} .qubely-image-container:before {mix-blend-mode: {{overlayBlend}};} {{QUBELY}} .qubely-image-container:after {mix-blend-mode: {{overlayBlend}};}'
        }]
    },

    // Content
    contentAnimation: {
        type: 'string',
        default: 'zoom-out'
    },

    contentPadding: {
        type: 'object',
        default: {
            openPadding: 1,
            paddingType: 'global',
            global: {
                md: 30
            },
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }],
            selector: '{{QUBELY}} .qubely-image-content'
        }]
    },

    contentVerticalAlign: {
        type: 'string',
        default: 'center',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'contentVerticalAlign', relation: '==', value: 'top' }],
            selector: '{{QUBELY}} .qubely-image-content {-webkit-box-align: start; -ms-flex-align: start; -ms-grid-row-align: flex-start; align-items: flex-start;}'
        }, {
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'contentVerticalAlign', relation: '==', value: 'center' }],
            selector: '{{QUBELY}} .qubely-image-content {-webkit-box-align: center; -ms-flex-align: center; -ms-grid-row-align: center; align-items: center;}'
        }, {
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'contentVerticalAlign', relation: '==', value: 'bottom' }],
            selector: '{{QUBELY}} .qubely-image-content {-webkit-box-align: end; -ms-flex-align: end; -ms-grid-row-align: flex-end; align-items: flex-end;}'
        }]
    },

    contentAlignment: {
        type: 'string',
        default: 'center',
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'contentAlignment', relation: '==', value: 'left' }],
            selector: '{{QUBELY}} .qubely-image-content {-webkit-box-pack: start; -ms-flex-pack: start; justify-content: flex-start; text-align: left;}'
        }, {
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'contentAlignment', relation: '==', value: 'center' }],
            selector: '{{QUBELY}} .qubely-image-content {-webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; text-align: center;}'
        }, {
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'contentAlignment', relation: '==', value: 'right' }],
            selector: '{{QUBELY}} .qubely-image-content {-webkit-box-pack: end; -ms-flex-pack: end; justify-content: flex-end; text-align: right;}'
        }]
    },

    // Frame
    enableFrame: {
        type: 'boolean',
        default: false
    },

    frameMargin: {
        type: 'object',
        default: {
            openMargin: 1,
            marginType: 'global',
            global: { md: 30 },
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableFrame', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-has-frame figure:after'
        }]
    },
    frameBorder: {
        type: 'object',
        default: {
            openBorder: 1,
            widthType: "global",
            global: {
                md: 5
            },
            type: 'solid',
            color: '#FFF'
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableFrame', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-has-frame figure:after'
        }]
    },

    frameBorderRadius: {
        type: 'object',
        default: {
            openBorderRadius: 0,
            radiusType: 'global',
            global: {},
            unit: 'px'

        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableFrame', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-has-frame figure::after'
        }]
    },

    frameSendToBack: {
        type: 'boolean',
        default: false,
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'blurb' }, { key: 'enableFrame', relation: '==', value: true }, { key: 'frameSendToBack', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-has-frame figure::after {z-index: -1;}'
        }]
    },

    frameAnimateOnHover: {
        type: 'boolean',
        default: false
    }
});

registerBlockType('qubely/image', {
    title: __('Image'),
    description: __('Insert images and beautify them with Qubely Image Block.'),
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-image.svg', alt: __('Image') }),
    keywords: [__('image', 'advanced image', 'fancy image'), 'image overlay'],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {
            image: { url: 'http://qubely.io/wp-content/uploads/qubely-assets/demo/image8.jpg' },
            enableCaption: true,
            imageCaption: __('Qubely is a full-fledged Gutenberg block toolkit.', 'qubely')
        }
    },
    attributes: attributes,
    edit: _Edit2.default,
    save: _Save2.default,
    deprecated: [{
        attributes: attributes,
        save: function save(props) {
            var _props$attributes = props.attributes,
                uniqueId = _props$attributes.uniqueId,
                layout = _props$attributes.layout,
                imageUrl = _props$attributes.imageUrl,
                animateOnHover = _props$attributes.animateOnHover,
                titleVisibleOnHover = _props$attributes.titleVisibleOnHover,
                subTitleVisibleOnHover = _props$attributes.subTitleVisibleOnHover,
                title = _props$attributes.title,
                titleLevel = _props$attributes.titleLevel,
                subTitle = _props$attributes.subTitle,
                enableSubTitle = _props$attributes.enableSubTitle,
                imageCaption = _props$attributes.imageCaption,
                enableCaption = _props$attributes.enableCaption,
                contentAnimation = _props$attributes.contentAnimation,
                contentVerticalAlign = _props$attributes.contentVerticalAlign,
                contentAlignment = _props$attributes.contentAlignment,
                enableFrame = _props$attributes.enableFrame,
                frameAnimateOnHover = _props$attributes.frameAnimateOnHover,
                interaction = _props$attributes.interaction,
                animation = _props$attributes.animation;


            var titleTagName = 'h' + titleLevel;
            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            var renderImage = function renderImage() {
                var _props$attributes2 = props.attributes,
                    image = _props$attributes2.image,
                    image2x = _props$attributes2.image2x,
                    imgAlt = _props$attributes2.imgAlt;

                return React.createElement(
                    Fragment,
                    null,
                    image.url != undefined ? React.createElement(
                        Fragment,
                        null,
                        image2x.url != undefined ? React.createElement('img', { className: 'qubely-image-image', src: image.url, srcset: image.url + ' 1x, ' + image2x.url + ' 2x', alt: imgAlt && imgAlt }) : React.createElement('img', { className: 'qubely-image-image', src: image.url, alt: imgAlt && imgAlt })
                    ) : React.createElement(
                        'div',
                        { className: 'qubely-image-image qubely-image-placeholder' },
                        React.createElement('i', { className: 'far fa-image' })
                    )
                );
            };
            return React.createElement(
                'div',
                { className: 'qubely-block-' + uniqueId },
                React.createElement(
                    'div',
                    { className: 'qubely-block-image ' + interactionClass + ' qubely-image-layout-' + layout },
                    React.createElement(
                        'div',
                        { className: 'qubely-image-media' + (layout == 'blurb' && animateOnHover == 1 ? ' qubely-hover-animation-on' : '') + (layout == 'blurb' && animateOnHover == 1 ? ' qubely-hover-animation-type-' + contentAnimation : '') + ' qubely-vertical-alignment-' + contentVerticalAlign + ' qubely-horizontal-alignment-' + contentAlignment + (enableFrame == 1 ? animateOnHover == 1 && frameAnimateOnHover == 1 ? ' qubely-has-frame qubely-frame-animate-on-hover' : ' qubely-has-frame' : '') },
                        React.createElement(
                            'figure',
                            null,
                            React.createElement(
                                'div',
                                { className: 'qubely-image-container' },
                                imageUrl.url && layout === 'simple' ? React.createElement(
                                    'a',
                                    _extends({ href: imageUrl.url ? imageUrl.url : '#' }, imageUrl.target && { target: '_blank' }, imageUrl.nofollow ? { rel: 'nofollow noopener noreferrer' } : _extends({}, imageUrl.target && { rel: 'noopener noreferrer' })),
                                    renderImage()
                                ) : renderImage(),
                                layout == 'blurb' && React.createElement(
                                    'div',
                                    { className: 'qubely-image-content' },
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-image-content-inner' },
                                        React.createElement(RichText.Content, {
                                            tagName: titleTagName,
                                            className: 'qubely-image-title' + (animateOnHover == 1 && enableSubTitle == 1 && subTitleVisibleOnHover == 1 && titleVisibleOnHover != 1 ? ' qubely-visible-on-hover-enabled' : '') + (animateOnHover == 1 && titleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : ''),
                                            value: title }),
                                        enableSubTitle == 1 && React.createElement(RichText.Content, {
                                            tagName: 'div',
                                            className: 'qubely-image-sub-title' + (animateOnHover == 1 && subTitleVisibleOnHover == 1 && titleVisibleOnHover != 1 ? ' qubely-visible-on-hover-enabled' : '') + (titleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : animateOnHover == 1 && subTitleVisibleOnHover == 1 ? ' qubely-visible-on-hover' : ''),
                                            value: subTitle })
                                    )
                                )
                            ),
                            layout == 'simple' && enableCaption == 1 && React.createElement(RichText.Content, {
                                tagName: 'figcaption',
                                className: 'qubely-image-caption',
                                value: imageCaption })
                        )
                    )
                )
            );
        }
    }]
});

/***/ }),

/***/ "./src/blocks/image/style.scss":
/*!*************************************!*\
  !*** ./src/blocks/image/style.scss ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/image/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/infobox/Edit.js":
/*!************************************!*\
  !*** ./src/blocks/infobox/Edit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    QubelyButtonEdit = _wp$qubelyComponents.QubelyButtonEdit,
    ButtonGroup = _wp$qubelyComponents.ButtonGroup,
    Url = _wp$qubelyComponents.Url,
    Media = _wp$qubelyComponents.Media,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Range = _wp$qubelyComponents.Range,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Typography = _wp$qubelyComponents.Typography,
    Toggle = _wp$qubelyComponents.Toggle,
    Styles = _wp$qubelyComponents.Styles,
    Alignment = _wp$qubelyComponents.Alignment,
    IconList = _wp$qubelyComponents.IconList,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Color = _wp$qubelyComponents.Color,
    Headings = _wp$qubelyComponents.Headings,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Padding = _wp$qubelyComponents.Padding,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    buttonSettings = _wp$qubelyComponents.QubelyButton.buttonSettings;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.handlePanelOpenings = function (panelName) {
            _this.setState(_extends({}, _this.state, { openPanelSetting: panelName }));
        };

        _this.state = { device: 'md', selector: true, spacer: true, openPanelSetting: '' };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this,
                _React$createElement;

            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                className = _props$attributes.className,
                layout = _props$attributes.layout,
                mediaType = _props$attributes.mediaType,
                alignment = _props$attributes.alignment,
                titleLevel = _props$attributes.titleLevel,
                title = _props$attributes.title,
                titleTypography = _props$attributes.titleTypography,
                titleColor = _props$attributes.titleColor,
                titleColorHover = _props$attributes.titleColorHover,
                titleSpacing = _props$attributes.titleSpacing,
                subTitle = _props$attributes.subTitle,
                subTitleLevel = _props$attributes.subTitleLevel,
                subTitleContent = _props$attributes.subTitleContent,
                subTitleTypography = _props$attributes.subTitleTypography,
                subTitleColor = _props$attributes.subTitleColor,
                subTitleColorHover = _props$attributes.subTitleColorHover,
                subTitleSpacing = _props$attributes.subTitleSpacing,
                separatorStyle = _props$attributes.separatorStyle,
                separatorColor = _props$attributes.separatorColor,
                separatorColorHover = _props$attributes.separatorColorHover,
                separatorStroke = _props$attributes.separatorStroke,
                separatorPosition = _props$attributes.separatorPosition,
                separatorWidth = _props$attributes.separatorWidth,
                separatorSpacing = _props$attributes.separatorSpacing,
                enableContent = _props$attributes.enableContent,
                content = _props$attributes.content,
                contentTypography = _props$attributes.contentTypography,
                contentColor = _props$attributes.contentColor,
                contentColorHover = _props$attributes.contentColorHover,
                contentPadding = _props$attributes.contentPadding,
                contentSpacing = _props$attributes.contentSpacing,
                iconName = _props$attributes.iconName,
                iconSize = _props$attributes.iconSize,
                iconSizeCustom = _props$attributes.iconSizeCustom,
                iconColor = _props$attributes.iconColor,
                iconHoverColor = _props$attributes.iconHoverColor,
                useMediaBg = _props$attributes.useMediaBg,
                mediaBg = _props$attributes.mediaBg,
                mediaBgHover = _props$attributes.mediaBgHover,
                mediaBorderRadius = _props$attributes.mediaBorderRadius,
                mediaBackgroundSize = _props$attributes.mediaBackgroundSize,
                mediaBorder = _props$attributes.mediaBorder,
                mediaBorderColorHover = _props$attributes.mediaBorderColorHover,
                mediaShadow = _props$attributes.mediaShadow,
                mediaShadowHover = _props$attributes.mediaShadowHover,
                mediaSpacing = _props$attributes.mediaSpacing,
                image = _props$attributes.image,
                image2x = _props$attributes.image2x,
                imgAlt = _props$attributes.imgAlt,
                imageType = _props$attributes.imageType,
                imageWidth = _props$attributes.imageWidth,
                externalImageUrl = _props$attributes.externalImageUrl,
                number = _props$attributes.number,
                numberColor = _props$attributes.numberColor,
                numberColorHover = _props$attributes.numberColorHover,
                numberTypography = _props$attributes.numberTypography,
                bgColor = _props$attributes.bgColor,
                bgColorHover = _props$attributes.bgColorHover,
                bgBorder = _props$attributes.bgBorder,
                bgBorderColorHover = _props$attributes.bgBorderColorHover,
                bgPadding = _props$attributes.bgPadding,
                bgBorderRadius = _props$attributes.bgBorderRadius,
                bgShadow = _props$attributes.bgShadow,
                bgShadowHover = _props$attributes.bgShadowHover,
                enableButton = _props$attributes.enableButton,
                buttonSize = _props$attributes.buttonSize,
                buttonFillType = _props$attributes.buttonFillType,
                buttonText = _props$attributes.buttonText,
                buttonIconName = _props$attributes.buttonIconName,
                buttonIconPosition = _props$attributes.buttonIconPosition,
                buttonUrl = _props$attributes.buttonUrl,
                animation = _props$attributes.animation,
                enablePosition = _props$attributes.enablePosition,
                selectPosition = _props$attributes.selectPosition,
                positionXaxis = _props$attributes.positionXaxis,
                positionYaxis = _props$attributes.positionYaxis,
                globalZindex = _props$attributes.globalZindex,
                hideTablet = _props$attributes.hideTablet,
                hideMobile = _props$attributes.hideMobile,
                globalCss = _props$attributes.globalCss,
                interaction = _props$attributes.interaction;
            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                isSelected = _props2.isSelected,
                setAttributes = _props2.setAttributes;
            var _state = this.state,
                openPanelSetting = _state.openPanelSetting,
                device = _state.device;

            var separators = {
                solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
                double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
                dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
                dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
                pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
                pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
                zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
                zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
            };

            var titleTagName = 'h' + titleLevel;
            var subTitleTagName = 'h' + subTitleLevel;

            var renderSeparators = React.createElement(
                Fragment,
                null,
                separatorStyle && React.createElement(
                    Fragment,
                    null,
                    separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
                    separators[separatorStyle].type == 'svg' && React.createElement(
                        'span',
                        { className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
                        separators[separatorStyle].svg
                    )
                )
            );

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'infobox', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '' },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 1, svg: _icons2.default.infobox_1, label: __('Layout 1') }, { value: 2, svg: _icons2.default.infobox_2, label: __('Layout 2') }, { value: 3, svg: _icons2.default.infobox_3, label: __('Layout 3') }, { value: 4, svg: _icons2.default.infobox_4, label: __('Layout 4') }]
                        }),
                        (layout == 1 || layout == 4) && React.createElement(Alignment, (_React$createElement = { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            } }, _defineProperty(_React$createElement, 'alignmentType', 'content'), _defineProperty(_React$createElement, 'disableJustify', true), _defineProperty(_React$createElement, 'responsive', true), _defineProperty(_React$createElement, 'device', device), _defineProperty(_React$createElement, 'onDeviceChange', function onDeviceChange(value) {
                            return _this2.setState({ device: value });
                        }), _React$createElement))
                    ),
                    layout != 4 && React.createElement(
                        PanelBody,
                        { title: __('Media'), opened: 'Media' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Media' ? 'Media' : '');
                            } },
                        React.createElement(RadioAdvanced, { label: __('Type'), value: mediaType, onChange: function onChange(val) {
                                return setAttributes({ mediaType: val });
                            },
                            options: [{ label: __('Icon'), value: 'icon', title: __('Icon') }, { label: __('Image'), value: 'image', title: __('Image') }, { label: __('Number'), value: 'number', title: __('Number') }]
                        }),
                        mediaType && React.createElement(
                            Fragment,
                            null,
                            mediaType == 'icon' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(IconList, { label: __('Icon'), value: iconName, onChange: function onChange(val) {
                                        return setAttributes({ iconName: val });
                                    }, disableToggle: true }),
                                React.createElement(RadioAdvanced, { label: __('Icon Size'), value: iconSize, onChange: function onChange(value) {
                                        return setAttributes({ iconSize: value });
                                    },
                                    options: [{ label: 'S', value: '36px', title: 'Small' }, { label: 'M', value: '64px', title: 'Medium' }, { label: 'L', value: '128px', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }]
                                }),
                                iconSize == 'custom' && React.createElement(Range, { label: __('Custom Size'), value: iconSizeCustom, onChange: function onChange(val) {
                                        return setAttributes({ iconSizeCustom: val });
                                    }, min: 12, max: 300, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            mediaType == 'image' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(ButtonGroup, {
                                    label: __('Image Type'),
                                    options: [[__('Local'), 'local'], [__('External'), 'external']],
                                    value: imageType,
                                    onChange: function onChange(value) {
                                        return setAttributes({ imageType: value });
                                    }
                                }),
                                imageType === 'local' ? React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(Media, { label: __('Image'), multiple: false, type: ['image'], panel: true, value: image, onChange: function onChange(val) {
                                            return setAttributes({ image: val });
                                        } }),
                                    React.createElement(Media, { label: __('Retina Image'), multiple: false, type: ['image'], panel: true, value: image2x, onChange: function onChange(val) {
                                            return setAttributes({ image2x: val });
                                        } })
                                ) : React.createElement(Url, { label: __('Image Source'), disableAdvanced: true, value: externalImageUrl, onChange: function onChange(newUrl) {
                                        return setAttributes({ externalImageUrl: newUrl });
                                    } }),
                                React.createElement(TextControl, { label: __('Alt Text'), value: imgAlt, onChange: function onChange(val) {
                                        return setAttributes({ imgAlt: val });
                                    } }),
                                React.createElement(Range, { label: __('Image Width'), value: imageWidth, onChange: function onChange(val) {
                                        return setAttributes({ imageWidth: val });
                                    }, min: 0, max: 2000, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            mediaType == 'number' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(TextControl, { label: __('Number'), type: 'number', value: number, onChange: function onChange(val) {
                                        return setAttributes({ number: parseInt(val) });
                                    } }),
                                React.createElement(Typography, { value: numberTypography, onChange: function onChange(value) {
                                        return setAttributes({ numberTypography: value });
                                    }, disableLineHeight: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            mediaType != 'image' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Toggle, { label: __('Use Background'), value: useMediaBg, onChange: function onChange(val) {
                                        return setAttributes({ useMediaBg: val });
                                    } }),
                                useMediaBg == 1 && React.createElement(Range, { label: __('Background Size'), value: mediaBackgroundSize, onChange: function onChange(val) {
                                        return setAttributes({ mediaBackgroundSize: val });
                                    }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(
                                    Tabs,
                                    null,
                                    React.createElement(
                                        Tab,
                                        { tabTitle: __('Normal') },
                                        mediaType == 'icon' && React.createElement(Color, { label: __('Color'), value: iconColor, onChange: function onChange(val) {
                                                return setAttributes({ iconColor: val });
                                            } }),
                                        mediaType == 'number' && React.createElement(Color, { label: __('Color'), value: numberColor, onChange: function onChange(value) {
                                                return setAttributes({ numberColor: value });
                                            } }),
                                        useMediaBg == 1 && React.createElement(
                                            Fragment,
                                            null,
                                            React.createElement(ColorAdvanced, { label: __('Background Color'), value: mediaBg, onChange: function onChange(val) {
                                                    return setAttributes({ mediaBg: val });
                                                } }),
                                            React.createElement(Border, { label: __('Border'), value: mediaBorder, onChange: function onChange(val) {
                                                    return setAttributes({ mediaBorder: val });
                                                }, min: 0, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                                    return _this2.setState({ device: value });
                                                } }),
                                            React.createElement(BoxShadow, { label: __('Box-Shadow'), value: mediaShadow, onChange: function onChange(value) {
                                                    return setAttributes({ mediaShadow: value });
                                                } })
                                        )
                                    ),
                                    React.createElement(
                                        Tab,
                                        { tabTitle: __('Hover') },
                                        mediaType == 'icon' && React.createElement(Color, { label: __('Color'), value: iconHoverColor, onChange: function onChange(val) {
                                                return setAttributes({ iconHoverColor: val });
                                            } }),
                                        mediaType == 'number' && React.createElement(Color, { label: __('Color'), value: numberColorHover, onChange: function onChange(value) {
                                                return setAttributes({ numberColorHover: value });
                                            } }),
                                        useMediaBg == 1 && React.createElement(
                                            Fragment,
                                            null,
                                            React.createElement(ColorAdvanced, { label: __('Background Color'), value: mediaBgHover, onChange: function onChange(val) {
                                                    return setAttributes({ mediaBgHover: val });
                                                } }),
                                            React.createElement(Color, { label: __('Border Color'), value: mediaBorderColorHover, onChange: function onChange(value) {
                                                    return setAttributes({ mediaBorderColorHover: value });
                                                } }),
                                            React.createElement(BoxShadow, { label: __('Box-Shadow'), value: mediaShadowHover, onChange: function onChange(value) {
                                                    return setAttributes({ mediaShadowHover: value });
                                                } })
                                        )
                                    )
                                )
                            ),
                            React.createElement(BorderRadius, { label: __('Radius'), value: mediaBorderRadius, onChange: function onChange(val) {
                                    return setAttributes({ mediaBorderRadius: val });
                                }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: mediaSpacing, onChange: function onChange(val) {
                                    return setAttributes({ mediaSpacing: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Title'), opened: 'Title' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Title' ? 'Title' : '');
                            } },
                        React.createElement(Headings, { label: __('Title Tag'), selectedLevel: titleLevel, onChange: function onChange(value) {
                                return setAttributes({ titleLevel: value });
                            } }),
                        React.createElement(Typography, { label: __('Typography'), value: titleTypography, onChange: function onChange(value) {
                                return setAttributes({ titleTypography: value });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Range, { label: React.createElement(
                                'span',
                                null,
                                'Spacing ',
                                React.createElement('span', { className: 'dashicons dashicons-sort', title: 'Y Spacing' })
                            ), value: titleSpacing, onChange: function onChange(val) {
                                return setAttributes({ titleSpacing: val });
                            }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Color'), value: titleColor, onChange: function onChange(value) {
                                        return setAttributes({ titleColor: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Color'), value: titleColorHover, onChange: function onChange(value) {
                                        return setAttributes({ titleColorHover: value });
                                    } })
                            )
                        ),
                        React.createElement(SelectControl, {
                            label: __('Separator'),
                            value: separatorStyle,
                            options: [{ label: '--Select--', value: '' }, { label: 'Line', value: 'solid' }, { label: 'Line Doubled', value: 'double' }, { label: 'Dashed', value: 'dashed' }, { label: 'Dotted', value: 'dotted' }, { label: 'Pin', value: 'pin' }, { label: 'Pin Filled', value: 'pin_filled' }, { label: 'Zigzag', value: 'zigzag' }, { label: 'Zigzag Large', value: 'zigzag_large' }],
                            onChange: function onChange(val) {
                                return setAttributes({ separatorStyle: val });
                            }
                        }),
                        separatorStyle && React.createElement(
                            Fragment,
                            null,
                            React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(Color, { label: __('Separator Color'), value: separatorColor, onChange: function onChange(val) {
                                            return setAttributes({ separatorColor: val });
                                        } })
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Hover') },
                                    React.createElement(Color, { label: __('Separator Color'), value: separatorColorHover, onChange: function onChange(val) {
                                            return setAttributes({ separatorColorHover: val });
                                        } })
                                )
                            ),
                            separatorStyle != 'pin' && separatorStyle != 'pin_filled' && React.createElement(Range, { label: __('Stroke'), value: separatorStroke, onChange: function onChange(val) {
                                    return setAttributes({ separatorStroke: val });
                                }, min: 1, max: separators[separatorStyle].stroke }),
                            React.createElement(Range, { label: __('Width'), value: separatorWidth, onChange: function onChange(val) {
                                    return setAttributes({ separatorWidth: val });
                                }, min: 20, max: separators[separatorStyle].width, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: separatorSpacing, onChange: function onChange(val) {
                                    return setAttributes({ separatorSpacing: val });
                                }, min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(SelectControl, {
                                label: 'Position',
                                value: separatorPosition,
                                options: [{ label: 'Top', value: 'top' }, { label: 'Bottom', value: 'bottom' }, { label: 'Left', value: 'left' }, { label: 'Right', value: 'right' }, { label: 'Left & Right', value: 'leftright' }],
                                onChange: function onChange(val) {
                                    return setAttributes({ separatorPosition: val });
                                }
                            })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Sub Title'), opened: 'Sub Title' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Sub Title' ? 'Sub Title' : '');
                            } },
                        React.createElement(Toggle, { label: __('Enable'), value: subTitle, onChange: function onChange(val) {
                                return setAttributes({ subTitle: val });
                            } }),
                        subTitle == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Headings, { label: __('Sub Title Tag'), selectedLevel: subTitleLevel, onChange: function onChange(value) {
                                    return setAttributes({ subTitleLevel: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), value: subTitleTypography, onChange: function onChange(val) {
                                    return setAttributes({ subTitleTypography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(Color, { label: __('Color'), value: subTitleColor, onChange: function onChange(val) {
                                            return setAttributes({ subTitleColor: val });
                                        } })
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Hover') },
                                    React.createElement(Color, { label: __('Color'), value: subTitleColorHover, onChange: function onChange(val) {
                                            return setAttributes({ subTitleColorHover: val });
                                        } })
                                )
                            ),
                            React.createElement(Range, { label: __('Spacing'), value: subTitleSpacing, onChange: function onChange(value) {
                                    return setAttributes({ subTitleSpacing: value });
                                }, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Content'), opened: 'Content' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Content' ? 'Content' : '');
                            } },
                        React.createElement(Toggle, { label: __('Show Content'), value: enableContent, onChange: function onChange(val) {
                                return setAttributes({ enableContent: val });
                            } }),
                        enableContent && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Typography, { label: __('Typography'), value: contentTypography, onChange: function onChange(value) {
                                    return setAttributes({ contentTypography: value });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(Color, { label: __('Color'), value: contentColor, onChange: function onChange(value) {
                                            return setAttributes({ contentColor: value });
                                        } })
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Hover') },
                                    React.createElement(Color, { label: __('Color'), value: contentColorHover, onChange: function onChange(value) {
                                            return setAttributes({ contentColorHover: value });
                                        } })
                                )
                            ),
                            React.createElement(Padding, { label: __('Padding'), value: contentPadding, onChange: function onChange(val) {
                                    return setAttributes({ contentPadding: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            enableButton && React.createElement(Range, { label: __('Spacing'), value: contentSpacing, onChange: function onChange(value) {
                                    return setAttributes({ contentSpacing: value });
                                }, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Background'), initialOpen: false },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(ColorAdvanced, { label: __('Background Color'), value: bgColor, onChange: function onChange(val) {
                                        return setAttributes({ bgColor: val });
                                    } }),
                                React.createElement(Padding, { label: __('Padding'), value: bgPadding, onChange: function onChange(val) {
                                        return setAttributes({ bgPadding: val });
                                    }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Border, { label: __('Border'), value: bgBorder, onChange: function onChange(val) {
                                        return setAttributes({ bgBorder: val });
                                    }, min: 0, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bgShadow, onChange: function onChange(value) {
                                        return setAttributes({ bgShadow: value });
                                    } }),
                                React.createElement(BorderRadius, { label: __('Radius'), value: bgBorderRadius, onChange: function onChange(value) {
                                        return setAttributes({ bgBorderRadius: value });
                                    }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(ColorAdvanced, { label: __('Background Color'), value: bgColorHover, onChange: function onChange(val) {
                                        return setAttributes({ bgColorHover: val });
                                    } }),
                                React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bgShadowHover, onChange: function onChange(value) {
                                        return setAttributes({ bgShadowHover: value });
                                    } }),
                                React.createElement(Color, { label: __('Border Color'), value: bgBorderColorHover, onChange: function onChange(value) {
                                        return setAttributes({ bgBorderColorHover: value });
                                    } })
                            )
                        )
                    ),
                    buttonSettings(this.props.attributes, device, function (key, value) {
                        setAttributes(_defineProperty({}, key, value));
                    }, function (key, value) {
                        _this2.setState(_defineProperty({}, key, value));
                    }),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-info-box qubely-info-box-layout-' + layout, onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        layout != 4 && mediaType && React.createElement(
                            'div',
                            { className: 'qubely-info-box-media' + (useMediaBg ? ' qubely-media-has-bg' : ''), onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Media');
                                } },
                            mediaType == 'icon' && iconName && React.createElement('i', { className: "qubely-info-box-icon " + iconName }),
                            mediaType == 'image' && React.createElement(
                                Fragment,
                                null,
                                imageType === 'local' && image.url != undefined ? React.createElement('img', { className: 'qubely-info-box-image', src: image.url, srcset: image2x.url != undefined ? image.url + ' 1x, ' + image2x.url + ' 2x' : '', alt: imgAlt && imgAlt }) : imageType === 'external' && externalImageUrl.url != undefined ? React.createElement('img', { className: 'qubely-info-box-image', src: externalImageUrl.url, alt: imgAlt && imgAlt }) : React.createElement(
                                    'div',
                                    { className: 'qubely-info-box-image qubely-image-placeholder' },
                                    React.createElement('i', { className: 'far fa-image' })
                                )
                            ),
                            mediaType == 'number' && number && React.createElement(
                                'span',
                                { className: 'qubely-info-box-number' },
                                number
                            )
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-info-box-body' },
                            React.createElement(
                                'div',
                                { className: 'qubely-info-box-title-container ' + (separatorStyle ? 'qubely-has-separator' : '') + ' ' + (separatorPosition ? 'qubely-separator-position-' + separatorPosition : '') },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-info-box-title-inner' },
                                    separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') ? React.createElement(
                                        'div',
                                        { className: 'qubely-separator qubely-separator-before' },
                                        renderSeparators
                                    ) : '',
                                    React.createElement(
                                        'div',
                                        { onClick: function onClick() {
                                                return _this2.handlePanelOpenings('Title');
                                            } },
                                        React.createElement(RichText, {
                                            key: 'editable',
                                            tagName: titleTagName,
                                            className: 'qubely-info-box-title',
                                            keepPlaceholderOnFocus: true,
                                            placeholder: __('Add Text...'),
                                            onChange: function onChange(value) {
                                                return setAttributes({ title: value });
                                            },
                                            value: title })
                                    ),
                                    separatorStyle != '' && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') ? React.createElement(
                                        'div',
                                        { className: 'qubely-separator qubely-separator-after' },
                                        renderSeparators
                                    ) : ''
                                ),
                                subTitle == 1 && React.createElement(
                                    'div',
                                    { className: 'qubely-info-box-sub-title-container', onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Sub Title');
                                        } },
                                    React.createElement(RichText, {
                                        key: 'editable',
                                        tagName: subTitleTagName,
                                        className: 'qubely-info-box-sub-title',
                                        keepPlaceholderOnFocus: true,
                                        placeholder: __('Add Text...'),
                                        onChange: function onChange(value) {
                                            return setAttributes({ subTitleContent: value });
                                        },
                                        value: subTitleContent })
                                )
                            ),
                            enableContent && React.createElement(
                                'div',
                                { className: 'qubely-info-box-content', onClick: function onClick() {
                                        return _this2.handlePanelOpenings('Content');
                                    } },
                                React.createElement(RichText, {
                                    key: 'editable',
                                    tagName: 'div',
                                    className: 'qubely-info-box-text',
                                    keepPlaceholderOnFocus: true,
                                    placeholder: __('Add Text...'),
                                    onChange: function onChange(value) {
                                        return setAttributes({ content: value });
                                    },
                                    value: content
                                })
                            ),
                            enableButton && React.createElement(QubelyButtonEdit, {
                                enableButton: enableButton,
                                buttonFillType: buttonFillType,
                                buttonSize: buttonSize,
                                buttonText: buttonText,
                                buttonIconName: buttonIconName,
                                buttonIconPosition: buttonIconPosition,
                                buttonUrl: buttonUrl,
                                onTextChange: function onTextChange(value) {
                                    return setAttributes({ buttonText: value });
                                }
                            })
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/infobox/Save.js":
/*!************************************!*\
  !*** ./src/blocks/infobox/Save.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var RichText = wp.blockEditor.RichText;
var QubelyButtonSave = wp.qubelyComponents.QubelyButtonSave;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    layout = _props$attributes.layout,
			    mediaType = _props$attributes.mediaType,
			    titleLevel = _props$attributes.titleLevel,
			    title = _props$attributes.title,
			    separatorStyle = _props$attributes.separatorStyle,
			    separatorPosition = _props$attributes.separatorPosition,
			    enableContent = _props$attributes.enableContent,
			    content = _props$attributes.content,
			    iconName = _props$attributes.iconName,
			    image = _props$attributes.image,
			    image2x = _props$attributes.image2x,
			    imgAlt = _props$attributes.imgAlt,
			    imageType = _props$attributes.imageType,
			    externalImageUrl = _props$attributes.externalImageUrl,
			    number = _props$attributes.number,
			    enableButton = _props$attributes.enableButton,
			    animation = _props$attributes.animation,
			    subTitle = _props$attributes.subTitle,
			    subTitleLevel = _props$attributes.subTitleLevel,
			    subTitleContent = _props$attributes.subTitleContent,
			    buttonFillType = _props$attributes.buttonFillType,
			    buttonSize = _props$attributes.buttonSize,
			    buttonText = _props$attributes.buttonText,
			    buttonUrl = _props$attributes.buttonUrl,
			    buttonIconName = _props$attributes.buttonIconName,
			    buttonIconPosition = _props$attributes.buttonIconPosition,
			    useMediaBg = _props$attributes.useMediaBg,
			    interaction = _props$attributes.interaction;


			var separators = {
				solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
				double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
				dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
				dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
				pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
				pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
				zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
				zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
			};

			var renderSeparators = React.createElement(
				Fragment,
				null,
				separatorStyle && React.createElement(
					Fragment,
					null,
					separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
					separators[separatorStyle].type == 'svg' && React.createElement(
						'span',
						{ className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
						separators[separatorStyle].svg
					)
				)
			);

			var titleTagName = 'h' + titleLevel;
			var subTitleTagName = 'h' + subTitleLevel;
			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-info-box ' + interactionClass + ' qubely-info-box-layout-' + layout },
					layout != 4 && mediaType && React.createElement(
						'div',
						{ className: 'qubely-info-box-media' + (useMediaBg ? ' qubely-media-has-bg' : '') },
						mediaType == 'icon' && iconName && React.createElement('i', { className: "qubely-info-box-icon " + iconName }),
						mediaType == 'image' && React.createElement(
							Fragment,
							null,
							imageType === 'local' && image.url != undefined ? React.createElement('img', { className: 'qubely-info-box-image', src: image.url, srcset: image2x.url != undefined ? image.url + ' 1x, ' + image2x.url + ' 2x' : '', alt: imgAlt && imgAlt }) : imageType === 'external' && externalImageUrl.url != undefined ? React.createElement('img', { className: 'qubely-info-box-image', src: externalImageUrl.url, alt: imgAlt && imgAlt }) : React.createElement(
								'div',
								{ className: 'qubely-info-box-image qubely-image-placeholder' },
								React.createElement('i', { className: 'far fa-image' })
							)
						),
						mediaType == 'number' && number && React.createElement(
							'span',
							{ className: 'qubely-info-box-number' },
							number
						)
					),
					React.createElement(
						'div',
						{ className: 'qubely-info-box-body' },
						React.createElement(
							'div',
							{ className: 'qubely-info-box-title-container ' + (separatorStyle ? 'qubely-has-separator' : '') + ' ' + (separatorPosition ? 'qubely-separator-position-' + separatorPosition : '') },
							React.createElement(
								'div',
								{ className: 'qubely-info-box-title-inner' },
								separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') ? React.createElement(
									'div',
									{ className: 'qubely-separator qubely-separator-before' },
									renderSeparators
								) : '',
								React.createElement(RichText.Content, { tagName: titleTagName, className: 'qubely-info-box-title', value: title }),
								separatorStyle != '' && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') ? React.createElement(
									'div',
									{ className: 'qubely-separator qubely-separator-after' },
									renderSeparators
								) : ''
							),
							subTitle == 1 && React.createElement(
								'div',
								{ className: 'qubely-info-box-sub-title-container' },
								React.createElement(RichText.Content, { tagName: subTitleTagName, className: 'qubely-info-box-sub-title', value: subTitleContent })
							)
						),
						enableContent && React.createElement(
							'div',
							{ className: 'qubely-info-box-content' },
							React.createElement(RichText.Content, { tagName: 'div', className: 'qubely-info-box-text', value: content })
						),
						enableButton && React.createElement(QubelyButtonSave, {
							buttonFillType: buttonFillType,
							buttonSize: buttonSize,
							buttonText: buttonText,
							buttonIconName: buttonIconName,
							buttonIconPosition: buttonIconPosition,
							buttonUrl: buttonUrl,
							buttonTag: 'a'
						})
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/infobox/index.js":
/*!*************************************!*\
  !*** ./src/blocks/infobox/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/infobox/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/infobox/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/infobox/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    buttonAttributes = _wp$qubelyComponents.QubelyButton.buttonAttributes;


registerBlockType('qubely/infobox', {
    title: __('Info Box'),
    description: 'Be creatively informative with Qubely Info Box.',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-info-box.svg', alt: __('Video popup Block') }),
    category: 'qubely',
    supports: {
        align: ['center', 'wide', 'full']
    },
    keywords: [__('service'), __('feature'), __('info')],
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, buttonAttributes, {
        layout: { type: 'number', default: 1 },
        alignment: {
            type: 'object', default: { md: 'left' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box {text-align: {{alignment}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 4 }],
                selector: '{{QUBELY}} .qubely-block-info-box {text-align: {{alignment}};}'
            }]
        },
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        mediaType: { type: 'string', default: 'icon' },
        enableButton: { type: 'boolean', default: false },
        buttonToggleOption: { type: 'boolean', default: true },

        // Icon
        iconName: { type: 'string', default: 'fas fa-rocket' },
        iconSize: {
            type: 'string', default: '36px',
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'icon' }, { key: 'iconSize', relation: '!=', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-info-box-media {font-size: {{iconSize}};}'
            }]
        },
        iconSizeCustom: {
            type: 'object', default: { md: 64, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'icon' }, { key: 'iconSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-info-box-media {font-size: {{iconSizeCustom}};}'
            }]
        },
        iconColor: {
            type: 'string', default: '#338FEC',
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'icon' }],
                selector: '{{QUBELY}} .qubely-info-box-media i {color: {{iconColor}};}'
            }]
        },
        iconHoverColor: {
            type: 'string', default: '#2476CA',
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'icon' }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-media i {color: {{iconHoverColor}};}'
            }]
        },

        // Image
        image: { type: 'object', default: {} },
        image2x: { type: 'object', default: {} },
        imgAlt: { type: 'string', default: '' },
        imageType: {
            type: 'string',
            default: 'local'
        },
        externalImageUrl: {
            type: 'object',
            default: {}
        },
        imageWidth: {
            type: 'object',
            default: {},
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'image' }],
                selector: '{{QUBELY}} .qubely-info-box-media {width: {{imageWidth}};} {{QUBELY}} .qubely-info-box-media img {width: 100%;} {{QUBELY}} .qubely-info-box-media .qubely-image-placeholder {height: {{imageWidth}}; width: {{imageWidth}};}'
            }]
        },

        // Number
        number: { type: 'number', default: 1 },
        numberColor: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'number' }],
                selector: '{{QUBELY}} .qubely-info-box-number {color: {{numberColor}};}'
            }]
        },
        numberColorHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'number' }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-number {color: {{numberColorHover}};}'
            }]
        },
        numberTypography: {
            type: 'object',
            default: {
                openTypography: 1,
                size: {
                    md: 48,
                    unit: 'px'
                }
            },
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'mediaType', relation: '==', value: 'number' }],
                selector: '{{QUBELY}} .qubely-info-box-media'
            }]
        },

        // Media background
        useMediaBg: { type: 'boolean', default: 1 },
        mediaBg: {
            type: 'object', default: { openColor: 1, type: 'color', color: '#D6EBFF' },
            style: [{
                condition: [{ key: 'mediaType', relation: '!=', value: 'image' }, { key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaBg', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-info-box-media'
            }]
        },
        mediaBgHover: {
            type: 'object', default: {},
            style: [{
                condition: [{ key: 'mediaType', relation: '!=', value: 'image' }, { key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaBg', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-media'
            }]
        },
        mediaBackgroundSize: {
            type: 'object', default: { md: '20', unit: 'px' },
            style: [{
                condition: [{ key: 'mediaType', relation: '!=', value: 'image' }, { key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaBg', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-info-box-media { padding: {{mediaBackgroundSize}};}'
            }]
        },
        mediaBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global',
                global: { md: 5 },
                unit: 'px'

            },
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaBg', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-info-box-media, {{QUBELY}} .qubely-info-box-media img'
            }]
        },

        // Media Border
        mediaBorder: {
            type: 'number', default: 0,
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaBg', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-info-box-media'
            }]
        },
        mediaBorderColorHover: {
            type: 'string', default: '#e5e5e5',
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaBg', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-media { border-color: {{mediaBorderColorHover}};}'
            }]
        },

        // Media Shadow
        mediaShadow: {
            type: 'object', default: {},
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }],
                selector: '{{QUBELY}} .qubely-info-box-media'
            }]
        },
        mediaShadowHover: {
            type: 'object', default: {},
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 4 }, { key: 'useMediaShadow', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-media'
            }]
        },

        // Media Spacing
        mediaSpacing: {
            type: 'object', default: { md: 20, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-info-box-media {margin-bottom: {{mediaSpacing}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 2 }],
                selector: '{{QUBELY}} .qubely-info-box-media {margin-right: {{mediaSpacing}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 3 }],
                selector: '{{QUBELY}} .qubely-info-box-media {margin-left: {{mediaSpacing}};}'
            }]
        },

        // Title
        title: {
            type: 'string',
            source: 'html',
            selector: '.qubely-info-box-title',
            default: 'This is an infobox'
        },
        titleLevel: { type: 'number', default: 2 },
        titleTypography: { type: 'object', default: { openTypography: 1, size: { md: 24, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-info-box-title' }] },
        titleColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-info-box-title {color: {{titleColor}};}' }] },
        titleColorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-title {color: {{titleColorHover}};}' }] },
        titleSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-info-box-title-inner {margin-bottom: {{titleSpacing}};}' }] },

        subTitle: { type: 'boolean', default: 0 },
        subTitleLevel: { type: 'number', default: 3 },
        subTitleContent: {
            type: 'string',
            source: 'html',
            selector: '.qubely-info-box-sub-title',
            default: 'Sub Title'
        },
        subTitleTypography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-block-info-box .qubely-info-box-sub-title' }] },
        subTitleColor: {
            type: 'string', default: '#333',
            style: [{
                condition: [{ key: 'subTitle', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box .qubely-info-box-sub-title {color: {{subTitleColor}};}'
            }]
        },
        subTitleColorHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'subTitle', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-sub-title {color: {{subTitleColorHover}};}'
            }]
        },
        subTitleSpacing: {
            type: 'object', default: { md: 15, unit: 'px' },
            style: [{
                condition: [{ key: 'subTitle', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-info-box .qubely-info-box-sub-title {margin-bottom: {{subTitleSpacing}};}'
            }]
        },

        // Title separator
        separatorStyle: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-info-box .qubely-separator-type-css {border-top-style: {{separatorStyle}};}'
            }]
        },
        separatorPosition: { type: 'string', default: 'top' },
        separatorColor: {
            type: 'string', default: '#5D7FEB',
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-info-box .qubely-separator-type-svg svg .qubely-separator-stroke {stroke: {{separatorColor}};} {{QUBELY}} .qubely-block-info-box svg .qubely-separator-fill {fill: {{separatorColor}};} {{QUBELY}} .qubely-block-info-box .qubely-separator-type-css {border-top-color: {{separatorColor}};}'
            }]
        },
        separatorColorHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-separator-type-svg svg .qubely-separator-stroke {stroke: {{separatorColorHover}};} {{QUBELY}} .qubely-block-info-box:hover svg .qubely-separator-fill {fill: {{separatorColorHover}};} {{QUBELY}} .qubely-block-info-box:hover .qubely-separator-type-css {border-top-color: {{separatorColorHover}};}'
            }]
        },
        separatorStroke: {
            type: 'number', default: 3,
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-info-box .qubely-separator-type-svg svg .qubely-separator-stroke {stroke-width: {{separatorStroke}}px;} {{QUBELY}} .qubely-block-info-box .qubely-separator-type-css {border-top-width: {{separatorStroke}}px;}'
            }]
        },
        separatorWidth: {
            type: 'object', default: { md: 60 },
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-info-box .qubely-separator-type-css {width: {{separatorWidth}}px;} {{QUBELY}} .qubely-block-info-box .qubely-separator-type-svg svg {width: {{separatorWidth}}px;}'
            }]
        },
        separatorSpacing: {
            type: 'object', default: { md: 10 },
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'left' }],
                selector: '{{QUBELY}} .qubely-separator {margin-right: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'right' }],
                selector: '{{QUBELY}} .qubely-separator {margin-left: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'leftright' }],
                selector: '{{QUBELY}} .qubely-separator-before {margin-right: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-after {margin-left: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'top' }],
                selector: '{{QUBELY}} .qubely-separator {margin-bottom: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'bottom' }],
                selector: '{{QUBELY}} .qubely-separator {margin-top: {{separatorSpacing}}px;}'
            }]
        },

        //Content
        enableContent: { type: 'boolean', default: true },
        content: {
            type: 'string',
            source: 'html',
            selector: '.qubely-info-box-text',
            default: 'Qubely blocks are added to the Gutenberg editor as soon as you install the plugin. You can start using it as any other Gutenberg block.'
        },
        contentTypography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ condition: [{ key: 'enableContent', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-info-box-text' }] },
        contentColor: { type: 'string', default: '', style: [{ condition: [{ key: 'enableContent', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-info-box-text {color: {{contentColor}};}' }] },
        contentColorHover: { type: 'string', default: '', style: [{ condition: [{ key: 'enableContent', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-block-info-box:hover .qubely-info-box-text {color: {{contentColorHover}};}' }] },
        contentPadding: { type: 'object', default: {}, style: [{ condition: [{ key: 'enableContent', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-info-box-body' }] },
        contentSpacing: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'enableButton', relation: '==', value: true }, { key: 'enableContent', relation: '==', value: true }],
                selector: '{{QUBELY}} .qubely-info-box-body .qubely-info-box-text {margin-bottom: {{contentSpacing}};}'
            }, {
                condition: [{ key: 'enableButton', relation: '==', value: false }, { key: 'enableContent', relation: '==', value: true }],
                selector: '{{QUBELY}} .qubely-info-box-body .qubely-info-box-text {margin-bottom: 0;}'
            }]
        },

        // Body
        bgColor: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-info-box' }] },
        bgColorHover: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-info-box:hover' }] },
        bgPadding: {
            type: 'object',
            default: {
                paddingType: 'global'
            },
            style: [{
                selector: '{{QUBELY}} .qubely-block-info-box'
            }]
        },
        bgBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global'

            },
            style: [{
                selector: '{{QUBELY}} .qubely-block-info-box'
            }]
        },
        bgBorder: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-info-box' }] },
        bgBorderColorHover: { type: 'string', default: '#e5e5e5', style: [{ selector: '{{QUBELY}} .qubely-block-info-box:hover { border-color: {{bgBorderColorHover}};}' }] },
        bgShadow: { type: 'object', default: { color: '' }, style: [{ selector: '{{QUBELY}} .qubely-block-info-box' }] },
        bgShadowHover: { type: 'object', default: { color: '' }, style: [{ selector: '{{QUBELY}} .qubely-block-info-box:hover' }] },

        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/infobox/style.scss":
/*!***************************************!*\
  !*** ./src/blocks/infobox/style.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/infobox/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/map/Edit.js":
/*!********************************!*\
  !*** ./src/blocks/map/Edit.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _mapStyles = __webpack_require__(/*! ./mapStyles */ "./src/blocks/map/mapStyles.js");

var _mapStyles2 = _interopRequireDefault(_mapStyles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    ToggleControl = _wp$components.ToggleControl,
    TextControl = _wp$components.TextControl,
    RangeControl = _wp$components.RangeControl,
    Toolbar = _wp$components.Toolbar;
var _wp$qubelyComponents = wp.qubelyComponents,
    Media = _wp$qubelyComponents.Media,
    Separator = _wp$qubelyComponents.Separator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.initMap = _this.initMap.bind(_this);
        _this.initSearchBox = _this.initSearchBox.bind(_this);
        _this.initMapLibrary = _this.initMapLibrary.bind(_this);
        _this.setSettings = _this.setSettings.bind(_this);
        _this.getStyles = _this.getStyles.bind(_this);
        _this.state = { spacer: true };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                _props$attributes = _props.attributes,
                uniqueId = _props$attributes.uniqueId,
                apiKey = _props$attributes.apiKey;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
            this.initMapLibrary(apiKey);

            var mapIframe = this.refs.qubelyGoogleMapIframe;
            if (typeof mapIframe !== 'undefined') {
                mapIframe.addEventListener('click', function (e) {
                    e.preventDefault();
                });
            }
        }
    }, {
        key: 'initMapLibrary',
        value: function initMapLibrary(apiKey) {
            var initMap = this.initMap,
                initSearchBox = this.initSearchBox,
                loadScriptAsync = this.loadScriptAsync;

            this.props.setAttributes({ apiKey: apiKey });
            if (apiKey) {
                var apiURL = 'https://maps.googleapis.com/maps/api/js?key=' + apiKey + '&libraries=places&callback=initMap';
                window.initMap = initMap;
                if ((typeof google === 'undefined' ? 'undefined' : _typeof(google)) === 'object' && _typeof(google.maps) === 'object') {
                    initMap();
                    initSearchBox();
                } else {
                    loadScriptAsync(apiURL).then(function () {
                        initMap();
                        initSearchBox();
                    });
                }
            }
        }
    }, {
        key: 'loadScriptAsync',
        value: function loadScriptAsync(src) {
            return new Promise(function (resolve, reject) {
                var tag = document.createElement('script');
                tag.id = "qubely-gmap";
                tag.src = src;
                tag.async = true;
                tag.onload = function () {
                    resolve();
                };
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            });
        }
    }, {
        key: 'initSearchBox',
        value: function initSearchBox() {
            var setSettings = this.setSettings,
                _props2 = this.props,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes;
            var mapAddress = attributes.mapAddress;
            // Create the search box and link it to the UI element.

            var input = this.refs.mapAddress;
            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.setFields(['place_id', 'geometry', 'formatted_address']);
            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    return;
                }
                mapAddress = place.formatted_address;
                setAttributes({ placeID: place.place_id });
                setSettings('mapAddress', mapAddress);
                input.value = mapAddress;
            });
            input.value = mapAddress;
        }
    }, {
        key: 'initMap',
        value: function initMap() {
            var getStyles = this.getStyles,
                _props3 = this.props,
                attributes = _props3.attributes,
                setAttributes = _props3.setAttributes;
            var placeID = attributes.placeID,
                zoom = attributes.zoom,
                mapStyle = attributes.mapStyle,
                showZoomButtons = attributes.showZoomButtons,
                showMapTypeButtons = attributes.showMapTypeButtons,
                showStreetViewButton = attributes.showStreetViewButton,
                showFullscreenButton = attributes.showFullscreenButton,
                optionDraggable = attributes.optionDraggable,
                showMarker = attributes.showMarker,
                iconPointer = attributes.iconPointer;

            var mapCanvas = this.refs.qubelyGoogleMap;
            var mapOptions = {
                center: { lat: 11.5024338, lng: 17.7578122 },
                zoom: 1,
                zoomControl: showZoomButtons,
                mapTypeControl: showMapTypeButtons,
                streetViewControl: showStreetViewButton,
                fullscreenControl: showFullscreenButton,
                draggable: optionDraggable,
                styles: mapStyle ? getStyles(mapStyle) : []
            };
            var map = new google.maps.Map(mapCanvas, mapOptions);

            if (placeID) {
                var request = {
                    placeId: placeID,
                    fields: ['place_id', 'geometry', 'name', 'formatted_address', 'adr_address', 'website']
                };

                var service = new google.maps.places.PlacesService(map);
                service.getDetails(request, function (place, status) {
                    if (status === google.maps.places.PlacesServiceStatus.OK) {

                        if (place.geometry.viewport) {
                            map.fitBounds(place.geometry.viewport);
                        } else {
                            setAttributes({ zoom: 16 });
                            map.setCenter(place.geometry.location);
                            map.setZoom(zoom);
                        }

                        var markerOption = { map: map };
                        if (iconPointer) markerOption.icon = iconPointer;
                        var marker = new google.maps.Marker(markerOption);
                        // Set the position of the marker using the place ID and location.
                        marker.setPlace({
                            placeId: place.place_id,
                            location: place.geometry.location
                        });
                        marker.setVisible(showMarker);

                        var contentString = '<div class="qubely-gmap-marker-window"><div class="qubely-gmap-marker-place">' + place.name + '</div><div class="qubely-gmap-marker-address">' + place.adr_address + '</div>' + '<div class="qubely-gmap-marker-url"><a href="' + place.website + '" target="_blank">' + place.website + '</a></div></div>';

                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        marker.addListener('click', function () {
                            infowindow.open(map, marker);
                        });
                    }
                });
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(type, val) {
            var _this2 = this;

            var _props4 = this.props,
                apiKey = _props4.attributes.apiKey,
                setAttributes = _props4.setAttributes;

            setAttributes(_defineProperty({}, type, val));
            if (apiKey) setTimeout(function () {
                return _this2.initMap();
            }, 300);
        }
    }, {
        key: 'getStyles',
        value: function getStyles(string) {
            var result = [];
            try {
                result = JSON.parse(string);
            } catch (e) {
                return [];
            }
            return result;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props5 = this.props,
                setAttributes = _props5.setAttributes,
                _props5$attributes = _props5.attributes,
                uniqueId = _props5$attributes.uniqueId,
                className = _props5$attributes.className,
                zoom = _props5$attributes.zoom,
                height = _props5$attributes.height,
                apiKey = _props5$attributes.apiKey,
                mapAddress = _props5$attributes.mapAddress,
                selectedStyle = _props5$attributes.selectedStyle,
                showZoomButtons = _props5$attributes.showZoomButtons,
                showMapTypeButtons = _props5$attributes.showMapTypeButtons,
                showStreetViewButton = _props5$attributes.showStreetViewButton,
                showFullscreenButton = _props5$attributes.showFullscreenButton,
                optionDraggable = _props5$attributes.optionDraggable,
                showMarker = _props5$attributes.showMarker,
                iconPointer = _props5$attributes.iconPointer,
                animation = _props5$attributes.animation,
                enablePosition = _props5$attributes.enablePosition,
                selectPosition = _props5$attributes.selectPosition,
                positionXaxis = _props5$attributes.positionXaxis,
                positionYaxis = _props5$attributes.positionYaxis,
                globalZindex = _props5$attributes.globalZindex,
                hideTablet = _props5$attributes.hideTablet,
                hideMobile = _props5$attributes.hideMobile,
                globalCss = _props5$attributes.globalCss;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'map', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __('Map Settings', 'qubely') },
                        React.createElement(TextControl, {
                            label: __('API Key'),
                            value: apiKey,
                            placeholder: __('Enter API Key'),
                            onChange: function onChange(val) {
                                return _this3.initMapLibrary(val);
                            } }),
                        !apiKey && React.createElement(
                            Fragment,
                            null,
                            React.createElement(
                                'i',
                                null,
                                __('Generate your Google API key in'),
                                ' ',
                                React.createElement(
                                    'a',
                                    { href: 'https://developers.google.com/maps/documentation/javascript/get-api-key', target: '_blank' },
                                    __('here')
                                ),
                                '.'
                            ),
                            React.createElement(Separator, null)
                        ),
                        React.createElement(RangeControl, {
                            label: __('Zoom'),
                            value: zoom,
                            min: '1',
                            max: '20',
                            onChange: function onChange(val) {
                                return _this3.setSettings('zoom', val);
                            } }),
                        React.createElement(RangeControl, {
                            label: __('Height'),
                            value: height,
                            min: '1',
                            max: '700',
                            onChange: function onChange(val) {
                                return _this3.setSettings('height', val);
                            } })
                    ),
                    !apiKey && React.createElement(
                        'b',
                        null,
                        React.createElement(
                            'i',
                            null,
                            __('Need Google API key extend feature.')
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: apiKey ? '' : 'not-clickable' },
                        React.createElement(
                            PanelBody,
                            { title: __('Map Style') },
                            React.createElement(
                                'div',
                                { style: { overflow: 'auto' } },
                                _mapStyles2.default.map(function (option, index) {
                                    return React.createElement(
                                        'div',
                                        { className: selectedStyle == option.value ? 'qubely-map-style qubely-map-style-active' : 'qubely-map-style' },
                                        React.createElement('img', {
                                            key: index,
                                            onClick: function onClick() {
                                                _this3.setSettings('selectedStyle', option.value);
                                                _this3.setSettings('mapStyle', JSON.stringify(option.json));
                                            },
                                            src: option.image,
                                            title: __(option.label),
                                            alt: __('Map Style')
                                        }),
                                        React.createElement(
                                            'p',
                                            null,
                                            __(option.label)
                                        )
                                    );
                                })
                            )
                        ),
                        React.createElement(
                            PanelBody,
                            { title: __('Map Option') },
                            React.createElement(ToggleControl, {
                                label: __('Zoom Buttons'),
                                checked: !!showZoomButtons,
                                onChange: function onChange(val) {
                                    return _this3.setSettings('showZoomButtons', val);
                                } }),
                            React.createElement(ToggleControl, {
                                label: __('Map Type Buttons'),
                                checked: !!showMapTypeButtons,
                                onChange: function onChange(val) {
                                    return _this3.setSettings('showMapTypeButtons', val);
                                } }),
                            React.createElement(ToggleControl, {
                                label: __('Street View Button'),
                                checked: !!showStreetViewButton,
                                onChange: function onChange(val) {
                                    return _this3.setSettings('showStreetViewButton', val);
                                } }),
                            React.createElement(ToggleControl, {
                                label: __('Fullscreen Button'),
                                checked: !!showFullscreenButton,
                                onChange: function onChange(val) {
                                    return _this3.setSettings('showFullscreenButton', val);
                                } }),
                            React.createElement(ToggleControl, {
                                label: __('Draggable'),
                                checked: !!optionDraggable,
                                onChange: function onChange(val) {
                                    return _this3.setSettings('optionDraggable', val);
                                } }),
                            React.createElement(ToggleControl, {
                                label: __('Show Marker'),
                                checked: !!showMarker,
                                onChange: function onChange(val) {
                                    return _this3.setSettings('showMarker', val);
                                } }),
                            showMarker && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Separator, { label: __('Add custom marker') }),
                                React.createElement(Media, {
                                    multiple: false,
                                    type: ['image'],
                                    value: { url: iconPointer },
                                    panel: true,
                                    onChange: function onChange(val) {
                                        return _this3.setSettings('iconPointer', val.url);
                                    } })
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: apiKey ? 'qubely-google-map' : 'qubely-gmap-hide' },
                        React.createElement('input', { ref: 'mapAddress', type: 'text', className: 'qubely-google-gmap-input', placeholder: __('Find your location…') }),
                        React.createElement('div', { ref: 'qubelyGoogleMap', style: { height: parseInt(height, 10) + 'px', width: '100%' } })
                    ),
                    !apiKey && React.createElement(
                        'div',
                        { ref: 'qubelyGoogleMapIframe' },
                        React.createElement(TextControl, {
                            label: __(''),
                            value: mapAddress,
                            placeholder: __('Enter your address'),
                            onChange: function onChange(val) {
                                return _this3.props.setAttributes({ mapAddress: val });
                            }
                        }),
                        React.createElement('iframe', {
                            width: '100%',
                            height: parseInt(height, 10) + 'px',
                            src: 'https://maps.google.com/maps?q=' + encodeURIComponent(mapAddress) + '&t=&z=' + parseInt(zoom, 10) + '&ie=UTF8&iwloc=&output=embed',
                            frameborder: '0',
                            scrolling: 'no',
                            marginheight: '0',
                            marginwidth: '0'
                        })
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/map/Save.js":
/*!********************************!*\
  !*** ./src/blocks/map/Save.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var animationAttr = wp.qubelyComponents.HelperFunction.animationAttr;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                animation = _props$attributes.animation,
                placeID = _props$attributes.placeID,
                mapAddress = _props$attributes.mapAddress,
                zoom = _props$attributes.zoom,
                height = _props$attributes.height,
                apiKey = _props$attributes.apiKey,
                mapStyle = _props$attributes.mapStyle,
                showZoomButtons = _props$attributes.showZoomButtons,
                showMapTypeButtons = _props$attributes.showMapTypeButtons,
                showStreetViewButton = _props$attributes.showStreetViewButton,
                showFullscreenButton = _props$attributes.showFullscreenButton,
                optionDraggable = _props$attributes.optionDraggable,
                showMarker = _props$attributes.showMarker,
                iconPointer = _props$attributes.iconPointer;

            var attrs = {
                'data-apiKey': apiKey,
                'data-placeID': placeID,
                'data-zoom': zoom,
                'data-show-zoom-buttons': showZoomButtons ? 'true' : 'false',
                'data-show-map-type-buttons': showMapTypeButtons ? 'true' : 'false',
                'data-show-street-view-button': showStreetViewButton ? 'true' : 'false',
                'data-show-fullscreen-button': showFullscreenButton ? 'true' : 'false',
                'data-option-draggable': optionDraggable ? 'true' : 'false',
                'data-show-marker': showMarker ? 'true' : 'false',
                'data-icon-pointer': iconPointer,
                'data-styles': mapStyle
            };
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                apiKey ? React.createElement('div', _extends({ className: 'qubely-google-map' }, attrs, { style: { height: parseInt(height, 10) + 'px', width: '100%' } })) : React.createElement('iframe', {
                    width: '100%',
                    height: parseInt(height, 10) + 'px',
                    src: 'https://maps.google.com/maps?q=' + encodeURIComponent(mapAddress) + '&t=&z=' + parseInt(zoom, 10) + '&ie=UTF8&iwloc=&output=embed',
                    frameborder: '0',
                    scrolling: 'no',
                    marginheight: '0',
                    marginwidth: '0'
                })
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/map/index.js":
/*!*********************************!*\
  !*** ./src/blocks/map/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/map/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/map/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/map/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/map', {
    title: __('Google Map'),
    description: 'Embed Google Maps easily with Qubely Google Maps.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-map.svg', alt: __('Map Block') }),
    keywords: [__('Google Map'), __('Map'), __('Location')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, { // Global Settings
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        zoom: { type: 'number', default: '16' },
        height: { type: 'number', default: '350' },
        placeID: { type: 'string', default: '' },
        mapAddress: { type: 'string', default: '' },
        apiKey: { type: 'string', default: '' },
        iconPointer: { type: 'string', default: '' },
        showZoomButtons: { type: 'boolean', default: true },
        showMapTypeButtons: { type: 'boolean', default: true },
        showStreetViewButton: { type: 'boolean', default: true },
        showFullscreenButton: { type: 'boolean', default: true },
        optionScrollWheel: { type: 'boolean', default: true },
        optionDraggable: { type: 'boolean', default: true },
        showMarker: { type: 'boolean', default: true },
        mapStyle: { type: 'string', default: '' },
        selectedStyle: { type: 'string', default: 'default' }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/map/mapStyles.js":
/*!*************************************!*\
  !*** ./src/blocks/map/mapStyles.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var __ = wp.i18n.__;

var base_url = qubely_admin.plugin + 'assets/img/blocks/map/';

exports.default = [{
    value: 'default',
    label: __('Default'),
    image: base_url + 'style-default.jpg',
    json: []
}, {
    value: 'grey',
    label: __('Grey'),
    image: base_url + 'shadow-grey.jpg',
    json: [{ "featureType": "all", "elementType": "labels.text.fill", "stylers": [{ "saturation": 36 }, { "color": "#000000" }, { "lightness": 40 }] }, { "featureType": "all", "elementType": "labels.text.stroke", "stylers": [{ "visibility": "on" }, { "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "all", "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "administrative", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "administrative", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 17 }, { "weight": 1.2 }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 21 }] }, { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }, { "featureType": "road.highway", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 29 }, { "weight": 0.2 }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 18 }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "transit", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 19 }] }, { "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }]
}, {
    value: 'ultra_light',
    label: __('Ultra Light'),
    image: base_url + 'ultra-light.jpg',
    json: [{ "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#e9e9e9" }, { "lightness": 17 }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#f5f5f5" }, { "lightness": 20 }] }, { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "color": "#ffffff" }, { "lightness": 17 }] }, { "featureType": "road.highway", "elementType": "geometry.stroke", "stylers": [{ "color": "#ffffff" }, { "lightness": 29 }, { "weight": 0.2 }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#ffffff" }, { "lightness": 18 }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#ffffff" }, { "lightness": 16 }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "color": "#f5f5f5" }, { "lightness": 21 }] }, { "featureType": "poi.park", "elementType": "geometry", "stylers": [{ "color": "#dedede" }, { "lightness": 21 }] }, { "elementType": "labels.text.stroke", "stylers": [{ "visibility": "on" }, { "color": "#ffffff" }, { "lightness": 16 }] }, { "elementType": "labels.text.fill", "stylers": [{ "saturation": 36 }, { "color": "#333333" }, { "lightness": 40 }] }, { "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "elementType": "geometry", "stylers": [{ "color": "#f2f2f2" }, { "lightness": 19 }] }, { "featureType": "administrative", "elementType": "geometry.fill", "stylers": [{ "color": "#fefefe" }, { "lightness": 20 }] }, { "featureType": "administrative", "elementType": "geometry.stroke", "stylers": [{ "color": "#fefefe" }, { "lightness": 17 }, { "weight": 1.2 }] }]
}, {
    value: 'midnight',
    label: __('Midnight'),
    image: base_url + 'midnight.jpg',
    json: [{ "featureType": "administrative", "elementType": "all", "stylers": [{ "visibility": "on" }, { "lightness": 33 }] }, { "featureType": "landscape", "elementType": "all", "stylers": [{ "color": "#f2e5d4" }] }, { "featureType": "poi.park", "elementType": "geometry", "stylers": [{ "color": "#c5dac6" }] }, { "featureType": "poi.park", "elementType": "labels", "stylers": [{ "visibility": "on" }, { "lightness": 20 }] }, { "featureType": "road", "elementType": "all", "stylers": [{ "lightness": 20 }] }, { "featureType": "road.highway", "elementType": "geometry", "stylers": [{ "color": "#c5c6c6" }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#e4d7c6" }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#fbfaf7" }] }, { "featureType": "water", "elementType": "all", "stylers": [{ "visibility": "on" }, { "color": "#acbcc9" }] }]
}, {
    value: 'off_aqua_light',
    label: __('Aqua light'),
    image: base_url + 'aqua-light.jpg',
    json: [{ "featureType": "administrative", "elementType": "labels.text.fill", "stylers": [{ "color": "#444444" }] }, { "featureType": "administrative.locality", "elementType": "labels.text.fill", "stylers": [{ "color": "#378b90" }] }, { "featureType": "administrative.neighborhood", "elementType": "labels.text.fill", "stylers": [{ "color": "#31b9c1" }] }, { "featureType": "landscape", "elementType": "all", "stylers": [{ "color": "#f2f2f2" }] }, { "featureType": "poi", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "road", "elementType": "all", "stylers": [{ "saturation": -100 }, { "lightness": 45 }] }, { "featureType": "road.highway", "elementType": "all", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "road.arterial", "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "water", "elementType": "all", "stylers": [{ "color": "#46bcec" }, { "visibility": "on" }] }, { "featureType": "water", "elementType": "geometry.fill", "stylers": [{ "color": "#31b9c1" }] }, { "featureType": "water", "elementType": "geometry.stroke", "stylers": [{ "color": "#31b9c1" }] }]
}, {
    value: 'inturlam',
    label: __('İnturlam'),
    image: base_url + 'inturlam.jpg',
    json: [{ "featureType": "all", "elementType": "all", "stylers": [{ "invert_lightness": true }, { "saturation": 20 }, { "lightness": 50 }, { "gamma": 0.4 }, { "hue": "#00ffee" }] }, { "featureType": "all", "elementType": "geometry", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "all", "elementType": "labels", "stylers": [{ "visibility": "on" }] }, { "featureType": "administrative", "elementType": "all", "stylers": [{ "color": "#ffffff" }, { "visibility": "simplified" }] }, { "featureType": "administrative.land_parcel", "elementType": "geometry.stroke", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "landscape", "elementType": "all", "stylers": [{ "color": "#405769" }] }, { "featureType": "water", "elementType": "geometry.fill", "stylers": [{ "color": "#232f3a" }] }]
}, {
    value: 'lunar',
    label: __('Lunar'),
    image: base_url + 'lunar.jpg',
    json: [{ "stylers": [{ "hue": "#ff1a00" }, { "invert_lightness": true }, { "saturation": -100 }, { "lightness": 33 }, { "gamma": 0.5 }] }, { "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#2D333C" }] }]
}, {
    value: 'greyscale',
    label: __('Greyscale'),
    image: base_url + 'greyscale.jpg',
    json: [{ "featureType": "all", "elementType": "all", "stylers": [{ "saturation": -100 }, { "gamma": 0.5 }] }]
}, {
    value: 'multi_brand',
    label: __('Multi Brand'),
    image: base_url + 'multi-brand.jpg',
    json: [{ "featureType": "all", "elementType": "labels", "stylers": [{ "visibility": "on" }] }, { "featureType": "all", "elementType": "labels.text.fill", "stylers": [{ "saturation": 36 }, { "color": "#000000" }, { "lightness": 40 }] }, { "featureType": "all", "elementType": "labels.text.stroke", "stylers": [{ "visibility": "on" }, { "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "all", "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "administrative", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "administrative", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 17 }, { "weight": 1.2 }] }, { "featureType": "administrative.country", "elementType": "labels.text.fill", "stylers": [{ "color": "#e5c163" }] }, { "featureType": "administrative.locality", "elementType": "labels.text.fill", "stylers": [{ "color": "#c4c4c4" }] }, { "featureType": "administrative.neighborhood", "elementType": "labels.text.fill", "stylers": [{ "color": "#e5c163" }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 21 }, { "visibility": "on" }] }, { "featureType": "poi.business", "elementType": "geometry", "stylers": [{ "visibility": "on" }] }, { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "color": "#e5c163" }, { "lightness": "0" }] }, { "featureType": "road.highway", "elementType": "geometry.stroke", "stylers": [{ "visibility": "off" }] }, { "featureType": "road.highway", "elementType": "labels.text.fill", "stylers": [{ "color": "#ffffff" }] }, { "featureType": "road.highway", "elementType": "labels.text.stroke", "stylers": [{ "color": "#e5c163" }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 18 }] }, { "featureType": "road.arterial", "elementType": "geometry.fill", "stylers": [{ "color": "#575757" }] }, { "featureType": "road.arterial", "elementType": "labels.text.fill", "stylers": [{ "color": "#ffffff" }] }, { "featureType": "road.arterial", "elementType": "labels.text.stroke", "stylers": [{ "color": "#2c2c2c" }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "road.local", "elementType": "labels.text.fill", "stylers": [{ "color": "#999999" }] }, { "featureType": "transit", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 19 }] }, { "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }]
}, {
    value: 'purple',
    label: __('Purple'),
    image: base_url + 'purple.jpg',
    json: [{ "featureType": "all", "elementType": "all", "stylers": [{ "visibility": "simplified" }, { "hue": "#bc00ff" }, { "saturation": "0" }] }, { "featureType": "administrative", "elementType": "all", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "administrative", "elementType": "labels.text.fill", "stylers": [{ "color": "#e8b8f9" }] }, { "featureType": "administrative.country", "elementType": "labels", "stylers": [{ "color": "#ff0000" }] }, { "featureType": "administrative.land_parcel", "elementType": "labels.text.fill", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "landscape", "elementType": "all", "stylers": [{ "color": "#3e114e" }, { "visibility": "simplified" }] }, { "featureType": "landscape", "elementType": "labels", "stylers": [{ "visibility": "off" }, { "color": "#a02aca" }] }, { "featureType": "landscape.natural", "elementType": "all", "stylers": [{ "visibility": "simplified" }, { "color": "#2e093b" }] }, { "featureType": "landscape.natural", "elementType": "labels.text", "stylers": [{ "color": "#9e1010" }, { "visibility": "off" }] }, { "featureType": "landscape.natural", "elementType": "labels.text.fill", "stylers": [{ "color": "#ff0000" }] }, { "featureType": "landscape.natural.landcover", "elementType": "all", "stylers": [{ "visibility": "simplified" }, { "color": "#58176e" }] }, { "featureType": "landscape.natural.landcover", "elementType": "labels.text.fill", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "poi", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "poi.business", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "road", "elementType": "all", "stylers": [{ "saturation": -100 }, { "lightness": 45 }] }, { "featureType": "road", "elementType": "geometry", "stylers": [{ "visibility": "simplified" }, { "color": "#a02aca" }] }, { "featureType": "road", "elementType": "labels", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "road", "elementType": "labels.text.fill", "stylers": [{ "color": "#d180ee" }] }, { "featureType": "road", "elementType": "labels.text.stroke", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "road.highway", "elementType": "all", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "road.highway", "elementType": "geometry", "stylers": [{ "visibility": "simplified" }, { "color": "#a02aca" }] }, { "featureType": "road.highway", "elementType": "labels", "stylers": [{ "visibility": "off" }, { "color": "#ff0000" }] }, { "featureType": "road.highway", "elementType": "labels.text", "stylers": [{ "color": "#a02aca" }, { "visibility": "simplified" }] }, { "featureType": "road.highway", "elementType": "labels.text.fill", "stylers": [{ "color": "#cc81e7" }, { "visibility": "simplified" }] }, { "featureType": "road.highway", "elementType": "labels.text.stroke", "stylers": [{ "visibility": "simplified" }, { "hue": "#bc00ff" }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#6d2388" }] }, { "featureType": "road.arterial", "elementType": "labels.text.fill", "stylers": [{ "color": "#c46ce3" }] }, { "featureType": "road.arterial", "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "water", "elementType": "all", "stylers": [{ "color": "#b7918f" }, { "visibility": "on" }] }, { "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#280b33" }] }, { "featureType": "water", "elementType": "labels", "stylers": [{ "visibility": "simplified" }, { "color": "#a02aca" }] }]
}];

/***/ }),

/***/ "./src/blocks/map/style.scss":
/*!***********************************!*\
  !*** ./src/blocks/map/style.scss ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/map/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/pagesettings/index.js":
/*!******************************************!*\
  !*** ./src/blocks/pagesettings/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var blockAttrs = {
	uniqueId: { type: 'string', default: '' },
	body: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin), .editor-styles-wrapper .editor-writing-flow *' }] },
	h1: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) h1, .editor-styles-wrapper h1' }] },
	h2: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) h2, .editor-styles-wrapper h2' }] },
	h3: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) h3, .editor-styles-wrapper h3' }] },
	h4: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) h4, .editor-styles-wrapper h4' }] },
	h5: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) h5, .editor-styles-wrapper h5' }] },
	h6: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) h6, .editor-styles-wrapper h6' }] },
	button: { type: 'object', default: {}, style: [{ selector: 'body:not(.wp-admin) .quebly-button, .editor-styles-wrapper .quebly-button' }] },

	colorPreset1: { type: 'string', default: qubely_admin.palette[0] },
	colorPreset2: { type: 'string', default: qubely_admin.palette[1] },
	colorPreset3: { type: 'string', default: qubely_admin.palette[2] },
	colorPreset4: { type: 'string', default: qubely_admin.palette[3] },
	colorPreset5: { type: 'string', default: qubely_admin.palette[4] },
	colorPreset6: { type: 'string', default: qubely_admin.palette[5] }

	/**
  * This blog only for global data structure 
  * It will not visible for users
  */
};registerBlockType('qubely/pagesettings', {
	title: __('Global Settings'),
	icon: 'book-alt',
	category: 'qubely',
	keywords: [__('Global Settings'), __('Global Settings')],
	supports: { inserter: false, reusable: false, html: false },
	attributes: _extends({}, blockAttrs),
	edit: function edit() {},
	save: function save() {}
});

/***/ }),

/***/ "./src/blocks/pieprogress/Edit.js":
/*!****************************************!*\
  !*** ./src/blocks/pieprogress/Edit.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Progress = __webpack_require__(/*! ./Progress */ "./src/blocks/pieprogress/Progress.js");

var _Progress2 = _interopRequireDefault(_Progress);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    TextControl = _wp$components.TextControl;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls,
    RichText = _wp$blockEditor.RichText;
var __ = wp.i18n.__;
var _wp$qubelyComponents = wp.qubelyComponents,
    Styles = _wp$qubelyComponents.Styles,
    Range = _wp$qubelyComponents.Range,
    Color = _wp$qubelyComponents.Color,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Toggle = _wp$qubelyComponents.Toggle,
    Typography = _wp$qubelyComponents.Typography,
    IconList = _wp$qubelyComponents.IconList,
    Media = _wp$qubelyComponents.Media,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Alignment = _wp$qubelyComponents.Alignment,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = {
            device: 'md',
            selector: true,
            spacer: true,
            openPanelSetting: ''
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                progress = _props2$attributes.progress,
                alignment = _props2$attributes.alignment,
                size = _props2$attributes.size,
                corner = _props2$attributes.corner,
                thickness = _props2$attributes.thickness,
                thicknessBg = _props2$attributes.thicknessBg,
                background = _props2$attributes.background,
                fillColor = _props2$attributes.fillColor,
                layout = _props2$attributes.layout,
                iconStyle = _props2$attributes.iconStyle,
                enableIcon = _props2$attributes.enableIcon,
                iconText = _props2$attributes.iconText,
                iconTextColor = _props2$attributes.iconTextColor,
                iconTypography = _props2$attributes.iconTypography,
                iconName = _props2$attributes.iconName,
                iconSize = _props2$attributes.iconSize,
                image = _props2$attributes.image,
                image2x = _props2$attributes.image2x,
                imageAlt = _props2$attributes.imageAlt,
                imageSize = _props2$attributes.imageSize,
                enableHeading = _props2$attributes.enableHeading,
                heading = _props2$attributes.heading,
                headingColor = _props2$attributes.headingColor,
                headingPosition = _props2$attributes.headingPosition,
                headingTypography = _props2$attributes.headingTypography,
                headingSpacing = _props2$attributes.headingSpacing,
                headingAlignment = _props2$attributes.headingAlignment,
                progressShadow = _props2$attributes.progressShadow,
                circleShadow = _props2$attributes.circleShadow,
                circleShrink = _props2$attributes.circleShrink,
                speed = _props2$attributes.speed,
                animation = _props2$attributes.animation,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                globalZindex = _props2$attributes.globalZindex,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction,
                device = this.state.device,
                thicknessCalc = {
                fill: size / 2,
                outline: size * (thickness * .5) / 100,
                outline_fill: size * (thickness * .5) / 100
            },
                thicknessBgCalc = {
                fill: size / 2,
                outline: size * (thicknessBg * .5) / 100,
                outline_fill: size * (thickness * .5) / 100
            },
                progressAttr = {
                size: size,
                layout: layout,
                corner: layout === 'fill' ? 'unset' : corner,
                uniqueId: uniqueId,
                percent: progress,
                thickness: thicknessCalc[layout],
                thicknessBg: thicknessBgCalc[layout],
                emptyFill: background,
                fill: fillColor,
                circleShadow: circleShadow,
                progressShadow: progressShadow,
                circleShrink: (size - thickness) * .5 * circleShrink / 100,
                duration: speed
            };


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'pieprogress', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    null,
                    React.createElement(
                        PanelBody,
                        { title: '' },
                        React.createElement(Styles, {
                            value: layout,
                            onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            proUpgradation: true,
                            options: [{ value: 'outline', img: _icons2.default.pie_outline, label: __('Layout 1') }, { value: 'outline_fill', img: _icons2.default.pie_outline_fill, label: __('Layout 2'), pro: true }, { value: 'fill', img: _icons2.default.pie_fill, label: __('Layout 3'), pro: true }]
                        }),
                        React.createElement(Range, { label: __('Progress Size'), value: size, onChange: function onChange(value) {
                                return setAttributes({ size: value });
                            }, min: 20, max: 500 }),
                        React.createElement(RadioAdvanced, {
                            label: __('Alignment'),
                            options: [{ label: React.createElement('span', { style: { padding: '0 5px' }, 'class': 'fas fa-align-left' }), value: 'flex-start', title: 'Left' }, { label: React.createElement('span', { style: { padding: '0 5px' }, 'class': 'fas fa-align-center' }), value: 'center', title: 'Center' }, { label: React.createElement('span', { style: { padding: '0 5px' }, 'class': 'fas fa-align-right' }), value: 'flex-end', title: 'Right' }],
                            value: alignment,
                            onChange: function onChange(alignment) {
                                return setAttributes({ alignment: alignment });
                            } }),
                        React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/pieprogress/template-pro-notice.jpg', alt: __('Pie Porgress Templates') })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Progress'), initialOpen: false },
                        React.createElement(Range, { label: __('Progress Percent'), value: progress, onChange: function onChange(value) {
                                return setAttributes({ progress: value });
                            }, min: 0, max: 100 }),
                        React.createElement(ColorAdvanced, { label: __('Progress Color'), value: fillColor, onChange: function onChange(val) {
                                return setAttributes({ fillColor: val });
                            } }),
                        layout !== 'fill' && React.createElement(RadioAdvanced, {
                            label: __('Corner'),
                            options: [{ label: 'Sharp', value: 'unset', title: 'Sharp' }, { label: 'Round', value: 'round', title: 'Round' }],
                            value: corner,
                            onChange: function onChange(value) {
                                return setAttributes({ corner: value });
                            } }),
                        layout !== 'fill' && React.createElement(Range, { label: __('Progress Width'), value: thickness, onChange: function onChange(thickness) {
                                return setAttributes({ thickness: thickness });
                            }, min: 1, max: 100 }),
                        React.createElement(BoxShadow, { label: __('Shadow'), value: progressShadow, onChange: function onChange(progressShadow) {
                                return setAttributes({ progressShadow: progressShadow });
                            } }),
                        React.createElement(Range, { label: __('Speed (ms)'), value: speed, onChange: function onChange(speed) {
                                return setAttributes({ speed: speed });
                            }, min: 0, max: 2000 })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Circle'), initialOpen: false },
                        layout === 'outline' && React.createElement(Range, { label: __('Circle Width'), value: thicknessBg, onChange: function onChange(value) {
                                return setAttributes({ thicknessBg: value });
                            }, min: 1, max: 100 }),
                        React.createElement(Range, { label: __('Circle Shrink (%)'), value: circleShrink, onChange: function onChange(circleShrink) {
                                return setAttributes({ circleShrink: circleShrink });
                            }, min: 0, max: 100 }),
                        React.createElement(Color, { label: __('Circle Background'), value: background, onChange: function onChange(background) {
                                return setAttributes({ background: background });
                            } }),
                        React.createElement(BoxShadow, { label: __('Shadow'), value: circleShadow, onChange: function onChange(circleShadow) {
                                return setAttributes({ circleShadow: circleShadow });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Percentage / Icon'), initialOpen: false },
                        React.createElement(Toggle, { label: __('Enable'), value: enableIcon, onChange: function onChange(enableIcon) {
                                return setAttributes({ enableIcon: enableIcon });
                            } }),
                        enableIcon && React.createElement(
                            Fragment,
                            null,
                            React.createElement(RadioAdvanced, {
                                label: __('Type'),
                                options: [{ label: '%', value: 'percent', title: 'Percent' }, { label: 'Icon', value: 'icon', title: 'Icon' }, { label: 'Image', value: 'image', title: 'Image' }, { label: 'Text', value: 'text', title: 'Text' }],
                                value: iconStyle,
                                onChange: function onChange(iconStyle) {
                                    return setAttributes({ iconStyle: iconStyle });
                                } }),
                            iconStyle === 'icon' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(IconList, {
                                    value: iconName,
                                    onChange: function onChange(iconName) {
                                        return setAttributes({ iconName: iconName });
                                    } }),
                                React.createElement(Range, { label: __('Icon Size'), value: iconSize, onChange: function onChange(iconSize) {
                                        return setAttributes({ iconSize: iconSize });
                                    }, min: 10, max: 200 })
                            ),
                            iconStyle === 'image' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Media, {
                                    label: __('Image'),
                                    multiple: false,
                                    type: ['image'],
                                    panel: true,
                                    value: image, onChange: function onChange(image) {
                                        return setAttributes({ image: image });
                                    } }),
                                React.createElement(Media, {
                                    panel: true,
                                    value: image2x,
                                    multiple: false,
                                    type: ['image'],
                                    label: __('Retina Image'),
                                    onChange: function onChange(image2x) {
                                        return setAttributes({ image2x: image2x });
                                    } }),
                                image.url && React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(TextControl, { label: __('Alt Text'), value: imageAlt, onChange: function onChange(imageAlt) {
                                            return setAttributes({ imageAlt: imageAlt });
                                        } }),
                                    React.createElement(Range, { label: __('Image Width'), value: imageSize, onChange: function onChange(imageSize) {
                                            return setAttributes({ imageSize: imageSize });
                                        }, min: imageSize.unit !== 'px' ? 0 : 10, max: imageSize.unit === '%' ? 100 : 500, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                            return _this2.setState({ device: value });
                                        } })
                                )
                            ),
                            iconStyle === 'text' && React.createElement(TextControl, {
                                label: 'Text',
                                value: iconText,
                                onChange: function onChange(iconText) {
                                    return setAttributes({ iconText: iconText });
                                }
                            }),
                            iconStyle !== 'image' && React.createElement(Color, { label: __('Color'), value: iconTextColor, onChange: function onChange(iconTextColor) {
                                    return setAttributes({ iconTextColor: iconTextColor });
                                } }),
                            (iconStyle === 'text' || iconStyle === 'percent') && React.createElement(Typography, { value: iconTypography, onChange: function onChange(iconTypography) {
                                    return setAttributes({ iconTypography: iconTypography });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Heading'), initialOpen: false },
                        React.createElement(Toggle, { label: __('Enable Heading'), value: enableHeading, onChange: function onChange(enableHeading) {
                                return setAttributes({ enableHeading: enableHeading });
                            } }),
                        enableHeading && React.createElement(
                            Fragment,
                            null,
                            React.createElement(TextControl, { label: __('Heading text'), value: heading, onChange: function onChange(heading) {
                                    return setAttributes({ heading: heading });
                                } }),
                            heading && React.createElement(Color, { label: __('Heading Color'), value: headingColor, onChange: function onChange(headingColor) {
                                    return setAttributes({ headingColor: headingColor });
                                } }),
                            React.createElement(RadioAdvanced, {
                                label: __('Type'),
                                options: [{ label: 'Inside', value: 'inside', title: 'Inside' }, { label: 'Outside', value: 'outside', title: 'Outside' }],
                                value: headingPosition,
                                onChange: function onChange(headingPosition) {
                                    return setAttributes({ headingPosition: headingPosition });
                                } }),
                            heading && React.createElement(
                                Fragment,
                                null,
                                headingPosition === 'outside' && React.createElement(Alignment, { label: __('Alignment'), value: headingAlignment, onChange: function onChange(headingAlignment) {
                                        return setAttributes({ headingAlignment: headingAlignment });
                                    }, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Range, { label: __('Spacing'), value: headingSpacing, onChange: function onChange(headingSpacing) {
                                        return setAttributes({ headingSpacing: headingSpacing });
                                    }, min: 0, max: 200 }),
                                React.createElement(Typography, { value: headingTypography, onChange: function onChange(headingTypography) {
                                        return setAttributes({ headingTypography: headingTypography });
                                    } })
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + ' qubely-block-pie-progress' + (className ? ' ' + className : ''), onContextMenu: function onContextMenu(event) {
                            return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                        } },
                    React.createElement(
                        'div',
                        { className: 'qubely-progress-parent' },
                        React.createElement(_Progress2.default, progressAttr),
                        (enableIcon || enableHeading) && React.createElement(
                            'div',
                            { className: 'qubely-progress-inner-text' },
                            enableIcon && React.createElement(
                                Fragment,
                                null,
                                iconStyle === 'text' && React.createElement(RichText, {
                                    value: iconText,
                                    placeholder: __('Text Here'),
                                    onChange: function onChange(iconText) {
                                        return setAttributes({ iconText: iconText });
                                    }
                                }),
                                iconStyle === 'percent' && React.createElement(
                                    'div',
                                    null,
                                    React.createElement(
                                        'span',
                                        { className: 'qubely-pie-counter' },
                                        progress
                                    ),
                                    '%'
                                ),
                                iconStyle === 'icon' && React.createElement('span', { className: 'qubely-pie-icon ' + iconName }),
                                iconStyle === 'image' && React.createElement(
                                    'div',
                                    { className: 'icon-image ' + (image.url === undefined && 'pie-placeholder') },
                                    image.url !== undefined ? React.createElement('img', {
                                        className: 'qubely-pie-image',
                                        src: image.url,
                                        alt: imageAlt && imageAlt,
                                        srcSet: image2x.url !== undefined ? image.url + ' 1x, ' + image2x.url + ' 2x' : ''
                                    }) : React.createElement('span', { className: 'qubely-pie-placeholder far fa-image' })
                                )
                            ),
                            enableHeading && headingPosition === 'inside' && React.createElement(RichText, {
                                value: heading,
                                className: 'qubely-pie-progress-heading',
                                placeholder: __('Heading Here'),
                                onChange: function onChange(heading) {
                                    return setAttributes({ heading: heading });
                                }
                            })
                        )
                    ),
                    enableHeading && headingPosition === 'outside' && React.createElement(RichText, {
                        value: heading,
                        className: 'qubely-pie-progress-heading qubely-outside',
                        placeholder: __('Heading Here'),
                        onChange: function onChange(heading) {
                            return setAttributes({ heading: heading });
                        }
                    }),
                    React.createElement(
                        'div',
                        { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                        React.createElement(ContextMenu, {
                            name: name,
                            clientId: clientId,
                            attributes: attributes,
                            setAttributes: setAttributes,
                            qubelyContextMenu: this.refs.qubelyContextMenu
                        })
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/pieprogress/Progress.js":
/*!********************************************!*\
  !*** ./src/blocks/pieprogress/Progress.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var CSSProperties = wp.element.CSSProperties;


var defaultProps = {
    isSaveMode: false,
    size: 150,
    circleShrink: 0,
    thickness: 11,
    thicknessBg: 21,
    percent: 55,
    duration: 1000,
    corner: 'round',
    emptyFill: '#eff4f8',
    layout: 'outline',
    fill: {
        color: '#25b5e1',
        openColor: 1,
        type: 'gradient',
        gradient: {
            type: 'linear',
            color1: '#25b5e1',
            color2: '#45dbca',
            direction: '47',
            start: '0',
            stop: '100'
        }
    },
    progressShadow: {
        blur: 3,
        color: 'rgba(0, 0, 0, .2)',
        horizontal: '7',
        inset: '',
        openShadow: false,
        spread: 0,
        vertical: 2
    },
    circleShadow: {
        blur: 3,
        color: 'rgba(100, 121, 130, .43)',
        horizontal: '2',
        inset: 'inset',
        openShadow: true,
        spread: 0,
        vertical: 2
    }
};

var Progress = function Progress(props) {
    props = _extends({}, defaultProps, props);
    var _props = props,
        emptyFill = _props.emptyFill,
        fill = _props.fill,
        uniqueId = _props.uniqueId,
        corner = _props.corner,
        layout = _props.layout,
        circleShadow = _props.circleShadow,
        progressShadow = _props.progressShadow,
        isSaveMode = _props.isSaveMode;

    var size = parseInt(props.size);
    var circleShrink = parseInt(props.circleShrink);
    var thickness = parseInt(props.thickness);
    var thicknessBg = parseInt(props.thicknessBg);
    var percent = parseInt(props.percent);
    var duration = isSaveMode ? parseInt(props.duration) : 0;

    var progressStyle = {
        transition: '0ms',
        width: size + 'px'
        // height: size + 'px',
    };

    var circleRadiusBg = (size - thicknessBg) * .5;
    var circleRadiusFg = (size - thickness) * .5;

    if (thickness > thicknessBg) {
        circleRadiusBg -= (thickness - thicknessBg) * .5;
    }

    if (thicknessBg > thickness) {
        circleRadiusFg -= (thicknessBg - thickness) * .5;
    }

    var circumference = 2 * Math.PI * circleRadiusFg;
    var offset = circumference * percent / 100;
    var radialPercent = size / 2 * thickness / 100 * .5;

    return React.createElement(
        'div',
        { className: 'qubely-pie-progress', style: progressStyle, role: 'progressbar' },
        React.createElement(
            'svg',
            {
                xmlns: 'http://www.w3.org/2000/svg',
                viewBox: size / 2 + ' ' + size / 2 + ' ' + size + ' ' + size,
                style: { transform: 'rotate(-90deg)', overflow: 'visible' } },
            progressShadow.openShadow === true && (progressShadow.inset !== 'inset' ? React.createElement(
                'filter',
                { id: 'progress-shadow-' + uniqueId, width: '500%', height: '500%', x: '-250%', y: '-250%' },
                React.createElement('feDropShadow', { dx: progressShadow.vertical * -1, dy: progressShadow.horizontal, stdDeviation: progressShadow.blur, 'flood-color': progressShadow.color, 'flood-opacity': '1' })
            ) : React.createElement(
                'filter',
                { id: 'progress-shadow-' + uniqueId, width: '500%', height: '500%', x: '-250%', y: '-250%' },
                React.createElement('feOffset', { dx: progressShadow.vertical * -1, dy: progressShadow.horizontal }),
                React.createElement('feGaussianBlur', { stdDeviation: progressShadow.blur }),
                React.createElement('feComposite', { operator: 'out', 'in': 'SourceGraphic', result: 'inverse' }),
                React.createElement('feFlood', { 'flood-color': progressShadow.color, 'flood-opacity': '1', result: 'color' }),
                React.createElement('feComposite', { operator: 'in', 'in': 'color', in2: 'inverse', result: 'shadow' }),
                React.createElement('feComposite', { operator: 'over', 'in': 'shadow', in2: 'SourceGraphic' })
            )),
            circleShadow.openShadow === true && (circleShadow.inset !== 'inset' ? React.createElement(
                'filter',
                { id: 'circle-shadow-' + uniqueId, width: '500%', height: '500%', x: '-250%', y: '-250%' },
                React.createElement('feDropShadow', { dx: circleShadow.vertical * -1, dy: circleShadow.horizontal, stdDeviation: circleShadow.blur, 'flood-color': circleShadow.color, 'flood-opacity': '1' })
            ) : React.createElement(
                'filter',
                { id: 'circle-shadow-' + uniqueId, width: '500%', height: '500%', x: '-250%', y: '-250%' },
                React.createElement('feOffset', { dx: circleShadow.vertical * -1, dy: circleShadow.horizontal }),
                React.createElement('feGaussianBlur', { stdDeviation: circleShadow.blur }),
                React.createElement('feComposite', { operator: 'out', 'in': 'SourceGraphic', result: 'inverse' }),
                React.createElement('feFlood', { 'flood-color': circleShadow.color, 'flood-opacity': '1', result: 'color' }),
                React.createElement('feComposite', { operator: 'in', 'in': 'color', in2: 'inverse', result: 'shadow' }),
                React.createElement('feComposite', { operator: 'over', 'in': 'shadow', in2: 'SourceGraphic' })
            )),
            fill.type !== 'color' && (fill.gradient.type == 'radial' ? React.createElement(
                'radialGradient',
                { id: 'qgrd-' + uniqueId, fx: '50%', fy: '50%', cx: '50%', cy: '50%', r: radialPercent + '%', spreadMethod: 'reflect' },
                React.createElement('stop', { offset: (fill.gradient.start || 0) + '%', 'stop-color': fill.gradient.color1 }),
                React.createElement('stop', { offset: (fill.gradient.stop || 100) + '%', 'stop-color': fill.gradient.color2 })
            ) : React.createElement(
                'linearGradient',
                { id: 'qgrd-' + uniqueId, x1: '0%', y1: '0%', x2: '0%', y2: '100%', gradientTransform: 'rotate(' + (fill.gradient.direction - 90 || 0) + ', .5, .5)' },
                React.createElement('stop', { offset: (fill.gradient.start || 0) + '%', 'stop-color': fill.gradient.color1 }),
                React.createElement('stop', { offset: (fill.gradient.stop || 100) + '%', 'stop-color': fill.gradient.color2 })
            )),
            React.createElement('circle', _extends({}, circleShadow.openShadow === true && { filter: 'url(#circle-shadow-' + uniqueId + ')' }, {
                cx: size,
                cy: size,
                r: circleRadiusBg - circleShrink,
                stroke: emptyFill,
                'stroke-width': thicknessBg,
                fill: layout !== 'outline' ? emptyFill : 'none'
            })),
            React.createElement('circle', _extends({
                className: 'qubely-pie-circle-fg'
            }, progressShadow.openShadow === true && { filter: 'url(#progress-shadow-' + uniqueId + ')' }, {
                cx: size,
                cy: size,
                r: circleRadiusFg,
                'stroke-dasharray': circumference,
                'stroke-dashoffset': isSaveMode === true ? circumference : circumference - offset,
                'data-dashoffset': circumference - offset,
                'stroke-width': thickness,
                'stroke-linecap': corner,
                fill: 'none',
                'data-transition': 'stroke-dashoffset ' + (isSaveMode === true ? duration : 0) + 'ms linear',
                'data-transition-duration': isSaveMode === true ? duration : 0,
                'data-percent': percent,
                stroke: fill.openColor ? fill.type === 'color' ? fill.color : 'url(#qgrd-' + uniqueId + ')' : defaultProps.fill.color
            }))
        )
    );
};

exports.default = Progress;

/***/ }),

/***/ "./src/blocks/pieprogress/Save.js":
/*!****************************************!*\
  !*** ./src/blocks/pieprogress/Save.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Progress = __webpack_require__(/*! ./Progress */ "./src/blocks/pieprogress/Progress.js");

var _Progress2 = _interopRequireDefault(_Progress);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Fragment = wp.element.Fragment;
var __ = wp.i18n.__;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;


var Save = function Save(props) {
    var _props$attributes = props.attributes,
        uniqueId = _props$attributes.uniqueId,
        progress = _props$attributes.progress,
        size = _props$attributes.size,
        layout = _props$attributes.layout,
        corner = _props$attributes.corner,
        enableIcon = _props$attributes.enableIcon,
        iconStyle = _props$attributes.iconStyle,
        iconText = _props$attributes.iconText,
        iconName = _props$attributes.iconName,
        image = _props$attributes.image,
        image2x = _props$attributes.image2x,
        imageAlt = _props$attributes.imageAlt,
        enableHeading = _props$attributes.enableHeading,
        headingPosition = _props$attributes.headingPosition,
        heading = _props$attributes.heading,
        animation = _props$attributes.animation,
        interaction = _props$attributes.interaction,
        thickness = _props$attributes.thickness,
        thicknessBg = _props$attributes.thicknessBg,
        background = _props$attributes.background,
        fillColor = _props$attributes.fillColor,
        circleShadow = _props$attributes.circleShadow,
        progressShadow = _props$attributes.progressShadow,
        circleShrink = _props$attributes.circleShrink,
        speed = _props$attributes.speed;


    var thicknessCalc = {
        fill: size / 2,
        outline: size * (thickness * .5) / 100,
        outline_fill: size * (thickness * .5) / 100
    };

    var thicknessBgCalc = {
        fill: size / 2,
        outline: size * (thicknessBg * .5) / 100,
        outline_fill: size * (thickness * .5) / 100
    };

    var progressAttr = {
        size: size,
        layout: layout,
        corner: layout === 'fill' ? 'unset' : corner,
        uniqueId: uniqueId,
        percent: progress,
        thickness: thicknessCalc[layout],
        thicknessBg: thicknessBgCalc[layout],
        emptyFill: background,
        fill: fillColor,
        circleShadow: circleShadow,
        progressShadow: progressShadow,
        circleShrink: (size - thickness) * .5 * circleShrink / 100,
        isSaveMode: parseInt(speed) > 0,
        duration: speed
    };
    var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
    return React.createElement(
        'div',
        _extends({ className: 'qubely-block-' + uniqueId + ' qubely-block-pie-progress ' + interactionClass }, animationAttr(animation)),
        React.createElement(
            'div',
            { className: 'qubely-progress-parent' },
            React.createElement(_Progress2.default, progressAttr),
            (enableIcon || enableHeading) && React.createElement(
                'div',
                { className: 'qubely-progress-inner-text' },
                enableIcon && React.createElement(
                    Fragment,
                    null,
                    iconStyle === 'text' && React.createElement(RichText.Content, {
                        tagName: 'div',
                        value: iconText
                    }),
                    iconStyle === 'percent' && React.createElement(
                        'div',
                        null,
                        React.createElement(
                            'span',
                            { className: 'qubely-pie-counter' },
                            progress
                        ),
                        '%'
                    ),
                    iconStyle === 'icon' && React.createElement('span', { className: 'qubely-pie-icon ' + iconName }),
                    iconStyle === 'image' && React.createElement(
                        'div',
                        { className: 'icon-image ' + (image.url === undefined && 'pie-placeholder') },
                        image.url !== undefined ? React.createElement('img', {
                            className: 'qubely-pie-image',
                            src: image.url,
                            alt: imageAlt && imageAlt,
                            srcSet: image2x.url !== undefined ? image.url + ' 1x, ' + image2x.url + ' 2x' : ''
                        }) : React.createElement('span', { className: 'qubely-pie-placeholder far fa-image' })
                    )
                ),
                enableHeading && headingPosition === 'inside' && React.createElement(RichText.Content, {
                    tagName: 'div',
                    value: heading,
                    className: 'qubely-pie-progress-heading'
                })
            )
        ),
        enableHeading && headingPosition === 'outside' && React.createElement(RichText.Content, {
            tagName: 'div',
            value: heading,
            className: 'qubely-pie-progress-heading qubely-outside'
        })
    );
};

exports.default = Save;

/***/ }),

/***/ "./src/blocks/pieprogress/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/pieprogress/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/pieprogress/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/pieprogress/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/pieprogress/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;
var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


if (!qubely_admin.pro_enable) {

    registerBlockType('qubely/pieprogress', {
        title: __('Pie Progress'),
        description: 'Animated circular progress bar',
        category: 'qubely',
        icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-pie-progress.svg', alt: __('Pie Porgress Block') }),
        keywords: [__('progress'), __('bar'), __('bar progress')],
        example: {
            attributes: {}
        },
        attributes: _extends({
            uniqueId: { type: 'string', default: '' },
            layout: { type: 'string', default: 'outline' },
            alignment: {
                type: 'string',
                value: 'flex-start',
                style: [{
                    selector: '{{QUBELY}} {align-items: {{alignment}}}'
                }]
            },
            progress: { type: 'string', default: 60 },
            speed: { type: 'string', default: 1000 },
            corner: { type: 'string', default: 'round' },
            enableIcon: { type: 'boolean', default: true },
            iconStyle: { type: 'string', default: 'percent' },
            thickness: { type: 'string', default: 11 },
            circleShrink: { type: 'string', default: 0 },
            thicknessBg: { type: 'string', default: 21 },
            fillColor: {
                type: 'object',
                default: {
                    openColor: 1,
                    type: 'gradient',
                    color: '#25b5e1',
                    gradient: {
                        type: 'linear',
                        color1: '#25b5e1',
                        color2: '#45dbca',
                        direction: '47',
                        start: '0',
                        stop: '100'
                    }
                }
            },
            size: {
                type: 'string',
                default: 255,
                style: [{
                    selector: '{{QUBELY}} .qubely-progress-parent, {{QUBELY}} .qubely-pie-progress-heading.qubely-outside{width: {{size}}px}'
                }]
            },
            iconText: { type: 'string', default: 'Text' },
            background: { type: 'string', default: '#eff4f8' },
            iconName: { type: 'string', default: 'fas fa-rocket' },
            image: { type: 'object', default: {} },
            image2x: { type: 'object', default: {} },
            imageAlt: { type: 'string', default: '' },
            imageSize: {
                type: 'object',
                default: {
                    md: '80',
                    unit: 'px'
                },
                style: [{
                    selector: '{{QUBELY}} .qubely-progress-inner-text .icon-image:not(.pie-placeholder){ max-width: {{imageSize}} }'
                }]
            },
            iconSize: {
                type: 'string', default: 60,
                style: [{
                    condition: [{ key: 'iconStyle', relation: '==', value: 'icon' }],
                    selector: '{{QUBELY}} span.qubely-pie-icon{font-size: {{iconSize}}px }'
                }]
            },
            iconTextColor: {
                type: 'string', default: '#062040',
                style: [{
                    condition: [{ key: 'iconStyle', relation: '!=', value: 'image' }],
                    selector: '{{QUBELY}} .qubely-progress-inner-text {color: {{iconTextColor}}}'
                }]
            },
            iconTypography: {
                type: 'object',
                default: {
                    family: 'Helvetica',
                    weight: 300,
                    type: 'sans-serif',
                    openTypography: 1,
                    size: {
                        md: 60,
                        unit: 'px'
                    },
                    height: {
                        md: 1,
                        unit: 'em'
                    }
                },
                style: [{
                    condition: [{ key: 'enableIcon', relation: '==', value: true }, { key: 'iconStyle', relation: '!=', value: 'image' }],
                    selector: '{{QUBELY}} .qubely-progress-inner-text'
                }]
            },

            enableHeading: { type: 'boolean', default: true },
            heading: { type: 'string', default: 'Updated' },
            headingColor: {
                type: 'string',
                default: '#566372',
                style: [{
                    selector: '{{QUBELY}} .qubely-pie-progress-heading {color: {{headingColor}} }'
                }]
            },
            headingPosition: { type: 'string', default: 'inside' },
            headingSpacing: {
                type: 'string',
                default: 10,
                style: [{
                    selector: '{{QUBELY}} .qubely-pie-progress-heading {margin-top: {{headingSpacing}}px}'
                }]
            },
            headingAlignment: {
                type: 'object',
                default: {},
                style: [{ selector: '{{QUBELY}} .qubely-pie-progress-heading {text-align: {{headingAlignment}}; }' }]
            },
            headingTypography: {
                type: 'object',
                default: {
                    family: 'Helvetica',
                    weight: 300,
                    type: 'sans-serif',
                    openTypography: 1,
                    size: {
                        md: 19,
                        unit: 'px'
                    },
                    height: {
                        md: 1.1,
                        unit: 'em'
                    }
                },
                style: [{
                    condition: [{
                        key: 'enableHeading', relation: '==', value: true
                    }],
                    selector: '{{QUBELY}} .qubely-pie-progress-heading'
                }]
            },
            progressShadow: {
                type: 'object', default: {}
            },
            circleShadow: {
                type: 'object', default: {
                    blur: 3,
                    color: 'rgba(100,121,130,0.43)',
                    horizontal: 2,
                    inset: 'inset',
                    openShadow: true,
                    spread: 0,
                    vertical: 2
                }
            },
            spacer: {
                type: 'object',
                default: { spaceTop: { md: '10', unit: 'px' }, spaceBottom: { md: '10', unit: 'px' } },
                style: [{ selector: '{{QUBELY}}' }]
            }
        }, globalAttributes, {
            content: {
                source: 'html',
                selector: 'h2'
            },
            sourceOfCopiedStyle: { type: 'boolean', default: false }
        }),
        edit: _Edit2.default,
        save: _Save2.default
    });
}

/***/ }),

/***/ "./src/blocks/pieprogress/style.scss":
/*!*******************************************!*\
  !*** ./src/blocks/pieprogress/style.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/pieprogress/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/postgrid/Edit.js":
/*!*************************************!*\
  !*** ./src/blocks/postgrid/Edit.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var withSelect = wp.data.withSelect;
var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;
var addQueryArgs = wp.url.addQueryArgs;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    Spinner = _wp$components.Spinner,
    TextControl = _wp$components.TextControl,
    SelectControl = _wp$components.SelectControl;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Range = _wp$qubelyComponents.Range,
    ButtonGroup = _wp$qubelyComponents.ButtonGroup,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    Toggle = _wp$qubelyComponents.Toggle,
    Dropdown = _wp$qubelyComponents.Dropdown,
    Select = _wp$qubelyComponents.Select,
    Separator = _wp$qubelyComponents.Separator,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Padding = _wp$qubelyComponents.Padding,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Styles = _wp$qubelyComponents.Styles,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;


var CATEGORIES_LIST_QUERY = { per_page: -1 };

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit() {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

		_this.renderFeaturedImage = function (post) {
			var _this$props$attribute = _this.props.attributes,
			    layout = _this$props$attribute.layout,
			    style = _this$props$attribute.style,
			    imgSize = _this$props$attribute.imgSize,
			    imageAnimation = _this$props$attribute.imageAnimation,
			    showCategory = _this$props$attribute.showCategory,
			    categoryPosition = _this$props$attribute.categoryPosition;

			return React.createElement(
				'div',
				{ className: (layout === 1 ? 'qubely-post-list-img' : 'qubely-post-grid-img') + ' qubely-post-img qubely-post-img-' + imageAnimation },
				React.createElement('img', { className: 'qubely-post-image', src: post.qubely_featured_image_url && post.qubely_featured_image_url[imgSize][0] }),
				showCategory == 'badge' && style !== 4 && React.createElement(
					'div',
					{ className: 'qubely-postgrid-cat-position qubely-postgrid-cat-position-' + categoryPosition },
					React.createElement('span', { className: 'qubely-postgrid-category qubely-backend', dangerouslySetInnerHTML: { __html: post.qubely_category } })
				)
			);
		};

		_this.renderCardContent = function (post) {
			var _this$props$attribute2 = _this.props.attributes,
			    layout = _this$props$attribute2.layout,
			    style = _this$props$attribute2.style,
			    readmoreStyle = _this$props$attribute2.readmoreStyle,
			    showCategory = _this$props$attribute2.showCategory,
			    categoryPosition = _this$props$attribute2.categoryPosition,
			    showTitle = _this$props$attribute2.showTitle,
			    titlePosition = _this$props$attribute2.titlePosition,
			    showAuthor = _this$props$attribute2.showAuthor,
			    showDates = _this$props$attribute2.showDates,
			    showComment = _this$props$attribute2.showComment,
			    showExcerpt = _this$props$attribute2.showExcerpt,
			    excerptLimit = _this$props$attribute2.excerptLimit,
			    showReadMore = _this$props$attribute2.showReadMore,
			    buttonText = _this$props$attribute2.buttonText,
			    readmoreSize = _this$props$attribute2.readmoreSize;

			var title = React.createElement(
				'h3',
				{ className: 'qubely-postgrid-title' },
				React.createElement(
					'a',
					null,
					post.title.rendered
				)
			);

			return React.createElement(
				'div',
				{ className: '' + (layout === 1 ? 'qubely-post-list-content' : 'qubely-post-grid-content') },
				showCategory === 'default' && React.createElement('span', { className: 'qubely-postgrid-category qubely-backend', dangerouslySetInnerHTML: { __html: post.qubely_category } }),
				showCategory == 'badge' && style === 4 && React.createElement(
					'div',
					{ className: 'qubely-postgrid-cat-position qubely-postgrid-cat-position-' + categoryPosition },
					React.createElement('span', { className: 'qubely-postgrid-category qubely-backend', dangerouslySetInnerHTML: { __html: post.qubely_category } })
				),
				showTitle && titlePosition == true && title,
				(showAuthor || showDates || showComment) && React.createElement(
					'div',
					{ className: 'qubely-postgrid-meta' },
					showAuthor && React.createElement(
						'span',
						null,
						React.createElement('i', { className: 'fas fa-user' }),
						' ',
						__('By'),
						' ',
						React.createElement(
							'a',
							null,
							post.qubely_author.display_name
						)
					),
					showDates && React.createElement(
						'span',
						null,
						React.createElement('i', { className: 'far fa-calendar-alt' }),
						' ',
						dateI18n(__experimentalGetSettings().formats.date, post.date_gmt)
					),
					showComment && React.createElement(
						'span',
						null,
						React.createElement('i', { className: 'fas fa-comment' }),
						' ',
						post.qubely_comment ? post.qubely_comment : '0'
					)
				),
				showTitle && titlePosition == false && title,
				showExcerpt && React.createElement('div', { className: 'qubely-postgrid-intro', dangerouslySetInnerHTML: { __html: _this.truncate(post.excerpt.rendered, excerptLimit) } }),
				showReadMore && React.createElement(
					'div',
					{ className: 'qubely-postgrid-btn-wrapper' },
					React.createElement(
						'a',
						{ className: 'qubely-postgrid-btn qubely-button-' + readmoreStyle + ' is-' + readmoreSize },
						buttonText
					)
				)
			);
		};

		_this.state = {
			device: 'md',
			spacer: true,
			categoriesList: []
		};
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    uniqueId = _props.attributes.uniqueId;

			this.isStillMounted = true;
			this.fetchRequest = wp.apiFetch({
				path: addQueryArgs('/wp/v2/categories', CATEGORIES_LIST_QUERY)
			}).then(function (categoriesList) {
				if (_this2.isStillMounted) {
					_this2.setState({ categoriesList: categoriesList });
				}
			}).catch(function () {
				if (_this2.isStillMounted) {
					_this2.setState({ categoriesList: [] });
				}
			});
			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.isStillMounted = false;
		}
	}, {
		key: 'truncate',
		value: function truncate(value, limit) {
			if (value.split(' ').length > limit) {
				return value.split(' ').splice(0, limit).join(' ');
			}
			return value;
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props2 = this.props,
			    setAttributes = _props2.setAttributes,
			    posts = _props2.posts,
			    taxonomyList = _props2.taxonomyList,
			    _props2$attributes = _props2.attributes,
			    uniqueId = _props2$attributes.uniqueId,
			    className = _props2$attributes.className,
			    taxonomy = _props2$attributes.taxonomy,
			    categories = _props2$attributes.categories,
			    tags = _props2$attributes.tags,
			    order = _props2$attributes.order,
			    orderBy = _props2$attributes.orderBy,
			    postsToShow = _props2$attributes.postsToShow,
			    showImages = _props2$attributes.showImages,
			    imgSize = _props2$attributes.imgSize,
			    enableFixedHeight = _props2$attributes.enableFixedHeight,
			    fixedHeight = _props2$attributes.fixedHeight,
			    imageRadius = _props2$attributes.imageRadius,
			    imageAnimation = _props2$attributes.imageAnimation,
			    cardBackground = _props2$attributes.cardBackground,
			    cardBorder = _props2$attributes.cardBorder,
			    cardBorderRadius = _props2$attributes.cardBorderRadius,
			    cardPadding = _props2$attributes.cardPadding,
			    cardBoxShadow = _props2$attributes.cardBoxShadow,
			    cardSpace = _props2$attributes.cardSpace,
			    stackBg = _props2$attributes.stackBg,
			    stackWidth = _props2$attributes.stackWidth,
			    stackSpace = _props2$attributes.stackSpace,
			    stackBorderRadius = _props2$attributes.stackBorderRadius,
			    stackPadding = _props2$attributes.stackPadding,
			    stackBoxShadow = _props2$attributes.stackBoxShadow,
			    readmoreStyle = _props2$attributes.readmoreStyle,
			    buttonText = _props2$attributes.buttonText,
			    readmoreSize = _props2$attributes.readmoreSize,
			    readmoreCustomSize = _props2$attributes.readmoreCustomSize,
			    readmoreTypography = _props2$attributes.readmoreTypography,
			    readmoreBg = _props2$attributes.readmoreBg,
			    readmoreHoverBg = _props2$attributes.readmoreHoverBg,
			    readmoreBorder = _props2$attributes.readmoreBorder,
			    readmoreBorderRadius = _props2$attributes.readmoreBorderRadius,
			    readmoreBoxShadow = _props2$attributes.readmoreBoxShadow,
			    readmoreColor = _props2$attributes.readmoreColor,
			    readmoreColor2 = _props2$attributes.readmoreColor2,
			    readmoreHoverColor = _props2$attributes.readmoreHoverColor,
			    layout = _props2$attributes.layout,
			    style = _props2$attributes.style,
			    column = _props2$attributes.column,
			    showDates = _props2$attributes.showDates,
			    showComment = _props2$attributes.showComment,
			    showAuthor = _props2$attributes.showAuthor,
			    showCategory = _props2$attributes.showCategory,
			    categoryPosition = _props2$attributes.categoryPosition,
			    showExcerpt = _props2$attributes.showExcerpt,
			    excerptLimit = _props2$attributes.excerptLimit,
			    showReadMore = _props2$attributes.showReadMore,
			    showTitle = _props2$attributes.showTitle,
			    titlePosition = _props2$attributes.titlePosition,
			    showSeparator = _props2$attributes.showSeparator,
			    separatorColor = _props2$attributes.separatorColor,
			    separatorHeight = _props2$attributes.separatorHeight,
			    separatorSpace = _props2$attributes.separatorSpace,
			    titleTypography = _props2$attributes.titleTypography,
			    metaTypography = _props2$attributes.metaTypography,
			    excerptTypography = _props2$attributes.excerptTypography,
			    categoryTypography = _props2$attributes.categoryTypography,
			    titleColor = _props2$attributes.titleColor,
			    titleOverlayColor = _props2$attributes.titleOverlayColor,
			    metaColor = _props2$attributes.metaColor,
			    metaOverlayColor = _props2$attributes.metaOverlayColor,
			    titleHoverColor = _props2$attributes.titleHoverColor,
			    excerptColor = _props2$attributes.excerptColor,
			    excerptColor2 = _props2$attributes.excerptColor2,
			    categoryColor = _props2$attributes.categoryColor,
			    categoryColor2 = _props2$attributes.categoryColor2,
			    categoryHoverColor = _props2$attributes.categoryHoverColor,
			    categoryHoverColor2 = _props2$attributes.categoryHoverColor2,
			    categoryBackground = _props2$attributes.categoryBackground,
			    categoryHoverBackground = _props2$attributes.categoryHoverBackground,
			    categoryRadius = _props2$attributes.categoryRadius,
			    categoryPadding = _props2$attributes.categoryPadding,
			    badgePosition = _props2$attributes.badgePosition,
			    badgePadding = _props2$attributes.badgePadding,
			    bgColor = _props2$attributes.bgColor,
			    border = _props2$attributes.border,
			    borderRadius = _props2$attributes.borderRadius,
			    padding = _props2$attributes.padding,
			    boxShadow = _props2$attributes.boxShadow,
			    contentPosition = _props2$attributes.contentPosition,
			    girdContentPosition = _props2$attributes.girdContentPosition,
			    overlayBg = _props2$attributes.overlayBg,
			    overlayHoverBg = _props2$attributes.overlayHoverBg,
			    overlayBlend = _props2$attributes.overlayBlend,
			    overlayHeight = _props2$attributes.overlayHeight,
			    overlaySpace = _props2$attributes.overlaySpace,
			    overlayBorderRadius = _props2$attributes.overlayBorderRadius,
			    columnGap = _props2$attributes.columnGap,
			    contentPadding = _props2$attributes.contentPadding,
			    titleSpace = _props2$attributes.titleSpace,
			    categorySpace = _props2$attributes.categorySpace,
			    metaSpace = _props2$attributes.metaSpace,
			    excerptSpace = _props2$attributes.excerptSpace,
			    animation = _props2$attributes.animation,
			    globalZindex = _props2$attributes.globalZindex,
			    enablePosition = _props2$attributes.enablePosition,
			    selectPosition = _props2$attributes.selectPosition,
			    positionXaxis = _props2$attributes.positionXaxis,
			    positionYaxis = _props2$attributes.positionYaxis,
			    hideTablet = _props2$attributes.hideTablet,
			    hideMobile = _props2$attributes.hideMobile,
			    globalCss = _props2$attributes.globalCss;
			var device = this.state.device;


			if (uniqueId) {
				CssGenerator(this.props.attributes, 'postgrid', uniqueId);
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: '', initialOpen: true },
						React.createElement(Styles, {
							options: [{ value: 1, svg: _icons2.default.postgrid_1, label: __('') }, { value: 2, svg: _icons2.default.postgrid_2, label: __('') }, { value: 3, svg: _icons2.default.postgrid_3, label: __(''), pro: true }, { value: 4, svg: _icons2.default.postgrid_4, label: __(''), pro: true }, { value: 5, svg: _icons2.default.postgrid_5, label: __(''), pro: true }],
							proUpgradation: true,
							value: layout,
							onChange: function onChange(val) {
								return setAttributes({ layout: val });
							}
						})
					),
					React.createElement(
						PanelBody,
						{ title: __('Post Design'), initialOpen: true },
						React.createElement(Styles, { columns: 4, value: style, onChange: function onChange(val) {
								return setAttributes({ style: val });
							},
							options: [{ value: 1, svg: _icons2.default.postgrid_design_1 }, { value: 2, svg: layout === 1 ? _icons2.default.postgrid_design_3 : _icons2.default.postgrid_design_2 }, { value: 3, svg: layout === 1 ? _icons2.default.postgrid_design_5 : _icons2.default.postgrid_design_4 }, { value: 4, svg: _icons2.default.postgrid_design_6 }]
						}),
						layout === 2 && React.createElement(Range, { label: __('Select Column'), value: column, onChange: function onChange(value) {
								return setAttributes({ column: value });
							}, min: 1, step: 1, max: 6, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						(layout === 1 || layout === 2 && (style === 3 || style === 4)) && React.createElement(ButtonGroup, {
							label: __('Content Align'),
							options: layout === 2 && style === 3 ? [[__('Left'), 'left'], [__('Middle'), 'center'], [__('Right'), 'right']] : [[__('Top'), 'top'], [__('Middle'), 'center'], [__('Bottom'), 'bottom']],
							value: layout === 2 && style === 3 ? contentPosition : girdContentPosition,
							onChange: function onChange(value) {
								return setAttributes(layout === 2 && style === 3 ? { contentPosition: value } : { girdContentPosition: value });
							}
						}),
						(layout === 1 && style != 3 || layout === 2 && style != 3) && React.createElement(Padding, { label: __('Content Padding'), value: contentPadding, onChange: function onChange(val) {
								return setAttributes({ contentPadding: val });
							}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						(layout === 1 && style === 1 || layout === 2 && style === 1) && React.createElement(
							Fragment,
							null,
							React.createElement(ColorAdvanced, { label: __('Background'), value: bgColor, onChange: function onChange(value) {
									return setAttributes({ bgColor: value });
								} }),
							React.createElement(Border, { label: __('Border'), value: border, onChange: function onChange(val) {
									return setAttributes({ border: val });
								}, min: 0, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BorderRadius, { min: 0, max: 100, responsive: true, device: device, label: __('Corner'), value: borderRadius, unit: ['px', 'em', '%'], onChange: function onChange(value) {
									return setAttributes({ borderRadius: value });
								}, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(Padding, { label: __('Padding'), value: padding, onChange: function onChange(val) {
									return setAttributes({ padding: val });
								}, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BoxShadow, { label: __('Box-Shadow'), value: boxShadow, onChange: function onChange(value) {
									return setAttributes({ boxShadow: value });
								} })
						),
						style === 2 && React.createElement(
							Fragment,
							null,
							React.createElement(ColorAdvanced, { label: __('Card Background'), value: cardBackground, onChange: function onChange(value) {
									return setAttributes({ cardBackground: value });
								} }),
							React.createElement(Border, { label: __('Card Border'), value: cardBorder, onChange: function onChange(val) {
									return setAttributes({ cardBorder: val });
								}, min: 0, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BorderRadius, { min: 0, max: 100, responsive: true, device: device, label: __('Card Corner'), value: cardBorderRadius, unit: ['px', 'em', '%'], onChange: function onChange(value) {
									return setAttributes({ cardBorderRadius: value });
								}, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							layout === 1 && React.createElement(Range, { label: __('Card Space'), value: cardSpace, onChange: function onChange(value) {
									return setAttributes({ cardSpace: value });
								}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(Padding, { label: __('Card Padding'), value: cardPadding, onChange: function onChange(val) {
									return setAttributes({ cardPadding: val });
								}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BoxShadow, { label: __('Card Box Shadow'), value: cardBoxShadow, onChange: function onChange(value) {
									return setAttributes({ cardBoxShadow: value });
								} })
						),
						style === 4 && React.createElement(
							Fragment,
							null,
							React.createElement(Range, { label: __('Overlay Height'), value: overlayHeight, onChange: function onChange(value) {
									return setAttributes({ overlayHeight: value });
								}, unit: ['px', 'em', '%'], min: 50, max: 700, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							layout === 1 && React.createElement(Range, { label: __('Overlay Space'), value: overlaySpace, onChange: function onChange(value) {
									return setAttributes({ overlaySpace: value });
								}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BorderRadius, { min: 0, max: 100, responsive: true, device: device, label: __('Overlay Corner'), value: overlayBorderRadius, unit: ['px', 'em', '%'], onChange: function onChange(value) {
									return setAttributes({ overlayBorderRadius: value });
								}, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(
								Tabs,
								null,
								React.createElement(
									Tab,
									{ tabTitle: __('Normal') },
									React.createElement(ColorAdvanced, { label: __('Overlay'), value: overlayBg, onChange: function onChange(value) {
											return setAttributes({ overlayBg: value });
										} })
								),
								React.createElement(
									Tab,
									{ tabTitle: __('Hover') },
									React.createElement(ColorAdvanced, { label: __('Hover Overlay'), value: overlayHoverBg, onChange: function onChange(value) {
											return setAttributes({ overlayHoverBg: value });
										} })
								)
							),
							React.createElement(Select, { label: __('Blend Mode'), options: [['normal', __('Normal')], ['multiply', __('Multiply')], ['screen', __('Screen')], ['overlay', __('Overlay')], ['darken', __('Darken')], ['lighten', __('Lighten')], ['color-dodge', __('Color Dodge')], ['saturation', __('Saturation')], ['luminosity', __('Luminosity')], ['color', __('Color')], ['color-burn', __('Color Burn')], ['exclusion', __('Exclusion')], ['hue', __('Hue')]], value: overlayBlend, onChange: function onChange(val) {
									return setAttributes({ overlayBlend: val });
								} })
						),
						style === 3 && React.createElement(
							Fragment,
							null,
							React.createElement(ColorAdvanced, { label: __('Stack Background'), value: stackBg, onChange: function onChange(value) {
									return setAttributes({ stackBg: value });
								} }),
							layout === 2 && React.createElement(Range, { label: __('Stack Size'), value: stackWidth, onChange: function onChange(value) {
									return setAttributes({ stackWidth: value });
								}, unit: ['px', 'em', '%'], min: 50, max: 600, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							layout === 1 && React.createElement(Range, { label: __('Stack Space'), value: stackSpace, onChange: function onChange(value) {
									return setAttributes({ stackSpace: value });
								}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BorderRadius, { min: 0, max: 100, responsive: true, device: device, label: __('Stack Corner'), value: stackBorderRadius, unit: ['px', 'em', '%'], onChange: function onChange(value) {
									return setAttributes({ stackBorderRadius: value });
								}, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(Padding, { label: __('Stack Padding'), value: stackPadding, onChange: function onChange(val) {
									return setAttributes({ stackPadding: val });
								}, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(BoxShadow, { label: __('Stack Box Shadow'), value: stackBoxShadow, onChange: function onChange(value) {
									return setAttributes({ stackBoxShadow: value });
								} })
						),
						layout === 1 && style === 1 && React.createElement(
							Fragment,
							null,
							React.createElement(Separator, null),
							React.createElement(Toggle, { label: __('Enable Separator'), value: showSeparator, onChange: function onChange(value) {
									return setAttributes({ showSeparator: value });
								} })
						),
						layout === 1 && style === 1 && showSeparator === true && React.createElement(
							Fragment,
							null,
							React.createElement(Color, { label: __('Separator Color'), value: separatorColor, onChange: function onChange(value) {
									return setAttributes({ separatorColor: value });
								} }),
							React.createElement(Range, { label: __('Separator Height'), value: separatorHeight, onChange: function onChange(value) {
									return setAttributes({ separatorHeight: value });
								}, unit: ['px', 'em', '%'], min: 0, max: 30, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(Range, { label: __('Separator Spacing'), value: separatorSpace, onChange: function onChange(value) {
									return setAttributes({ separatorSpace: value });
								}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} })
						)
					),
					React.createElement(
						PanelBody,
						{ title: __('Query'), initialOpen: false },
						React.createElement(ButtonGroup, {
							label: __('Taxonomy'),
							options: [[__('Categories'), 'categories'], [__('Tags'), 'tags']],
							value: taxonomy,
							onChange: function onChange(value) {
								return setAttributes({ taxonomy: value });
							}
						}),
						React.createElement(Dropdown, {
							label: taxonomy === 'categories' ? __('Categories') : __('Tags'),
							enableSearch: true,
							defaultOptionsLabel: 'All',
							options: [{ value: 'all', label: __('All') }].concat(_toConsumableArray(taxonomyList)),
							value: taxonomy === 'categories' ? categories : tags,
							onChange: function onChange(value) {
								return setAttributes(taxonomy === 'categories' ? { categories: value.length && value[value.length - 1].label === 'All' ? [] : value } : { tags: value.length && value[value.length - 1].label === 'All' ? [] : value });
							}
						}),
						React.createElement(Range, { label: __('Number of Items'), value: postsToShow, onChange: function onChange(value) {
								return setAttributes({ postsToShow: parseInt(value) });
							}, min: 0, max: 15 }),
						React.createElement(SelectControl, {
							label: __("Order By"),
							value: orderBy,
							options: [{ label: __('Date'), value: 'date' }, { label: __('Title'), value: 'title' }, { label: __('Random'), value: 'rand' }, { label: __('Menu Order'), value: 'menu_order' }],
							onChange: function onChange(value) {
								return setAttributes({ orderBy: value });
							}
						}),
						React.createElement(ButtonGroup, {
							label: __('Order'),
							options: [[__('Ascending'), 'asc'], [__('Descending'), 'desc']],
							value: order,
							onChange: function onChange(value) {
								return setAttributes({ order: value });
							}
						})
					),
					React.createElement(
						PanelBody,
						{ title: __('Image Settings'), initialOpen: false },
						React.createElement(Toggle, { label: __('Show Featured Image'), value: showImages, onChange: function onChange(value) {
								return setAttributes({ showImages: value });
							} }),
						React.createElement(Toggle, { label: __('Fixed Image Height'), value: enableFixedHeight, onChange: function onChange(value) {
								return setAttributes({ enableFixedHeight: value });
							} }),
						enableFixedHeight && React.createElement(Range, { label: __(''), value: fixedHeight, onChange: function onChange(value) {
								return setAttributes({ fixedHeight: value });
							}, unit: ['px', 'em', '%'], min: 10, max: 600, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(SelectControl, {
							label: __("Image Sizes"),
							value: imgSize,
							onChange: function onChange(value) {
								return setAttributes({ imgSize: value });
							},
							options: qubely_admin.image_sizes
						}),
						React.createElement(BorderRadius, {
							min: 0,
							max: 100,
							responsive: true,
							device: device,
							label: __('Image Corner'),
							value: imageRadius,
							unit: ['px', 'em', '%'],
							onChange: function onChange(value) {
								return setAttributes({ imageRadius: value });
							},
							onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Select, { label: __('Hover Effect'), options: [['none', __('No Animation')], ['slide-top', __('Slide From Top')], ['slide-right', __('Slide From Right')], ['slide-bottom', __('Slide From Bottom')], ['slide-left', __('Slide From Left')], ['zoom-in', __('Zoom In')], ['zoom-out', __('Zoom Out')]], value: imageAnimation, onChange: function onChange(val) {
								return setAttributes({ imageAnimation: val });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: 'Content', initialOpen: false },
						React.createElement(Toggle, { label: __('Show Title'), value: showTitle, onChange: function onChange(value) {
								return setAttributes({ showTitle: value });
							} }),
						React.createElement(Toggle, { label: __('Show Excerpt'), value: showExcerpt, onChange: function onChange(value) {
								return setAttributes({ showExcerpt: value });
							} }),
						React.createElement(RangeControl, { label: __('Excerpt Limit'), min: 1, max: 100, step: 1, value: excerptLimit, onChange: function onChange(val) {
								return setAttributes({ excerptLimit: val });
							} }),
						React.createElement(Separator, null),
						React.createElement(Toggle, { label: __('Title Below Meta'), value: titlePosition, onChange: function onChange(value) {
								return setAttributes({ titlePosition: value });
							} }),
						React.createElement(Toggle, { label: __('Show date'), value: showDates, onChange: function onChange(value) {
								return setAttributes({ showDates: value });
							} }),
						React.createElement(Toggle, { label: __('Show Comment'), value: showComment, onChange: function onChange(value) {
								return setAttributes({ showComment: value });
							} }),
						React.createElement(Toggle, { label: __('Show Author'), value: showAuthor, onChange: function onChange(value) {
								return setAttributes({ showAuthor: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Category'), initialOpen: false },
						React.createElement(RadioAdvanced, {
							label: __('Category'),
							options: [{ icon: 'fas fa-ban', value: 'none', label: __('None') }, { value: 'default', label: __('Default') }, { value: 'badge', label: __('Badge') }],
							value: showCategory,
							onChange: function onChange(val) {
								return setAttributes({ showCategory: val });
							}
						}),
						showCategory !== 'none' && React.createElement(
							Fragment,
							null,
							layout !== 2 && showCategory == 'badge' && style != 4 && React.createElement(Select, {
								label: __("Badge Position"),
								options: [['leftTop', __('Left Top')], ['rightTop', __('Right Top')], ['leftBottom', __('Left Bottom')], ['rightBottom', __('Right Bottom')]],
								value: categoryPosition,
								onChange: function onChange(value) {
									return setAttributes({ categoryPosition: value });
								}
							}),
							layout === 2 && showCategory == 'badge' && style != 4 && React.createElement(
								Fragment,
								null,
								React.createElement(RadioAdvanced, {
									label: __('Badge Position'),
									options: [{ value: 'default', label: __('default'), title: __('Pre-defined') }, { icon: 'fas fa-cog', value: 'none', title: __('Advanced') }],
									value: badgePosition,
									onChange: function onChange(val) {
										return setAttributes({ badgePosition: val });
									}
								}),
								badgePosition === 'default' ? React.createElement(Select, {
									label: __(""),
									options: [['leftTop', __('Left Top')], ['rightTop', __('Right Top')], ['leftBottom', __('Left Bottom')], ['rightBottom', __('Right Bottom')]],
									value: categoryPosition,
									onChange: function onChange(value) {
										return setAttributes({ categoryPosition: value });
									}
								}) : React.createElement(Padding, { label: __('Advanced'), value: badgePadding, onChange: function onChange(val) {
										return setAttributes({ badgePadding: val });
									}, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
										return _this3.setState({ device: value });
									} }),
								React.createElement(Separator, null)
							),
							React.createElement(Typography, { label: __('Typography'), value: categoryTypography, onChange: function onChange(value) {
									return setAttributes({ categoryTypography: value });
								}, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							React.createElement(
								Tabs,
								null,
								React.createElement(
									Tab,
									{ tabTitle: __('Normal') },
									React.createElement(Color, { label: __('Category Color'), value: showCategory == 'badge' ? categoryColor2 : categoryColor, onChange: function onChange(value) {
											return setAttributes(showCategory == 'badge' ? { categoryColor2: value } : { categoryColor: value });
										} }),
									showCategory == 'badge' && React.createElement(Color, { label: __('Category Background'), value: categoryBackground, onChange: function onChange(value) {
											return setAttributes({ categoryBackground: value });
										} })
								),
								React.createElement(
									Tab,
									{ tabTitle: __('Hover') },
									React.createElement(Color, { label: __('Category Hover Color'), value: showCategory == 'badge' ? categoryHoverColor2 : categoryHoverColor, onChange: function onChange(value) {
											return setAttributes(showCategory == 'badge' ? { categoryHoverColor2: value } : { categoryHoverColor: value });
										} }),
									showCategory == 'badge' && React.createElement(Color, { label: __('Category Background'), value: categoryHoverBackground, onChange: function onChange(value) {
											return setAttributes({ categoryHoverBackground: value });
										} })
								)
							),
							React.createElement(BorderRadius, {
								min: 0,
								max: 100,
								responsive: true,
								device: device,
								label: __('Corner'),
								value: categoryRadius,
								unit: ['px', 'em', '%'],
								onChange: function onChange(value) {
									return setAttributes({ categoryRadius: value });
								},
								onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								}
							}),
							showCategory == 'badge' && React.createElement(Padding, { label: __('Padding'), value: categoryPadding, onChange: function onChange(val) {
									return setAttributes({ categoryPadding: val });
								}, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} })
						)
					),
					React.createElement(
						PanelBody,
						{ title: __('Read More Link'), initialOpen: false },
						React.createElement(Toggle, { label: __('Show Read More Link'), value: showReadMore, onChange: function onChange(value) {
								return setAttributes({ showReadMore: value });
							} }),
						showReadMore && React.createElement(
							Fragment,
							null,
							React.createElement(Styles, {
								options: [{ value: 'fill', svg: _icons2.default.btn_fill, label: __('Fill') }, { value: 'outline', svg: _icons2.default.btn_outline, label: __('Outline') }],
								value: readmoreStyle,
								onChange: function onChange(val) {
									return setAttributes({ readmoreStyle: val });
								}
							}),
							React.createElement(TextControl, { label: __('Button Text'), value: buttonText, onChange: function onChange(val) {
									return setAttributes({ buttonText: val });
								} }),
							React.createElement(Typography, { label: __('Typography'), value: readmoreTypography, onChange: function onChange(value) {
									return setAttributes({ readmoreTypography: value });
								}, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this3.setState({ device: value });
								} }),
							readmoreStyle === 'fill' && React.createElement(
								Fragment,
								null,
								React.createElement(RadioAdvanced, {
									label: __('Button Size'),
									options: [{ label: 'S', value: 'small', title: 'Small' }, { label: 'M', value: 'medium', title: 'Medium' }, { label: 'L', value: 'large', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
									value: readmoreSize,
									onChange: function onChange(value) {
										return setAttributes({ readmoreSize: value });
									} }),
								readmoreSize == 'custom' && React.createElement(Padding, {
									label: __('Custom Size'),
									value: readmoreCustomSize,
									onChange: function onChange(value) {
										return setAttributes({ readmoreCustomSize: value });
									},
									unit: ['px', 'em', '%'],
									max: 150,
									min: 0,
									responsive: true,
									device: device,
									onDeviceChange: function onDeviceChange(value) {
										return _this3.setState({ device: value });
									} }),
								React.createElement(Border, { label: __('Border'), value: readmoreBorder, onChange: function onChange(val) {
										return setAttributes({ readmoreBorder: val });
									}, min: 0, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
										return _this3.setState({ device: value });
									} }),
								(readmoreBorder.openBorder || readmoreStyle === 'fill') && React.createElement(BorderRadius, {
									min: 0,
									max: 100,
									responsive: true,
									device: device,
									label: __('Corner'),
									value: readmoreBorderRadius,
									unit: ['px', 'em', '%'],
									onChange: function onChange(value) {
										return setAttributes({ readmoreBorderRadius: value });
									},
									onDeviceChange: function onDeviceChange(value) {
										return _this3.setState({ device: value });
									}
								}),
								React.createElement(BoxShadow, { label: __('Box-Shadow'), value: readmoreBoxShadow, onChange: function onChange(value) {
										return setAttributes({ readmoreBoxShadow: value });
									} })
							),
							React.createElement(
								Tabs,
								null,
								React.createElement(
									Tab,
									{ tabTitle: __('Normal') },
									React.createElement(Color, { label: __('Text Color'), value: readmoreStyle === 'fill' ? readmoreColor : readmoreColor2, onChange: function onChange(value) {
											return setAttributes(readmoreStyle === 'fill' ? { readmoreColor: value } : { readmoreColor2: value });
										} }),
									readmoreStyle === 'fill' && React.createElement(ColorAdvanced, { label: __('Background'), value: readmoreBg, onChange: function onChange(value) {
											return setAttributes({ readmoreBg: value });
										} })
								),
								React.createElement(
									Tab,
									{ tabTitle: __('Hover') },
									React.createElement(Color, { label: __('Text Color'), value: readmoreHoverColor, onChange: function onChange(value) {
											return setAttributes({ readmoreHoverColor: value });
										} }),
									readmoreStyle === 'fill' && React.createElement(ColorAdvanced, { label: __('Background'), value: readmoreHoverBg, onChange: function onChange(value) {
											return setAttributes({ readmoreHoverBg: value });
										} })
								)
							)
						)
					),
					React.createElement(
						PanelBody,
						{ title: __('Spacing'), initialOpen: false },
						layout === 2 && React.createElement(Range, { label: __('Column Gap'), value: columnGap, onChange: function onChange(value) {
								return setAttributes({ columnGap: value });
							}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						showCategory == 'default' && React.createElement(Range, { label: __('Category'), value: categorySpace, onChange: function onChange(value) {
								return setAttributes({ categorySpace: value });
							}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Range, { label: __('Title'), value: titleSpace, onChange: function onChange(value) {
								return setAttributes({ titleSpace: value });
							}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Range, { label: __('Meta'), value: metaSpace, onChange: function onChange(value) {
								return setAttributes({ metaSpace: value });
							}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Range, { label: __('Excerpt'), value: excerptSpace, onChange: function onChange(value) {
								return setAttributes({ excerptSpace: value });
							}, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Typography'), initialOpen: false },
						React.createElement(Typography, { label: __('Title'), value: titleTypography, onChange: function onChange(value) {
								return setAttributes({ titleTypography: value });
							}, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(Typography, { label: __('Meta'), value: metaTypography, onChange: function onChange(value) {
								return setAttributes({ metaTypography: value });
							}, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(Typography, { label: __('Excerpt'), value: excerptTypography, onChange: function onChange(value) {
								return setAttributes({ excerptTypography: value });
							}, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this3.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Colors'), initialOpen: false },
						React.createElement(Color, { label: __('Title'), value: style !== 4 ? titleColor : titleOverlayColor, onChange: function onChange(value) {
								return setAttributes(style !== 4 ? { titleColor: value } : { titleOverlayColor: value });
							} }),
						React.createElement(Color, { label: __('Title Hover'), value: titleHoverColor, onChange: function onChange(value) {
								return setAttributes({ titleHoverColor: value });
							} }),
						React.createElement(Color, { label: __('Meta'), value: style !== 4 ? metaColor : metaOverlayColor, onChange: function onChange(value) {
								return setAttributes(style !== 4 ? { metaColor: value } : { metaOverlayColor: value });
							} }),
						React.createElement(Color, { label: __('Excerpt'), value: style !== 4 ? excerptColor : excerptColor2, onChange: function onChange(value) {
								return setAttributes(style !== 4 ? { excerptColor: value } : { excerptColor2: value });
							} })
					),
					animationSettings(uniqueId, animation, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
						}, this.props, {
							prevState: this.state
						}))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					posts && posts.length ? React.createElement(
						'div',
						{
							// onContextMenu={event => handleContextMenu(event, this.refs.qubelyContextMenu)}
							className: 'qubely-postgrid-wrapper qubely-postgrid-layout-' + layout + ' ' + (layout === 2 ? 'qubely-postgrid-column qubely-postgrid-column-md' + column.md + ' ' + 'qubely-postgrid-column-sm' + column.sm + ' ' + 'qubely-postgrid-column-xs' + column.xs : '') },
						posts && posts.map(function (post) {
							return React.createElement(
								'div',
								{ className: 'qubely-postgrid ' + (layout === 1 ? 'qubely-post-list-view' : 'qubely-post-grid-view') + ' qubely-postgrid-style-' + style },
								React.createElement(
									'div',
									{ className: '' + (layout === 1 ? 'qubely-post-list-wrapper qubely-post-list-' + (layout === 2 && style === 3 ? contentPosition : girdContentPosition) : 'qubely-post-grid-wrapper qubely-post-grid-' + (layout === 2 && style === 3 ? contentPosition : girdContentPosition)) },
									showImages && post.qubely_featured_image_url && _this3.renderFeaturedImage(post),
									_this3.renderCardContent(post)
								)
							);
						}),
						React.createElement('div', { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' })
					) : React.createElement(
						'div',
						{ className: 'qubely-postgrid-is-loading' },
						React.createElement(Spinner, null)
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = withSelect(function (select, props) {
	var _select = select('core'),
	    getEntityRecords = _select.getEntityRecords;

	var _props$attributes = props.attributes,
	    taxonomy = _props$attributes.taxonomy,
	    order = _props$attributes.order,
	    orderBy = _props$attributes.orderBy,
	    categories = _props$attributes.categories,
	    tags = _props$attributes.tags,
	    postsToShow = _props$attributes.postsToShow;


	var allTaxonomy = qubely_admin.all_taxonomy;

	var seletedTaxonomy = taxonomy === 'categories' ? 'categories' : 'tags';
	var activeTaxes = taxonomy === 'categories' ? categories : tags;

	var query = _defineProperty({
		order: order,
		orderby: orderBy,
		per_page: postsToShow
	}, seletedTaxonomy, activeTaxes.map(function (_ref) {
		var value = _ref.value,
		    label = _ref.label;
		return value;
	}));
	return {
		posts: getEntityRecords('postType', 'post', query),
		taxonomyList: allTaxonomy.post.terms ? allTaxonomy.post.terms[taxonomy === 'categories' ? 'category' : 'post_tag'] ? allTaxonomy.post.terms[taxonomy === 'categories' ? 'category' : 'post_tag'] : [] : []
	};
})(Edit);

/***/ }),

/***/ "./src/blocks/postgrid/index.js":
/*!**************************************!*\
  !*** ./src/blocks/postgrid/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! ./style.scss */ "./src/blocks/postgrid/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/postgrid/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


if (!qubely_admin.pro_enable) {
    registerBlockType('qubely/postgrid', {
        title: __('Post Grid'),
        description: 'Fetch blog posts and display them beautifully in grid or list views with Qubely Postgrid Block.',
        icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-post-grid.svg', alt: __('Postgrid Block') }),
        category: 'qubely',
        supports: {
            align: ['center', 'wide', 'full']
        },
        keywords: [__('Post'), __('Post Grid'), __('Grid')],
        example: {
            attributes: {
                layout: 2,
                column: {
                    md: 1
                },
                showExcerpt: false,
                postsToShow: 1
            }
        },
        edit: _Edit2.default,
        save: function save(props) {
            return null;
        }
    });
}

/***/ }),

/***/ "./src/blocks/postgrid/style.scss":
/*!****************************************!*\
  !*** ./src/blocks/postgrid/style.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/postgrid/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/pricing/Edit.js":
/*!************************************!*\
  !*** ./src/blocks/pricing/Edit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    SelectControl = _wp$components.SelectControl,
    TextControl = _wp$components.TextControl;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    select = _wp$data.select,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var _select = select('core/block-editor'),
    getBlock = _select.getBlock;

var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Color = _wp$qubelyComponents.Color,
    Toggle = _wp$qubelyComponents.Toggle,
    Border = _wp$qubelyComponents.Border,
    Padding = _wp$qubelyComponents.Padding,
    Alignment = _wp$qubelyComponents.Alignment,
    Typography = _wp$qubelyComponents.Typography,
    QubelyButtonEdit = _wp$qubelyComponents.QubelyButtonEdit,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Range = _wp$qubelyComponents.Range,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Separator = _wp$qubelyComponents.Separator,
    QubelyIconListEdit = _wp$qubelyComponents.QubelyIconListEdit,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Styles = _wp$qubelyComponents.Styles,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    buttonSettings = _wp$qubelyComponents.QubelyButton.buttonSettings,
    listSettings = _wp$qubelyComponents.QubelyList.listSettings,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit(props) {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

		_this.renderCurrencyContent = function () {
			var _this$props$attribute = _this.props.attributes,
			    currency = _this$props$attribute.currency,
			    currencyCustom = _this$props$attribute.currencyCustom;

			return React.createElement(
				'span',
				{ className: 'qubely-pricing-currency' },
				currency == 'custom' ? currencyCustom : currency
			);
		};

		_this.renderDuration = function () {
			var _this$props = _this.props,
			    duration = _this$props.attributes.duration,
			    setAttributes = _this$props.setAttributes;

			return React.createElement(
				'span',
				{ className: 'qubely-pricing-duration' },
				React.createElement(RichText, {
					value: duration,
					key: 'editable',
					keepPlaceholderOnFocus: true,
					placeholder: __('Product Validity'),
					className: 'qubely-product-duration',
					onChange: function onChange(val) {
						return setAttributes({ duration: val });
					} })
			);
		};

		_this.renderPricingButton = function () {
			var _this$props2 = _this.props,
			    setAttributes = _this$props2.setAttributes,
			    _this$props2$attribut = _this$props2.attributes,
			    enableButton = _this$props2$attribut.enableButton,
			    buttonFillType = _this$props2$attribut.buttonFillType,
			    buttonSize = _this$props2$attribut.buttonSize,
			    buttonText = _this$props2$attribut.buttonText,
			    buttonIconName = _this$props2$attribut.buttonIconName,
			    buttonIconPosition = _this$props2$attribut.buttonIconPosition,
			    buttonTag = _this$props2$attribut.buttonTag,
			    enablePostButtonText = _this$props2$attribut.enablePostButtonText,
			    postButtonText = _this$props2$attribut.postButtonText;


			return React.createElement(
				'div',
				{ className: 'qubely-pricing-button', onClick: function onClick() {
						return _this.handlePanelOpenings('Button');
					} },
				React.createElement(QubelyButtonEdit, {
					enableButton: enableButton,
					buttonFillType: buttonFillType,
					buttonSize: buttonSize,
					buttonText: buttonText,
					buttonIconName: buttonIconName,
					buttonIconPosition: buttonIconPosition,
					buttonTag: buttonTag,
					onTextChange: function onTextChange(val) {
						return setAttributes({ buttonText: val });
					} }),
				enablePostButtonText && React.createElement(
					'div',
					{ className: 'qubely-pricing-postbutton-text' },
					React.createElement(RichText, {
						value: postButtonText,
						key: 'editable',
						tagName: 'span',
						keepPlaceholderOnFocus: true,
						placeholder: __('Add Post-Button Text'),
						className: 'qubely-pricing-post-button-text',
						onChange: function onChange(val) {
							return setAttributes({ postButtonText: val });
						} })
				)
			);
		};

		_this.renderPricingTitle = function () {
			var _this$props3 = _this.props,
			    setAttributes = _this$props3.setAttributes,
			    title = _this$props3.attributes.title;

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					'span',
					{ className: 'qubely-pricing-title-wrapper', onClick: function onClick() {
							return _this.handlePanelOpenings('Title');
						} },
					React.createElement(RichText, {
						value: title,
						key: 'editable',
						keepPlaceholderOnFocus: true,
						placeholder: __('Add Title...'),
						className: 'qubely-pricing-title',
						onChange: function onChange(val) {
							return setAttributes({ title: val });
						} })
				)
			);
		};

		_this.renderPricingSubTitle = function () {
			var _this$props4 = _this.props,
			    setAttributes = _this$props4.setAttributes,
			    subTitle = _this$props4.attributes.subTitle;

			return React.createElement(
				'div',
				{ className: 'qubely-sub-title-wrapper', onClick: function onClick() {
						return _this.handlePanelOpenings('Sub Title');
					} },
				React.createElement(RichText, {
					value: subTitle,
					key: 'editable',
					keepPlaceholderOnFocus: true,
					placeholder: __('Add Product Teaser...'),
					className: 'qubely-sub-title',
					onChange: function onChange(val) {
						return setAttributes({ subTitle: val });
					} })
			);
		};

		_this.renderPricingPrice = function () {
			var _this$props5 = _this.props,
			    setAttributes = _this$props5.setAttributes,
			    _this$props5$attribut = _this$props5.attributes,
			    currencyPosition = _this$props5$attribut.currencyPosition,
			    discount = _this$props5$attribut.discount,
			    discountPrice = _this$props5$attribut.discountPrice,
			    price = _this$props5$attribut.price,
			    enableDuration = _this$props5$attribut.enableDuration,
			    durationPosition = _this$props5$attribut.durationPosition;

			return React.createElement(
				'div',
				{ className: 'qubely-pricing-wrapper', onClick: function onClick() {
						return _this.handlePanelOpenings('Price');
					} },
				currencyPosition == 'before' && _this.renderCurrencyContent(),
				React.createElement(
					'span',
					{ className: 'qubely-pricing-price', contenteditable: 'true', onBlur: function onBlur(e) {
							return setAttributes({ price: e.target.innerText });
						} },
					discount && React.createElement(
						'strike',
						null,
						discountPrice
					),
					price
				),
				currencyPosition == 'after' && _this.renderCurrencyContent(),
				enableDuration && durationPosition == 'side' && _this.renderDuration()
			);
		};

		_this.handlePanelOpenings = function (panelName) {
			var _this$props6 = _this.props,
			    setAttributes = _this$props6.setAttributes,
			    _this$props6$attribut = _this$props6.attributes,
			    showButtonPanel = _this$props6$attribut.showButtonPanel,
			    showFeaturesPanel = _this$props6$attribut.showFeaturesPanel;

			_this.setState({ openPanelSetting: panelName });
			if (panelName == 'Button' || panelName == 'Features') {
				setAttributes(panelName == 'Button' ? { showButtonPanel: true, showFeaturesPanel: false } : { showFeaturesPanel: true, showButtonPanel: false });
			} else if (showButtonPanel || showFeaturesPanel) {
				setAttributes({ showButtonPanel: false, showFeaturesPanel: false });
			}
		};

		_this.handleCardDeletion = function () {
			var _this$props7 = _this.props,
			    clientId = _this$props7.clientId,
			    removeBlock = _this$props7.removeBlock,
			    updateBlockAttributes = _this$props7.updateBlockAttributes,
			    rootBlock = _this$props7.rootBlock,
			    rootBlockClientId = _this$props7.rootBlockClientId,
			    rootBlockAttributes = _this$props7.rootBlockAttributes,
			    _this$props7$attribut = _this$props7.attributes,
			    id = _this$props7$attribut.id,
			    pricings = _this$props7$attribut.pricings;

			var editorSelector = select('core/block-editor');
			var updatedRootBlock = getBlock(rootBlockClientId);
			var updatedRootBlockAttributes = editorSelector.getBlockAttributes(rootBlockClientId);

			removeBlock(clientId);
			updateBlockAttributes(rootBlockClientId, Object.assign(updatedRootBlockAttributes, { pricings: updatedRootBlockAttributes.pricings - 1 }));

			var i = 0;
			while (i < updatedRootBlock.innerBlocks.length) {
				updateBlockAttributes(updatedRootBlock.innerBlocks[i].clientId, Object.assign(updatedRootBlock.innerBlocks[i].attributes, {
					id: i >= id ? updatedRootBlock.innerBlocks[i].attributes.id - 1 : updatedRootBlock.innerBlocks[i].attributes.id,
					pricings: updatedRootBlock.innerBlocks[i].attributes.pricings - 1
				}));
				i++;
			}
		};

		_this.createIterator = function () {
			var pricings = _this.props.attributes.pricings;

			var iterator = [],
			    index = 0;
			while (index < pricings) {
				iterator.push(index);
				index++;
			}
			return iterator;
		};

		_this.state = {
			device: 'md',
			spacer: true,
			openPanelSetting: '',
			showTitleTypography: false,
			showSubTitleTypography: false,
			showpriceTypography: false,
			showDurationTypography: false,
			showBadgeTypography: false,
			showCurrencyWrapper: false,
			showPricingTitleSettings: false,
			openContextMenu: false,
			disablePasteStyle: false,
			showPostTextTypography: false
		};
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    _props$attributes = _props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    sourceOfCopiedStyle = _props$attributes.sourceOfCopiedStyle;

			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    name = _props2.name,
			    isSelected = _props2.isSelected,
			    clientId = _props2.clientId,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes,
			    _props2$attributes = _props2.attributes,
			    uniqueId = _props2$attributes.uniqueId,
			    className = _props2$attributes.className,
			    pricings = _props2$attributes.pricings,
			    alignment = _props2$attributes.alignment,
			    titleSpacing = _props2$attributes.titleSpacing,
			    layout = _props2$attributes.layout,
			    title = _props2$attributes.title,
			    titleColor = _props2$attributes.titleColor,
			    titleTypography = _props2$attributes.titleTypography,
			    subTitleSpacing = _props2$attributes.subTitleSpacing,
			    subTitleColor = _props2$attributes.subTitleColor,
			    subTitleTypography = _props2$attributes.subTitleTypography,
			    price = _props2$attributes.price,
			    priceColor = _props2$attributes.priceColor,
			    priceTypography = _props2$attributes.priceTypography,
			    discount = _props2$attributes.discount,
			    discountPrice = _props2$attributes.discountPrice,
			    discountColor = _props2$attributes.discountColor,
			    discountTypography = _props2$attributes.discountTypography,
			    pricingSpacing = _props2$attributes.pricingSpacing,
			    currency = _props2$attributes.currency,
			    currencyCustom = _props2$attributes.currencyCustom,
			    currencyPosition = _props2$attributes.currencyPosition,
			    currencyAlign = _props2$attributes.currencyAlign,
			    currencyColor = _props2$attributes.currencyColor,
			    currencyTypography = _props2$attributes.currencyTypography,
			    productId = _props2$attributes.productId,
			    enableDuration = _props2$attributes.enableDuration,
			    duration = _props2$attributes.duration,
			    durationPosition = _props2$attributes.durationPosition,
			    durationColor = _props2$attributes.durationColor,
			    durationTypography = _props2$attributes.durationTypography,
			    durationAlign = _props2$attributes.durationAlign,
			    durationPadding = _props2$attributes.durationPadding,
			    durationPaddingTop = _props2$attributes.durationPaddingTop,
			    durationPaddingBottom = _props2$attributes.durationPaddingBottom,
			    bgColor = _props2$attributes.bgColor,
			    bgPadding = _props2$attributes.bgPadding,
			    bgBorderRadius = _props2$attributes.bgBorderRadius,
			    bgBorder = _props2$attributes.bgBorder,
			    bgShadow = _props2$attributes.bgShadow,
			    enableFeatures = _props2$attributes.enableFeatures,
			    listItems = _props2$attributes.listItems,
			    iconPosition = _props2$attributes.iconPosition,
			    iconColor = _props2$attributes.iconColor,
			    enableListIcons = _props2$attributes.enableListIcons,
			    headerBg = _props2$attributes.headerBg,
			    headerBorder = _props2$attributes.headerBorder,
			    headerPadding = _props2$attributes.headerPadding,
			    enablePostButtonText = _props2$attributes.enablePostButtonText,
			    enableBadge = _props2$attributes.enableBadge,
			    badge = _props2$attributes.badge,
			    badgeStyle = _props2$attributes.badgeStyle,
			    badgeSize = _props2$attributes.badgeSize,
			    badgePosition = _props2$attributes.badgePosition,
			    badgeSpacing = _props2$attributes.badgeSpacing,
			    badgeSpacingTop = _props2$attributes.badgeSpacingTop,
			    badgeColor = _props2$attributes.badgeColor,
			    badgeBg = _props2$attributes.badgeBg,
			    badgeTypography = _props2$attributes.badgeTypography,
			    badgeRadius = _props2$attributes.badgeRadius,
			    animation = _props2$attributes.animation,
			    globalZindex = _props2$attributes.globalZindex,
			    enablePosition = _props2$attributes.enablePosition,
			    selectPosition = _props2$attributes.selectPosition,
			    positionXaxis = _props2$attributes.positionXaxis,
			    positionYaxis = _props2$attributes.positionYaxis,
			    hideTablet = _props2$attributes.hideTablet,
			    hideMobile = _props2$attributes.hideMobile,
			    globalCss = _props2$attributes.globalCss,
			    interaction = _props2$attributes.interaction;
			var _state = this.state,
			    device = _state.device,
			    openPanelSetting = _state.openPanelSetting,
			    showPostTextTypography = _state.showPostTextTypography;

			if (uniqueId) {
				CssGenerator(this.props.attributes, 'pricing', uniqueId);
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: __('') },
						React.createElement(Styles, { value: layout, onChange: function onChange(val) {
								return setAttributes({ layout: val });
							},
							options: [{ value: 1, svg: _icons2.default.pricing[1], label: __('Layout 1') }, { value: 2, svg: _icons2.default.pricing[2], label: __('Layout 2') }, { value: 3, svg: _icons2.default.pricing[3], label: __('Layout 3') }, { value: 4, svg: _icons2.default.pricing[4], label: __('Layout 4') }, { value: 5, svg: _icons2.default.pricing[5], label: __('Layout 5') }]
						}),
						React.createElement(Alignment, {
							label: __('Alignment'),
							alignmentType: 'content',
							value: alignment,
							disableJustify: true,
							onChange: function onChange(val) {
								return setAttributes({ alignment: val });
							},
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Toggle, {
							value: enableFeatures,
							label: __('Show Features'),
							onChange: function onChange(val) {
								return setAttributes({ enableFeatures: val });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Title'), opened: 'Title' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Title' ? 'Title' : '');
							} },
						title && React.createElement(
							Fragment,
							null,
							React.createElement(Color, {
								label: __('Color'),
								value: titleColor,
								onChange: function onChange(val) {
									return setAttributes({ titleColor: val });
								} }),
							React.createElement(Range, {
								label: __('Gap'),
								value: titleSpacing,
								min: 0,
								max: 100,
								responsive: true,
								device: device,
								unit: ['px', 'em', '%'],
								onChange: function onChange(val) {
									return setAttributes({ titleSpacing: val });
								},
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								}
							}),
							React.createElement(Separator, null),
							React.createElement(Typography, {
								value: titleTypography,
								label: __('Typography'),
								onChange: function onChange(val) {
									return setAttributes({ titleTypography: val });
								},
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					(layout == 2 || layout == 3 || layout == 4 || layout == 5) && React.createElement(
						PanelBody,
						{ title: __('Sub Title'), opened: 'Sub Title' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Sub Title' ? 'Sub Title' : '');
							} },
						React.createElement(Color, {
							label: __('Color'),
							value: subTitleColor,
							onChange: function onChange(val) {
								return setAttributes({ subTitleColor: val });
							} }),
						React.createElement(Range, {
							min: 0,
							max: 200,
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							},
							value: subTitleSpacing,
							unit: ['px', 'em', '%'],
							label: "Gap",
							onChange: function onChange(val) {
								return setAttributes({ subTitleSpacing: val });
							} }),
						React.createElement(Separator, null),
						React.createElement(Typography, {
							value: subTitleTypography,
							disableLineHeight: true,
							label: __('Typography'),
							onChange: function onChange(val) {
								return setAttributes({ subTitleTypography: val });
							},
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Price'), opened: 'Price' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Price' ? 'Price' : '');
							} },
						React.createElement(Color, {
							label: __('Color'),
							value: priceColor,
							onChange: function onChange(val) {
								return setAttributes({ priceColor: val });
							} }),
						React.createElement(Typography, {
							label: __('Typography'),
							value: priceTypography,
							onChange: function onChange(val) {
								return setAttributes({ priceTypography: val });
							},
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(Toggle, {
							value: discount,
							label: __('Discount'),
							onChange: function onChange(val) {
								return setAttributes({ discount: val });
							} }),
						discount && React.createElement(
							Fragment,
							null,
							React.createElement(TextControl, {
								label: __('Original Price'),
								value: discountPrice,
								placeholder: __('Price'),
								onChange: function onChange(val) {
									return setAttributes({ discountPrice: val });
								} }),
							discountPrice && React.createElement(
								Fragment,
								null,
								React.createElement(Color, {
									label: __('Color'),
									value: discountColor,
									onChange: function onChange(val) {
										return setAttributes({ discountColor: val });
									} }),
								React.createElement(Typography, {
									value: discountTypography,
									onChange: function onChange(val) {
										return setAttributes({ discountTypography: val });
									},
									device: device,
									onDeviceChange: function onDeviceChange(value) {
										return _this2.setState({ device: value });
									} })
							)
						),
						React.createElement(Separator, null),
						React.createElement(Range, {
							label: __('Gap'),
							value: pricingSpacing,
							min: 0,
							max: 100,
							responsive: true,
							device: device,
							unit: ['px', 'em', '%'],
							onChange: function onChange(val) {
								return setAttributes({ pricingSpacing: val });
							},
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							}
						})
					),
					React.createElement(
						PanelBody,
						{ title: __('Currency'), opened: 'Currency' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Currency' ? 'Currency' : '');
							} },
						React.createElement(SelectControl, {
							label: __('Symbol'),
							value: currency,
							options: [{ label: __('None'), value: '' }, { label: __('$ Dollar'), value: '$' }, { label: __('€ Euro'), value: '€' }, { label: __('£ Pound Sterling'), value: '£' }, { label: __('₣ Franc'), value: '₣' }, { label: __('₤ Lira'), value: '₤' }, { label: __('ƒ Guilder'), value: 'ƒ' }, { label: __('₹ Rupee(Indian)'), value: '₹' }, { label: __('฿ Baht'), value: '฿' }, { label: __('kr Krona'), value: 'kr' }, { label: __('₧ Peseta'), value: '₧' }, { label: __('₱ Peso'), value: '₱' }, { label: __('₩ Won'), value: '₩' }, { label: __('₪ Shekel'), value: '₪' }, { label: __('₨ Rupee'), value: '₨' }, { label: __('R$ Real'), value: 'R$' }, { label: __('₽ Ruble'), value: '₽' }, { label: __('¥ Yen/Yuan'), value: '¥' }, { label: __('Custom'), value: 'custom' }],
							onChange: function onChange(val) {
								return setAttributes({ currency: val });
							} }),
						currency == 'custom' && React.createElement(TextControl, {
							label: __('Custom Sysmbol'),
							value: currencyCustom,
							placeholder: __('Currency'),
							onChange: function onChange(val) {
								return setAttributes({ currencyCustom: val });
							} }),
						currency && React.createElement(
							Fragment,
							null,
							React.createElement(RadioAdvanced, {
								label: __('Position'),
								options: [{ label: __('Before'), value: 'before', title: __('Before') }, { label: __('After'), value: 'after', title: __('After') }],
								value: currencyPosition,
								onChange: function onChange(val) {
									return setAttributes({ currencyPosition: val });
								} }),
							React.createElement(Range, {
								min: -100,
								max: 100,
								value: currencyAlign,
								label: __('Alignment'),
								onChange: function onChange(val) {
									return setAttributes({ currencyAlign: val });
								} }),
							React.createElement(Color, {
								label: __('Color'),
								value: currencyColor,
								onChange: function onChange(val) {
									return setAttributes({ currencyColor: val });
								} }),
							React.createElement(Separator, null),
							React.createElement(Typography, {
								value: currencyTypography,
								onChange: function onChange(val) {
									return setAttributes({ currencyTypography: val });
								},
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					React.createElement(
						PanelBody,
						{ title: __('Woocommerce'), opened: 'Woocommerce' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Woocommerce' ? 'Woocommerce' : '');
							} },
						React.createElement(TextControl, {
							label: __('Woocommerce Product ID'),
							value: productId,
							placeholder: __('Woocommerce Product ID'),
							onChange: function onChange(val) {
								return setAttributes({ productId: val });
							}
						})
					),
					React.createElement(
						PanelBody,
						{ title: __('Duration'), opened: 'Duration' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Duration' ? 'Duration' : '');
							} },
						React.createElement(Toggle, {
							value: enableDuration,
							label: __('Enable'),
							onChange: function onChange(val) {
								return setAttributes({ enableDuration: val });
							}
						}),
						enableDuration && React.createElement(
							Fragment,
							null,
							React.createElement(TextControl, {
								label: __('Duration'),
								value: duration,
								placeholder: __('Duration'),
								onChange: function onChange(val) {
									return setAttributes({ duration: val });
								} }),
							React.createElement(RadioAdvanced, {
								label: __('Position'),
								options: [{ label: __('Side'), value: 'side', title: __('Side') }, { label: __('Bottom'), value: 'bottom', title: __('Bottom') }],
								value: durationPosition,
								onChange: function onChange(val) {
									return setAttributes({ durationPosition: val });
								} }),
							durationPosition == 'side' ? React.createElement(Range, {
								min: -100,
								max: 100,
								value: durationAlign,
								label: __('Duration Align'),
								onChange: function onChange(val) {
									return setAttributes({ durationAlign: val });
								} }) : React.createElement(
								Fragment,
								null,
								React.createElement(Padding, {
									min: 0,
									max: 100,
									value: durationPadding,
									label: __('Padding'),
									onChange: function onChange(val) {
										return setAttributes({ durationPadding: val });
									},
									unit: ['px', 'em', '%'],
									responsive: true,
									device: device,
									onDeviceChange: function onDeviceChange(value) {
										return _this2.setState({ device: value });
									}
								})
							),
							React.createElement(Color, {
								label: __('Color'),
								value: durationColor,
								onChange: function onChange(val) {
									return setAttributes({ durationColor: val });
								} }),
							React.createElement(Separator, null),
							React.createElement(Typography, {
								value: durationTypography,
								onChange: function onChange(val) {
									return setAttributes({ durationTypography: val });
								},
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					layout == 5 && React.createElement(
						PanelBody,
						{ title: __('Header'), opened: 'Header' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Header' ? 'Header' : '');
							} },
						React.createElement(ColorAdvanced, { label: __('Background Color'), value: headerBg, onChange: function onChange(val) {
								return setAttributes({ headerBg: val });
							} }),
						React.createElement(Border, {
							value: headerBorder,
							label: __('Border'),
							onChange: function onChange(val) {
								return setAttributes({ headerBorder: val });
							},
							unit: ['px', 'em', '%'],
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							}
						}),
						React.createElement(Padding, {
							min: 30,
							max: 100,
							value: headerPadding,
							label: __('Padding'),
							onChange: function onChange(val) {
								return setAttributes({ headerPadding: val });
							},
							unit: ['px', 'em', '%'],
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							}
						})
					),
					React.createElement(
						PanelBody,
						{ title: __('Background'), initialOpen: false },
						React.createElement(ColorAdvanced, { label: __('Background Color'), value: bgColor, onChange: function onChange(val) {
								return setAttributes({ bgColor: val });
							} }),
						React.createElement(Border, { label: __('Border'), value: bgBorder, onChange: function onChange(val) {
								return setAttributes({ bgBorder: val });
							}, min: 0, max: 10, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bgShadow, onChange: function onChange(value) {
								return setAttributes({ bgShadow: value });
							} }),
						React.createElement(Padding, {
							label: __('Padding'),
							value: bgPadding,
							onChange: function onChange(val) {
								return setAttributes({ bgPadding: val });
							},
							min: 0, max: 200,
							unit: ['px', 'em', '%'],
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(BorderRadius, { label: __('Radius'), value: bgBorderRadius, onChange: function onChange(value) {
								return setAttributes({ bgBorderRadius: value });
							}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Badge'), opened: 'Badge' === openPanelSetting, onToggle: function onToggle() {
								return _this2.handlePanelOpenings(openPanelSetting !== 'Badge' ? 'Badge' : '');
							} },
						React.createElement(Toggle, {
							value: enableBadge,
							label: __('Enable'),
							onChange: function onChange(val) {
								return setAttributes({ enableBadge: val });
							}
						}),
						enableBadge && React.createElement(
							Fragment,
							null,
							React.createElement(Styles, { value: badgeStyle, onChange: function onChange(val) {
									return setAttributes({ badgeStyle: val });
								},
								options: [{ value: 1, svg: _icons2.default.pricing.badge[1], label: __('Style 1') }, { value: 2, svg: _icons2.default.pricing.badge[2], label: __('Style 2') }, { value: 3, svg: _icons2.default.pricing.badge[3], label: __('Style 3') }, { value: 4, svg: _icons2.default.pricing.badge[4], label: __('Style 4') }, { value: 5, svg: _icons2.default.pricing.badge[5], label: __('Style 5') }, { value: 6, svg: _icons2.default.pricing.badge[6], label: __('Style 6') }]
							}),
							React.createElement(RadioAdvanced, {
								label: __('Size'),
								options: [{ label: __('Small'), value: 'small', title: __('Small') }, { label: __('Regular'), value: 'regular', title: __('Regular') }, { label: __('Large'), value: 'large', title: __('Large') }],
								value: badgeSize,
								onChange: function onChange(val) {
									return setAttributes({ badgeSize: val });
								}
							}),
							(badgeStyle == 1 || badgeStyle == 2 || badgeStyle == 5 || badgeStyle == 6) && React.createElement(RadioAdvanced, {
								label: __('Position'),
								options: [{ label: __('Left'), value: 'left', title: __('Left') }, { label: __('Right'), value: 'right', title: __('Right') }],
								value: badgePosition,
								onChange: function onChange(val) {
									return setAttributes({ badgePosition: val });
								}
							}),
							React.createElement(Color, {
								label: __('Background color'),
								value: badgeBg,
								onChange: function onChange(val) {
									return setAttributes({ badgeBg: val });
								}
							}),
							React.createElement(Color, {
								label: __('Text color'),
								value: badgeColor,
								onChange: function onChange(val) {
									return setAttributes({ badgeColor: val });
								}
							}),
							badgeStyle == 5 && React.createElement(BorderRadius, {
								label: __('Radius'),
								value: badgeRadius,
								onChange: function onChange(value) {
									return setAttributes({ badgeRadius: value });
								},
								min: 0,
								max: 100,
								unit: ['px', 'em', '%'],
								responsive: true,
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								}
							}),
							(badgeStyle == 3 || badgeStyle == 5 || badgeStyle == 6) && React.createElement(Range, {
								label: badgeStyle == 5 ? __('Side Spacing') : __('Spacing'),
								value: badgeSpacing,
								onChange: function onChange(value) {
									return setAttributes({ badgeSpacing: value });
								},
								min: 0,
								max: 100,
								unit: ['px', 'em', '%'],
								responsive: true,
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								}
							}),
							badgeStyle == 5 && React.createElement(Range, {
								label: __('Top Spacing'),
								value: badgeSpacingTop,
								onChange: function onChange(value) {
									return setAttributes({ badgeSpacingTop: value });
								},
								min: 0,
								max: 100,
								unit: ['px', 'em', '%'],
								responsive: true,
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								}
							}),
							React.createElement(Separator, null),
							React.createElement(Typography, {
								value: badgeTypography,
								disableLineHeight: true,
								onChange: function onChange(val) {
									return setAttributes({ badgeTypography: val });
								},
								device: device,
								onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					buttonSettings(this.props.attributes, device, function (key, value) {
						setAttributes(_defineProperty({}, key, value));
					}, function (key, value) {
						_this2.setState(_defineProperty({}, key, value));
					}, showPostTextTypography),
					listSettings(this.props.attributes, device, setAttributes),
					animationSettings(uniqueId, animation, setAttributes),
					interactionSettings(uniqueId, interaction, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
						}, this.props, {
							prevState: this.state }))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					React.createElement(
						'div',
						{ className: 'qubely-block-pricing', onContextMenu: function onContextMenu(event) {
								return handleContextMenu(event, _this2.refs.qubelyContextMenu);
							} },
						enableBadge && React.createElement(
							'span',
							{ className: 'qubely-pricing-badge qubely-badge-style-' + badgeStyle + ' qubely-badge-size-' + badgeSize, contenteditable: 'true', onBlur: function onBlur(e) {
									return setAttributes({ 'badge': e.target.innerText });
								}, onClick: function onClick() {
									return _this2.handlePanelOpenings('Badge');
								} },
							React.createElement(
								'span',
								null,
								badge
							)
						),
						React.createElement(
							'div',
							{ className: 'qubely-block-pricing-content' },
							React.createElement(
								'div',
								{ className: 'qubely-block-pricing-header' },
								this.renderPricingTitle(),
								(layout == 3 || layout == 4) && this.renderPricingSubTitle(),
								this.renderPricingPrice(),
								enableDuration && durationPosition == 'bottom' && this.renderDuration(),
								layout == 2 && this.renderPricingSubTitle()
							),
							layout == 4 && this.renderPricingButton(),
							enableFeatures && React.createElement(
								'div',
								{ ref: this.contextRef, className: 'qubely-pricing-features', onClick: function onClick() {
										return _this2.handlePanelOpenings('Features');
									} },
								React.createElement(QubelyIconListEdit, {
									parentBlock: 'qubely-block-' + uniqueId,
									disableButton: listItems.length > 0 ? true : false,
									buttonText: __('Add New Feature'),
									enableListIcons: enableListIcons,
									listItems: listItems,
									iconColor: iconColor,
									iconPosition: iconPosition,
									listWrapperClassName: 'qubely-list icon-position-' + iconPosition,
									newListItemPlaceHolder: __('Add New Feature'),
									onListItemModification: function onListItemModification(newValues) {
										return setAttributes({ listItems: newValues });
									},
									onChange: function onChange(key, value) {
										return setAttributes(_defineProperty({}, key, value));
									},
									onIconColorChange: function onIconColorChange(color, currentListItemIndex) {
										return setAttributes({ iconColor: color });
									}
								})
							),
							(layout == 1 || layout == 2 || layout == 3 || layout == 5) && this.renderPricingButton()
						),
						React.createElement(
							'div',
							{ ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
							React.createElement(ContextMenu, {
								name: name,
								clientId: clientId,
								attributes: attributes,
								setAttributes: setAttributes,
								qubelyContextMenu: this.refs.qubelyContextMenu
							})
						)
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = compose([withSelect(function (select, ownProps) {
	var clientId = ownProps.clientId;

	var _select2 = select('core/block-editor'),
	    getBlock = _select2.getBlock,
	    getBlockRootClientId = _select2.getBlockRootClientId,
	    getBlockAttributes = _select2.getBlockAttributes;

	var block = getBlock(clientId),
	    rootBlockClientId = getBlockRootClientId(clientId),
	    rootBlock = getBlock(rootBlockClientId),
	    rootBlockAttributes = getBlockAttributes(rootBlockClientId);
	return {
		block: block,
		rootBlock: rootBlock,
		rootBlockClientId: rootBlockClientId,
		rootBlockAttributes: rootBlockAttributes
	};
}), withDispatch(function (dispatch) {
	var _dispatch = dispatch('core/block-editor'),
	    insertBlock = _dispatch.insertBlock,
	    removeBlock = _dispatch.removeBlock,
	    updateBlockAttributes = _dispatch.updateBlockAttributes,
	    toggleSelection = _dispatch.toggleSelection;

	return {
		insertBlock: insertBlock,
		removeBlock: removeBlock,
		updateBlockAttributes: updateBlockAttributes,
		toggleSelection: toggleSelection
	};
})])(Edit);

/***/ }),

/***/ "./src/blocks/pricing/Save.js":
/*!************************************!*\
  !*** ./src/blocks/pricing/Save.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents = wp.qubelyComponents,
    QubelyButtonSave = _wp$qubelyComponents.QubelyButtonSave,
    QubelyIconListSave = _wp$qubelyComponents.QubelyIconListSave;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Save);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderPricingTitle = function () {
            var title = _this.props.attributes.title;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    "span",
                    { className: "qubely-pricing-title-wrapper" },
                    React.createElement(RichText.Content, { className: "qubely-pricing-title", tagName: "div", value: title })
                )
            );
        }, _this.renderPricingSubTitle = function () {
            var subTitle = _this.props.attributes.subTitle;

            return React.createElement(
                "div",
                { className: "qubely-sub-title-wrapper" },
                React.createElement(RichText.Content, { className: "qubely-sub-title", tagName: "div", value: subTitle })
            );
        }, _this.renderPricingPrice = function () {
            var _this$props$attribute = _this.props.attributes,
                currencyPosition = _this$props$attribute.currencyPosition,
                discount = _this$props$attribute.discount,
                discountPrice = _this$props$attribute.discountPrice,
                price = _this$props$attribute.price,
                enableDuration = _this$props$attribute.enableDuration,
                durationPosition = _this$props$attribute.durationPosition;

            return React.createElement(
                "div",
                { className: "qubely-pricing-wrapper" },
                currencyPosition == 'before' && _this.renderCurrencyContent(),
                React.createElement(
                    "span",
                    { className: "qubely-pricing-price" },
                    discount && React.createElement(
                        "strike",
                        null,
                        discountPrice
                    ),
                    price
                ),
                currencyPosition == 'after' && _this.renderCurrencyContent(),
                enableDuration && durationPosition == 'side' && _this.renderDuration()
            );
        }, _this.renderDuration = function () {
            var duration = _this.props.attributes.duration;

            return React.createElement(
                "span",
                { className: "qubely-pricing-duration" },
                React.createElement(RichText.Content, { className: "qubely-product-duration", tagName: "div", value: duration })
            );
        }, _this.renderCurrencyContent = function () {
            var _this$props$attribute2 = _this.props.attributes,
                currency = _this$props$attribute2.currency,
                currencyCustom = _this$props$attribute2.currencyCustom;

            return React.createElement(
                "span",
                { className: "qubely-pricing-currency" },
                currency == 'custom' ? currencyCustom : currency
            );
        }, _this.renderPricingButton = function () {
            var _this$props$attribute3 = _this.props.attributes,
                enableButton = _this$props$attribute3.enableButton,
                buttonUrl = _this$props$attribute3.buttonUrl,
                buttonFillType = _this$props$attribute3.buttonFillType,
                buttonSize = _this$props$attribute3.buttonSize,
                buttonText = _this$props$attribute3.buttonText,
                buttonIconName = _this$props$attribute3.buttonIconName,
                buttonIconPosition = _this$props$attribute3.buttonIconPosition,
                buttonTag = _this$props$attribute3.buttonTag,
                enablePostButtonText = _this$props$attribute3.enablePostButtonText,
                postButtonText = _this$props$attribute3.postButtonText;


            return React.createElement(
                "div",
                { className: "qubely-pricing-button" },
                React.createElement(QubelyButtonSave, {
                    buttonFillType: buttonFillType,
                    buttonSize: buttonSize,
                    buttonText: buttonText,
                    buttonIconName: buttonIconName,
                    buttonIconPosition: buttonIconPosition,
                    buttonTag: "a",
                    buttonUrl: buttonUrl
                }),
                enablePostButtonText && React.createElement(
                    "div",
                    { className: "qubely-pricing-postbutton-text" },
                    React.createElement(
                        "span",
                        { className: "qubely-pricing-post-button-text" },
                        postButtonText,
                        " "
                    )
                )
            );
        }, _this.renderPricingContent = function () {
            var _this$props$attribute4 = _this.props.attributes,
                currencyPosition = _this$props$attribute4.currencyPosition,
                discount = _this$props$attribute4.discount,
                discountPrice = _this$props$attribute4.discountPrice,
                price = _this$props$attribute4.price,
                enableDuration = _this$props$attribute4.enableDuration,
                durationPosition = _this$props$attribute4.durationPosition;

            return React.createElement(
                "div",
                { className: "qubely-pricing-wrapper" },
                currencyPosition == 'before' && _this.renderCurrencyContent(),
                React.createElement(
                    "span",
                    { className: "qubely-pricing-price" },
                    discount && React.createElement(
                        "strike",
                        null,
                        discountPrice
                    ),
                    price
                ),
                currencyPosition == 'after' && _this.renderCurrencyContent(),
                enableDuration && durationPosition == 'side' && _this.renderDuration()
            );
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Save, [{
        key: "render",
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                listAlignment = _props$attributes.listAlignment,
                listItems = _props$attributes.listItems,
                layout = _props$attributes.layout,
                iconColor = _props$attributes.iconColor,
                enableListIcons = _props$attributes.enableListIcons,
                enableDuration = _props$attributes.enableDuration,
                durationPosition = _props$attributes.durationPosition,
                enableFeatures = _props$attributes.enableFeatures,
                iconPosition = _props$attributes.iconPosition,
                enableBadge = _props$attributes.enableBadge,
                badge = _props$attributes.badge,
                badgeStyle = _props$attributes.badgeStyle,
                badgeSize = _props$attributes.badgeSize,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;


            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

            return React.createElement(
                "div",
                _extends({ className: "qubely-block-" + uniqueId }, animationAttr(animation)),
                React.createElement(
                    "div",
                    { className: "qubely-block-pricing " + interactionClass },
                    enableBadge && React.createElement(
                        "span",
                        { className: "qubely-pricing-badge qubely-badge-style-" + badgeStyle + " qubely-badge-size-" + badgeSize },
                        React.createElement(
                            "span",
                            null,
                            badge
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "qubely-block-pricing-content" },
                        React.createElement(
                            "div",
                            { className: "qubely-block-pricing-header" },
                            this.renderPricingTitle(),
                            (layout == 3 || layout == 4) && this.renderPricingSubTitle(),
                            this.renderPricingPrice(),
                            enableDuration && durationPosition == 'bottom' && this.renderDuration(),
                            layout == 2 && this.renderPricingSubTitle()
                        ),
                        layout == 4 && this.renderPricingButton(),
                        enableFeatures && React.createElement(
                            "div",
                            { className: "qubely-pricing-features qubely-alignment-" + listAlignment },
                            React.createElement(QubelyIconListSave, {
                                listItems: listItems,
                                enableListIcons: enableListIcons,
                                iconColor: iconColor,
                                iconPosition: iconPosition,
                                listWrapperClassName: "qubely-list icon-position-" + iconPosition
                            })
                        ),
                        (layout == 1 || layout == 2 || layout == 3 || layout == 5) && this.renderPricingButton()
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/pricing/index.js":
/*!*************************************!*\
  !*** ./src/blocks/pricing/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/pricing/style.scss");

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/pricing/Save.js");

var _Save2 = _interopRequireDefault(_Save);

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/pricing/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    buttonAttributes = _wp$qubelyComponents.QubelyButton.buttonAttributes,
    listAttributes = _wp$qubelyComponents.QubelyList.listAttributes;


registerBlockType('qubely/pricing', {
    title: __('Pricing'),
    description: 'Showcase Pricing in beautiful pre-designed Pricing Table with Qubely Pricing.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-pricing.svg', alt: __('Pricing Block') }),
    keywords: [__('Pricing'), __('Pricing Table')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: _extends({}, globalAttributes, buttonAttributes, listAttributes)
    },
    deprecated: [{
        attributes: _extends({
            uniqueId: { type: 'string', default: '' }
        }, globalAttributes, buttonAttributes, listAttributes, {
            layout: {
                type: 'number',
                default: 3
            },

            defaultItems: { type: 'number', default: 2 },
            alignment: { type: 'object', default: { md: 'center' }, style: [{ selector: '{{QUBELY}} .qubely-block-pricing {text-align: {{alignment}};}' }] },
            spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },

            copyStyle: { type: 'boolean', default: false },

            // Title__
            title: {
                type: 'string',
                source: 'html',
                selector: '.qubely-pricing-title',
                default: 'Basic'
            },
            titleColor: { type: 'string', default: '#0081FF', style: [{ selector: '{{QUBELY}} .qubely-pricing-title{color: {{titleColor}};}' }] },
            titleTypography: { type: 'object', default: { openTypography: 1, size: { md: 20, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-pricing-title' }] },

            titleSpacing: {
                type: 'object',
                default: {
                    md: 0,
                    unit: 'px'
                },
                style: [{ selector: '{{QUBELY}} .qubely-pricing-title {margin-bottom: {{titleSpacing}};}' }]
            },

            //Sub Title
            subTitle: {
                type: 'string',
                source: 'html',
                selector: '.qubely-sub-title',
                default: 'Best Choice for Individuals'
            },
            subTitleSpacing: {
                type: 'object',
                default: {
                    md: 20,
                    unit: 'px'
                },
                style: [{
                    selector: '{{QUBELY}} .qubely-sub-title-wrapper {margin-bottom: {{subTitleSpacing}};}'
                }]
            },

            subTitleColor: { type: 'string', default: '#8F8E8E', style: [{ selector: '{{QUBELY}} .qubely-sub-title{color: {{subTitleColor}};}' }] },
            subTitleTypography: { type: 'object', default: { openTypography: 1, size: { md: 20, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-sub-title' }] },

            // Price__
            price: { type: 'string', default: '49' },
            priceAlignment: {
                type: 'string',
                default: 'center',
                style: [{
                    condition: [{ key: 'priceAlignment', relation: '==', value: 'left' }],
                    selector: '{{QUBELY}} .qubely-pricing-wrapper {justify-content: flex-start;}'
                }, {
                    condition: [{ key: 'priceAlignment', relation: '==', value: 'center' }],
                    selector: '{{QUBELY}} .qubely-pricing-wrapper {justify-content: center;}'
                }, {
                    condition: [{ key: 'priceAlignment', relation: '==', value: 'right' }],
                    selector: '{{QUBELY}} .qubely-pricing-wrapper {justify-content: flex-end;}'
                }, {
                    condition: [{ key: 'priceAlignment', relation: '==', value: 'left' }, { key: 'durationPosition', relation: '==', value: 'bottom' }],
                    selector: '{{QUBELY}} .qubely-pricing-duration {text-align: left;}'
                }, {
                    condition: [{ key: 'priceAlignment', relation: '==', value: 'center' }, { key: 'durationPosition', relation: '==', value: 'bottom' }],
                    selector: '{{QUBELY}} .qubely-pricing-duration {text-align: center;}'
                }, {
                    condition: [{ key: 'priceAlignment', relation: '==', value: 'right' }, { key: 'durationPosition', relation: '==', value: 'bottom' }],
                    selector: '{{QUBELY}} .qubely-pricing-duration {text-align: right;}'
                }]
            },
            priceColor: { type: 'string', default: '#ccc', style: [{ selector: '{{QUBELY}} .qubely-pricing-price{color: {{priceColor}};}' }] },
            priceTypography: { type: 'object', default: { openTypography: 1, height: { md: 70, unit: 'px' }, size: { md: 70, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-pricing-price' }] },
            discount: { type: 'boolean', default: false },
            discountPrice: { type: 'string', default: '69' },
            discountColor: { type: 'string', default: '#ccc', style: [{ selector: '{{QUBELY}} .qubely-pricing-price strike{color: {{discountColor}};}' }] },
            discountTypography: { type: 'object', default: { openTypography: 1, size: { md: 20, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-pricing-price strike' }] },
            pricingSpacing: {
                type: 'object',
                default: {
                    md: 20,
                    unit: 'px'
                },
                style: [{ selector: '{{QUBELY}} .qubely-pricing-wrapper {margin-bottom: {{pricingSpacing}};}' }]
            },

            headerBg: {
                type: 'object',
                default: {},
                style: [{
                    condition: [{ key: 'layout', relation: '==', value: 5 }],
                    selector: '{{QUBELY}} .qubely-block-pricing-header'
                }]
            },
            headerBorder: {
                type: 'object',
                default: {
                    openColor: 1,
                    type: 'color',
                    color: '#f6f6f6'
                },
                style: [{
                    condition: [{ key: 'layout', relation: '==', value: 5 }],
                    selector: '{{QUBELY}} .qubely-block-pricing-header'
                }]
            },
            headerPadding: {
                type: 'object',
                default: {
                    openPadding: 1,
                    paddingType: 'global',
                    global: {
                        md: 20
                    },
                    unit: 'px'
                },
                style: [{
                    condition: [{ key: 'layout', relation: '==', value: 5 }],
                    selector: '{{QUBELY}} .qubely-block-pricing-header'
                }]
            },
            headerSpacing: {
                type: 'object',
                default: {
                    md: 30,
                    unit: 'px'
                },
                style: [{
                    condition: [{ key: 'layout', relation: '==', value: 5 }],
                    selector: '{{QUBELY}} .qubely-block-pricing-header {margin-bottom: {{headerSpacing}};}'
                }]
            },

            // Currency__
            currency: { type: 'string', default: '$' },
            currencyCustom: { type: 'string', default: '' },
            currencyPosition: { type: 'string', default: 'before' },
            currencyAlign: { type: 'string', default: '10', style: [{ selector: '{{QUBELY}} .qubely-pricing-currency{ display: inline-block; transform: translateY({{currencyAlign}}px); }' }] },
            currencyColor: { type: 'string', default: '#CACCCE', style: [{ selector: '{{QUBELY}} .qubely-pricing-currency{color: {{currencyColor}}; }' }] },
            currencyTypography: { type: 'object', default: { openTypography: 1, size: { md: 34, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-pricing-currency' }] },

            // Woocommerce__
            productId: { type: 'string', default: '' },

            // Duration__
            enableDuration: { type: 'boolean', default: true },
            duration: { type: 'string', default: '/Month' },
            durationPosition: { type: 'string', default: 'side' },
            durationColor: { type: 'string', default: '#CACCCE', style: [{ selector: '{{QUBELY}} .qubely-pricing-duration{color: {{durationColor}};}' }] },
            durationAlign: { type: 'string', default: '10', style: [{ condition: [{ key: 'durationPosition', relation: '==', value: 'side' }], selector: '{{QUBELY}} .qubely-pricing-duration{transform: translateY({{durationAlign}}px); display: inline-block; }' }, { condition: [{ key: 'durationPosition', relation: '==', value: 'bottom' }], selector: '{{QUBELY}} .qubely-pricing-duration{ display: block; }' }] },
            durationTypography: { type: 'object', default: { openTypography: 1, size: { md: 21, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-pricing-duration' }] },

            durationPadding: {
                type: 'object',
                default: {
                    openPadding: 1,
                    paddingType: 'custom',
                    custom: { md: '10 0 10 0' }
                },
                style: [{ condition: [{ key: 'durationPosition', relation: '==', value: 'bottom' }], selector: '{{QUBELY}} .qubely-pricing-duration' }]
            },
            // Badge__
            enableBadge: { type: 'boolean', default: false },
            badge: { type: 'string', default: 'Sale' },
            badgeStyle: {
                type: 'number',
                default: 1,
                style: [{
                    condition: [{ key: 'badgeStyle', relation: '!=', value: 3 }],
                    selector: '{{QUBELY}} .qubely-block-pricing {overflow: hidden;}'
                }]
            },
            badgePosition: {
                type: 'string',
                default: 'left',
                style: [{
                    condition: [{ key: 'badgeStyle', relation: '==', value: 1 }, { key: 'badgePosition', relation: '==', value: 'left' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {left: -73px; transform: rotate(-45deg);}'
                }, {
                    condition: [{ key: 'badgeStyle', relation: '==', value: 1 }, { key: 'badgePosition', relation: '==', value: 'right' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {right: -73px; transform: rotate(45deg);}'
                }, {
                    condition: [{ key: 'badgeStyle', relation: '==', value: 2 }, { key: 'badgePosition', relation: '==', value: 'left' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {left: -50px; transform: rotate(-45deg);}'
                }, {
                    condition: [{ key: 'badgeStyle', relation: '==', value: 2 }, { key: 'badgePosition', relation: '==', value: 'right' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {right: -50px; transform: rotate(45deg);}'
                }]
            },
            badgeSize: {
                type: 'string',
                default: 'regular'
            },
            badgeSpacing: {
                type: 'object',
                default: {
                    md: 20,
                    unit: 'px'
                },
                style: [{
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 3 }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {margin-top: {{badgeSpacing}};}'
                }, {
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 5 }, { key: 'badgePosition', relation: '==', value: 'left' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {left: {{badgeSpacing}};}'
                }, {
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 5 }, { key: 'badgePosition', relation: '==', value: 'right' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {right: {{badgeSpacing}};}'
                }, {
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 6 }, { key: 'badgePosition', relation: '==', value: 'left' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {left: {{badgeSpacing}};}'
                }, {
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 6 }, { key: 'badgePosition', relation: '==', value: 'right' }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {right: {{badgeSpacing}};}'
                }]
            },
            badgeSpacingTop: {
                type: 'object',
                default: {
                    md: 20,
                    unit: 'px'
                },
                style: [{
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 5 }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {top: {{badgeSpacingTop}};}'
                }]
            },
            badgeBg: {
                type: 'string',
                default: '#50E3C2',
                style: [{
                    condition: [{ key: 'enableBadge', relation: '==', value: true }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {background-color: {{badgeBg}};}'
                }, {
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 3 }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge::before {border-color: {{badgeBg}} {{badgeBg}} transparent transparent;} {{QUBELY}} .qubely-block-pricing .qubely-pricing-badge::after {border-color: {{badgeBg}} transparent transparent {{badgeBg}};}'
                }, {
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 6 }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge::before {border-color: {{badgeBg}} {{badgeBg}} transparent {{badgeBg}};}'
                }]
            },

            badgeColor: {
                type: 'string',
                default: '#FFFFFF',
                style: [{
                    condition: [{ key: 'enableBadge', relation: '==', value: true }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge {color: {{badgeColor}};}'
                }]
            },

            badgeTypography: {
                type: 'object',
                default: {
                    openTypography: 1,
                    size: {
                        md: 14,
                        unit: 'px'
                    }
                },
                style: [{
                    condition: [{ key: 'enableBadge', relation: '==', value: true }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge'
                }]
            },

            badgeRadius: {
                type: 'object',
                default: {
                    paddingType: 'global'
                },
                style: [{
                    condition: [{ key: 'enableBadge', relation: '==', value: true }, { key: 'badgeStyle', relation: '==', value: 5 }],
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-pricing-badge'
                }]
            },

            // Background
            bgColor: {
                type: 'object',
                default: {
                    openColor: 1,
                    type: 'color',
                    color: '#FFFFFF'
                },
                style: [{ selector: '{{QUBELY}} .qubely-block-pricing' }]
            },
            bgPadding: {
                type: 'object',
                default: {
                    openPadding: 1,
                    paddingType: 'global',
                    global: {
                        md: 30
                    },
                    unit: 'px'
                },
                style: [{
                    selector: '{{QUBELY}} .qubely-block-pricing .qubely-block-pricing-content'
                }]
            },

            bgBorderRadius: {
                type: 'object',
                default: {
                    openBorderRadius: 1,
                    radiusType: 'global',
                    global: {
                        md: 10
                    },
                    unit: 'px'
                },
                style: [{
                    selector: '{{QUBELY}} .qubely-block-pricing'
                }]
            },

            bgBorder: {
                type: 'object',
                default: {
                    openBorder: 1,
                    widthType: 'global',
                    type: 'solid',
                    color: '#E5E7EA',
                    global: {
                        md: 1
                    },
                    unit: 'px'
                },
                style: [{
                    selector: '{{QUBELY}} .qubely-block-pricing'
                }]
            },

            bgShadow: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-pricing' }] },

            //button
            buttonGap: {
                type: 'object',
                default: {
                    md: 0,
                    unit: 'px'
                },
                style: [{ selector: '{{QUBELY}} .qubely-pricing-button {margin-bottom: {{buttonGap}};margin-top: {{buttonGap}};}' }]
            },
            enableButton: { type: 'boolean', default: true },
            controlledButtonPanel: { type: 'boolean', default: true },
            showButtonPanel: { type: 'boolean', default: false },
            buttonText: { type: 'string', default: 'Subscribe Now' },

            buttonPaddingTop: { type: 'object', default: { md: 30, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-pricing-button{ padding-top: {{buttonPaddingTop}};}' }] },
            buttonPaddingBottom: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-pricing-button{ padding-bottom: {{buttonPaddingBottom}};}' }] },

            //postButtonText
            enablePostButtonText: { type: 'boolean', default: false },
            postButtonText: { type: 'string', default: '14 days money back gaurantee' },
            postButtonTextTypography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-pricing-post-button-text' }] },
            postButtonTextColor: {
                type: 'string',
                default: '#696969',
                style: [{
                    condition: [{ key: 'enablePostButtonText', relation: '==', value: true }],
                    selector: '{{QUBELY}} .qubely-pricing-postbutton-text{ color: {{postButtonTextColor}};}'
                }]
            },
            postButtonTextPaddingTop: {
                type: 'object',
                default: { md: 5, unit: 'px' },
                style: [{
                    condition: [{ key: 'enablePostButtonText', relation: '==', value: true }],
                    selector: '{{QUBELY}} .qubely-pricing-postbutton-text{ margin-top: {{postButtonTextPaddingTop}};}'
                }]
            },
            postButtonTextPaddingBottom: {
                type: 'object',
                default: { md: 5, unit: 'px' },
                style: [{
                    condition: [{ key: 'enablePostButtonText', relation: '==', value: true }],
                    selector: '{{QUBELY}} .qubely-pricing-postbutton-text{ margin-bottom: {{postButtonTextPaddingBottom}};}'
                }]
            },

            // features
            enableFeatures: { type: 'boolean', default: true },
            controlledFeaturesPanel: { type: 'boolean', default: true },
            showFeaturesPanel: { type: 'boolean', default: false },
            listItems: {
                type: 'array',
                default: [{
                    icon: 'fas fa-check',
                    text: 'Unlimited domain use',
                    customColor: false
                }, {
                    icon: 'fas fa-check',
                    text: '1 year customer support',
                    customColor: false
                }, {
                    icon: 'fas fa-times',
                    text: 'Access to all plugins',
                    customColor: '#f00'
                }, {
                    icon: 'fas fa-check',
                    text: 'Access to all themes',
                    customColor: false
                }]

            },
            clickedListItem: { type: 'number', default: 0 },
            listType: { type: 'string', default: 'unordered' },
            bulletStyle: { type: 'string', default: 'check-circle-outline' },
            sourceOfCopiedStyle: { type: 'boolean', default: false }

        }),
        edit: _Edit2.default,
        save: _Save2.default
    }],
    edit: _Edit2.default,
    save: function save(props) {
        return null;
    }
});

/***/ }),

/***/ "./src/blocks/pricing/style.scss":
/*!***************************************!*\
  !*** ./src/blocks/pricing/style.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/pricing/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/progressbar/Edit.js":
/*!****************************************!*\
  !*** ./src/blocks/progressbar/Edit.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Range = _wp$qubelyComponents.Range,
    Typography = _wp$qubelyComponents.Typography,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Toggle = _wp$qubelyComponents.Toggle,
    Color = _wp$qubelyComponents.Color,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = {
            device: 'md',
            spacer: true
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                isSelected = _props2.isSelected,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                progress = _props2$attributes.progress,
                title = _props2$attributes.title,
                labelTypography = _props2$attributes.labelTypography,
                labelPosition = _props2$attributes.labelPosition,
                labelColor = _props2$attributes.labelColor,
                labelSpacing = _props2$attributes.labelSpacing,
                showProgress = _props2$attributes.showProgress,
                barHeight = _props2$attributes.barHeight,
                barBackground = _props2$attributes.barBackground,
                progressBackground = _props2$attributes.progressBackground,
                striped = _props2$attributes.striped,
                borderRadius = _props2$attributes.borderRadius,
                animation = _props2$attributes.animation,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                globalZindex = _props2$attributes.globalZindex,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction;
            var device = this.state.device;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'progressbar', uniqueId);
            }

            var labelsContent = React.createElement(
                Fragment,
                null,
                title != '' && React.createElement(
                    'div',
                    { className: 'qubely-block-progress-labels qubely-position-' + labelPosition },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-progress-bar-title' },
                        title
                    ),
                    showProgress && React.createElement(
                        'div',
                        { className: 'qubely-progress-percentage' },
                        React.createElement(
                            'span',
                            null,
                            progress,
                            '%'
                        )
                    )
                )
            );

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '' },
                        React.createElement(Range, { label: __('Progress'), value: progress, onChange: function onChange(value) {
                                return setAttributes({ progress: value });
                            }, min: 1, max: 100 }),
                        React.createElement(Range, { label: __('Height'), value: barHeight, onChange: function onChange(value) {
                                return setAttributes({ barHeight: value });
                            }, min: 1, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Text'), initialOpen: false },
                        React.createElement(TextControl, { label: __('Title'), value: title, onChange: function onChange(val) {
                                return setAttributes({ title: val });
                            } }),
                        title != '' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Toggle, { label: __('Show Percentage'), value: showProgress, onChange: function onChange(val) {
                                    return setAttributes({ showProgress: val });
                                } }),
                            React.createElement(RadioAdvanced, {
                                label: __('Position'),
                                options: [{ label: __('Inside'), value: 'inside' }, { label: __('Outside'), value: 'outside' }],
                                value: labelPosition,
                                onChange: function onChange(val) {
                                    return setAttributes({ labelPosition: val });
                                }
                            }),
                            React.createElement(Range, { label: __('Spacing'), value: labelSpacing, onChange: function onChange(value) {
                                    return setAttributes({ labelSpacing: value });
                                }, unit: ['px', 'em', '%'], min: 0, max: 40, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), value: labelTypography, onChange: function onChange(val) {
                                    return setAttributes({ labelTypography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: labelColor, onChange: function onChange(val) {
                                    return setAttributes({ labelColor: val });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Bar'), initialOpen: false },
                        React.createElement(ColorAdvanced, { label: __('Background'), value: progressBackground, onChange: function onChange(val) {
                                return setAttributes({ progressBackground: val });
                            } }),
                        React.createElement(Toggle, { label: __('Striped'), value: striped, onChange: function onChange(val) {
                                return setAttributes({ striped: val });
                            } }),
                        React.createElement(BorderRadius, { label: __('Radius'), value: borderRadius, onChange: function onChange(val) {
                                return setAttributes({ borderRadius: val });
                            }, min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Background'), initialOpen: false },
                        React.createElement(Color, {
                            label: __('Background'),
                            value: barBackground,
                            onChange: function onChange(val) {
                                return setAttributes({ barBackground: val });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-progress-bar', onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        labelPosition == 'outside' && labelsContent,
                        React.createElement(
                            'div',
                            { className: 'qubely-progress' },
                            React.createElement(
                                'div',
                                { className: 'qubely-progress-bar', role: 'progressbar' },
                                striped && React.createElement('div', { className: 'qubely-progress-striped' }),
                                labelPosition == 'inside' && labelsContent
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/progressbar/Save.js":
/*!****************************************!*\
  !*** ./src/blocks/progressbar/Save.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                animation = _props$attributes.animation,
                title = _props$attributes.title,
                labelPosition = _props$attributes.labelPosition,
                striped = _props$attributes.striped,
                progress = _props$attributes.progress,
                showProgress = _props$attributes.showProgress,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            var labelsContent = title != '' ? React.createElement(
                'div',
                { className: 'qubely-block-progress-labels qubely-position-' + labelPosition },
                React.createElement(
                    'div',
                    { className: 'qubely-block-progress-bar-title' },
                    title
                ),
                showProgress && React.createElement(
                    'div',
                    { className: 'qubely-progress-percentage' },
                    React.createElement(
                        'span',
                        null,
                        progress,
                        '%'
                    )
                )
            ) : '';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-progress-bar ' + interactionClass },
                    labelPosition == 'outside' && labelsContent,
                    React.createElement(
                        'div',
                        { className: 'qubely-progress' },
                        React.createElement(
                            'div',
                            { className: 'qubely-progress-bar', role: 'progressbar' },
                            striped && React.createElement('div', { className: 'qubely-progress-striped' }),
                            labelPosition == 'inside' && labelsContent
                        )
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/progressbar/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/progressbar/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/progressbar/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/progressbar/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/progressbar/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var registerBlockType = wp.blocks.registerBlockType;
var __ = wp.i18n.__;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/progressbar', {
	title: __('Progress Bar'),
	description: 'Showcase stats using progress bars with Qubely Progress Bar.',
	category: 'qubely',
	icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-progressbar.svg', alt: __('Progress Bar Block') }),
	supports: {
		align: ['center', 'wide', 'full']
	},
	keywords: [__('progress'), __('bar'), __('bar progress')],
	example: {
		attributes: {}
	},
	attributes: _extends({
		uniqueId: { type: 'string', default: '' }
	}, globalAttributes, { // Global Settings
		spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
		progress: { type: 'string', default: 50, style: [{ selector: '{{QUBELY}} .qubely-progress-bar {width: {{progress}}%;}' }] },

		// Labels
		title: { type: 'string', default: 'Progress' },
		showTitle: { type: 'boolean', default: true },
		labelTypography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-block-progress-labels' }] },
		labelColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-progress-labels {color: {{labelColor}};}' }] },
		labelPosition: { type: 'string', default: 'outside' },
		labelSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-block-progress-labels.qubely-position-outside {margin-bottom: {{labelSpacing}};} {{QUBELY}} .qubely-block-progress-labels.qubely-position-inside {padding-left: {{labelSpacing}}; padding-right: {{labelSpacing}};}' }] },

		// Bar
		barHeight: { type: 'object', default: { md: 30, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-progress {height: {{barHeight}}; line-height: {{barHeight}};}' }] },
		barBackground: { type: 'string', default: '#e9ecef', style: [{ selector: '{{QUBELY}} .qubely-progress {background-color: {{barBackground}};}' }] },
		progressBackground: { type: 'object', default: { openColor: 1, type: 'color', color: '#007bff', gradient: {} }, style: [{ selector: '{{QUBELY}} .qubely-progress-bar' }] },
		striped: { type: 'boolean', default: false },
		borderRadius: {
			type: 'object',
			default: {
				openBorderRadius: 1,
				radiusType: 'global',
				global: { md: 10 },
				unit: 'px'

			},
			style: [{ selector: '{{QUBELY}} .qubely-progress, {{QUBELY}} .qubely-progress-bar' }]
		},
		showProgress: { type: 'boolean', default: true },
		sourceOfCopiedStyle: { type: 'boolean', default: false }
	}),
	edit: _Edit2.default,
	save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/progressbar/style.scss":
/*!*******************************************!*\
  !*** ./src/blocks/progressbar/style.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/progressbar/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/row/Edit.js":
/*!********************************!*\
  !*** ./src/blocks/row/Edit.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ModalManager = __webpack_require__(/*! ../../helpers/ModalManager */ "./src/helpers/ModalManager.js");

var _PageListModal = __webpack_require__(/*! ../../helpers/PageListModal */ "./src/helpers/PageListModal.js");

var _PageListModal2 = _interopRequireDefault(_PageListModal);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    select = _wp$data.select,
    withDispatch = _wp$data.withDispatch;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    SelectControl = _wp$components.SelectControl,
    Tooltip = _wp$components.Tooltip,
    Button = _wp$components.Button,
    RangeControl = _wp$components.RangeControl;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    InnerBlocks = _wp$blockEditor.InnerBlocks,
    InspectorAdvancedControls = _wp$blockEditor.InspectorAdvancedControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Background = _wp$qubelyComponents.Background,
    Select = _wp$qubelyComponents.Select,
    Range = _wp$qubelyComponents.Range,
    Toggle = _wp$qubelyComponents.Toggle,
    Shape = _wp$qubelyComponents.Shape,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Tab = _wp$qubelyComponents.Tab,
    Tabs = _wp$qubelyComponents.Tabs,
    Separator = _wp$qubelyComponents.Separator,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Dimension = _wp$qubelyComponents.Dimension,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    videoBackground = _wp$qubelyComponents.HelperFunction.videoBackground,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;


var colOption = [{ label: '100', columns: 1, layout: { md: [100], sm: [100], xs: [100] } }, { label: '50/50', columns: 2, layout: { md: [50, 50], sm: [100, 100], xs: [100, 100] } }, { label: '33/33/33', columns: 3, layout: { md: [33.33, 33.33, 33.34], sm: [100, 100, 100], xs: [100, 100, 100] } }, { label: '25/25/25/25', columns: 4, layout: { md: [25, 25, 25, 25], sm: [50, 50, 50, 50], xs: [100, 100, 100, 100] } }, { label: '34/66', columns: 2, layout: { md: [34, 66], sm: [50, 50], xs: [100, 100] } }, { label: '66/34', columns: 2, layout: { md: [66, 34], sm: [100, 100], xs: [100, 100] } }, { label: '25/25/50', columns: 3, layout: { md: [25, 25, 50], sm: [50, 50, 100], xs: [100, 100, 100] } }, { label: '50/25/25', columns: 3, layout: { md: [50, 25, 25], sm: [100, 50, 50], xs: [100, 100, 100] } }, { label: '25/50/25', columns: 3, layout: { md: [25, 50, 25], sm: [100, 100, 100], xs: [100, 100, 100] } }, { label: '20/20/20/20/20', columns: 5, layout: { md: [20, 20, 20, 20, 20], sm: [20, 20, 20, 20, 20], xs: [20, 20, 20, 20, 20] } }, { label: '16/16/16/16/16/16', columns: 6, layout: { md: [16.66, 16.67, 16.66, 16.67, 16.67, 16.67], sm: [33.33, 33.33, 33.34, 33.33, 33.33, 33.34], xs: [50, 50, 50, 50, 50, 50] } }, { label: '16/66/16', columns: 3, layout: { md: [16.66, 66.68, 16.66], sm: [100, 100, 100], xs: [100, 100, 100] } }];

var defaultLayout = { md: [100], sm: [100], xs: [100] };

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = {
            device: 'md',
            hideRowSettings: false
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _select = select('core/block-editor'),
                getBlockRootClientId = _select.getBlockRootClientId;

            var parentClientId = getBlockRootClientId(clientId);

            if (parentClientId) {
                this.setState({ hideRowSettings: true });
            }

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client, childRow: parentClientId ? true : false });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client, childRow: parentClientId ? true : false });
            }
        }
    }, {
        key: 'getTemplate',
        value: function getTemplate(columns) {
            return [].concat(_toConsumableArray(Array(parseInt(columns)))).map(function (data, index) {
                var columnWidth = { md: defaultLayout.md[index], sm: defaultLayout.sm[index], xs: defaultLayout.xs[index], unit: '%', device: 'md' };
                return ['qubely/column', { colWidth: columnWidth }];
            });
        }
    }, {
        key: 'removeRowBlock',
        value: function removeRowBlock() {
            var _props2 = this.props,
                clientId = _props2.clientId,
                removeBlock = _props2.removeBlock;

            removeBlock(clientId); //remove row block
        }
    }, {
        key: 'importLayout',
        value: function importLayout() {
            _ModalManager.ModalManager.open(React.createElement(_PageListModal2.default, { rowClientId: this.props.clientId }));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props3 = this.props,
                _props3$attributes = _props3.attributes,
                uniqueId = _props3$attributes.uniqueId,
                className = _props3$attributes.className,
                rowId = _props3$attributes.rowId,
                columns = _props3$attributes.columns,
                align = _props3$attributes.align,
                rowGutter = _props3$attributes.rowGutter,
                rowBlend = _props3$attributes.rowBlend,
                rowOverlay = _props3$attributes.rowOverlay,
                rowOpacity = _props3$attributes.rowOpacity,
                rowContainer = _props3$attributes.rowContainer,
                rowContainerWidth = _props3$attributes.rowContainerWidth,
                position = _props3$attributes.position,
                padding = _props3$attributes.padding,
                marginTop = _props3$attributes.marginTop,
                marginBottom = _props3$attributes.marginBottom,
                rowBg = _props3$attributes.rowBg,
                shapeTop = _props3$attributes.shapeTop,
                shapeBottom = _props3$attributes.shapeBottom,
                rowReverse = _props3$attributes.rowReverse,
                rowShadow = _props3$attributes.rowShadow,
                heightOptions = _props3$attributes.heightOptions,
                rowHeight = _props3$attributes.rowHeight,
                border = _props3$attributes.border,
                borderRadius = _props3$attributes.borderRadius,
                enableRowOverlay = _props3$attributes.enableRowOverlay,
                animation = _props3$attributes.animation,
                enablePosition = _props3$attributes.enablePosition,
                selectPosition = _props3$attributes.selectPosition,
                positionXaxis = _props3$attributes.positionXaxis,
                positionYaxis = _props3$attributes.positionYaxis,
                globalZindex = _props3$attributes.globalZindex,
                hideTablet = _props3$attributes.hideTablet,
                hideMobile = _props3$attributes.hideMobile,
                globalCss = _props3$attributes.globalCss,
                setAttributes = _props3.setAttributes;
            var _state = this.state,
                device = _state.device,
                hideRowSettings = _state.hideRowSettings;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'row', uniqueId);
            }

            if (!columns) {
                return React.createElement(
                    Fragment,
                    null,
                    React.createElement(
                        'div',
                        { className: 'qubely-row-preset' },
                        React.createElement(
                            Button,
                            { onClick: function onClick() {
                                    return _this2.removeRowBlock();
                                }, className: 'qubely-component-remove-button' },
                            React.createElement('i', { className: 'fa fa-times' })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-row-preset-title' },
                            __('Select Column Layout')
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-row-preset-group' },
                            colOption.map(function (data) {
                                return React.createElement(
                                    Tooltip,
                                    { text: data.label },
                                    React.createElement(
                                        'button',
                                        { onClick: function onClick() {
                                                setAttributes({ columns: data.columns });
                                                defaultLayout = data.layout;
                                            } },
                                        data.layout.md.map(function (d) {
                                            return React.createElement('i', { style: { width: d + '%' } });
                                        })
                                    )
                                );
                            })
                        ),
                        React.createElement(
                            'div',
                            { className: 'import-layout-btn-container' },
                            React.createElement(
                                'button',
                                { type: 'button',
                                    className: 'components-button is-button is-default is-primary is-large',
                                    onClick: function onClick() {
                                        return _this2.importLayout();
                                    } },
                                __('Import Layout')
                            )
                        )
                    )
                );
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    null,
                    React.createElement(
                        PanelBody,
                        { initialOpen: true, title: __('Dimension') },
                        React.createElement(SelectControl, {
                            label: __('Height'),
                            value: heightOptions || '',
                            options: [{ label: __('Auto'), value: '' }, { label: __('Window Height (100%)'), value: 'window' }, { label: __('Custom'), value: 'custom' }],
                            onChange: function onChange(val) {
                                return setAttributes({ heightOptions: val });
                            }
                        }),
                        heightOptions === 'custom' && React.createElement(Range, {
                            label: __('Min Height'),
                            value: rowHeight || '',
                            onChange: function onChange(val) {
                                return setAttributes({ rowHeight: val });
                            },
                            min: 40,
                            max: 1200,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: this.state.device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        align == 'full' && !hideRowSettings && React.createElement(
                            Fragment,
                            null,
                            React.createElement(RadioAdvanced, { label: __('Container'), value: rowContainerWidth, onChange: function onChange(val) {
                                    return setAttributes({ rowContainerWidth: val });
                                },
                                options: [{ label: __('Full Width'), value: 'fluid', title: __('Full Width') }, { label: __('Boxed'), value: 'boxed', title: __('Boxed') }]
                            }),
                            rowContainerWidth == 'boxed' && React.createElement(Range, {
                                label: __('Container Width'),
                                min: 970, max: 1920,
                                value: rowContainer,
                                onChange: function onChange(val) {
                                    return setAttributes({ rowContainer: parseInt(val) });
                                }
                            })
                        ),
                        columns > 1 && React.createElement(Range, {
                            label: __('Gutter Size'),
                            min: 0, max: 100,
                            value: rowGutter,
                            onChange: function onChange(val) {
                                return setAttributes({ rowGutter: val });
                            },
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: this.state.device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Separator, null),
                        React.createElement(Dimension, {
                            label: __('Padding'),
                            value: padding,
                            onChange: function onChange(val) {
                                return setAttributes({ padding: val });
                            },
                            min: 0,
                            max: 600,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: this.state.device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            },
                            clientId: this.props.clientId
                        }),
                        React.createElement(Separator, null),
                        React.createElement(Range, { label: __('Margin Top'), value: marginTop, onChange: function onChange(value) {
                                return setAttributes({ marginTop: value });
                            }, unit: ['px', 'em', '%'], min: -400, max: 500, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Range, { label: __('Margin Bottom'), value: marginBottom, onChange: function onChange(value) {
                                return setAttributes({ marginBottom: value });
                            }, unit: ['px', 'em', '%'], min: -400, max: 500, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(
                            'div',
                            { className: 'qubely-field' },
                            React.createElement(
                                'label',
                                null,
                                __('Content Position')
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-field-button-list qubely-field-button-list-fluid' },
                                React.createElement(
                                    Tooltip,
                                    { text: __('Top') },
                                    React.createElement(
                                        'button',
                                        {
                                            onClick: function onClick() {
                                                return setAttributes({ position: 'flex-start' });
                                            },
                                            className: "qubely-button" + (position === 'flex-start' ? ' active' : '')
                                        },
                                        _icons2.default.vertical_top
                                    )
                                ),
                                React.createElement(
                                    Tooltip,
                                    { text: __('Middle') },
                                    React.createElement(
                                        'button',
                                        {
                                            onClick: function onClick() {
                                                return setAttributes({ position: 'center' });
                                            },
                                            className: "qubely-button" + (position === 'center' ? ' active' : '')
                                        },
                                        _icons2.default.vertical_middle
                                    )
                                ),
                                React.createElement(
                                    Tooltip,
                                    { text: __('Bottom') },
                                    React.createElement(
                                        'button',
                                        {
                                            onClick: function onClick() {
                                                return setAttributes({ position: 'flex-end' });
                                            },
                                            className: "qubely-button" + (position === 'flex-end' ? ' active' : '')
                                        },
                                        _icons2.default.vertical_bottom
                                    )
                                )
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { initialOpen: false, title: __('Background') },
                        React.createElement(Background, { label: __('Background'), sources: ['image', 'gradient', 'video'], parallax: true, value: rowBg, onChange: function onChange(val) {
                                return setAttributes({ rowBg: val });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(Border, {
                            label: __('Border'),
                            value: border, unit: ['px', 'em'],
                            responsive: true,
                            onChange: function onChange(val) {
                                return setAttributes({ border: val });
                            },
                            min: 0,
                            max: 10,
                            device: this.state.device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Separator, null),
                        React.createElement(BoxShadow, { label: __('Box-Shadow'), value: rowShadow, onChange: function onChange(val) {
                                return setAttributes({ rowShadow: val });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(BorderRadius, {
                            label: __('Radius'),
                            value: borderRadius,
                            onChange: function onChange(val) {
                                return setAttributes({ borderRadius: val });
                            },
                            min: 0,
                            max: 100,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: this.state.device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(Separator, null),
                        React.createElement(Toggle, { label: __('Enable Overlay'), value: enableRowOverlay, onChange: function onChange(val) {
                                return setAttributes({ enableRowOverlay: val });
                            } }),
                        enableRowOverlay == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Background, { label: __('Overlay'), sources: ['image', 'gradient'], value: rowOverlay, onChange: function onChange(val) {
                                    return setAttributes({ rowOverlay: val });
                                } }),
                            rowOverlay.openBg == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(RangeControl, { beforeIcon: "lightbulb", label: __('Overlay Opacity'), min: .01, max: 1, step: .01, value: rowOpacity, onChange: function onChange(val) {
                                        return setAttributes({ rowOpacity: val });
                                    } }),
                                React.createElement(Select, { label: __('Overlay Blend Mode'), options: [['normal', __('Normal')], ['multiply', __('Multiply')], ['screen', __('Screen')], ['overlay', __('Overlay')], ['darken', __('Darken')], ['lighten', __('Lighten')], ['color-dodge', __('Color Dodge')], ['saturation', __('Saturation')], ['luminosity', __('Luminosity')], ['color', __('Color')], ['color-burn', __('Color Burn')], ['exclusion', __('Exclusion')], ['hue', __('Hue')]], value: rowBlend, onChange: function onChange(val) {
                                        return setAttributes({ rowBlend: val });
                                    } })
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { initialOpen: false, title: __('Shape Divider') },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Top Shape') },
                                React.createElement(Shape, { value: shapeTop, responsive: true, onChange: function onChange(val) {
                                        return setAttributes({ shapeTop: val });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Bottom Shape') },
                                React.createElement(Shape, { value: shapeBottom, onChange: function onChange(val) {
                                        return setAttributes({ shapeBottom: val });
                                    } })
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes)
                ),
                React.createElement(
                    InspectorAdvancedControls,
                    null,
                    React.createElement(Toggle, { label: __('Column Reverse'), responsive: true, value: rowReverse.values, onChange: function onChange(val) {
                            return setAttributes({ rowReverse: { values: val, openRowReverse: true } });
                        } }),
                    React.createElement(TextControl, { label: __('CSS ID'), value: rowId, onChange: function onChange(val) {
                            return setAttributes({ rowId: val });
                        } }),
                    globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes, true)
                ),
                React.createElement(
                    'div',
                    _extends({ className: 'qubely-section qubely-block-' + uniqueId + ' ' + (rowBg.bgimgParallax && rowBg.bgimgParallax == 'animated' ? 'qubely-section-parallax' : '') + (className ? ' ' + className : '') }, rowId ? { id: rowId } : ''),
                    React.createElement(
                        'div',
                        { className: 'qubley-padding-indicator' },
                        React.createElement(
                            'span',
                            { className: 'qubely-indicator-top', style: { height: padding.md.top ? padding.md.top + padding.unit : 0 } },
                            padding.md.top && padding.md.top > 20 ? padding.md.top + ' ' + padding.unit : ''
                        ),
                        React.createElement(
                            'span',
                            { className: 'qubely-indicator-right', style: { width: padding.md.right ? padding.md.right + padding.unit : 0 } },
                            padding.md.right && padding.md.right > 40 ? padding.md.right + ' ' + padding.unit : ''
                        ),
                        React.createElement(
                            'span',
                            { className: 'qubely-indicator-bottom', style: { height: padding.md.bottom ? padding.md.bottom + padding.unit : 0 } },
                            padding.md.bottom && padding.md.bottom > 20 ? padding.md.bottom + ' ' + padding.unit : ''
                        ),
                        React.createElement(
                            'span',
                            { className: 'qubely-indicator-left', style: { width: padding.md.left ? padding.md.left + padding.unit : 0 } },
                            padding.md.left && padding.md.left > 40 ? padding.md.left + ' ' + padding.unit : ''
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubley-margin-indicator' },
                        React.createElement(
                            'span',
                            { className: 'qubely-indicator-top', style: { height: marginTop.md ? marginTop.md + marginTop.unit : 0 } },
                            marginTop.md && marginTop.md > 20 ? marginTop.md + ' ' + marginTop.unit : ''
                        ),
                        React.createElement(
                            'span',
                            { className: 'qubely-indicator-bottom', style: { height: marginBottom.md ? marginBottom.md + marginBottom.unit : 0 } },
                            marginBottom.md && marginBottom.md > 20 ? marginBottom.md + ' ' + marginBottom.unit : ''
                        )
                    ),
                    Object.entries(shapeTop).length > 1 && shapeTop.openShape == 1 && shapeTop.style && React.createElement('div', { className: 'qubely-shape-divider qubely-top-shape', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[shapeTop.style] } }),
                    Object.entries(rowBg).length > 0 && rowBg.openBg == 1 && rowBg.bgType == 'video' && videoBackground(rowBg, 'row'),
                    Object.entries(shapeBottom).length > 1 && shapeBottom.openShape == 1 && shapeBottom.style && React.createElement('div', { className: 'qubely-shape-divider qubely-bottom-shape', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[shapeBottom.style] } }),
                    React.createElement('div', { className: 'qubely-row-overlay' }),
                    React.createElement(
                        'div',
                        { className: '' + (align == 'full' ? rowContainerWidth == 'boxed' ? 'qubely-container' : 'qubely-container-fluid' : 'qubely-container-fluid') },
                        React.createElement(
                            'div',
                            { className: 'qubely-row qubely-backend-row ' + (heightOptions == 'window' ? 'qubely-row-height-window' : '') },
                            React.createElement(InnerBlocks, { template: this.getTemplate(columns), templateLock: 'all', allowedBlocks: ['qubely/column'] })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = compose([withDispatch(function (dispatch) {
    var _dispatch = dispatch('core/block-editor'),
        removeBlock = _dispatch.removeBlock;

    return {
        removeBlock: removeBlock
    };
})])(Edit);

/***/ }),

/***/ "./src/blocks/row/Save.js":
/*!********************************!*\
  !*** ./src/blocks/row/Save.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ./style.scss */ "./src/blocks/row/style.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    videoBackground = _wp$qubelyComponents$.videoBackground;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, Save);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.getClassName = function () {
			var _this$props$attribute = _this.props.attributes,
			    align = _this$props$attribute.align,
			    childRow = _this$props$attribute.childRow,
			    rowContainerWidth = _this$props$attribute.rowContainerWidth;

			var wrapperClassName = align ? align === 'full' && rowContainerWidth == 'boxed' ? 'qubely-container' : 'qubely-container-fluid' : childRow ? 'qubely-container-fluid' : 'qubely-container';
			return wrapperClassName;
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    animation = _props$attributes.animation,
			    rowId = _props$attributes.rowId,
			    rowBg = _props$attributes.rowBg,
			    shapeTop = _props$attributes.shapeTop,
			    shapeBottom = _props$attributes.shapeBottom,
			    heightOptions = _props$attributes.heightOptions;


			return React.createElement(
				'div',
				_extends({ className: 'qubely-section qubely-block-' + uniqueId + ' ' + (rowBg.bgimgParallax && rowBg.bgimgParallax == 'animated' ? 'qubely-section-parallax' : '') }, rowId ? { id: rowId } : '', animationAttr(animation)),
				Object.entries(shapeTop).length > 1 && shapeTop.openShape == 1 && shapeTop.style && React.createElement('div', { className: 'qubely-shape-divider qubely-top-shape', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[shapeTop.style] } }),
				Object.entries(rowBg).length > 0 && rowBg.openBg == 1 && rowBg.bgType == 'video' && videoBackground(rowBg, 'row'),
				Object.entries(shapeBottom).length > 1 && shapeBottom.openShape == 1 && shapeBottom.style && React.createElement('div', { className: 'qubely-shape-divider qubely-bottom-shape', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[shapeBottom.style] } }),
				React.createElement('div', { className: 'qubely-row-overlay' }),
				React.createElement(
					'div',
					{ className: this.getClassName() },
					React.createElement(
						'div',
						{ className: 'qubely-row ' + (heightOptions == 'window' ? 'qubely-row-height-window' : '') },
						React.createElement(InnerBlocks.Content, null)
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/row/column/Edit.js":
/*!***************************************!*\
  !*** ./src/blocks/row/column/Edit.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    ResizableBox = _wp$components.ResizableBox,
    IconButton = _wp$components.IconButton;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$blockEditor = wp.blockEditor,
    InnerBlocks = _wp$blockEditor.InnerBlocks,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var createBlock = wp.blocks.createBlock;
var _wp$data = wp.data,
    select = _wp$data.select,
    dispatch = _wp$data.dispatch;
var _wp$qubelyComponents = wp.qubelyComponents,
    Background = _wp$qubelyComponents.Background,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Range = _wp$qubelyComponents.Range,
    Separator = _wp$qubelyComponents.Separator,
    Dimension = _wp$qubelyComponents.Dimension,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;


$ = jQuery;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit() {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

        _this.state = {
            colWidth: { md: 0, sm: 0, xs: 0, device: 'md' },
            nextColWidth: { md: 0, sm: 0, xs: 0, device: 'md' },
            prevColWidth: { md: 0, sm: 0, xs: 0, device: 'md' },
            rowWidth: 0,
            absWidth: 0,
            maxResizeWidth: 0,
            maxWidth: 999999999,
            isHover: false,
            resizing: false,
            blockIndex: null,
            responsiveDevice: 'md',
            colWidthMax: 85
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
            if (typeof $ === 'undefined') {
                $ = jQuery;
            }
            this.updateColumnWidthAttribute();
        }

        /**
         * Update css and column width on initial render
         * Collect the nextColumnClientId and prevColumnClientId for better UX
         */

    }, {
        key: 'updateColumnWidthAttribute',
        value: function updateColumnWidthAttribute() {
            var _props2 = this.props,
                colWidth = _props2.attributes.colWidth,
                clientId = _props2.clientId;

            var _select = select('core/block-editor'),
                getPreviousBlockClientId = _select.getPreviousBlockClientId,
                getNextBlockClientId = _select.getNextBlockClientId;

            var currentColumn = $('#block-' + clientId);
            var rowWidth = currentColumn.parents('.qubely-backend-row').width();
            var nextBlockId = getNextBlockClientId(clientId);
            var prevBlockId = getPreviousBlockClientId(clientId);
            currentColumn.css({ width: colWidth.md + '%' });
            this.setState({ rowWidth: rowWidth, nextBlockId: nextBlockId, prevBlockId: prevBlockId, maxResizeWidth: rowWidth, colWidth: _extends({}, colWidth, { device: 'md' }) });
        }

        /**
         * 
         * @param {object} event 
         * @param {string} direction 
         * @param {dom} elt 
         * On Resize start get the previous|next column width
         * Calculate current column resize box based on row/parent element width
         * 
         * Set resizebox maxWidth by (next|prev+current) colum width 
         */

    }, {
        key: 'onResizeStartEvent',
        value: function onResizeStartEvent(event, direction, elt) {
            var _props3 = this.props,
                toggleSelection = _props3.toggleSelection,
                clientId = _props3.clientId,
                setAttributes = _props3.setAttributes;
            var _state = this.state,
                rowWidth = _state.rowWidth,
                nextColWidth = _state.nextColWidth,
                prevColWidth = _state.prevColWidth;

            toggleSelection(false);

            var editorSelector = select('core/block-editor');
            var colWidth = editorSelector.getBlockAttributes(clientId).colWidth;
            var nextBlockClientId = editorSelector.getNextBlockClientId(clientId);
            var prevBlockClientId = editorSelector.getPreviousBlockClientId(clientId);

            if (nextBlockClientId !== null) {
                nextColWidth.md = parseFloat(editorSelector.getBlockAttributes(nextBlockClientId).colWidth.md);
            }

            if (prevBlockClientId !== null) {
                prevColWidth.md = parseFloat(editorSelector.getBlockAttributes(prevBlockClientId).colWidth.md);
            }
            var maxResizeWidth = 0;
            if (direction === 'right' && nextBlockClientId !== null) {
                var resizeNextColWidth = nextColWidth.md / 100 * rowWidth - 100;
                var resizeCurrenColWidth = colWidth.md / 100 * rowWidth;
                maxResizeWidth = resizeNextColWidth + resizeCurrenColWidth;
            }
            if (direction === 'left' && prevBlockClientId !== null) {
                var resizePrevColWidth = prevColWidth.md / 100 * rowWidth - 100;
                var _resizeCurrenColWidth = colWidth.md / 100 * rowWidth;
                maxResizeWidth = resizePrevColWidth + _resizeCurrenColWidth;
            }
            // Every time select resize hanlder set the width
            setAttributes({ colWidth: colWidth });
            var clmRect = document.getElementById('block-' + clientId).getBoundingClientRect();
            this.setState({ colWidth: colWidth, prevColWidth: prevColWidth, nextColWidth: nextColWidth, maxResizeWidth: maxResizeWidth, resizing: true, absWidth: clmRect.width });
        }

        /**
         * 
         * @param {object} event 
         * @param {string} direction 
         * @param {dom} elt 
         * @param {string} delta 
         * 
         * Update column and resize box width onResize
         * 
         * If direction is Right then update next and current column width 
         * Calculate column width by (next+current)/100
         * 
         * If directin is left then update prev and current column width
         * Calculate colum width by (prev+current)/100 
         * 
         */

    }, {
        key: 'onResize',
        value: function onResize(event, direction, elt, delta) {
            var _state2 = this.state,
                colWidth = _state2.colWidth,
                nextColWidth = _state2.nextColWidth,
                rowWidth = _state2.rowWidth,
                absWidth = _state2.absWidth;
            var _props4 = this.props,
                clientId = _props4.clientId,
                setAttributes = _props4.setAttributes;

            var currentcolumnId = $('#block-' + clientId);
            var NextColumn = currentcolumnId.next();
            var currentBlockWidth = absWidth + delta.width;
            var calWidth = currentBlockWidth / rowWidth * 100;
            var diff = parseFloat(colWidth.md) - calWidth;

            var nextBlockWidth = 0;
            // If direction right then update next and current column
            if (direction === 'right') {
                if (NextColumn.length > 0) {
                    nextBlockWidth = parseFloat(nextColWidth.md) + diff;
                    if (nextBlockWidth > 10 && calWidth > 10) {
                        nextBlockWidth = Math.abs(nextBlockWidth);
                        NextColumn.css({ width: nextBlockWidth.toFixed(2) + '%' });
                        var editorSelector = select('core/block-editor');
                        var nextBlockClientId = editorSelector.getNextBlockClientId(clientId);
                        if (nextBlockClientId !== null) {
                            var nextBlock = editorSelector.getBlock(nextBlockClientId);
                            nextBlock.attributes.colWidth.md = nextBlockWidth.toFixed(2);
                        }
                    }
                }
            }
            currentcolumnId.find('.components-resizable-box__container').css({ width: 'auto' });
            if (nextBlockWidth > 10 && calWidth > 10) {
                currentcolumnId.css({ width: calWidth.toFixed(2) + '%' });
                setAttributes({ colWidth: _extends({}, colWidth, { md: calWidth.toFixed(2) }) });
            }
        }
    }, {
        key: 'onResizeStop',
        value: function onResizeStop(event, direction, elt, delta) {
            var toggleSelection = this.props.toggleSelection;

            toggleSelection(true);
            this.setState({ resizing: false });
        }

        /**
             * Updates the column count, including necessary revisions to child Column
             *
             * @param {string} updateType operation type 'add' || 'delete'
             */

    }, {
        key: 'updateColumns',
        value: function updateColumns(updateType) {
            var clientId = this.props.clientId;

            var _select2 = select('core/block-editor'),
                getBlockRootClientId = _select2.getBlockRootClientId,
                getBlock = _select2.getBlock,
                getBlocks = _select2.getBlocks,
                getBlockIndex = _select2.getBlockIndex;

            var _dispatch = dispatch('core/block-editor'),
                replaceInnerBlocks = _dispatch.replaceInnerBlocks,
                updateBlockAttributes = _dispatch.updateBlockAttributes;

            var rootClientId = getBlockRootClientId(clientId);
            var rootBlock = getBlock(rootClientId);
            var selectedBlockIndex = getBlockIndex(clientId, rootClientId);
            var columns = updateType === 'add' ? rootBlock.attributes.columns + 1 : rootBlock.attributes.columns - 1;
            var columnFixedWidth = parseFloat((100 / columns).toFixed(3));
            var equalWidth = _extends({}, this.state.colWidth, { md: columnFixedWidth, sm: 100, xs: 100 });

            var innerBlocks = [].concat(_toConsumableArray(getBlocks(rootClientId)));
            if (updateType === 'delete') {
                innerBlocks.splice(selectedBlockIndex, 1);
            } else {
                innerBlocks.splice(selectedBlockIndex + 1, 0, createBlock('qubely/column', { colWidth: equalWidth }));
            }

            replaceInnerBlocks(rootClientId, innerBlocks, false);

            updateBlockAttributes(rootClientId, Object.assign(rootBlock.attributes, { columns: columns }));

            getBlocks(rootClientId).forEach(function (block) {
                updateBlockAttributes(block.clientId, Object.assign(block.attributes, { colWidth: _extends({}, equalWidth) }));
                $('#block-' + block.clientId).css({ width: equalWidth.md + '%' }); //update next block width
            });
        }

        /**
         * Check current row columns status 
         * Return an object with column attributes and status
         */

    }, {
        key: 'checkColumnStatus',
        value: function checkColumnStatus() {
            var clientId = this.props.clientId;

            var _select3 = select('core/block-editor'),
                getBlockRootClientId = _select3.getBlockRootClientId,
                getPreviousBlockClientId = _select3.getPreviousBlockClientId,
                getNextBlockClientId = _select3.getNextBlockClientId,
                getBlockIndex = _select3.getBlockIndex,
                getBlock = _select3.getBlock;

            var rootClientId = getBlockRootClientId(clientId);
            var nextBlockId = getNextBlockClientId(clientId);
            var prevBlockId = getPreviousBlockClientId(clientId);
            var blockIndex = getBlockIndex(clientId, rootClientId);

            return { nextBlockId: nextBlockId, prevBlockId: prevBlockId, blockIndex: blockIndex };
        }
    }, {
        key: '_isActiveRow',
        value: function _isActiveRow() {
            var rootClientId = select('core/block-editor').getBlockRootClientId(this.props.clientId);
            var selected = select('core/block-editor').getSelectedBlock();
            if (selected && rootClientId && selected.clientId) {
                return rootClientId == selected.clientId ? true : false;
            } else {
                return false;
            }
        }
    }, {
        key: 'updateColumnWidth',
        value: function updateColumnWidth(colWidth) {
            var _props5 = this.props,
                clientId = _props5.clientId,
                setAttributes = _props5.setAttributes,
                attributes = _props5.attributes;

            this.setState({ colWidthMax: colWidth.device === 'md' ? 85 : 100, responsiveDevice: colWidth.device });
            if (colWidth.device && colWidth.device !== 'md') {
                setAttributes({ colWidth: _extends({}, colWidth) });
                return;
            }
            if (colWidth.md < 10) {
                return;
            }
            var currentcolumnId = $('#block-' + clientId);
            var NextColumn = currentcolumnId.next();
            var PrevColumn = currentcolumnId.prev();
            var calWidth = parseFloat(colWidth.md);
            var different = calWidth - parseFloat(attributes.colWidth.md);
            // If direction right then update next and current column

            var _select4 = select('core/block-editor'),
                getPreviousBlockClientId = _select4.getPreviousBlockClientId,
                getNextBlockClientId = _select4.getNextBlockClientId,
                getBlock = _select4.getBlock;

            var _dispatch2 = dispatch('core/block-editor'),
                updateBlockAttributes = _dispatch2.updateBlockAttributes;

            var nextColumnNewWidth = 0;
            if (NextColumn.length > 0) {
                var nextBlockClientId = getNextBlockClientId(clientId);
                if (nextBlockClientId !== null) {
                    var nextBlock = getBlock(nextBlockClientId);
                    nextColumnNewWidth = _extends({}, nextBlock.attributes.colWidth);
                    nextColumnNewWidth.md = parseFloat(nextColumnNewWidth.md) - different;
                    if (nextColumnNewWidth.md > 10 && calWidth > 10) {
                        NextColumn.css({ width: nextColumnNewWidth.md + '%' });
                        updateBlockAttributes(nextBlockClientId, Object.assign(nextBlock.attributes, { colWidth: _extends({}, nextColumnNewWidth) }));
                    }
                }
            } else if (PrevColumn.length > 0) {
                // If direction left then update prev and current column
                var prevBlockClientId = getPreviousBlockClientId(clientId);
                if (prevBlockClientId !== null) {
                    var prevBlock = getBlock(prevBlockClientId);
                    var prevColumnNewWidth = _extends({}, prevBlock.attributes.colWidth);
                    prevColumnNewWidth.md = parseFloat(prevColumnNewWidth.md) - different; //calWidth > 0 ? calWidth-parseFloat(prevColWidth.md) : parseFloat(prevColWidth.md)-calWidth
                    PrevColumn.css({ width: prevColumnNewWidth.md + '%' });
                    updateBlockAttributes(prevBlockClientId, Object.assign(prevBlock.attributes, { colWidth: _extends({}, prevColumnNewWidth) }));
                }
            }
            if (nextColumnNewWidth.md > 10 && calWidth > 10) {
                var newWidth = Math.abs(calWidth);
                currentcolumnId.css({ width: newWidth + '%' });
                setAttributes({ colWidth: _extends({}, colWidth) });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            document.getElementById("block-" + this.props.clientId).style.alignSelf = nextProps.attributes.position;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props6 = this.props,
                _props6$attributes = _props6.attributes,
                uniqueId = _props6$attributes.uniqueId,
                className = _props6$attributes.className,
                colWidth = _props6$attributes.colWidth,
                padding = _props6$attributes.padding,
                margin = _props6$attributes.margin,
                colBg = _props6$attributes.colBg,
                colBorder = _props6$attributes.colBorder,
                colRadius = _props6$attributes.colRadius,
                colShadow = _props6$attributes.colShadow,
                corner = _props6$attributes.corner,
                borderRadius = _props6$attributes.borderRadius,
                animation = _props6$attributes.animation,
                enablePosition = _props6$attributes.enablePosition,
                selectPosition = _props6$attributes.selectPosition,
                positionXaxis = _props6$attributes.positionXaxis,
                positionYaxis = _props6$attributes.positionYaxis,
                globalZindex = _props6$attributes.globalZindex,
                hideTablet = _props6$attributes.hideTablet,
                hideMobile = _props6$attributes.hideMobile,
                globalCss = _props6$attributes.globalCss,
                setAttributes = _props6.setAttributes,
                isSelected = _props6.isSelected,
                clientId = _props6.clientId;
            var _state3 = this.state,
                rowWidth = _state3.rowWidth,
                resizing = _state3.resizing,
                responsiveDevice = _state3.responsiveDevice;

            var _select5 = select('core/block-editor'),
                getBlockRootClientId = _select5.getBlockRootClientId,
                getBlockAttributes = _select5.getBlockAttributes;

            var rootClientId = getBlockRootClientId(clientId);
            var rootBlockAttributes = getBlockAttributes(rootClientId);
            var columns = void 0,
                nextBlockId = void 0,
                blockIndex = void 0;
            if (rootBlockAttributes) {
                var columnStatus = this.checkColumnStatus();
                columns = rootBlockAttributes.columns;
                nextBlockId = columnStatus.nextBlockId;
                blockIndex = columnStatus.blockIndex;
            }

            var resigingClass = 'qubely-column-resizer';
            if (nextBlockId !== null && isSelected) {
                resigingClass += ' is-selected-column';
            }
            if (resizing) {
                resigingClass += ' is-resizing';
            }

            var _select6 = select('core/block-editor'),
                getBlockOrder = _select6.getBlockOrder;

            var hasChildBlocks = getBlockOrder(clientId).length > 0;
            if (uniqueId) {
                CssGenerator(this.props.attributes, 'column', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    null,
                    React.createElement(
                        PanelBody,
                        { initialOpen: false, title: __('Dimension') },
                        React.createElement(
                            'div',
                            { className: columns === blockIndex + 1 && responsiveDevice === 'md' ? 'qubely-mb-20 disable-slide' : 'qubely-mb-20' },
                            React.createElement(Range, { label: __('Width'), value: colWidth, onChange: function onChange(val) {
                                    return _this2.updateColumnWidth(val);
                                }, min: 15, max: this.state.colWidthMax, unit: ['%'], responsive: true, device: this.state.responsiveDevice })
                        ),
                        React.createElement(Dimension, {
                            label: __('Padding'),
                            value: padding,
                            onChange: function onChange(val) {
                                return setAttributes({ padding: val });
                            },
                            min: 0,
                            max: 600,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: this.state.responsiveDevice,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ responsiveDevice: value });
                            }
                        }),
                        React.createElement(Dimension, {
                            label: __('Margin'),
                            value: margin,
                            onChange: function onChange(val) {
                                return setAttributes({ margin: val });
                            },
                            min: -600,
                            max: 600,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: this.state.responsiveDevice,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ responsiveDevice: value });
                            }
                        })
                    ),
                    React.createElement(
                        PanelBody,
                        { initialOpen: false, title: __('Design') },
                        React.createElement(Background, { label: __('Background'), sources: ['image', 'gradient'], value: colBg, onChange: function onChange(val) {
                                return setAttributes({ colBg: val });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(Border, { label: __('Border'), value: colBorder, onChange: function onChange(val) {
                                return setAttributes({ colBorder: val });
                            }, min: 0, max: 10 }),
                        React.createElement(Separator, null),
                        React.createElement(BoxShadow, { label: __('Box-Shadow'), value: colShadow, onChange: function onChange(val) {
                                return setAttributes({ colShadow: val });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(BorderRadius, { label: __('Radius'), value: borderRadius, onChange: function onChange(val) {
                                return setAttributes({ borderRadius: val });
                            }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: this.state.responsiveDevice, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ responsiveDevice: value });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        columns < 6 && React.createElement(IconButton, {
                            className: 'components-icon-button components-toolbar__control',
                            label: __('Add Column'),
                            onClick: function onClick() {
                                return _this2.updateColumns('add');
                            },
                            icon: 'plus'
                        }),
                        columns > 1 && React.createElement(IconButton, {
                            className: 'components-icon-button components-toolbar__control',
                            label: __('Delete Column'),
                            onClick: function onClick() {
                                return _this2.updateColumns('delete');
                            },
                            icon: 'trash'
                        })
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                rowWidth !== 0 && React.createElement(
                    ResizableBox,
                    {
                        className: resigingClass,
                        style: {},
                        size: {},
                        maxWidth: this.state.maxWidth,
                        enable: {
                            top: false,
                            right: true,
                            bottom: false,
                            left: false,
                            topRight: false,
                            bottomRight: false,
                            bottomLeft: false,
                            topLeft: false
                        },
                        minHeight: '10',
                        onResize: function onResize(event, direction, elt, delta) {
                            return _this2.onResize(event, direction, elt, delta);
                        },
                        onResizeStop: function onResizeStop(event, direction, elt, delta) {
                            return _this2.onResizeStop(event, direction, elt, delta);
                        },
                        onResizeStart: function onResizeStart(event, direction, elt) {
                            return _this2.onResizeStartEvent(event, direction, elt);
                        } },
                    React.createElement(
                        'div',
                        { className: 'qubely-column qubely-column-admin qubely-block-' + uniqueId + (className ? ' ' + className : ''), 'data-column-width': this.props.attributes.colWidth.md },
                        React.createElement(
                            'div',
                            { className: 'qubely-column-inner' },
                            React.createElement(InnerBlocks, {
                                templateLock: false,
                                renderAppender: hasChildBlocks ? undefined : function () {
                                    return React.createElement(InnerBlocks.ButtonBlockAppender, null);
                                }
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/row/column/Save.js":
/*!***************************************!*\
  !*** ./src/blocks/row/column/Save.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var animationAttr = wp.qubelyComponents.HelperFunction.animationAttr;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: "render",
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    animation = _props$attributes.animation;

			return React.createElement(
				"div",
				_extends({ className: "qubely-column qubely-column-front qubely-block-" + uniqueId }, animationAttr(animation)),
				React.createElement(
					"div",
					{ className: "qubely-column-inner" },
					React.createElement(InnerBlocks.Content, null)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/row/column/index.js":
/*!****************************************!*\
  !*** ./src/blocks/row/column/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/row/column/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/row/column/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/column', {
	title: __('Column'),
	description: 'Add flexibly resizable and customizable columns in your site.',
	category: 'qubely',
	icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-column.svg', alt: __('Column Block') }),
	parent: ['qubely/row'],
	supports: { inserter: false, reusable: false, html: false },
	attributes: _extends({
		uniqueId: { type: 'string', default: '' }
	}, globalAttributes, { // Global Settings
		// Dimension
		colWidth: { type: 'object', default: { md: 50, sm: 50, xs: 100, unit: '%', device: 'md' }, style: [{ selector: '{{QUBELY}}.qubely-column-front {flex:{{colWidth}};} {{QUBELY}}.qubely-column-front {max-width:{{colWidth}};}' }] },
		padding: {
			type: 'object',
			default: {
				md: {
					top: 0,
					right: 0,
					bottom: 0,
					left: 0
				},
				unit: 'px'
			},
			style: [{ selector: '{{QUBELY}} > .qubely-column-inner {padding: {{padding}};}' }]
		},

		margin: {
			type: 'object',
			default: {
				md: {
					top: 0,
					right: 0,
					bottom: 0,
					left: 0
				},
				unit: 'px'
			},
			style: [{ selector: '{{QUBELY}} > .qubely-column-inner {margin: {{margin}};}' }]
		},

		// Style
		colBg: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} > .qubely-column-inner' }] },
		colBorder: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} > .qubely-column-inner' }] },
		colShadow: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} > .qubely-column-inner' }] },

		borderRadius: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} > .qubely-column-inner' }] },

		// Responsive
		hideTablet: { type: 'boolean', default: false, style: [{ selector: '{{QUBELY}}{display:none;}' }] },
		hideMobile: { type: 'boolean', default: false, style: [{ selector: '{{QUBELY}}{display:none;}' }] },

		// Advanced Settings
		colZindex: { type: 'number', default: '', style: [{ selector: '{{QUBELY}} > .qubely-column-inner{z-index:{{colZindex}};}' }] },
		colCss: { type: 'string', default: '', style: [{ selector: '' }] }
	}),
	edit: _Edit2.default,
	save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/row/index.js":
/*!*********************************!*\
  !*** ./src/blocks/row/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/row/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/row/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var _wp$qubelyComponents = wp.qubelyComponents,
    _wp$qubelyComponents$ = _wp$qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    videoBackground = _wp$qubelyComponents$.videoBackground,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes;


var attributes = _extends({
    uniqueId: { type: 'string', default: '' }
}, globalAttributes, { // Global Settings
    columns: { type: 'number', default: '' },
    childRow: { type: 'boolean', default: false },
    // Dimension
    padding: {
        type: 'object',
        default: {
            md: {
                top: 70,
                right: 0,
                bottom: 70,
                left: 0
            },
            unit: 'px'
        },
        style: [{ selector: '{{QUBELY}}.qubely-section {padding: {{padding}};}' }]
    },

    marginTop: { type: 'object', default: { md: 0, unit: 'px' }, style: [{ selector: '{{QUBELY}}.qubely-section{ margin-top:  {{marginTop}}; }' }] },
    marginBottom: { type: 'object', default: { md: 0, unit: 'px' }, style: [{ selector: '{{QUBELY}}.qubely-section{ margin-bottom:  {{marginBottom}}; }' }] },

    rowGutter: {
        type: 'object', default: { md: 30, sm: 30, xs: 30, unit: 'px' }, style: [{
            selector: '{{QUBELY}} .qubely-container {padding-left: calc({{rowGutter}}/2); padding-right: calc({{rowGutter}}/2);}' + '{{QUBELY}} .qubely-row {margin-left: calc(-{{rowGutter}}/2); margin-right: calc(-{{rowGutter}}/2);}' + '{{QUBELY}} .qubely-row > .qubely-column {padding-left: calc({{rowGutter}}/2); padding-right: calc({{rowGutter}}/2);}' + '{{QUBELY}} .qubely-row * > [data-type="qubely/column"] {padding-left: calc({{rowGutter}}/2); padding-right: calc({{rowGutter}}/2);}' + '.components-resizable-box__container.qubely-column-resizer.is-selected-column > span > .components-resizable-box__handle, ' + 'div[data-type="qubely/row"].is-selected .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle,' + 'div[data-type="qubely/row"].is-resizing .components-resizable-box__container.qubely-column-resizer > span > .components-resizable-box__handle {right: calc(-{{rowGutter}}/2);}'
        }]
    },

    rowContainerWidth: {
        type: 'string',
        default: 'boxed'
    },

    rowContainer: {
        type: 'number',
        default: 1140,
        style: [{
            condition: [{ key: 'align', relation: '==', value: 'full' }, { key: 'rowContainerWidth', relation: '==', value: 'boxed' }],
            selector: '@media (min-width: 1200px) {{{QUBELY}} .qubely-container {max-width: {{rowContainer}}px;}}'
        }]
    },
    position: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-row, {{QUBELY}} .qubely-row .editor-block-list__layout {-webkit-box-align: {{position}}; -ms-flex-align: {{position}}; align-items: {{position}}; }' }] },

    // Background
    rowBg: { type: 'object', default: { bgimgPosition: 'center center', bgimgSize: 'cover', bgimgRepeat: 'no-repeat', bgDefaultColor: '#f5f5f5' }, style: [{ selector: '{{QUBELY}}.qubely-section' }] },
    heightOptions: { type: 'string', default: 'auto' },
    rowHeight: {
        type: 'object', default: {},
        style: [{
            condition: [{ key: 'heightOptions', relation: '==', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-row {min-height: {{rowHeight}};}'
        }]
    },

    borderRadius: {
        type: 'object', default: {},
        style: [{
            selector: '{{QUBELY}}.qubely-section, {{QUBELY}}.qubely-section .qubely-video-bg-wrap, {{QUBELY}}.qubely-section .qubely-row-overlay'
        }]
    },

    rowShadow: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}}.qubely-section' }] },
    border: {
        type: 'object', default: {},
        style: [{
            selector: '{{QUBELY}}.qubely-section'
        }]
    },

    // Overlay
    enableRowOverlay: { type: 'boolean', default: false },
    rowOverlay: {
        type: 'object',
        default: {},
        style: [{
            condition: [{ key: 'enableRowOverlay', relation: '==', value: true }],
            selector: '{{QUBELY}} >.qubely-row-overlay'
        }]
    },
    rowBlend: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} >.qubely-row-overlay { mix-blend-mode: {{rowBlend}}; }' }] },
    rowOpacity: { type: 'number', default: '.8', style: [{ selector: '{{QUBELY}} >.qubely-row-overlay {opacity: {{rowOpacity}}; }' }] },

    // Divider
    shapeTop: {
        type: 'object',
        default: {
            color: '#006fbf',
            width: { unit: '%' },
            height: { unit: 'px' }
        },
        style: [{ selector: '{{QUBELY}} .qubely-shape-divider.qubely-top-shape' }]
    },
    shapeBottom: {
        type: 'object',
        default: {
            color: '#006fbf',
            width: { unit: '%' },
            height: { unit: 'px' }
        },
        style: [{ selector: '{{QUBELY}} .qubely-shape-divider.qubely-bottom-shape' }]
    },

    // Responsive
    hideTablet: { type: 'boolean', default: false, style: [{ selector: '{{QUBELY}}.qubely-section{ display:none; }' }] },
    hideMobile: { type: 'boolean', default: false, style: [{ selector: '{{QUBELY}}.qubely-section{ display:none; }' }] },

    // Advanced Settings
    rowId: { type: 'string', default: '' },
    rowZindex: { type: 'number', default: '', style: [{ selector: '{{QUBELY}}.qubely-section{z-index:{{rowZindex}};}' }] },
    rowReverse: {
        type: 'object',
        default: { openRowReverse: false, values: {} },
        style: [{ selector: '{{QUBELY}}.qubely-section >.qubely-container >.qubely-row,{{QUBELY}}.qubely-section >.qubely-container-fluid >.qubely-row, {{QUBELY}} >.qubely-container-fluid >.qubely-row > .editor-inner-blocks > .editor-block-list__layout, {{QUBELY}} >.qubely-container >.qubely-row > .editor-inner-blocks > .editor-block-list__layout' }]
    },

    rowCss: { type: 'string', default: '', style: [{ selector: '' }] }
});

registerBlockType('qubely/row', {
    title: __('Row'),
    category: 'qubely',
    description: 'Include unique row and column layouts with Qubely Row.',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-row.svg', alt: __('Row Block') }),
    supports: { align: ['wide', 'center', 'full'] },
    keywords: [__('Row'), __('rw'), __('Layout')],
    example: {
        attributes: {}
    },
    attributes: attributes,
    edit: _Edit2.default,
    save: _Save2.default,
    deprecated: [{
        attributes: attributes,

        save: function save(props) {
            var _props$attributes = props.attributes,
                uniqueId = _props$attributes.uniqueId,
                animation = _props$attributes.animation,
                rowId = _props$attributes.rowId,
                rowBg = _props$attributes.rowBg,
                shapeTop = _props$attributes.shapeTop,
                shapeBottom = _props$attributes.shapeBottom,
                align = _props$attributes.align,
                heightOptions = _props$attributes.heightOptions,
                rowContainerWidth = _props$attributes.rowContainerWidth;

            return React.createElement(
                'div',
                _extends({ className: 'qubely-section qubely-block-' + uniqueId + ' ' + (rowBg.bgimgParallax && rowBg.bgimgParallax == 'animated' ? 'qubely-section-parallax' : '') }, rowId ? { id: rowId } : '', animationAttr(animation)),
                Object.entries(shapeTop).length > 1 && shapeTop.openShape == 1 && shapeTop.style && React.createElement('div', { className: 'qubely-shape-divider qubely-top-shape', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[shapeTop.style] } }),
                Object.entries(rowBg).length > 0 && rowBg.openBg == 1 && rowBg.bgType == 'video' && videoBackground(rowBg, 'row'),
                Object.entries(shapeBottom).length > 1 && shapeBottom.openShape == 1 && shapeBottom.style && React.createElement('div', { className: 'qubely-shape-divider qubely-bottom-shape', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[shapeBottom.style] } }),
                React.createElement('div', { className: 'qubely-row-overlay' }),
                React.createElement(
                    'div',
                    { className: '' + (align == 'full' ? rowContainerWidth == 'boxed' ? 'qubely-container' : 'qubely-container-fluid' : 'qubely-container-fluid') },
                    React.createElement(
                        'div',
                        { className: 'qubely-row ' + (heightOptions == 'window' ? 'qubely-row-height-window' : '') },
                        React.createElement(InnerBlocks.Content, null)
                    )
                )
            );
        }
    }]
});

/***/ }),

/***/ "./src/blocks/row/style.scss":
/*!***********************************!*\
  !*** ./src/blocks/row/style.scss ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/row/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/scss/style.scss":
/*!************************************!*\
  !*** ./src/blocks/scss/style.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/scss/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/socialicons/Edit.js":
/*!****************************************!*\
  !*** ./src/blocks/socialicons/Edit.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

var _IconSocialData = __webpack_require__(/*! ../../components/fields/assets/IconSocialData */ "./src/components/fields/assets/IconSocialData.js");

var _IconSocialData2 = _interopRequireDefault(_IconSocialData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar,
    Button = _wp$components.Button,
    Popover = _wp$components.Popover;
var _wp$qubelyComponents = wp.qubelyComponents,
    Styles = _wp$qubelyComponents.Styles,
    IconSelector = _wp$qubelyComponents.IconSelector,
    Toggle = _wp$qubelyComponents.Toggle,
    Separator = _wp$qubelyComponents.Separator,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Range = _wp$qubelyComponents.Range,
    Alignment = _wp$qubelyComponents.Alignment,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Border = _wp$qubelyComponents.Border,
    Padding = _wp$qubelyComponents.Padding,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$.handleContextMenu,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$2.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$2.animationSettings,
    interactionSettings = _wp$qubelyComponents$2.interactionSettings;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = {
            spacer: true,
            device: 'md',
            selectedLabel: -1,
            selectedItem: -1,
            showIconPicker: false
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(index, type, val) {
            var _props2 = this.props,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes;

            var socialIcons = [].concat(_toConsumableArray(attributes.socialIcons));
            socialIcons[index] ? socialIcons[index][type] = val : '';
            setAttributes({ socialIcons: socialIcons });
        }
    }, {
        key: 'insertItem',
        value: function insertItem() {
            var _props3 = this.props,
                attributes = _props3.attributes,
                setAttributes = _props3.setAttributes;

            var socialIcons = [].concat(_toConsumableArray(attributes.socialIcons));
            var newItem = { icon: 'fab fa-facebook', label: 'Facebook', id: 'facebook', url: '' };
            socialIcons.push(newItem);
            this.setState({ selectedItem: socialIcons.length - 1 });
            setAttributes({ socialIcons: socialIcons });
        }
    }, {
        key: 'removeItem',
        value: function removeItem() {
            var selectedItem = this.state.selectedItem;
            var _props4 = this.props,
                attributes = _props4.attributes,
                setAttributes = _props4.setAttributes;

            var socialIcons = [].concat(_toConsumableArray(attributes.socialIcons));
            socialIcons.splice(selectedItem, 1);
            this.setState({ selectedItem: -1 });
            setAttributes({ socialIcons: socialIcons });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _state = this.state,
                selectedItem = _state.selectedItem,
                selectedLabel = _state.selectedLabel,
                device = _state.device,
                showIconPicker = _state.showIconPicker;
            var _props5 = this.props,
                name = _props5.name,
                clientId = _props5.clientId,
                attributes = _props5.attributes,
                setAttributes = _props5.setAttributes,
                isSelected = _props5.isSelected;
            var uniqueId = attributes.uniqueId,
                className = attributes.className,
                alignment = attributes.alignment,
                socialIcons = attributes.socialIcons,
                iconLabel = attributes.iconLabel,
                layout = attributes.layout,
                useDefaultStyle = attributes.useDefaultStyle,
                iconSize = attributes.iconSize,
                iconSizeCustom = attributes.iconSizeCustom,
                iconSpacing = attributes.iconSpacing,
                iconBorderRadius = attributes.iconBorderRadius,
                labelSpacing = attributes.labelSpacing,
                labelTypography = attributes.labelTypography,
                iconColor = attributes.iconColor,
                iconColorHover = attributes.iconColorHover,
                IconBackground = attributes.IconBackground,
                IconBackgroundHover = attributes.IconBackgroundHover,
                iconPadding = attributes.iconPadding,
                iconBorder = attributes.iconBorder,
                iconBorderColorHover = attributes.iconBorderColorHover,
                animation = attributes.animation,
                enablePosition = attributes.enablePosition,
                selectPosition = attributes.selectPosition,
                positionXaxis = attributes.positionXaxis,
                positionYaxis = attributes.positionYaxis,
                globalZindex = attributes.globalZindex,
                hideTablet = attributes.hideTablet,
                hideMobile = attributes.hideMobile,
                globalCss = attributes.globalCss,
                interaction = attributes.interaction;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'socialicons', uniqueId);
            };

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __('Styles'), initialOpen: true },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 'fill', svg: _icons2.default.social_fill, label: __('Fill') }, { value: 'normal', svg: _icons2.default.social_normal, label: __('Normal') }]
                        }),
                        React.createElement(Toggle, { label: __('Default Styles'), value: useDefaultStyle, onChange: function onChange(val) {
                                return setAttributes({ useDefaultStyle: val });
                            } }),
                        React.createElement(Toggle, { label: __('Show Label'), value: iconLabel, onChange: function onChange(val) {
                                return setAttributes({ iconLabel: val });
                            } }),
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, disableJustify: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    !useDefaultStyle && React.createElement(
                        PanelBody,
                        { title: __('Design'), initialOpen: false },
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Color'), value: iconColor, onChange: function onChange(value) {
                                        return setAttributes({ iconColor: value });
                                    } }),
                                layout == 'fill' && React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(Color, { label: __('Background Color'), value: IconBackground, onChange: function onChange(value) {
                                            return setAttributes({ IconBackground: value });
                                        } }),
                                    React.createElement(Border, { label: __('Border'), value: iconBorder, onChange: function onChange(value) {
                                            return setAttributes({ iconBorder: value });
                                        }, max: 10, min: 0, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                            return _this2.setState({ device: value });
                                        } })
                                )
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Color'), value: iconColorHover, onChange: function onChange(value) {
                                        return setAttributes({ iconColorHover: value });
                                    } }),
                                layout == 'fill' && React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(Color, { label: __('Background Color'), value: IconBackgroundHover, onChange: function onChange(value) {
                                            return setAttributes({ IconBackgroundHover: value });
                                        } }),
                                    React.createElement(Color, { label: __('Border Color'), value: iconBorderColorHover, onChange: function onChange(value) {
                                            return setAttributes({ iconBorderColorHover: value });
                                        } })
                                )
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Icon'), initialOpen: false },
                        React.createElement(RadioAdvanced, {
                            label: __('Icon Size'),
                            options: [{ label: 'S', value: '16px', title: __('Small') }, { label: 'M', value: '22px', title: __('Medium') }, { label: 'L', value: '28px', title: __('Large') }, { icon: 'fas fa-cog', value: 'custom', title: __('Custom') }],
                            value: iconSize,
                            onChange: function onChange(value) {
                                return setAttributes({ iconSize: value });
                            } }),
                        iconSize == 'custom' && React.createElement(Range, {
                            label: __('Custom Size'),
                            value: iconSizeCustom,
                            onChange: function onChange(value) {
                                return setAttributes({ iconSizeCustom: value });
                            },
                            unit: ['px', 'em', '%'],
                            max: 100,
                            min: 10,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        layout == 'fill' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Padding, {
                                label: __('Padding'),
                                value: iconPadding,
                                onChange: function onChange(value) {
                                    return setAttributes({ iconPadding: value });
                                },
                                unit: ['px', 'em', '%'],
                                max: 150,
                                min: 0,
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Separator, null),
                            React.createElement(BorderRadius, {
                                label: __('Radius'),
                                value: iconBorderRadius,
                                onChange: function onChange(value) {
                                    return setAttributes({ iconBorderRadius: value });
                                },
                                min: 0,
                                max: 100, unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        ),
                        React.createElement(Separator, null),
                        React.createElement(Range, {
                            label: __('Spacing'),
                            value: iconSpacing,
                            onChange: function onChange(value) {
                                return setAttributes({ iconSpacing: value });
                            },
                            unit: ['px', 'em', '%'],
                            max: 50,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    iconLabel && React.createElement(
                        PanelBody,
                        { title: __('Label'), initialOpen: false },
                        React.createElement(Range, {
                            label: __('Spacing'),
                            value: labelSpacing,
                            onChange: function onChange(value) {
                                return setAttributes({ labelSpacing: value });
                            },
                            unit: ['px', 'em', '%'],
                            max: 30,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Typography, {
                            label: __('Typography'),
                            value: labelTypography,
                            onChange: function onChange(value) {
                                return setAttributes({ labelTypography: value });
                            },
                            disableLineHeight: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        {
                            onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            },
                            className: 'qubely-block-social-icons qubely-layout-' + layout + ' qubely-style-' + (useDefaultStyle ? 'default' : 'custom') },
                        React.createElement(
                            'ul',
                            { className: 'qubely-ul' },
                            socialIcons.map(function (item, index) {
                                return React.createElement(
                                    'li',
                                    { key: index, className: 'qubely-li qubely-social-item qubely-social-' + item.id, arealabel: item.label },
                                    React.createElement(
                                        'a',
                                        {
                                            onClick: function onClick(e) {
                                                e.preventDefault();
                                                _this2.setState({
                                                    selectedLabel: index,
                                                    selectedItem: showIconPicker ? selectedItem == index ? -1 : index : index,
                                                    showIconPicker: !showIconPicker
                                                });
                                            }
                                        },
                                        React.createElement('i', { className: 'qubely-social-icon ' + item.icon }),
                                        iconLabel && item.label && React.createElement(
                                            'div',
                                            { className: 'qubely-social-label', contenteditable: 'true', onBlur: function onBlur(e) {
                                                    return _this2.setSettings(selectedLabel, 'label', e.target.innerHTML);
                                                } },
                                            item.label
                                        )
                                    ),
                                    showIconPicker && selectedItem == index && isSelected && React.createElement(
                                        Fragment,
                                        null,
                                        React.createElement(
                                            Popover,
                                            {
                                                position: 'bottom center',
                                                className: 'qubely-socialicon-picker-popover'
                                            },
                                            React.createElement(
                                                'div',
                                                { className: 'qubely-socialicon-picker' },
                                                React.createElement(IconSelector, {
                                                    value: socialIcons[selectedItem].icon.value,
                                                    icons: _IconSocialData2.default,
                                                    enableSearch: true,
                                                    onChange: function onChange(val) {
                                                        _this2.setSettings(selectedItem, 'icon', val.value);
                                                        _this2.setSettings(selectedItem, 'label', val.name);
                                                        _this2.setSettings(selectedItem, 'id', val.id);
                                                    }
                                                }),
                                                React.createElement(TextControl, {
                                                    label: __('URL'),
                                                    value: socialIcons[selectedItem].url,
                                                    onChange: function onChange(val) {
                                                        return _this2.setSettings(selectedItem, 'url', val);
                                                    },
                                                    placeholder: __('URL')

                                                }),
                                                iconLabel && React.createElement(TextControl, {
                                                    label: __('Label'),
                                                    value: socialIcons[selectedItem].label,
                                                    onChange: function onChange(val) {
                                                        return _this2.setSettings(selectedItem, 'label', val);
                                                    },
                                                    placeholder: __('Enter icon label')
                                                }),
                                                React.createElement(
                                                    Button,
                                                    {
                                                        isDefault: true,
                                                        isLarge: true,
                                                        isPrimary: true,
                                                        className: 'qubely-action-social-icon-apply',
                                                        onClick: function onClick(e) {
                                                            return _this2.setState({ selectedItem: -1 });
                                                        } },
                                                    __('Apply')
                                                ),
                                                React.createElement(
                                                    Button,
                                                    {
                                                        isDefault: true,
                                                        isLarge: true,
                                                        className: 'qubely-action-social-icon-remove',
                                                        onClick: function onClick(e) {
                                                            return _this2.removeItem();
                                                        } },
                                                    __('Remove')
                                                )
                                            )
                                        )
                                    )
                                );
                            }),
                            React.createElement(
                                'span',
                                { onClick: function onClick() {
                                        return _this2.insertItem();
                                    }, className: 'qubely-social-icon-insert', role: 'button', arealabel: __('Add new icon') },
                                React.createElement('i', { className: 'qubely-social-icon fas fa-plus' })
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/socialicons/Save.js":
/*!****************************************!*\
  !*** ./src/blocks/socialicons/Save.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                socialIcons = _props$attributes.socialIcons,
                iconLabel = _props$attributes.iconLabel,
                layout = _props$attributes.layout,
                useDefaultStyle = _props$attributes.useDefaultStyle,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-social-icons ' + interactionClass + ' qubely-layout-' + layout + ' qubely-style-' + (useDefaultStyle ? 'default' : 'custom') },
                    React.createElement(
                        'ul',
                        { className: 'qubely-ul' },
                        socialIcons.map(function (item, index) {
                            return React.createElement(
                                'li',
                                { key: index, className: 'qubely-li qubely-social-item qubely-social-' + item.id, arealabel: item.label },
                                React.createElement(
                                    'a',
                                    { href: item.url || "#", target: '_blank', rel: 'nofollow noopener noreferrer' },
                                    React.createElement('i', { className: "qubely-social-icon " + item.icon }),
                                    iconLabel && item.label && React.createElement(
                                        'span',
                                        { className: 'qubely-social-label' },
                                        item.label
                                    )
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/socialicons/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/socialicons/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _registerBlockType;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/socialicons/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/socialicons/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/socialicons/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/socialicons', (_registerBlockType = {
    title: __('Social Icons'),
    description: '',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-social-icons.svg', alt: __('Social Icons Block') }),
    keywords: [__('Social Icons'), __('Social'), __('Icons')]
}, _defineProperty(_registerBlockType, 'description', __('Add all your social media profiles in one place with Qubely Social Icons.')), _defineProperty(_registerBlockType, 'example', {
    attributes: {}
}), _defineProperty(_registerBlockType, 'supports', {
    align: ['center', 'wide', 'full']
}), _defineProperty(_registerBlockType, 'attributes', _extends({
    uniqueId: { type: 'string', default: '' }
}, globalAttributes, { // Global Settings
    layout: { type: 'string', default: 'fill' },
    iconLabel: { type: 'boolean', default: true },
    useDefaultStyle: { type: 'boolean', default: true },
    alignment: { type: 'object', default: { md: 'left' }, style: [{ selector: '{{QUBELY}} .qubely-block-social-icons {text-align: {{alignment}};}' }] },
    spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
    socialIcons: {
        type: 'array', default: [{ icon: 'fab fa-facebook', label: 'Facebook', id: 'facebook', url: 'https://facebook.com/themeum' }, { icon: 'fab fa-twitter', label: 'Twitter', id: 'twitter', url: 'https://twitter.com/themeum' }, { icon: 'fab fa-linkedin', label: 'LinkedIn', id: 'linkedin', url: '' }, { icon: 'fab fa-youtube', label: 'YouTube', id: 'youtube', url: 'https://youtube.com/user/themeumwp' }, { icon: 'fab fa-dribbble', label: 'Dribbble', id: 'dribbble', url: 'https://dribbble.com/themeum' }]
    },

    // Icon
    iconSize: { type: 'string', default: '22px', style: [{ condition: [{ key: 'iconSize', relation: '!=', value: 'custom' }], selector: '{{QUBELY}} .qubely-social-item .qubely-social-icon {font-size: {{iconSize}}; height: {{iconSize}}; line-height: {{iconSize}}; width: {{iconSize}};}' }] },
    iconSizeCustom: { type: 'object', default: { md: 22, unit: 'px' }, style: [{ condition: [{ key: 'iconSize', relation: '==', value: 'custom' }], selector: '{{QUBELY}} .qubely-social-item .qubely-social-icon {font-size: {{iconSizeCustom}}; height: {{iconSizeCustom}}; line-height: {{iconSizeCustom}}; width: {{iconSizeCustom}};}' }] },
    iconPadding: {
        type: 'object',
        default: {
            openPadding: 1,
            paddingType: 'global',
            global: { md: 10 },
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'layout', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-social-icons .qubely-social-item a'
        }]
    },
    iconSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul {margin: calc(-{{iconSpacing}}/2);} {{QUBELY}} .qubely-block-social-icons .qubely-social-item {margin: calc({{iconSpacing}}/2);}' }] },
    iconBorderRadius: { type: 'object', default: { openBorderRadius: 1, radiusType: 'global', global: { md: 4 }, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-social-item a' }] },
    labelSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ condition: [{ key: 'iconLabel', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-social-item .qubely-social-label {margin-left: {{labelSpacing}};}' }] },
    labelTypography: { type: 'object', default: {}, style: [{ condition: [{ key: 'iconLabel', relation: '==', value: true }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-social-item .qubely-social-label' }] },

    // Custom Design
    iconColor: { type: 'string', default: '', style: [{ condition: [{ key: 'useDefaultStyle', relation: '==', value: false }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul li.qubely-social-item a {color: {{iconColor}};}' }] },
    iconColorHover: { type: 'string', default: '#333', style: [{ condition: [{ key: 'useDefaultStyle', relation: '==', value: false }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul li.qubely-social-item a:hover {color: {{iconColorHover}};}' }] },
    IconBackground: { type: 'string', default: '#e5e5e5', style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'useDefaultStyle', relation: '==', value: false }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul li.qubely-social-item a {background-color: {{IconBackground}};}' }] },
    IconBackgroundHover: { type: 'string', default: '', style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'useDefaultStyle', relation: '==', value: false }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul li.qubely-social-item a:hover {background-color: {{IconBackgroundHover}};}' }] },
    iconBorder: { type: 'object', default: {}, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'useDefaultStyle', relation: '==', value: false }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul li.qubely-social-item a' }] },
    iconBorderColorHover: { type: 'string', default: '', style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'useDefaultStyle', relation: '==', value: false }], selector: '{{QUBELY}} .qubely-block-social-icons .qubely-ul li.qubely-social-item a:hover {border-color: {{iconBorderColorHover}};}' }] },
    sourceOfCopiedStyle: { type: 'boolean', default: false }
})), _defineProperty(_registerBlockType, 'edit', _Edit2.default), _defineProperty(_registerBlockType, 'save', _Save2.default), _registerBlockType));

/***/ }),

/***/ "./src/blocks/socialicons/style.scss":
/*!*******************************************!*\
  !*** ./src/blocks/socialicons/style.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/socialicons/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/tabs/Edit.js":
/*!*********************************!*\
  !*** ./src/blocks/tabs/Edit.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$components = wp.components,
    Tooltip = _wp$components.Tooltip,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar;
var compose = wp.compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$blockEditor = wp.blockEditor,
    InnerBlocks = _wp$blockEditor.InnerBlocks,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Color = _wp$qubelyComponents.Color,
    IconList = _wp$qubelyComponents.IconList,
    Select = _wp$qubelyComponents.Select,
    Styles = _wp$qubelyComponents.Styles,
    Typography = _wp$qubelyComponents.Typography,
    Range = _wp$qubelyComponents.Range,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Alignment = _wp$qubelyComponents.Alignment,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Separator = _wp$qubelyComponents.Separator,
    Border = _wp$qubelyComponents.Border,
    Padding = _wp$qubelyComponents.Padding,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit(props) {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

		_this.updateTitles = function (value, index) {
			var _this$props = _this.props,
			    tabTitles = _this$props.attributes.tabTitles,
			    setAttributes = _this$props.setAttributes;

			var modifiedTitles = tabTitles.map(function (title, thisIndex) {
				if (index === thisIndex) {
					title = _extends({}, title, value);
				}
				return title;
			});
			setAttributes({ tabTitles: modifiedTitles });
		};

		_this.renderTabTitles = function () {
			var _this$props2 = _this.props,
			    _this$props2$attribut = _this$props2.attributes,
			    tabTitles = _this$props2$attribut.tabTitles,
			    iconPosition = _this$props2$attribut.iconPosition,
			    block = _this$props2.block,
			    clientId = _this$props2.clientId;

			var currentTabBlock = $('#block-' + clientId);
			var showIconPicker = _this.state.showIconPicker;

			return tabTitles.map(function (title, index) {
				return React.createElement(
					'span',
					{ className: 'qubely-tab-item ' + (_this.state.activeTab == index + 1 ? 'qubely-active' : '') },
					React.createElement(
						'span',
						{ className: 'qubely-tab-title ' + (title.iconName ? 'qubely-has-icon-' + iconPosition : ''), onClick: function onClick() {
								var activeTab = $('#block-' + block.innerBlocks[index].clientId, currentTabBlock);
								$('.qubely-tab-content.qubely-active', currentTabBlock).removeClass('qubely-active');
								activeTab.addClass("qubely-active");
								_this.setState({ activeTab: index + 1, initialRender: false, showIconPicker: !showIconPicker });
							},
							role: 'button'
						},
						title.iconName && (iconPosition == 'top' || iconPosition == 'left') && React.createElement('i', { className: 'qubely-tab-icon ' + title.iconName }),
						React.createElement(RichText, {
							key: 'editable',
							keepPlaceholderOnFocus: true,
							placeholder: __('Add Tab Title'),
							value: title.title,
							onChange: function onChange(value) {
								return _this.updateTitles({ title: value }, index);
							}
						}),
						title.iconName && iconPosition == 'right' && React.createElement('i', { className: 'qubely-tab-icon ' + title.iconName })
					),
					React.createElement(
						Tooltip,
						{ text: __('Delete this tab') },
						React.createElement(
							'span',
							{ className: 'qubely-action-tab-remove', onClick: function onClick() {
									return _this.deleteTab(index);
								}, role: 'button' },
							React.createElement('i', { className: 'fas fa-times' })
						)
					)
				);
			});
		};

		_this.deleteTab = function (tabIndex) {
			var activeTab = _this.state.activeTab;
			var _this$props3 = _this.props,
			    _this$props3$attribut = _this$props3.attributes,
			    tabTitles = _this$props3$attribut.tabTitles,
			    tabs = _this$props3$attribut.tabs,
			    setAttributes = _this$props3.setAttributes,
			    block = _this$props3.block,
			    removeBlock = _this$props3.removeBlock,
			    updateBlockAttributes = _this$props3.updateBlockAttributes,
			    clientId = _this$props3.clientId;

			var newItems = tabTitles.filter(function (item, index) {
				return index != tabIndex;
			});
			setAttributes({ tabTitles: newItems, tabs: tabs - 1 });
			var i = tabIndex + 1;
			while (i < tabs) {
				updateBlockAttributes(block.innerBlocks[i].clientId, Object.assign(block.innerBlocks[i].attributes, { id: block.innerBlocks[i].attributes.id - 1 }));
				i++;
			}

			removeBlock(block.innerBlocks[tabIndex].clientId);

			if (tabIndex + 1 === activeTab) {
				var currentTabBlock = $('#block-' + clientId);
				var nextActiveTab = $('#block-' + block.innerBlocks[tabIndex + 1 < tabs ? tabIndex + 1 : tabs >= 2 ? tabIndex - 1 : tabIndex].clientId, currentTabBlock);
				$('.qubely-active', currentTabBlock).removeClass('qubely-active');
				nextActiveTab.addClass("qubely-active");
				_this.setState({ activeTab: tabIndex == 0 ? 1 : tabIndex + 1 < tabs ? tabIndex + 1 : tabIndex, initialRender: false });
			}
			tabIndex + 1 < activeTab && _this.setState({ activeTab: activeTab - 1, initialRender: false });
		};

		_this.newTitles = function () {
			var _this$props$attribute = _this.props.attributes,
			    tabs = _this$props$attribute.tabs,
			    tabTitles = _this$props$attribute.tabTitles;

			var newTitles = JSON.parse(JSON.stringify(tabTitles));
			newTitles[tabs] = {
				title: __('Tab ' + (tabs + 1)),
				icon: {}
			};
			return newTitles;
		};

		_this.state = {
			device: 'md',
			initialRender: true,
			activeTab: 1,
			spacer: true,
			showIconPicker: false
		};
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    uniqueId = _props.attributes.uniqueId;

			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate(prevProps, prevState) {
			var _props2 = this.props,
			    tabs = _props2.attributes.tabs,
			    clientId = _props2.clientId,
			    block = _props2.block;


			if (!this.state.initialRender && prevProps.block.innerBlocks.length < block.innerBlocks.length) {
				var currentTabBlock = $('#block-' + clientId);
				var activeTab = $('#block-' + block.innerBlocks[tabs - 1].clientId, currentTabBlock);
				$('.qubely-active', currentTabBlock).removeClass('qubely-active');
				activeTab.addClass("qubely-active");
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    className = _props$attributes.className,
			    tabs = _props$attributes.tabs,
			    tabTitles = _props$attributes.tabTitles,
			    tabStyle = _props$attributes.tabStyle,
			    navSpacing = _props$attributes.navSpacing,
			    navSize = _props$attributes.navSize,
			    navPaddingX = _props$attributes.navPaddingX,
			    navPaddingY = _props$attributes.navPaddingY,
			    navAlignment = _props$attributes.navAlignment,
			    typography = _props$attributes.typography,
			    navColor = _props$attributes.navColor,
			    navColorActive = _props$attributes.navColorActive,
			    navBg = _props$attributes.navBg,
			    navBgActive = _props$attributes.navBgActive,
			    navBorder = _props$attributes.navBorder,
			    navBorderActive = _props$attributes.navBorderActive,
			    navBorderRadiusTabs = _props$attributes.navBorderRadiusTabs,
			    navBorderRadiusPills = _props$attributes.navBorderRadiusPills,
			    navUnderlineBorderWidth = _props$attributes.navUnderlineBorderWidth,
			    navUnderlineBorderColor = _props$attributes.navUnderlineBorderColor,
			    navUnderlineBorderColorActive = _props$attributes.navUnderlineBorderColorActive,
			    iconSize = _props$attributes.iconSize,
			    iconGap = _props$attributes.iconGap,
			    iconPosition = _props$attributes.iconPosition,
			    bodyBg = _props$attributes.bodyBg,
			    bodyPadding = _props$attributes.bodyPadding,
			    bodyBorder = _props$attributes.bodyBorder,
			    bodyBorderRadius = _props$attributes.bodyBorderRadius,
			    bodySeparatorHeight = _props$attributes.bodySeparatorHeight,
			    bodySeparatorColor = _props$attributes.bodySeparatorColor,
			    bodyTopSpacing = _props$attributes.bodyTopSpacing,
			    bodyShadow = _props$attributes.bodyShadow,
			    animation = _props$attributes.animation,
			    globalZindex = _props$attributes.globalZindex,
			    enablePosition = _props$attributes.enablePosition,
			    selectPosition = _props$attributes.selectPosition,
			    positionXaxis = _props$attributes.positionXaxis,
			    positionYaxis = _props$attributes.positionYaxis,
			    hideTablet = _props$attributes.hideTablet,
			    hideMobile = _props$attributes.hideMobile,
			    globalCss = _props$attributes.globalCss,
			    interaction = _props$attributes.interaction;
			var _props3 = this.props,
			    name = _props3.name,
			    setAttributes = _props3.setAttributes,
			    isSelected = _props3.isSelected;
			var _state = this.state,
			    activeTab = _state.activeTab,
			    device = _state.device;

			if (uniqueId) {
				CssGenerator(this.props.attributes, 'tabs', uniqueId);
			}
			var iterator = [],
			    index = 0;
			while (index < tabs) {
				iterator.push(index);
				index++;
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: __('Styles'), initialOpen: true },
						React.createElement(Styles, { value: tabStyle, onChange: function onChange(val) {
								return setAttributes({ tabStyle: val });
							},
							options: [{ value: 'tabs', svg: _icons2.default.tab_tabs, label: __('Tabs') }, { value: 'pills', svg: _icons2.default.tab_pills, label: __('Pills') }, { value: 'underline', svg: _icons2.default.tab_underline, label: __('Underline') }]
						}),
						React.createElement(Separator, null),
						React.createElement(Alignment, { label: __('Alignment'), value: navAlignment, alignmentType: 'content', onChange: function onChange(val) {
								return setAttributes({ navAlignment: val });
							}, disableJustify: true })
					),
					React.createElement(
						PanelBody,
						{ title: __('Nav'), initialOpen: false },
						React.createElement(RadioAdvanced, { label: __('Nav Size'),
							options: [{ label: 'S', value: '4px 12px', title: 'Small' }, { label: 'M', value: '6px 15px', title: 'Medium' }, { label: 'L', value: '10px 20px', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
							value: navSize, onChange: function onChange(value) {
								return setAttributes({ navSize: value });
							} }),
						navSize == 'custom' && React.createElement(
							Fragment,
							null,
							React.createElement(Range, { label: React.createElement('span', { className: 'dashicons dashicons-sort', title: 'X Spacing' }), value: navPaddingY, onChange: function onChange(value) {
									return setAttributes({ navPaddingY: value });
								}, unit: ['px', 'em', '%'], max: 100, min: 0, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(Range, { label: React.createElement('span', { className: 'dashicons dashicons-leftright', title: 'Y Spacing' }), value: navPaddingX, onChange: function onChange(value) {
									return setAttributes({ navPaddingX: value });
								}, unit: ['px', 'em', '%'], max: 100, min: 0, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						),
						React.createElement(Range, { label: __('Gap'), value: navSpacing, onChange: function onChange(value) {
								return setAttributes({ navSpacing: value });
							}, max: 50, min: 0, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						tabStyle == 'tabs' && React.createElement(
							Fragment,
							null,
							React.createElement(BorderRadius, { label: __('Radius'), value: navBorderRadiusTabs, onChange: function onChange(value) {
									return setAttributes({ navBorderRadiusTabs: value });
								}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						),
						tabStyle == 'pills' && React.createElement(
							Fragment,
							null,
							React.createElement(BorderRadius, { label: __('Radius'), value: navBorderRadiusPills, onChange: function onChange(value) {
									return setAttributes({ navBorderRadiusPills: value });
								}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						),
						tabStyle == 'underline' && React.createElement(Range, { label: __('Underline Height'), value: navUnderlineBorderWidth, onChange: function onChange(value) {
								return setAttributes({ navUnderlineBorderWidth: value });
							}, min: 1, max: 10, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(
							Tabs,
							null,
							React.createElement(
								Tab,
								{ tabTitle: __('Normal') },
								React.createElement(Color, { label: __('Color'), value: navColor, onChange: function onChange(value) {
										return setAttributes({ navColor: value });
									} }),
								tabStyle != 'underline' && React.createElement(
									Fragment,
									null,
									React.createElement(Color, { label: __('Background'), value: navBg, onChange: function onChange(value) {
											return setAttributes({ navBg: value });
										} }),
									React.createElement(Border, { label: __('Border'), value: navBorder, onChange: function onChange(value) {
											return setAttributes({ navBorder: value });
										}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
											return _this2.setState({ device: value });
										} })
								),
								tabStyle == 'underline' && React.createElement(
									Fragment,
									null,
									React.createElement(Color, { label: __('Line Color'), value: navUnderlineBorderColor, onChange: function onChange(value) {
											return setAttributes({ navUnderlineBorderColor: value });
										} })
								)
							),
							React.createElement(
								Tab,
								{ tabTitle: __('Active') },
								React.createElement(Color, { label: __('Color'), value: navColorActive, onChange: function onChange(value) {
										return setAttributes({ navColorActive: value });
									} }),
								tabStyle != 'underline' && React.createElement(
									Fragment,
									null,
									React.createElement(Color, { label: __('Background'), value: navBgActive, onChange: function onChange(value) {
											return setAttributes({ navBgActive: value });
										} }),
									React.createElement(Border, { label: __('Border'), value: navBorderActive, onChange: function onChange(value) {
											return setAttributes({ navBorderActive: value });
										}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
											return _this2.setState({ device: value });
										} })
								),
								tabStyle == 'underline' && React.createElement(
									Fragment,
									null,
									React.createElement(Color, { label: __('Line Color'), value: navUnderlineBorderColorActive, onChange: function onChange(value) {
											return setAttributes({ navUnderlineBorderColorActive: value });
										} })
								)
							)
						),
						React.createElement(Typography, { label: __('Typography'), value: typography, onChange: function onChange(value) {
								return setAttributes({ typography: value });
							}, disableLineHeight: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Icon'), initialOpen: false },
						React.createElement(IconList, {
							label: __('Icon'),
							value: tabTitles[activeTab - 1] && tabTitles[activeTab - 1].iconName,
							onChange: function onChange(value) {
								return _this2.updateTitles({ iconName: value }, activeTab - 1);
							} }),
						React.createElement(Select, {
							label: __('Icon Position'),
							options: [['left', __('Left')], ['right', __('Right')], ['top', __('Top')]],
							value: iconPosition,
							onChange: function onChange(value) {
								return setAttributes({ iconPosition: value });
							} }),
						React.createElement(Range, {
							label: __('Icon Size'),
							value: iconSize,
							onChange: function onChange(value) {
								return setAttributes({ iconSize: value });
							},
							unit: ['px', 'em', '%'],
							min: 5,
							max: 48,
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Range, {
							label: __('Icon Gap'),
							value: iconGap,
							onChange: function onChange(value) {
								return setAttributes({ iconGap: value });
							},
							unit: ['px', 'em', '%'],
							min: 0,
							max: 64,
							responsive: true,
							device: device,
							onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Body'), initialOpen: false },
						tabStyle == 'tabs' && React.createElement(
							Fragment,
							null,
							React.createElement(Color, { label: __('Background Color'), value: bodyBg, onChange: function onChange(value) {
									return setAttributes({ bodyBg: value });
								} }),
							React.createElement(Padding, { label: __('Padding'), value: bodyPadding, onChange: function onChange(value) {
									return setAttributes({ bodyPadding: value });
								}, unit: ['px', 'em', '%'], max: 100, min: 0, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						),
						tabStyle == 'underline' && React.createElement(
							Fragment,
							null,
							React.createElement(Range, { label: __('Separator Height'), value: bodySeparatorHeight, onChange: function onChange(value) {
									return setAttributes({ bodySeparatorHeight: value });
								}, min: 0, max: 5, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							bodySeparatorHeight.md > 0 && React.createElement(Color, { label: __('Separator Color'), value: bodySeparatorColor, onChange: function onChange(value) {
									return setAttributes({ bodySeparatorColor: value });
								} }),
							React.createElement(Separator, null)
						),
						tabStyle != 'tabs' && React.createElement(Range, { label: __('Spacing'), value: bodyTopSpacing, onChange: function onChange(value) {
								return setAttributes({ bodyTopSpacing: value });
							}, unit: ['px', 'em', '%'], max: 100, min: 0, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						tabStyle == 'tabs' && React.createElement(
							Fragment,
							null,
							React.createElement(Border, { label: __('Border'), separator: true, value: bodyBorder, onChange: function onChange(value) {
									return setAttributes({ bodyBorder: value });
								}, unit: ['px', 'em', '%'], max: 100, min: 0, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bodyShadow, onChange: function onChange(value) {
									return setAttributes({ bodyShadow: value });
								} }),
							React.createElement(BorderRadius, { label: __('Radius'), separator: true, value: bodyBorderRadius, onChange: function onChange(value) {
									return setAttributes({ bodyBorderRadius: value });
								}, unit: ['px', 'em', '%'], max: 100, min: 0, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					animationSettings(uniqueId, animation, setAttributes),
					interactionSettings(uniqueId, interaction, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
						}, this.props, {
							prevState: this.state
						}))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					React.createElement(
						'div',
						{ className: 'qubely-block-tab qubely-tab-style-' + tabStyle },
						React.createElement(
							'div',
							{ className: 'qubely-tab-nav qubely-alignment-' + navAlignment },
							this.renderTabTitles(),
							React.createElement(
								Tooltip,
								{ text: __('Add new tab') },
								React.createElement(
									'span',
									{ className: 'qubely-add-new-tab', onClick: function onClick() {
											_this2.setState({ activeTab: tabs + 1, initialRender: false });
											setAttributes({
												tabs: tabs + 1,
												tabTitles: _this2.newTitles()
											});
										}, role: 'button', areaLabel: __('Add new tab') },
									React.createElement('i', { className: 'fas fa-plus-circle' })
								)
							)
						),
						React.createElement(
							'div',
							{ className: 'qubely-tab-body' },
							React.createElement(InnerBlocks, {
								tagName: 'div',
								template: iterator.map(function (tabIndex) {
									return ['qubely/tab', { id: tabIndex + 1, customClassName: tabIndex == 0 ? 'qubely-tab-content qubely-active' : 'qubely-tab-content' }];
								}),
								templateLock: 'all',
								allowedBlocks: ['qubely/tab'] })
						)
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = compose([withSelect(function (select, ownProps) {
	var clientId = ownProps.clientId;

	var _select = select('core/block-editor'),
	    getBlock = _select.getBlock;

	return {
		block: getBlock(clientId)
	};
}), withDispatch(function (dispatch) {
	var _dispatch = dispatch('core/block-editor'),
	    insertBlock = _dispatch.insertBlock,
	    removeBlock = _dispatch.removeBlock,
	    updateBlockAttributes = _dispatch.updateBlockAttributes;

	return {
		insertBlock: insertBlock,
		removeBlock: removeBlock,
		updateBlockAttributes: updateBlockAttributes
	};
})])(Edit);

/***/ }),

/***/ "./src/blocks/tabs/Save.js":
/*!*********************************!*\
  !*** ./src/blocks/tabs/Save.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Save);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderTabTitles = function () {
            var _this$props$attribute = _this.props.attributes,
                tabTitles = _this$props$attribute.tabTitles,
                iconPosition = _this$props$attribute.iconPosition;


            return tabTitles.map(function (title, index) {
                return React.createElement(
                    'span',
                    { className: 'qubely-tab-item ' + (index == 0 ? 'qubely-active' : '') },
                    React.createElement(
                        'span',
                        { 'class': 'qubely-tab-title ' + (title.iconName ? 'qubely-has-icon-' + iconPosition : ''), role: 'button' },
                        title.iconName && (iconPosition == 'top' || iconPosition == 'left') && React.createElement('i', { className: 'qubely-tab-icon ' + title.iconName }),
                        title.title,
                        title.iconName && iconPosition == 'right' && React.createElement('i', { className: 'qubely-tab-icon ' + title.iconName })
                    )
                );
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                tabs = _props$attributes.tabs,
                tabStyle = _props$attributes.tabStyle,
                navAlignment = _props$attributes.navAlignment,
                animation = _props$attributes.animation,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
            var iterator = [],
                index = 0;
            while (index < tabs) {
                iterator.push(index);
                index++;
            }
            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-tab ' + interactionClass + ' qubely-tab-style-' + tabStyle },
                    React.createElement(
                        'div',
                        { className: 'qubely-tab-nav qubely-alignment-' + navAlignment },
                        this.renderTabTitles(iterator)
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-tab-body' },
                        React.createElement(InnerBlocks.Content, null)
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/tabs/index.js":
/*!**********************************!*\
  !*** ./src/blocks/tabs/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/tabs/style.scss");

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/tabs/Save.js");

var _Save2 = _interopRequireDefault(_Save);

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/tabs/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/tabs', {
    title: __('Tabs'),
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-tabs.svg', alt: __('Tabs Block') }),
    description: __('Showcase features in beautiful pre-designed tabs with Qubely Tabs.'),
    supports: {
        html: false,
        className: false,
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {
            tabTitles: [{ title: "Tab 1" }, { title: "Tab 2" }, { title: "Tab 3" }]
        },
        innerBlocks: [{
            name: 'qubely/tab',
            innerBlocks: [{
                name: 'qubely/heading',
                attributes: {
                    content: 'Qubely - A Full-fledged Gutenberg Builder',
                    alignment: { md: "center" }
                }
            }]
        }]
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, { // Global Settings
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        navAlignment: { type: 'string', default: 'left' },
        tabs: { type: 'number', default: 3 },
        tabStyle: { type: 'string', default: 'pills' },

        tabTitles: {
            type: 'array',
            default: [{ title: 'Tab 1' }, { title: 'Tab 2' }, { title: 'Tab 3' }]
        },

        typography: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title' }] },

        //icons
        iconPosition: { type: 'string', default: 'right' },
        iconSize: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-tab-icon {font-size: {{iconSize}}}' }] },
        iconGap: { type: 'object', default: { md: 8, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-tab-title.qubely-has-icon-left .qubely-tab-icon { margin-right: {{iconGap}}; } {{QUBELY}} .qubely-tab-title.qubely-has-icon-right .qubely-tab-icon  { margin-left: {{iconGap}};} {{QUBELY}} .qubely-tab-title.qubely-has-icon-top .qubely-tab-icon  { margin-bottom: {{iconGap}};}' }] },

        // Size
        navSize: {
            type: 'string', default: '6px 15px',
            style: [{
                condition: [{ key: 'navSize', relation: '!=', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title {padding: {{navSize}};}'
            }]
        },
        navPaddingY: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'navSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title {padding-top: {{navPaddingY}}; padding-bottom: {{navPaddingY}};}'
            }]
        },
        navPaddingX: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'navSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title {padding-left: {{navPaddingX}}; padding-right: {{navPaddingX}};}'
            }]
        },

        // Spacing
        navSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav {margin-left: calc(-{{navSpacing}}/2); margin-right: calc(-{{navSpacing}}/2);} {{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item {margin-left: calc({{navSpacing}}/2); margin-right: calc({{navSpacing}}/2);}' }] },

        //Color
        navColor: { type: 'string', default: '#999999', style: [{ selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title { color:{{navColor}}; }' }] },
        navBg: {
            type: 'string', default: '#F5F5F5',
            style: [{
                condition: [{ key: 'tabStyle', relation: '!=', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title {background-color: {{navBg}};}'
            }]
        },
        navColorActive: { type: 'string', default: '#2184F9', style: [{ selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item.qubely-active .qubely-tab-title { color:{{navColorActive}}; }' }] },
        navBgActive: {
            type: 'string', default: '#e5e5e5',
            style: [{
                condition: [{ key: 'tabStyle', relation: '!=', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item.qubely-active .qubely-tab-title {background-color : {{navBgActive}};} {{QUBELY}} .qubely-block-tab.qubely-tab-style-tabs .qubely-tab-nav .qubely-tab-item.qubely-active .qubely-tab-title:after {background-color : {{navBgActive}};}'
            }]
        },

        // Nav Border
        navBorder: {
            type: 'object',
            default: {
                widthType: 'global',
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '!=', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title'
            }]
        },
        navBorderActive: {
            type: 'object',
            default: {
                widthType: 'global',
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '!=', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item.qubely-active .qubely-tab-title'
            }]
        },

        // Underline Border
        navUnderlineBorderWidth: {
            type: 'object',
            default: {
                md: 3,
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title {border-bottom: {{navUnderlineBorderWidth}} solid transparent;}'
            }]
        },
        navUnderlineBorderColor: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item .qubely-tab-title { border-bottom-color:{{navUnderlineBorderColor}}; }'
            }]
        },
        navUnderlineBorderColorActive: {
            type: 'string', default: '#2184F9',
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-nav .qubely-tab-item.qubely-active .qubely-tab-title { border-bottom-color:{{navUnderlineBorderColorActive}}; }'
            }]
        },

        // Radius
        navBorderRadiusTabs: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'custom',
                custom: {
                    md: '4 4 0 0'
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab.qubely-tab-style-tabs .qubely-tab-nav .qubely-tab-item .qubely-tab-title'
            }]
        },

        navBorderRadiusPills: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global',
                global: {
                    md: 4
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'pills' }],
                selector: '{{QUBELY}} .qubely-block-tab.qubely-tab-style-pills .qubely-tab-nav .qubely-tab-item .qubely-tab-title'
            }]
        },

        // Body
        bodyBg: {
            type: 'string', default: '#FFFFFF',
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body {background-color: {{bodyBg}};}'
            }]
        },
        bodyPadding: {
            type: 'object',
            default: {
                openPadding: 1,
                paddingType: 'global',
                global: {
                    md: 20
                },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body'
            }]
        },
        bodyBorder: {
            type: 'object',
            default: {
                borderType: 'global'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body'
            }]
        },
        bodyShadow: {
            type: 'object', default: { horizontal: 2, vertical: 2, blur: 3, spread: '0' },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body'
            }]
        },
        bodyBorderRadius: {
            type: 'object',
            default: {
                radiusType: 'global'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body'
            }]
        },

        bodySeparatorHeight: {
            type: 'object',
            default: {
                md: 1,
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body {border-top: {{bodySeparatorHeight}} solid transparent;}'
            }]
        },
        bodySeparatorColor: {
            type: 'string', default: '#e5e5e5',
            style: [{
                condition: [{ key: 'tabStyle', relation: '==', value: 'underline' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body { border-top-color:{{bodySeparatorColor}}; }'
            }]
        },
        bodyTopSpacing: {
            type: 'object', default: { md: 20, unit: 'px' },
            style: [{
                condition: [{ key: 'tabStyle', relation: '!=', value: 'tabs' }],
                selector: '{{QUBELY}} .qubely-block-tab .qubely-tab-body {padding-top: {{bodyTopSpacing}};}'
            }]
        }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/tabs/style.scss":
/*!************************************!*\
  !*** ./src/blocks/tabs/style.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/tabs/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/tabs/tab/Edit.js":
/*!*************************************!*\
  !*** ./src/blocks/tabs/tab/Edit.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit() {
        _classCallCheck(this, Edit);

        return _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));
    }

    _createClass(Edit, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(InnerBlocks, { templateLock: false })
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/tabs/tab/Save.js":
/*!*************************************!*\
  !*** ./src/blocks/tabs/tab/Save.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var id = this.props.attributes.id;

            return React.createElement(
                'div',
                { className: 'qubely-tab-content ' + (id == 1 ? 'qubely-active' : '') },
                React.createElement(InnerBlocks.Content, null)
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/tabs/tab/index.js":
/*!**************************************!*\
  !*** ./src/blocks/tabs/tab/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/tabs/tab/Save.js");

var _Save2 = _interopRequireDefault(_Save);

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/tabs/tab/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


registerBlockType('qubely/tab', {
    title: __('Tab'),
    category: 'qubely',
    parent: ['qubely/tabs'],
    supports: {
        html: false,
        inserter: false,
        reusable: false
    },
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-tabs.svg', alt: __('Tabs Block') }),
    attributes: {
        uniqueId: { type: 'string', default: '' },
        id: { type: 'number', default: 1 },
        customClassName: { type: 'string', default: '' }
    },
    getEditWrapperProps: function getEditWrapperProps(attributes) {
        return { 'data-tab': attributes.id, className: 'wp-block editor-block-list__block block-editor-block-list__block ' + attributes.customClassName };
    },

    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/team/Edit.js":
/*!*********************************!*\
  !*** ./src/blocks/team/Edit.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Media = _wp$qubelyComponents.Media,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Range = _wp$qubelyComponents.Range,
    Separator = _wp$qubelyComponents.Separator,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Typography = _wp$qubelyComponents.Typography,
    Toggle = _wp$qubelyComponents.Toggle,
    Styles = _wp$qubelyComponents.Styles,
    Alignment = _wp$qubelyComponents.Alignment,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Color = _wp$qubelyComponents.Color,
    Border = _wp$qubelyComponents.Border,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Padding = _wp$qubelyComponents.Padding,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.handlePanelOpenings = function (panelName) {
            _this.setState(_extends({}, _this.state, { openPanelSetting: panelName }));
        };

        _this.state = { device: 'md', selector: true, spacer: true, openPanelSetting: '' };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                className = _props$attributes.className,
                layout = _props$attributes.layout,
                alignment = _props$attributes.alignment,
                name = _props$attributes.name,
                nameTypo = _props$attributes.nameTypo,
                nameColor = _props$attributes.nameColor,
                nameSpacing = _props$attributes.nameSpacing,
                enableDesignation = _props$attributes.enableDesignation,
                designation = _props$attributes.designation,
                designationTypo = _props$attributes.designationTypo,
                designationColor = _props$attributes.designationColor,
                designationSpacing = _props$attributes.designationSpacing,
                image = _props$attributes.image,
                image2x = _props$attributes.image2x,
                imageWidth = _props$attributes.imageWidth,
                imageSpacing = _props$attributes.imageSpacing,
                imageBorder = _props$attributes.imageBorder,
                imageBorderRadius = _props$attributes.imageBorderRadius,
                imageBoxShadow = _props$attributes.imageBoxShadow,
                enableDescription = _props$attributes.enableDescription,
                description = _props$attributes.description,
                descriptionTypo = _props$attributes.descriptionTypo,
                descriptionColor = _props$attributes.descriptionColor,
                descriptionSpacing = _props$attributes.descriptionSpacing,
                phone = _props$attributes.phone,
                email = _props$attributes.email,
                website = _props$attributes.website,
                infoSpacing = _props$attributes.infoSpacing,
                useInfoIcon = _props$attributes.useInfoIcon,
                infoIconSize = _props$attributes.infoIconSize,
                infoIconSizeCustom = _props$attributes.infoIconSizeCustom,
                infoIconSpacing = _props$attributes.infoIconSpacing,
                infoIconColor = _props$attributes.infoIconColor,
                infoTypo = _props$attributes.infoTypo,
                infoColor = _props$attributes.infoColor,
                showSociallinks = _props$attributes.showSociallinks,
                facebook = _props$attributes.facebook,
                twitter = _props$attributes.twitter,
                instagram = _props$attributes.instagram,
                linkedin = _props$attributes.linkedin,
                youtube = _props$attributes.youtube,
                github = _props$attributes.github,
                flickr = _props$attributes.flickr,
                pinterest = _props$attributes.pinterest,
                dribbble = _props$attributes.dribbble,
                behance = _props$attributes.behance,
                iconSize = _props$attributes.iconSize,
                iconSizeCustom = _props$attributes.iconSizeCustom,
                iconGutter = _props$attributes.iconGutter,
                iconSpacing = _props$attributes.iconSpacing,
                iconStyle = _props$attributes.iconStyle,
                iconUseDefaultStyle = _props$attributes.iconUseDefaultStyle,
                iconBorderRadius = _props$attributes.iconBorderRadius,
                iconColor = _props$attributes.iconColor,
                iconBackground = _props$attributes.iconBackground,
                iconBorder = _props$attributes.iconBorder,
                iconColorHover = _props$attributes.iconColorHover,
                iconBackgroundHover = _props$attributes.iconBackgroundHover,
                iconBorderColorHover = _props$attributes.iconBorderColorHover,
                overlayHeight = _props$attributes.overlayHeight,
                overlayBg = _props$attributes.overlayBg,
                overlayPaddingX = _props$attributes.overlayPaddingX,
                overlayPaddingY = _props$attributes.overlayPaddingY,
                contentPosition = _props$attributes.contentPosition,
                contentAlignment = _props$attributes.contentAlignment,
                contentBg = _props$attributes.contentBg,
                contentPadding = _props$attributes.contentPadding,
                contentBorder = _props$attributes.contentBorder,
                overlayAlignment = _props$attributes.overlayAlignment,
                bodyBg = _props$attributes.bodyBg,
                bodyPadding = _props$attributes.bodyPadding,
                bodyBorder = _props$attributes.bodyBorder,
                bodyBorderRadius = _props$attributes.bodyBorderRadius,
                bodyBoxShadow = _props$attributes.bodyBoxShadow,
                animation = _props$attributes.animation,
                globalZindex = _props$attributes.globalZindex,
                enablePosition = _props$attributes.enablePosition,
                selectPosition = _props$attributes.selectPosition,
                positionXaxis = _props$attributes.positionXaxis,
                positionYaxis = _props$attributes.positionYaxis,
                hideTablet = _props$attributes.hideTablet,
                hideMobile = _props$attributes.hideMobile,
                globalCss = _props$attributes.globalCss,
                interaction = _props$attributes.interaction;
            var _props2 = this.props,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                isSelected = _props2.isSelected;
            var _state = this.state,
                openPanelSetting = _state.openPanelSetting,
                device = _state.device;


            if (uniqueId) {
                CssGenerator(this.props.attributes, 'team', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: __(''), initialOpen: true },
                        React.createElement(Styles, { columns: 21, value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 1, svg: _icons2.default.team_1, label: __('Basic') }, { value: 2, svg: _icons2.default.team_2, label: __('Stack') }, { value: 3, svg: _icons2.default.team_3, label: __('Side by Side') }]
                        }),
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, disableJustify: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Image'), opened: 'Image' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Image' ? 'Image' : '');
                            } },
                        React.createElement(Media, { label: __('Team Member Image'), multiple: false, type: ['image'], panel: true, value: image, onChange: function onChange(val) {
                                return setAttributes({ image: val });
                            } }),
                        React.createElement(Media, { label: __('Team Member Image @2x'), multiple: false, type: ['image'], panel: true, value: image2x, onChange: function onChange(val) {
                                return setAttributes({ image2x: val });
                            } }),
                        layout != 2 && React.createElement(Range, { label: __('Image Width'), value: imageWidth, onChange: function onChange(val) {
                                return setAttributes({ imageWidth: val });
                            }, min: 32, max: 500, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        (layout == 1 || layout == 3) && React.createElement(Range, { label: __('Image Spacing'), value: imageSpacing, onChange: function onChange(val) {
                                return setAttributes({ imageSpacing: val });
                            }, min: 0, max: 500, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Border, {
                            responsive: true,
                            device: device,
                            value: imageBorder,
                            unit: ['px', 'em', '%'],
                            label: __('Border'),
                            onChange: function onChange(value) {
                                return setAttributes({ imageBorder: value });
                            },
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }),
                        React.createElement(BorderRadius, {
                            min: 0,
                            max: 100,
                            responsive: true,
                            device: device,
                            unit: ['px', 'em', '%'],
                            value: imageBorderRadius,
                            label: __('Border Radius'),
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            },
                            onChange: function onChange(val) {
                                return setAttributes({ imageBorderRadius: val });
                            }
                        }),
                        React.createElement(BoxShadow, {
                            label: __('Box-Shadow'),
                            value: imageBoxShadow,
                            onChange: function onChange(value) {
                                return setAttributes({ imageBoxShadow: value });
                            }
                        })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Name'), opened: 'Name' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Name' ? 'Name' : '');
                            } },
                        React.createElement(Typography, { label: 'Typography', value: nameTypo, onChange: function onChange(value) {
                                return setAttributes({ nameTypo: value });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(Color, { label: __('Color'), value: nameColor, onChange: function onChange(value) {
                                return setAttributes({ nameColor: value });
                            } }),
                        React.createElement(Range, { label: __('Spacing'), value: nameSpacing, onChange: function onChange(val) {
                                return setAttributes({ nameSpacing: val });
                            }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Designation'), opened: 'Designation' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Designation' ? 'Designation' : '');
                            } },
                        React.createElement(Toggle, { label: __('Enable'), value: enableDesignation, onChange: function onChange(val) {
                                return setAttributes({ enableDesignation: val });
                            } }),
                        enableDesignation == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Separator, null),
                            React.createElement(Typography, { label: 'Typography', value: designationTypo, onChange: function onChange(value) {
                                    return setAttributes({ designationTypo: value });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Separator, null),
                            React.createElement(Color, { label: __('Color'), value: designationColor, onChange: function onChange(value) {
                                    return setAttributes({ designationColor: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: designationSpacing, onChange: function onChange(val) {
                                    return setAttributes({ designationSpacing: val });
                                }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Description'), opened: 'Description' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Description' ? 'Description' : '');
                            } },
                        React.createElement(Toggle, { label: __('Enable'), value: enableDescription, onChange: function onChange(val) {
                                return setAttributes({ enableDescription: val });
                            } }),
                        enableDescription == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Typography, { label: 'Typography', value: descriptionTypo, onChange: function onChange(value) {
                                    return setAttributes({ descriptionTypo: value });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: descriptionColor, onChange: function onChange(value) {
                                    return setAttributes({ descriptionColor: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: descriptionSpacing, onChange: function onChange(val) {
                                    return setAttributes({ descriptionSpacing: val });
                                }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Information'), opened: 'Information' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Information' ? 'Information' : '');
                            } },
                        React.createElement(TextControl, { label: __('Phone'), value: phone, onChange: function onChange(val) {
                                return setAttributes({ phone: val });
                            } }),
                        React.createElement(TextControl, { label: __('Email'), value: email, onChange: function onChange(val) {
                                return setAttributes({ email: val });
                            } }),
                        React.createElement(TextControl, { label: __('Website'), value: website, onChange: function onChange(val) {
                                return setAttributes({ website: val });
                            } }),
                        (phone || email || website) && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Typography, { label: 'Typography', value: infoTypo, onChange: function onChange(value) {
                                    return setAttributes({ infoTypo: value });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: infoColor, onChange: function onChange(value) {
                                    return setAttributes({ infoColor: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: infoSpacing, onChange: function onChange(val) {
                                    return setAttributes({ infoSpacing: val });
                                }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Separator, null),
                            React.createElement(Toggle, { label: __('Use Icon'), value: useInfoIcon, onChange: function onChange(val) {
                                    return setAttributes({ useInfoIcon: val });
                                } }),
                            useInfoIcon == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(RadioAdvanced, { label: __('Icon Size'), value: infoIconSize, onChange: function onChange(value) {
                                        return setAttributes({ infoIconSize: value });
                                    },
                                    options: [{ label: 'S', value: '14px', title: 'Small' }, { label: 'M', value: '18px', title: 'Medium' }, { label: 'L', value: '24px', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }]
                                }),
                                infoIconSize == 'custom' && React.createElement(Range, { label: __('Custom Size'), value: infoIconSizeCustom, onChange: function onChange(val) {
                                        return setAttributes({ infoIconSizeCustom: val });
                                    }, min: 12, max: 300, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Color, { label: __('Color'), value: infoIconColor, onChange: function onChange(value) {
                                        return setAttributes({ infoIconColor: value });
                                    } }),
                                React.createElement(Range, { label: __('Icon Spacing'), value: infoIconSpacing, onChange: function onChange(val) {
                                        return setAttributes({ infoIconSpacing: val });
                                    }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Social'), opened: 'Social' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Social' ? 'Social' : '');
                            } },
                        React.createElement(Toggle, { label: __('Show Social-links'), value: showSociallinks, onChange: function onChange(val) {
                                return setAttributes({ showSociallinks: val });
                            } }),
                        showSociallinks && React.createElement(
                            Fragment,
                            null,
                            React.createElement(TextControl, { label: __('Facebook'), value: facebook, onChange: function onChange(val) {
                                    return setAttributes({ facebook: val });
                                } }),
                            React.createElement(TextControl, { label: __('Twitter'), value: twitter, onChange: function onChange(val) {
                                    return setAttributes({ twitter: val });
                                } }),
                            React.createElement(TextControl, { label: __('Instagram'), value: instagram, onChange: function onChange(val) {
                                    return setAttributes({ instagram: val });
                                } }),
                            React.createElement(TextControl, { label: __('Linkedin'), value: linkedin, onChange: function onChange(val) {
                                    return setAttributes({ linkedin: val });
                                } }),
                            React.createElement(TextControl, { label: __('Youtube'), value: youtube, onChange: function onChange(val) {
                                    return setAttributes({ youtube: val });
                                } }),
                            React.createElement(TextControl, { label: __('Github'), value: github, onChange: function onChange(val) {
                                    return setAttributes({ github: val });
                                } }),
                            React.createElement(TextControl, { label: __('Flickr'), value: flickr, onChange: function onChange(val) {
                                    return setAttributes({ flickr: val });
                                } }),
                            React.createElement(TextControl, { label: __('Pinterest'), value: pinterest, onChange: function onChange(val) {
                                    return setAttributes({ pinterest: val });
                                } }),
                            React.createElement(TextControl, { label: __('Dribbble'), value: dribbble, onChange: function onChange(val) {
                                    return setAttributes({ dribbble: val });
                                } }),
                            React.createElement(TextControl, { label: __('Behance'), value: behance, onChange: function onChange(val) {
                                    return setAttributes({ behance: val });
                                } }),
                            React.createElement(Separator, null),
                            React.createElement(Styles, { label: __('Icon Style'), value: iconStyle, onChange: function onChange(val) {
                                    return setAttributes({ iconStyle: val });
                                },
                                options: [{ value: 'fill', svg: _icons2.default.social_fill, label: __('Fill') }, { value: 'normal', svg: _icons2.default.social_normal, label: __('Normal') }]
                            }),
                            React.createElement(RadioAdvanced, { label: __('Icon Size'), value: iconSize, onChange: function onChange(value) {
                                    return setAttributes({ iconSize: value });
                                },
                                options: [{ label: 'S', value: '14px', title: 'Small' }, { label: 'M', value: '18px', title: 'Medium' }, { label: 'L', value: '24px', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }]
                            }),
                            iconSize == 'custom' && React.createElement(Range, { label: __('Custom Size'), value: iconSizeCustom, onChange: function onChange(val) {
                                    return setAttributes({ iconSizeCustom: val });
                                }, min: 12, max: 300, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            iconStyle == 'fill' && React.createElement(BorderRadius, {
                                label: __('Corner Radius'),
                                value: iconBorderRadius,
                                onChange: function onChange(value) {
                                    return setAttributes({ iconBorderRadius: value });
                                },
                                min: 0,
                                max: 100, unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: __('Gutter'), value: iconGutter, onChange: function onChange(val) {
                                    return setAttributes({ iconGutter: val });
                                }, min: 0, max: 40, unit: ['px', 'em'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: iconSpacing, onChange: function onChange(val) {
                                    return setAttributes({ iconSpacing: val });
                                }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Toggle, { label: __('Default Styles'), value: iconUseDefaultStyle, onChange: function onChange(val) {
                                    return setAttributes({ iconUseDefaultStyle: val });
                                } }),
                            !iconUseDefaultStyle && React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(Color, { label: __('Color'), value: iconColor, onChange: function onChange(value) {
                                            return setAttributes({ iconColor: value });
                                        } }),
                                    iconStyle == 'fill' && React.createElement(
                                        Fragment,
                                        null,
                                        React.createElement(Color, { label: __('Background Color'), value: iconBackground, onChange: function onChange(value) {
                                                return setAttributes({ iconBackground: value });
                                            } }),
                                        React.createElement(Border, { label: __('Border'), value: iconBorder, onChange: function onChange(value) {
                                                return setAttributes({ iconBorder: value });
                                            } })
                                    )
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Hover') },
                                    React.createElement(Color, { label: __('Color'), value: iconColorHover, onChange: function onChange(value) {
                                            return setAttributes({ iconColorHover: value });
                                        } }),
                                    iconStyle == 'fill' && React.createElement(
                                        Fragment,
                                        null,
                                        React.createElement(Color, { label: __('Background Color'), value: iconBackgroundHover, onChange: function onChange(value) {
                                                return setAttributes({ iconBackgroundHover: value });
                                            } }),
                                        React.createElement(Color, { label: __('Border Color'), value: iconBorderColorHover, onChange: function onChange(value) {
                                                return setAttributes({ iconBorderColorHover: value });
                                            } })
                                    )
                                )
                            )
                        )
                    ),
                    layout == 2 && React.createElement(
                        Fragment,
                        null,
                        React.createElement(
                            PanelBody,
                            { title: __('Overlay'), initialOpen: false },
                            React.createElement(RadioAdvanced, { label: __('Height'), value: overlayHeight, onChange: function onChange(value) {
                                    return setAttributes({ overlayHeight: value });
                                },
                                options: [{ label: 'Auto', value: 'auto', title: 'Auto' }, { label: '100%', value: 'fit', title: '100%' }]
                            }),
                            overlayHeight == 'fit' && React.createElement(RadioAdvanced, { label: __('Alignment'), value: overlayAlignment, onChange: function onChange(value) {
                                    return setAttributes({ overlayAlignment: value });
                                },
                                options: [{ label: 'Top', value: 'flex-start', title: 'Top' }, { label: 'Middle', value: 'center', title: 'Middle' }, { label: 'Bottom', value: 'flex-end', title: 'Bottom' }]
                            }),
                            React.createElement(ColorAdvanced, { label: __('Background'), value: overlayBg, onChange: function onChange(value) {
                                    return setAttributes({ overlayBg: value });
                                } }),
                            React.createElement(Range, { label: React.createElement('span', { className: 'dashicons dashicons-leftright', title: 'X Padding' }), value: overlayPaddingX, onChange: function onChange(val) {
                                    return setAttributes({ overlayPaddingX: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: React.createElement('span', { className: 'dashicons dashicons-sort', title: 'Y Padding' }), value: overlayPaddingY, onChange: function onChange(val) {
                                    return setAttributes({ overlayPaddingY: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    layout != 2 && React.createElement(
                        Fragment,
                        null,
                        React.createElement(
                            PanelBody,
                            { title: __('Content'), initialOpen: false },
                            layout == 3 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(RadioAdvanced, { label: __('Position'), value: contentPosition, onChange: function onChange(value) {
                                        return setAttributes({ contentPosition: value });
                                    },
                                    options: [{ label: 'Left', value: 'left', title: 'Left' }, { label: 'Right', value: 'right', title: 'Right' }]
                                }),
                                React.createElement(Alignment, { label: __('Alignment'), alignmentType: 'content', value: contentAlignment, onChange: function onChange(val) {
                                        return setAttributes({ contentAlignment: val });
                                    }, disableJustify: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            React.createElement(ColorAdvanced, { label: __('Background'), value: contentBg, onChange: function onChange(value) {
                                    return setAttributes({ contentBg: value });
                                } }),
                            React.createElement(Padding, { label: __('Padding'), value: contentPadding, onChange: function onChange(val) {
                                    return setAttributes({ contentPadding: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Border, { label: __('Border'), value: contentBorder, onChange: function onChange(val) {
                                    return setAttributes({ contentBorder: val });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Background'), initialOpen: false },
                        React.createElement(ColorAdvanced, { label: __('Background'), value: bodyBg, onChange: function onChange(value) {
                                return setAttributes({ bodyBg: value });
                            } }),
                        React.createElement(Padding, { label: __('Padding'), value: bodyPadding, onChange: function onChange(val) {
                                return setAttributes({ bodyPadding: val });
                            }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Border, { label: __('Border'), separator: true, value: bodyBorder, onChange: function onChange(value) {
                                return setAttributes({ bodyBorder: value });
                            }, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(BorderRadius, { label: __('Radius'), value: bodyBorderRadius, onChange: function onChange(val) {
                                return setAttributes({ bodyBorderRadius: val });
                            }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bodyBoxShadow, onChange: function onChange(value) {
                                return setAttributes({ bodyBoxShadow: value });
                            } })
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-team qubely-team-layout-' + layout, onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        React.createElement(
                            'div',
                            { className: 'qubely-team-image-wrapper', onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Image');
                                } },
                            image.url != undefined ? React.createElement('img', { className: 'qubely-team-image', src: image.url, srcset: image2x.url != undefined ? image.url + ' 1x, ' + image2x.url + ' 2x' : '', alt: name }) : React.createElement(
                                'div',
                                { className: 'qubely-image-placeholder' },
                                React.createElement('i', { className: 'far fa-image' })
                            )
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-team-content' },
                            React.createElement(
                                'div',
                                { className: 'qubely-team-content-inner' },
                                React.createElement(
                                    'div',
                                    { onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Name');
                                        } },
                                    React.createElement(RichText, {
                                        key: 'editable',
                                        tagName: 'span',
                                        className: 'qubely-team-name',
                                        keepPlaceholderOnFocus: true,
                                        placeholder: __('Add Name...'),
                                        onChange: function onChange(value) {
                                            return setAttributes({ name: value });
                                        },
                                        value: name })
                                ),
                                enableDesignation == 1 && React.createElement(
                                    'div',
                                    { className: 'qubely-team-designation-container', onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Designation');
                                        } },
                                    React.createElement(RichText, {
                                        key: 'editable',
                                        tagName: 'span',
                                        className: 'qubely-team-designation',
                                        keepPlaceholderOnFocus: true,
                                        placeholder: __('Add Designation...'),
                                        onChange: function onChange(value) {
                                            return setAttributes({ designation: value });
                                        },
                                        value: designation })
                                ),
                                enableDescription == 1 && React.createElement(
                                    'div',
                                    { onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Description');
                                        } },
                                    React.createElement(RichText, {
                                        key: 'editable',
                                        tagName: 'div',
                                        className: 'qubely-team-description',
                                        keepPlaceholderOnFocus: true,
                                        placeholder: __('Add Description...'),
                                        onChange: function onChange(value) {
                                            return setAttributes({ description: value });
                                        },
                                        value: description })
                                ),
                                (phone || email || website) && React.createElement(
                                    'div',
                                    { className: 'qubely-team-information', onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Information');
                                        } },
                                    phone && React.createElement(
                                        'div',
                                        { className: 'qubely-team-information-phone' },
                                        useInfoIcon && React.createElement('i', { className: 'qubely-info-icon fas fa-phone', 'aria-label': __('Phone') }),
                                        React.createElement(
                                            'span',
                                            null,
                                            phone
                                        )
                                    ),
                                    email && React.createElement(
                                        'div',
                                        { className: 'qubely-team-information-email' },
                                        useInfoIcon && React.createElement('i', { className: 'qubely-info-icon fas fa-envelope', 'aria-label': __('Email') }),
                                        React.createElement(
                                            'span',
                                            null,
                                            email
                                        )
                                    ),
                                    website && React.createElement(
                                        'div',
                                        { className: 'qubely-team-information-website' },
                                        useInfoIcon && React.createElement('i', { className: 'qubely-info-icon fas fa-globe', 'aria-label': __('Website') }),
                                        React.createElement(
                                            'span',
                                            null,
                                            React.createElement(
                                                'a',
                                                null,
                                                website
                                            )
                                        )
                                    )
                                ),
                                showSociallinks && (facebook || twitter || instagram || linkedin || youtube || github || flickr || pinterest || dribbble || behance) && React.createElement(
                                    'div',
                                    { className: 'qubely-team-social-links qubely-team-icon-layout-' + iconStyle + ' qubely-team-icon-style-' + (iconUseDefaultStyle == 1 ? 'default' : 'custom'), onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Social');
                                        } },
                                    facebook && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-facebook' },
                                        React.createElement('i', { className: 'fab fa-facebook' })
                                    ),
                                    twitter && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-twitter' },
                                        React.createElement('i', { className: 'fab fa-twitter' })
                                    ),
                                    instagram && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-instagram' },
                                        React.createElement('i', { className: 'fab fa-instagram' })
                                    ),
                                    linkedin && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-linkedin' },
                                        React.createElement('i', { className: 'fab fa-linkedin' })
                                    ),
                                    youtube && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-youtube' },
                                        React.createElement('i', { className: 'fab fa-youtube' })
                                    ),
                                    github && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-github' },
                                        React.createElement('i', { className: 'fab fa-github' })
                                    ),
                                    flickr && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-flickr' },
                                        React.createElement('i', { className: 'fab fa-flickr' })
                                    ),
                                    pinterest && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-pinterest' },
                                        React.createElement('i', { className: 'fab fa-pinterest' })
                                    ),
                                    dribbble && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-dribbble' },
                                        React.createElement('i', { className: 'fab fa-dribbble' })
                                    ),
                                    behance && React.createElement(
                                        'a',
                                        { className: 'qubely-team-social-behance' },
                                        React.createElement('i', { className: 'fab fa-behance' })
                                    )
                                )
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: this.props.name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/team/Save.js":
/*!*********************************!*\
  !*** ./src/blocks/team/Save.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    layout = _props$attributes.layout,
			    image = _props$attributes.image,
			    image2x = _props$attributes.image2x,
			    name = _props$attributes.name,
			    designation = _props$attributes.designation,
			    description = _props$attributes.description,
			    useInfoIcon = _props$attributes.useInfoIcon,
			    phone = _props$attributes.phone,
			    email = _props$attributes.email,
			    website = _props$attributes.website,
			    showSociallinks = _props$attributes.showSociallinks,
			    facebook = _props$attributes.facebook,
			    twitter = _props$attributes.twitter,
			    instagram = _props$attributes.instagram,
			    linkedin = _props$attributes.linkedin,
			    youtube = _props$attributes.youtube,
			    github = _props$attributes.github,
			    flickr = _props$attributes.flickr,
			    pinterest = _props$attributes.pinterest,
			    dribbble = _props$attributes.dribbble,
			    behance = _props$attributes.behance,
			    iconStyle = _props$attributes.iconStyle,
			    iconUseDefaultStyle = _props$attributes.iconUseDefaultStyle,
			    enableDesignation = _props$attributes.enableDesignation,
			    enableDescription = _props$attributes.enableDescription,
			    animation = _props$attributes.animation,
			    interaction = _props$attributes.interaction;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-team ' + interactionClass + ' qubely-team-layout-' + layout },
					React.createElement(
						'div',
						{ className: 'qubely-team-image-wrapper' },
						image.url != undefined ? React.createElement('img', { className: 'qubely-team-image', src: image.url, srcset: image2x.url != undefined ? image.url + ' 1x, ' + image2x.url + ' 2x' : '', alt: name }) : React.createElement(
							'div',
							{ className: 'qubely-image-placeholder' },
							React.createElement('i', { className: 'far fa-image' })
						)
					),
					React.createElement(
						'div',
						{ className: 'qubely-team-content' },
						React.createElement(
							'div',
							{ className: 'qubely-team-content-inner' },
							React.createElement(RichText.Content, { tagName: 'span', className: 'qubely-team-name', value: name }),
							enableDesignation == 1 && React.createElement(
								'div',
								{ className: 'qubely-team-designation-container' },
								React.createElement(RichText.Content, { tagName: 'span', className: 'qubely-team-designation', value: designation })
							),
							enableDescription == 1 && React.createElement(RichText.Content, { tagName: 'div', className: 'qubely-team-description', value: description }),
							(phone || email || website) && React.createElement(
								'div',
								{ className: 'qubely-team-information' },
								phone && React.createElement(
									'div',
									{ className: 'qubely-team-information-phone' },
									useInfoIcon && React.createElement('i', { className: 'qubely-info-icon fas fa-phone', 'aria-label': __('Phone') }),
									React.createElement(
										'span',
										null,
										phone
									)
								),
								email && React.createElement(
									'div',
									{ className: 'qubely-team-information-email' },
									useInfoIcon && React.createElement('i', { className: 'qubely-info-icon fas fa-envelope', 'aria-label': __('Email') }),
									React.createElement(
										'span',
										null,
										email
									)
								),
								website && React.createElement(
									'div',
									{ className: 'qubely-team-information-website' },
									useInfoIcon && React.createElement('i', { className: 'qubely-info-icon fas fa-globe', 'aria-label': __('Website') }),
									React.createElement(
										'span',
										null,
										React.createElement(
											'a',
											null,
											website
										)
									)
								)
							),
							showSociallinks && (facebook || twitter || instagram || linkedin || youtube || github || flickr || pinterest || dribbble || behance) && React.createElement(
								'div',
								{ className: 'qubely-team-social-links qubely-team-icon-layout-' + iconStyle + ' qubely-team-icon-style-' + (iconUseDefaultStyle == 1 ? 'default' : 'custom') },
								facebook && React.createElement(
									'a',
									{ href: facebook, className: 'qubely-team-social-facebook', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-facebook' })
								),
								twitter && React.createElement(
									'a',
									{ href: twitter, className: 'qubely-team-social-twitter', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-twitter' })
								),
								instagram && React.createElement(
									'a',
									{ href: instagram, className: 'qubely-team-social-instagram', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-instagram' })
								),
								linkedin && React.createElement(
									'a',
									{ href: linkedin, className: 'qubely-team-social-linkedin', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-linkedin' })
								),
								youtube && React.createElement(
									'a',
									{ href: youtube, className: 'qubely-team-social-youtube', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-youtube' })
								),
								github && React.createElement(
									'a',
									{ href: github, className: 'qubely-team-social-github', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-github' })
								),
								flickr && React.createElement(
									'a',
									{ href: flickr, className: 'qubely-team-social-flickr', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-flickr' })
								),
								pinterest && React.createElement(
									'a',
									{ href: pinterest, className: 'qubely-team-social-pinterest', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-pinterest' })
								),
								dribbble && React.createElement(
									'a',
									{ href: dribbble, className: 'qubely-team-social-dribbble', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-dribbble' })
								),
								behance && React.createElement(
									'a',
									{ href: behance, className: 'qubely-team-social-behance', target: '_blank', rel: 'noopener noreferrer' },
									React.createElement('i', { className: 'fab fa-behance' })
								)
							)
						)
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/team/index.js":
/*!**********************************!*\
  !*** ./src/blocks/team/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/team/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/team/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/team/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/team', {
    title: __('Team'),
    description: 'Display team member with social profiles.',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-team.svg', alt: __('Team Block') }),
    category: 'qubely',
    supports: {
        align: ['center', 'wide', 'full']
    },
    keywords: [__('Team'), __('profile')],
    example: {
        attributes: {
            contentBg: '',
            image: { url: 'http://qubely.io/wp-content/uploads/qubely-assets/demo/team1.jpg' }
        }
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        layout: { type: 'number', default: 1 },
        alignment: {
            type: 'object', default: { md: 'center' },
            style: [{
                selector: '{{QUBELY}} .qubely-block-team {text-align: {{alignment}};}'
            }]
        },
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },

        // Image
        image: { type: 'object', default: {} },
        image2x: { type: 'object', default: {} },
        imageWidth: {
            type: 'object', default: {},
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-image-wrapper {width: {{imageWidth}};} {{QUBELY}} .qubely-team-image-wrapper img {width: 100%;}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 3 }],
                selector: '{{QUBELY}} .qubely-block-team.qubely-team-layout-3 > div {flex: 0 0 {{imageWidth}}; max-width: {{imageWidth}}} {{QUBELY}} .qubely-team-image-wrapper img {width: 100%;}'
            }]
        },

        imageSpacing: {
            type: 'object', default: { md: 20, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-image-wrapper {margin-bottom: {{imageSpacing}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 3 }],
                selector: '{{QUBELY}} .qubely-team-image-wrapper {margin-right: {{imageSpacing}};}'
            }]
        },

        imageBorder: {
            type: 'object',
            default: {},
            style: [{
                selector: '{{QUBELY}} .qubely-team-image-wrapper img, {{QUBELY}} .qubely-team-image-wrapper .qubely-image-placeholder'
            }]
        },
        imageBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1
            },
            style: [{
                selector: '{{QUBELY}} .qubely-team-image-wrapper img, {{QUBELY}} .qubely-team-image-wrapper .qubely-image-placeholder'
            }]
        },
        imageBoxShadow: {
            type: 'object',
            default: {},
            style: [{
                selector: '{{QUBELY}} .qubely-team-image-wrapper img, {{QUBELY}} .qubely-team-image-wrapper .qubely-image-placeholder'
            }]
        },

        // Name
        name: { type: 'string', default: 'John Doe' },
        nameTypo: { type: 'object', default: { openTypography: 1, size: { md: 28, unit: 'px' }, height: { md: 32, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-team-name' }] },
        nameColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-team-name {color: {{nameColor}};}' }] },
        nameSpacing: {
            type: 'object',
            default: { md: 5, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-team-name {display:block;margin-bottom: {{nameSpacing}};}'
            }]
        },

        // Designation
        enableDesignation: {
            type: 'boolean', default: 1,
            style: [{
                condition: [{ key: 'enableDesignation', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-designation{display:block;}'
            }]
        },
        designation: { type: 'string', default: 'CREATIVE DESIGNER' },
        designationTypo: {
            type: 'object', default: { openTypography: 1, size: { md: 14, unit: 'px' } },
            style: [{
                condition: [{ key: 'enableDesignation', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-designation'
            }]
        },
        designationColor: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'enableDesignation', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-designation {color: {{designationColor}};}'
            }]
        },
        designationSpacing: {
            type: 'object', default: { md: 20, unit: 'px' },
            style: [{
                condition: [{ key: 'enableDesignation', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-designation-container {margin-bottom: {{designationSpacing}};}'
            }]
        },

        // Description
        enableDescription: { type: 'boolean', default: 0 },
        description: { type: 'string', default: 'Qubely team block is an amazing Gutenberg block to display team member with social and other relevant information.' },
        descriptionTypo: {
            type: 'object', default: { openTypography: 1, size: { md: 14, unit: 'px' } },
            style: [{
                condition: [{ key: 'enableDescription', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-description'
            }]
        },
        descriptionColor: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'enableDescription', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-description {color: {{descriptionColor}};}'
            }]
        },
        descriptionSpacing: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'enableDescription', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-team-description {margin-bottom: {{descriptionSpacing}};}'
            }]
        },

        // Social
        showSociallinks: { type: 'boolean', default: true },
        facebook: { type: 'string', default: 'https://facebook.com/themeum' },
        twitter: { type: 'string', default: 'https://twitter.com/themeum' },
        instagram: { type: 'string', default: '' },
        linkedin: { type: 'string', default: '' },
        youtube: { type: 'string', default: 'https://youtube.com/user/themeumwp' },
        github: { type: 'string', default: '' },
        flickr: { type: 'string', default: '' },
        pinterest: { type: 'string', default: '' },
        dribbble: { type: 'string', default: '' },
        behance: { type: 'string', default: '' },
        iconStyle: { type: 'string', default: 'normal' },
        iconUseDefaultStyle: { type: 'boolean', default: true },
        iconSize: {
            type: 'string', default: '14px',
            style: [{
                condition: [{ key: 'iconSize', relation: '!=', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a {font-size: {{iconSize}};}'
            }]
        },
        iconSizeCustom: {
            type: 'object', default: { md: 18, unit: 'px' },
            style: [{
                condition: [{ key: 'iconSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a {font-size: {{iconSizeCustom}};}'
            }]
        },
        iconGutter: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-team-social-links > a {margin: 0 calc({{iconGutter}}/2);}'
            }]
        },
        iconSpacing: {
            type: 'object', default: {},
            style: [{
                selector: '{{QUBELY}} .qubely-team-social-links {margin-top: {{iconSpacing}};}'
            }]
        },

        iconBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global',
                global: { md: 4 },
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'iconStyle', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a'
            }]
        },

        iconColor: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'iconUseDefaultStyle', relation: '==', value: false }],
                selector: '{{QUBELY}} .qubely-team-social-links>a {color: {{iconColor}};}'
            }]
        },
        iconColorHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'iconUseDefaultStyle', relation: '==', value: false }],
                selector: '{{QUBELY}} .qubely-team-social-links>a:hover {color: {{iconColorHover}};}'
            }]
        },
        iconBackground: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'iconUseDefaultStyle', relation: '==', value: false }, { key: 'iconStyle', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a {background-color: {{iconBackground}};}'
            }]
        },
        iconBackgroundHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'iconUseDefaultStyle', relation: '==', value: false }, { key: 'iconStyle', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a:hover {background-color: {{iconBackgroundHover}};}'
            }]
        },
        iconBorder: {
            type: 'object', default: {},
            style: [{
                condition: [{ key: 'iconUseDefaultStyle', relation: '==', value: false }, { key: 'iconStyle', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a'
            }]
        },
        iconBorderColorHover: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'iconUseDefaultStyle', relation: '==', value: false }, { key: 'iconStyle', relation: '==', value: 'fill' }],
                selector: '{{QUBELY}} .qubely-team-social-links>a:hover {border-color: {{iconBorderColorHover}};}'
            }]
        },

        // Information
        phone: { type: 'string', default: '' },
        email: { type: 'string', default: '' },
        website: { type: 'string', default: '' },
        infoSpacing: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-team-information >div:not(:last-child) {margin-bottom: {{infoSpacing}};}'
            }]
        },
        useInfoIcon: { type: 'boolean', default: false },
        infoIconSize: {
            type: 'string', default: '14px',
            style: [{
                condition: [{ key: 'useInfoIcon', relation: '==', value: true }, { key: 'infoIconSize', relation: '!=', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-team-information .qubely-info-icon {font-size: {{infoIconSize}};}'
            }]
        },
        infoIconSizeCustom: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                condition: [{ key: 'useInfoIcon', relation: '==', value: true }, { key: 'infoIconSize', relation: '==', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-team-information .qubely-info-icon {font-size: {{infoIconSizeCustom}};}'
            }]
        },
        infoIconSpacing: {
            type: 'object', default: { md: 10, unit: 'px' },
            style: [{
                selector: '{{QUBELY}} .qubely-team-information .qubely-info-icon {margin-right: {{infoIconSpacing}};}'
            }]
        },
        infoIconColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-team-information .qubely-info-icon {color: {{infoIconColor}};}' }] },
        infoTypo: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-team-information' }] },
        infoColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-team-information, {{QUBELY}} .qubely-team-information a {color: {{infoColor}};}' }] },

        //Overlay
        overlayHeight: {
            type: 'string', default: 'fit',
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 2 }, { key: 'overlayHeight', relation: '==', value: 'auto' }],
                selector: '{{QUBELY}} .qubely-team-content {bottom: 0;}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: 2 }, { key: 'overlayHeight', relation: '==', value: 'fit' }],
                selector: '{{QUBELY}} .qubely-team-content {top: 0; bottom: 0;}'
            }]
        },
        overlayAlignment: {
            type: 'string', default: 'center',
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 2 }, { key: 'overlayHeight', relation: '==', value: 'fit' }],
                selector: '{{QUBELY}} .qubely-team-content {-webkit-box-align: {{overlayAlignment}}; -ms-flex-align: {{overlayAlignment}}; align-items: {{overlayAlignment}};}'
            }]
        },
        overlayBg: {
            type: 'object', default: { type: 'color', openColor: 1, color: 'rgba(255, 255, 255, .9)' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 2 }],
                selector: '{{QUBELY}} .qubely-team-content'
            }]
        },
        overlayPaddingX: {
            type: 'object', default: { md: 20, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 2 }],
                selector: '{{QUBELY}} .qubely-team-content {padding-left: {{overlayPaddingX}}; padding-right: {{overlayPaddingX}};}'
            }]
        },
        overlayPaddingY: {
            type: 'object', default: { md: 20, unit: 'px' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 2 }],
                selector: '{{QUBELY}} .qubely-team-content {padding-top: {{overlayPaddingY}}; padding-bottom: {{overlayPaddingY}};}'
            }]
        },

        // Content
        contentPosition: {
            type: 'string', default: 'right',
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 3 }, { key: 'contentPosition', relation: '==', value: 'left' }],
                selector: '{{QUBELY}} .qubely-block-team {flex-direction: row-reverse; -webkit-flex-direction: row-reverse;} {{QUBELY}} .qubely-team-layout-3 .qubely-team-content {margin-right: auto;}'
            }]
        },
        contentAlignment: {
            type: 'object', default: { md: 'center' },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: 3 }],
                selector: '{{QUBELY}} .qubely-team-content {text-align: {{contentAlignment}};}'

            }]
        },
        contentPadding: {
            type: 'object',
            default: {
                openPadding: 1,
                paddingType: 'custom',
                custom: { md: '10 0 10 0' }
            },
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 2 }],
                selector: '{{QUBELY}} .qubely-team-content'
            }]
        },
        contentBg: {
            type: 'object', default: { type: 'color', openColor: 1, color: '#fff' },
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 2 }],
                selector: '{{QUBELY}} .qubely-team-content'
            }]
        },
        contentBorder: {
            type: 'object', default: { openBorder: 1, position: 'all', type: 'solid', width: 1, color: '#e5e5e5' },
            style: [{
                condition: [{ key: 'layout', relation: '!=', value: 2 }],
                selector: '{{QUBELY}} .qubely-team-content'
            }]
        },

        // Body
        bodyBg: {
            type: 'object', default: {},
            style: [{
                selector: '{{QUBELY}} .qubely-block-team'
            }]
        },
        bodyPadding: {
            type: 'object',
            default: {
                paddingType: 'global',
                global: {}
            },
            style: [{
                selector: '{{QUBELY}} .qubely-block-team'
            }]
        },
        bodyBorder: {
            type: 'object', default: {},
            style: [{
                selector: '{{QUBELY}} .qubely-block-team'
            }]
        },
        bodyBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1
            },
            style: [{
                selector: '{{QUBELY}} .qubely-block-team'
            }]
        },
        bodyBoxShadow: {
            type: 'object', default: {},
            style: [{
                selector: '{{QUBELY}} .qubely-block-team'
            }]
        },
        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/team/style.scss":
/*!************************************!*\
  !*** ./src/blocks/team/style.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/team/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/testimonial/Edit.js":
/*!****************************************!*\
  !*** ./src/blocks/testimonial/Edit.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    BlockControls = _wp$blockEditor.BlockControls,
    InspectorControls = _wp$blockEditor.InspectorControls,
    AlignmentToolbar = _wp$blockEditor.AlignmentToolbar;
var _wp$qubelyComponents = wp.qubelyComponents,
    Media = _wp$qubelyComponents.Media,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Range = _wp$qubelyComponents.Range,
    Color = _wp$qubelyComponents.Color,
    Typography = _wp$qubelyComponents.Typography,
    Toggle = _wp$qubelyComponents.Toggle,
    Separator = _wp$qubelyComponents.Separator,
    ColorAdvanced = _wp$qubelyComponents.ColorAdvanced,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Styles = _wp$qubelyComponents.Styles,
    Alignment = _wp$qubelyComponents.Alignment,
    Padding = _wp$qubelyComponents.Padding,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.handlePanelOpenings = function (panelName) {
            _this.setState(_extends({}, _this.state, { openPanelSetting: panelName }));
        };

        _this.state = {
            device: 'md',
            spacer: true,
            openPanelSetting: ''
        };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this,
                _React$createElement;

            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                layout = _props$attributes.layout,
                className = _props$attributes.className,
                message = _props$attributes.message,
                messageSpacingTop = _props$attributes.messageSpacingTop,
                messageSpacingBottom = _props$attributes.messageSpacingBottom,
                name = _props$attributes.name,
                nameColor = _props$attributes.nameColor,
                alignment = _props$attributes.alignment,
                designation = _props$attributes.designation,
                designationColor = _props$attributes.designationColor,
                showAvatar = _props$attributes.showAvatar,
                avatar = _props$attributes.avatar,
                avatar2x = _props$attributes.avatar2x,
                avatarAlt = _props$attributes.avatarAlt,
                avatarBorderRadius = _props$attributes.avatarBorderRadius,
                avatarSize = _props$attributes.avatarSize,
                avatarWidth = _props$attributes.avatarWidth,
                avatarHeight = _props$attributes.avatarHeight,
                avatarBorder = _props$attributes.avatarBorder,
                avatarSpacing = _props$attributes.avatarSpacing,
                avatarLayout = _props$attributes.avatarLayout,
                quoteIconColor = _props$attributes.quoteIconColor,
                quoteIconSize = _props$attributes.quoteIconSize,
                quoteIconSpacing = _props$attributes.quoteIconSpacing,
                nameTypo = _props$attributes.nameTypo,
                nameSpacing = _props$attributes.nameSpacing,
                messageTypo = _props$attributes.messageTypo,
                designationTypo = _props$attributes.designationTypo,
                starsSize = _props$attributes.starsSize,
                showRatings = _props$attributes.showRatings,
                ratingsColor = _props$attributes.ratingsColor,
                quoteIcon = _props$attributes.quoteIcon,
                ratings = _props$attributes.ratings,
                ratingsSpacing = _props$attributes.ratingsSpacing,
                bgPadding = _props$attributes.bgPadding,
                textColor = _props$attributes.textColor,
                bgColor = _props$attributes.bgColor,
                bgBorderRadius = _props$attributes.bgBorderRadius,
                border = _props$attributes.border,
                boxShadow = _props$attributes.boxShadow,
                boxShadowHover = _props$attributes.boxShadowHover,
                animation = _props$attributes.animation,
                globalZindex = _props$attributes.globalZindex,
                enablePosition = _props$attributes.enablePosition,
                selectPosition = _props$attributes.selectPosition,
                positionXaxis = _props$attributes.positionXaxis,
                positionYaxis = _props$attributes.positionYaxis,
                hideTablet = _props$attributes.hideTablet,
                hideMobile = _props$attributes.hideMobile,
                globalCss = _props$attributes.globalCss,
                interaction = _props$attributes.interaction;
            var _props2 = this.props,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                isSelected = _props2.isSelected;
            var _state = this.state,
                openPanelSetting = _state.openPanelSetting,
                device = _state.device;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'testimonial', uniqueId);
            }

            var testimonialTitle = React.createElement(RichText, {
                key: 'editable',
                tagName: 'span',
                keepPlaceholderOnFocus: true,
                placeholder: __('Add Name...'),
                allowedFormats: ['bold', 'italic', 'link', 'strikethrough'],
                onChange: function onChange(value) {
                    return setAttributes({ name: value });
                },
                value: name
            });

            var testimonialDesignation = React.createElement(RichText, {
                key: 'editable',
                tagName: 'span',
                placeholder: __('Add designation...'),
                allowedFormats: ['bold', 'italic', 'link', 'strikethrough'],
                keepPlaceholderOnFocus: true,
                onChange: function onChange(value) {
                    return setAttributes({ designation: value });
                },
                value: designation
            });

            var testimonialContent = React.createElement(RichText, {
                key: 'editable',
                tagName: 'div',
                placeholder: __('Add Message...'),
                allowedFormats: ['bold', 'italic', 'link', 'strikethrough'],
                keepPlaceholderOnFocus: true,
                onChange: function onChange(value) {
                    return setAttributes({ message: value });
                },
                value: message
            });

            var authorInfo = React.createElement(
                Fragment,
                null,
                React.createElement(
                    'div',
                    { className: 'qubely-testimonial-author' },
                    React.createElement(
                        'div',
                        { className: showAvatar ? 'qubely-testimonial-avatar-layout-' + avatarLayout : '' },
                        showAvatar && (avatarLayout == 'left' || avatarLayout == 'top') && React.createElement(
                            Fragment,
                            null,
                            avatar.url != undefined ? React.createElement('img', { className: 'qubely-testimonial-avatar', src: avatar.url, srcset: avatar2x.url != undefined ? avatar.url + ' 1x, ' + avatar2x.url + ' 2x' : '', alt: avatarAlt, onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Avatar');
                                } }) : React.createElement(
                                'div',
                                { className: 'qubely-image-placeholder qubely-testimonial-avatar', onClick: function onClick() {
                                        return _this2.handlePanelOpenings('Avatar');
                                    } },
                                React.createElement('i', { className: 'far fa-user' })
                            )
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-testimonial-author-info' },
                            React.createElement(
                                'div',
                                { className: 'qubely-testimonial-author-name', onClick: function onClick() {
                                        return _this2.handlePanelOpenings('Name');
                                    } },
                                testimonialTitle
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-testimonial-author-designation', onClick: function onClick() {
                                        return _this2.handlePanelOpenings('Designation');
                                    } },
                                testimonialDesignation
                            )
                        ),
                        showAvatar && (avatarLayout == 'right' || avatarLayout == 'bottom') && React.createElement(
                            Fragment,
                            null,
                            avatar.url != undefined ? React.createElement('img', { className: 'qubely-testimonial-avatar', src: avatar.url, srcset: avatar2x.url != undefined ? avatar.url + ' 1x, ' + avatar2x.url + ' 2x' : '', alt: avatarAlt, onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Avatar');
                                } }) : React.createElement(
                                'div',
                                { className: 'qubely-image-placeholder qubely-testimonial-avatar', onClick: function onClick() {
                                        return _this2.handlePanelOpenings('Avatar');
                                    } },
                                React.createElement('i', { className: 'far fa-user' })
                            )
                        )
                    )
                )
            );

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '', initialOpen: true },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 1, svg: _icons2.default.testimonial_1, label: __('Layout 1') }, { value: 2, svg: _icons2.default.testimonial_2, label: __('Layout 2') }]
                        }),
                        React.createElement(Alignment, (_React$createElement = { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            } }, _defineProperty(_React$createElement, 'alignmentType', 'content'), _defineProperty(_React$createElement, 'disableJustify', true), _defineProperty(_React$createElement, 'responsive', true), _defineProperty(_React$createElement, 'device', device), _defineProperty(_React$createElement, 'onDeviceChange', function onDeviceChange(value) {
                            return _this2.setState({ device: value });
                        }), _React$createElement))
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Message'), opened: 'Message' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Message' ? 'Message' : '');
                            } },
                        React.createElement(Range, {
                            label: __('Top Spacing'),
                            value: messageSpacingTop, onChange: function onChange(value) {
                                return setAttributes({ messageSpacingTop: value });
                            },
                            unit: ['px', 'em', '%'], max: 300,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Range, {
                            label: __('Bottom Spacing'),
                            value: messageSpacingBottom, onChange: function onChange(value) {
                                return setAttributes({ messageSpacingBottom: value });
                            },
                            unit: ['px', 'em', '%'], max: 300,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Typography, {
                            label: __('Typography'),
                            value: messageTypo,
                            onChange: function onChange(value) {
                                return setAttributes({ messageTypo: value });
                            },
                            device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Name'), opened: 'Name' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Name' ? 'Name' : '');
                            } },
                        React.createElement(Range, {
                            label: __('Spacing'),
                            value: nameSpacing, onChange: function onChange(value) {
                                return setAttributes({ nameSpacing: value });
                            },
                            unit: ['px', 'em', '%'], max: 300,
                            min: 0,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Color, {
                            label: __('Color'),
                            value: nameColor, onChange: function onChange(value) {
                                return setAttributes({ nameColor: value });
                            }
                        }),
                        React.createElement(Typography, {
                            label: __('Typography'),
                            value: nameTypo,
                            onChange: function onChange(value) {
                                return setAttributes({ nameTypo: value });
                            },
                            device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Designation'), className: 'Designation' === openPanelSetting ? 'activePanel' : '', opened: 'Designation' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Designation' ? 'Designation' : '');
                            } },
                        React.createElement(Color, {
                            label: __('Color'),
                            value: designationColor, onChange: function onChange(value) {
                                return setAttributes({ designationColor: value });
                            }
                        }),
                        React.createElement(Typography, {
                            label: __('Typography'),
                            value: designationTypo,
                            onChange: function onChange(value) {
                                return setAttributes({ designationTypo: value });
                            },
                            device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Avatar'), opened: 'Avatar' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Avatar' ? 'Avatar' : '');
                            } },
                        React.createElement(Toggle, { label: __('Show Avatar'), value: showAvatar, onChange: function onChange(val) {
                                return setAttributes({ showAvatar: val });
                            } }),
                        showAvatar && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Media, {
                                label: __('Upload Avatar'), multiple: false, type: ['image'],
                                value: avatar, panel: true, onChange: function onChange(value) {
                                    return setAttributes({ avatar: value });
                                } }),
                            React.createElement(Media, {
                                label: __('Upload Avatar @2x'), multiple: false, type: ['image'],
                                value: avatar2x, panel: true, onChange: function onChange(value) {
                                    return setAttributes({ avatar2x: value });
                                } }),
                            avatar.url && React.createElement(TextControl, {
                                label: __('Alt Text (Alternative Text)'),
                                value: avatarAlt, onChange: function onChange(value) {
                                    return setAttributes({ avatarAlt: value });
                                } }),
                            React.createElement(Styles, { label: __('Avatar Layout'), value: avatarLayout, onChange: function onChange(val) {
                                    return setAttributes({ avatarLayout: val });
                                },
                                options: [{ value: 'left', svg: _icons2.default.avatar_left, label: __('Left') }, { value: 'right', svg: _icons2.default.avatar_right, label: __('Right') }, { value: 'top', svg: _icons2.default.avatar_top, label: __('Top') }, { value: 'bottom', svg: _icons2.default.avatar_bottom, label: __('Bottom') }]
                            }),
                            React.createElement(Separator, null),
                            React.createElement(RadioAdvanced, {
                                label: __('Avatar Size'),
                                options: [{ label: 'S', value: '48px', title: 'Small' }, { label: 'M', value: '64px', title: 'Medium' }, { label: 'L', value: '96px', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
                                value: avatarSize,
                                onChange: function onChange(value) {
                                    return setAttributes({ avatarSize: value });
                                }
                            }),
                            avatarSize == 'custom' && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Range, {
                                    label: React.createElement('span', { className: 'dashicons dashicons-leftright', title: 'Width' }),
                                    value: avatarWidth,
                                    onChange: function onChange(value) {
                                        return setAttributes({ avatarWidth: value });
                                    },
                                    unit: ['px', 'em', '%'],
                                    max: 300,
                                    min: 0,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    }
                                }),
                                React.createElement(Range, {
                                    label: React.createElement('span', { className: 'dashicons dashicons-sort', title: 'Height' }),
                                    value: avatarHeight,
                                    onChange: function onChange(value) {
                                        return setAttributes({ avatarHeight: value });
                                    },
                                    unit: ['px', 'em', '%'],
                                    max: 300,
                                    min: 0,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    }
                                })
                            ),
                            React.createElement(
                                Fragment,
                                null,
                                React.createElement(BorderRadius, {
                                    label: __('Radius'),
                                    value: avatarBorderRadius, onChange: function onChange(value) {
                                        return setAttributes({ avatarBorderRadius: value });
                                    },
                                    min: 0,
                                    max: 100,
                                    unit: ['px', 'em', '%'],
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Border, {
                                    label: __('Border'),
                                    value: avatarBorder,
                                    onChange: function onChange(value) {
                                        return setAttributes({ avatarBorder: value });
                                    },
                                    unit: ['px', 'em', '%'],
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    }
                                }),
                                React.createElement(Range, {
                                    label: __('Spacing'),
                                    value: avatarSpacing,
                                    onChange: function onChange(value) {
                                        return setAttributes({ avatarSpacing: value });
                                    },
                                    min: 0,
                                    max: 200,
                                    unit: ['px', 'em', '%'],
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Quote Icon'), opened: 'Quote Icon' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Quote Icon' ? 'Quote Icon' : '');
                            } },
                        React.createElement(RadioAdvanced, {
                            label: __('Icon'),
                            options: [{ icon: 'fas fa-ban', value: '' }, { icon: 'fas fa-quote-left', value: 'fas fa-quote-left' }],
                            value: quoteIcon,
                            onChange: function onChange(val) {
                                return setAttributes({ quoteIcon: val });
                            } }),
                        quoteIcon && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Color, {
                                label: __('Color'),
                                value: quoteIconColor, onChange: function onChange(value) {
                                    return setAttributes({ quoteIconColor: value });
                                } }),
                            React.createElement(Range, {
                                label: __('Size'),
                                value: quoteIconSize, onChange: function onChange(value) {
                                    return setAttributes({ quoteIconSize: value });
                                },
                                min: 10,
                                max: 150,
                                unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                }
                            }),
                            React.createElement(Range, {
                                label: __('Spacing'),
                                value: quoteIconSpacing, onChange: function onChange(value) {
                                    return setAttributes({ quoteIconSpacing: value });
                                },
                                min: 0,
                                max: 100,
                                unit: ['px', 'em', '%'],
                                responsive: true,
                                device: device,
                                onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Ratings'), opened: 'Ratings' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Ratings' ? 'Ratings' : '');
                            } },
                        React.createElement(Toggle, { label: __('Show Ratings'), value: showRatings, onChange: function onChange(val) {
                                return setAttributes({ showRatings: val });
                            } }),
                        showRatings && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, {
                                label: __('Ratings'),
                                value: ratings, onChange: function onChange(value) {
                                    return setAttributes({ ratings: value });
                                },
                                min: 0,
                                max: 5, step: .5 }),
                            ratings != 0 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Color, {
                                    label: __('Color'),
                                    value: ratingsColor,
                                    onChange: function onChange(value) {
                                        return setAttributes({ ratingsColor: value });
                                    } }),
                                React.createElement(Range, {
                                    label: __('Stars Size'),
                                    value: starsSize, onChange: function onChange(value) {
                                        return setAttributes({ starsSize: value });
                                    },
                                    unit: ['px', 'em', '%'],
                                    min: 10,
                                    max: 48,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Range, {
                                    label: __('Spacing'),
                                    value: ratingsSpacing, onChange: function onChange(value) {
                                        return setAttributes({ ratingsSpacing: value });
                                    },
                                    unit: ['px', 'em', '%'],
                                    min: 0,
                                    max: 200,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            )
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Design'), initialOpen: false },
                        React.createElement(Color, {
                            label: __('Text Color'),
                            value: textColor,
                            onChange: function onChange(val) {
                                return setAttributes({ textColor: val });
                            } }),
                        React.createElement(ColorAdvanced, {
                            label: __('Background'),
                            value: bgColor, onChange: function onChange(val) {
                                return setAttributes({ bgColor: val });
                            } }),
                        React.createElement(Separator, null),
                        React.createElement(Border, {
                            label: __('Border'),
                            value: border,
                            onChange: function onChange(val) {
                                return setAttributes({ border: val });
                            } }),
                        React.createElement(Padding, {
                            label: __('Padding'),
                            value: bgPadding, onChange: function onChange(value) {
                                return setAttributes({ bgPadding: value });
                            },
                            unit: ['px', 'em', '%'],
                            min: 0,
                            max: 100,
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(BorderRadius, {
                            label: __('Border Radius'),
                            value: bgBorderRadius,
                            onChange: function onChange(val) {
                                return setAttributes({ bgBorderRadius: val });
                            },
                            min: 0,
                            max: 100,
                            unit: ['px', 'em', '%'],
                            responsive: true,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(BoxShadow, {
                                    label: __('Box Shadow'),
                                    value: boxShadow, onChange: function onChange(val) {
                                        return setAttributes({ boxShadow: val });
                                    }
                                })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(BoxShadow, {
                                    label: __('Box Shadow'),
                                    value: boxShadowHover, onChange: function onChange(val) {
                                        return setAttributes({ boxShadowHover: val });
                                    }
                                })
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    ),
                    React.createElement(AlignmentToolbar, {
                        controls: ['left', 'center', 'right'],
                        value: alignment,
                        onChange: function onChange(value) {
                            setAttributes({ alignment: value });
                        }
                    })
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-testimonial', onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        layout == 2 && authorInfo,
                        showRatings && ratings > 0 && layout == 2 && React.createElement('div', { className: 'qubely-testimonial-ratings', 'data-qubelyrating': ratings, onClick: function onClick() {
                                return _this2.handlePanelOpenings('Ratings');
                            } }),
                        quoteIcon && layout == 1 && React.createElement(
                            'div',
                            { className: 'qubely-testimonial-quote', onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Quote Icon');
                                } },
                            React.createElement('span', { className: 'qubely-quote-icon ' + quoteIcon })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-testimonial-content', onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Message');
                                } },
                            testimonialContent
                        ),
                        showRatings && ratings > 0 && layout == 1 && React.createElement('div', { className: 'qubely-testimonial-ratings', 'data-qubelyrating': ratings, onClick: function onClick() {
                                return _this2.handlePanelOpenings('Ratings');
                            } }),
                        layout == 1 && authorInfo,
                        quoteIcon && layout == 2 && React.createElement(
                            'div',
                            { className: 'qubely-testimonial-quote qubely-position-bottom', onClick: function onClick() {
                                    return _this2.handlePanelOpenings('Quote Icon');
                                } },
                            React.createElement('span', { className: 'qubely-quote-icon ' + quoteIcon })
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: this.props.name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/testimonial/Save.js":
/*!****************************************!*\
  !*** ./src/blocks/testimonial/Save.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
    _inherits(Save, _Component);

    function Save() {
        _classCallCheck(this, Save);

        return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
    }

    _createClass(Save, [{
        key: 'render',
        value: function render() {
            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                layout = _props$attributes.layout,
                animation = _props$attributes.animation,
                message = _props$attributes.message,
                name = _props$attributes.name,
                designation = _props$attributes.designation,
                showAvatar = _props$attributes.showAvatar,
                avatar = _props$attributes.avatar,
                avatar2x = _props$attributes.avatar2x,
                avatarAlt = _props$attributes.avatarAlt,
                avatarLayout = _props$attributes.avatarLayout,
                quoteIcon = _props$attributes.quoteIcon,
                showRatings = _props$attributes.showRatings,
                ratings = _props$attributes.ratings,
                interaction = _props$attributes.interaction;

            var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

            var testimonialTitle = React.createElement(RichText.Content, { tagName: 'span', value: name });
            var testimonialDesignation = React.createElement(RichText.Content, { tagName: 'span', value: designation });
            var testimonialMessage = React.createElement(RichText.Content, { tagName: 'div', value: message });

            var authorInfo = React.createElement(
                Fragment,
                null,
                React.createElement(
                    'div',
                    { className: 'qubely-testimonial-author' },
                    React.createElement(
                        'div',
                        { className: showAvatar ? 'qubely-testimonial-avatar-layout-' + avatarLayout : '' },
                        showAvatar && (avatarLayout == 'left' || avatarLayout == 'top') && React.createElement(
                            Fragment,
                            null,
                            avatar.url != undefined ? React.createElement('img', { className: 'qubely-testimonial-avatar', src: avatar.url, srcset: avatar2x.url != undefined ? avatar.url + ' 1x, ' + avatar2x.url + ' 2x' : '', alt: avatarAlt }) : React.createElement(
                                'div',
                                { className: 'qubely-image-placeholder qubely-testimonial-avatar' },
                                React.createElement('i', { className: 'far fa-user' })
                            )
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-testimonial-author-info' },
                            React.createElement(
                                'div',
                                { className: 'qubely-testimonial-author-name' },
                                testimonialTitle
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-testimonial-author-designation' },
                                testimonialDesignation
                            )
                        ),
                        showAvatar && (avatarLayout == 'right' || avatarLayout == 'bottom') && React.createElement(
                            Fragment,
                            null,
                            avatar.url != undefined ? React.createElement('img', { className: 'qubely-testimonial-avatar', src: avatar.url, srcset: avatar2x.url != undefined ? avatar.url + ' 1x, ' + avatar2x.url + ' 2x' : '', alt: avatarAlt }) : React.createElement(
                                'div',
                                { className: 'qubely-image-placeholder qubely-testimonial-avatar' },
                                React.createElement('i', { className: 'far fa-user' })
                            )
                        )
                    )
                )
            );

            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-testimonial ' + interactionClass },
                    layout == 2 && authorInfo,
                    showRatings && ratings > 0 && layout == 2 && React.createElement('div', { className: 'qubely-testimonial-ratings', 'data-qubelyrating': ratings }),
                    quoteIcon && layout == 1 && React.createElement(
                        'div',
                        { className: 'qubely-testimonial-quote' },
                        React.createElement('span', { className: 'qubely-quote-icon ' + quoteIcon })
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-testimonial-content' },
                        testimonialMessage
                    ),
                    showRatings && ratings > 0 && layout == 1 && React.createElement('div', { className: 'qubely-testimonial-ratings', 'data-qubelyrating': ratings }),
                    layout == 1 && authorInfo,
                    quoteIcon && layout == 2 && React.createElement(
                        'div',
                        { className: 'qubely-testimonial-quote qubely-position-bottom' },
                        React.createElement('span', { className: 'qubely-quote-icon ' + quoteIcon })
                    )
                )
            );
        }
    }]);

    return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/testimonial/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/testimonial/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/testimonial/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/testimonial/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/testimonial/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/testimonial', {
    title: __('Testimonial'),
    description: 'Display testimonials from clients with Qubely Testimonials.',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-testimonial.svg', alt: __('Testimonial') }),
    category: 'qubely',
    keywords: [__('testimonial'), __('Quote')],
    supports: {
        align: ['center', 'wide', 'full']
    },
    example: {
        attributes: {}
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        alignment: { type: 'object', default: { md: 'center' }, style: [{ selector: '{{QUBELY}} .qubely-block-testimonial {text-align: {{alignment}};}' }] },
        layout: { type: 'number', default: 1 },

        //Name
        name: {
            type: 'string',
            source: 'html',
            selector: '.qubely-testimonial-author-name>span',
            default: 'JOHN DOE'
        },
        nameColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-testimonial-author-name { color:{{nameColor}}; }' }] },
        nameTypo: { type: 'object', default: { openTypography: 1, weight: 700, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-testimonial-author-name' }] },
        nameSpacing: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-testimonial-author-name {margin-bottom: {{nameSpacing}};}' }] },

        //Designation
        designation: {
            type: 'string',
            source: 'html',
            selector: '.qubely-testimonial-author-designation>span',
            default: 'WordPress Developer'
        },
        designationColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-testimonial-author-designation { color:{{designationColor}}; }' }] },
        designationTypo: { type: 'object', default: { openTypography: 1, size: { md: 14, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-testimonial-author-designation' }] },

        //Messsage
        message: {
            type: 'string',
            source: 'html',
            selector: '.qubely-testimonial-content>div',
            default: '“There’s no easier way to add innovative Gutenberg blocks than using Qubely Gutenberg Blocks Toolkit. Instantly raise your website appearance with this stylish new plugin.”'
        },
        messagePosition: { type: 'string', default: 'top' },
        messageTypo: { type: 'object', default: { openTypography: 1, size: { md: 20, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-testimonial-content' }] },
        messageSpacingTop: { type: 'object', default: { md: 0, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-testimonial-content {margin-top: {{messageSpacingTop}};}' }] },
        messageSpacingBottom: { type: 'object', default: { md: 20, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-testimonial-content {margin-bottom: {{messageSpacingBottom}};}' }] },

        //Avatar
        showAvatar: { type: 'boolean', default: true },
        avatar: { type: 'object', default: {} },
        avatar2x: { type: 'object', default: {} },
        avatarLayout: { type: 'string', default: 'left' },
        avatarAlt: { type: 'string', default: '' },
        avatarSize: {
            type: 'string',
            default: '64px',
            style: [{
                condition: [{ key: 'avatarSize', relation: '!=', value: 'custom' }],
                selector: '{{QUBELY}} .qubely-testimonial-avatar { width: {{avatarSize}}; height: {{avatarSize}}; font-size: {{avatarSize}}; }'
            }]
        },
        avatarWidth: { type: 'object', default: { md: 120, unit: 'px' }, style: [{ condition: [{ key: 'avatarSize', relation: '==', value: 'custom' }], selector: '{{QUBELY}} .qubely-testimonial-avatar {width: {{avatarWidth}}; font-size: {{avatarWidth}};}' }] },
        avatarHeight: { type: 'object', default: { md: 120, unit: 'px' }, style: [{ condition: [{ key: 'avatarSize', relation: '==', value: 'custom' }], selector: '{{QUBELY}} .qubely-testimonial-avatar {height: {{avatarHeight}};}' }] },
        avatarSpacing: {
            type: 'object',
            default: {
                md: 20,
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'avatarLayout', relation: '==', value: 'left' }],
                selector: '{{QUBELY}} .qubely-testimonial-avatar {margin-right: {{avatarSpacing}};}'
            }, {
                condition: [{ key: 'avatarLayout', relation: '==', value: 'right' }],
                selector: '{{QUBELY}} .qubely-testimonial-avatar {margin-left: {{avatarSpacing}};}'
            }, {
                condition: [{ key: 'avatarLayout', relation: '==', value: 'top' }],
                selector: '{{QUBELY}} .qubely-testimonial-avatar {margin-bottom: {{avatarSpacing}};}'
            }, {
                condition: [{ key: 'avatarLayout', relation: '==', value: 'bottom' }],
                selector: '{{QUBELY}} .qubely-testimonial-avatar {margin-top: {{avatarSpacing}};}'
            }]
        },
        avatarBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global',
                global: { md: 100 },
                unit: '%'
            },
            style: [{ selector: '{{QUBELY}} .qubely-testimonial-avatar' }]
        },

        avatarBorder: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-testimonial-avatar' }] },

        //Quote
        quoteIcon: { type: 'string', default: 'fas fa-quote-left' },
        quoteIconPosition: { type: 'string', default: 'top' },
        quoteIconSize: { type: 'object', default: { md: 48, unit: 'px' }, style: [{ condition: [{ key: 'quoteIcon', relation: '!=', value: '' }], selector: '{{QUBELY}} .qubely-quote-icon {font-size: {{quoteIconSize}};}' }] },
        quoteIconColor: { type: 'string', default: '#E2E2E2', style: [{ condition: [{ key: 'quoteIcon', relation: '!=', value: '' }], selector: '{{QUBELY}} .qubely-quote-icon {color: {{quoteIconColor}};}' }] },
        quoteIconSpacing: {
            type: 'object',
            default: {
                md: 20, unit: 'px'
            },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: '1' }, { key: 'quoteIcon', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-testimonial-quote {margin-bottom: {{quoteIconSpacing}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: '2' }, { key: 'quoteIcon', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-testimonial-quote {margin-top: {{quoteIconSpacing}};}'
            }]
        },

        //Ratings
        showRatings: { type: 'boolean', default: true },
        ratings: { type: 'string', default: 4.5 },
        ratingsPosition: { type: 'string', default: 'bottom' },
        ratingsColor: { type: 'string', default: '#FFB800', style: [{ condition: [{ key: 'ratings', relation: '!=', value: '0' }], selector: '{{QUBELY}} .qubely-testimonial-ratings:before {color: {{ratingsColor}};} {{QUBELY}} .qubely-testimonial-ratings {color: {{ratingsColor}};}' }] },
        starsSize: { type: 'object', default: { md: 20, unit: 'px' }, style: [{ condition: [{ key: 'ratings', relation: '!=', value: '0' }], selector: '{{QUBELY}} .qubely-testimonial-ratings {font-size:{{starsSize}};}' }] },
        ratingsSpacing: {
            type: 'object',
            default: {
                md: 30,
                unit: 'px'
            },
            style: [{
                condition: [{ key: 'layout', relation: '==', value: '1' }, { key: 'ratings', relation: '!=', value: '0' }],
                selector: '{{QUBELY}} .qubely-testimonial-ratings {margin-bottom: {{ratingsSpacing}};}'
            }, {
                condition: [{ key: 'layout', relation: '==', value: '2' }, { key: 'ratings', relation: '!=', value: '0' }],
                selector: '{{QUBELY}} .qubely-testimonial-ratings {margin-top: {{ratingsSpacing}};}'
            }]
        },

        // Design
        bgPadding: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-testimonial' }] },
        textColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-testimonial { color:{{textColor}}; }' }] },
        bgColor: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-testimonial' }] },
        bgBorderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global'
            },
            style: [{ selector: '{{QUBELY}} .qubely-block-testimonial' }]
        },

        border: { type: 'object', default: { openTy: 0, color: '#3373dc', width: { bottom: '1', left: '1', right: '1', top: '1', unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-block-testimonial' }] },
        boxShadow: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-testimonial' }] },
        boxShadowHover: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-testimonial:hover' }] },
        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/testimonial/style.scss":
/*!*******************************************!*\
  !*** ./src/blocks/testimonial/style.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/testimonial/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/text/Edit.js":
/*!*********************************!*\
  !*** ./src/blocks/text/Edit.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../../components/fields/inline/editorInline */ "./src/components/fields/inline/editorInline.js");

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    SelectControl = _wp$components.SelectControl;
var _wp$blockEditor = wp.blockEditor,
    RichText = _wp$blockEditor.RichText,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    Alignment = _wp$qubelyComponents.Alignment,
    Headings = _wp$qubelyComponents.Headings,
    Toggle = _wp$qubelyComponents.Toggle,
    Range = _wp$qubelyComponents.Range,
    Separator = _wp$qubelyComponents.Separator,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.Inline,
    InlineToolbar = _wp$qubelyComponents$2.InlineToolbar,
    InlineSelector = _wp$qubelyComponents$2.InlineSelector,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$3 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$3.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$3.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit() {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

        _this.handlePanelOpenings = function (panelName) {
            _this.setState(_extends({}, _this.state, { openPanelSetting: panelName }));
        };

        _this.state = { device: 'md', selector: true, spacer: true, openPanelSetting: '' };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props$attributes = this.props.attributes,
                uniqueId = _props$attributes.uniqueId,
                className = _props$attributes.className,
                content = _props$attributes.content,
                typography = _props$attributes.typography,
                alignment = _props$attributes.alignment,
                selector = _props$attributes.selector,
                textColor = _props$attributes.textColor,
                dropCap = _props$attributes.dropCap,
                dropCapSize = _props$attributes.dropCapSize,
                dropCapColor = _props$attributes.dropCapColor,
                dropCapSpacing = _props$attributes.dropCapSpacing,
                titleLevel = _props$attributes.titleLevel,
                title = _props$attributes.title,
                titleTypography = _props$attributes.titleTypography,
                titleColor = _props$attributes.titleColor,
                titleSpacing = _props$attributes.titleSpacing,
                enableTitle = _props$attributes.enableTitle,
                subTitle = _props$attributes.subTitle,
                subTitleLevel = _props$attributes.subTitleLevel,
                subTitleContent = _props$attributes.subTitleContent,
                subTitleTypography = _props$attributes.subTitleTypography,
                subTitleColor = _props$attributes.subTitleColor,
                subTitleSpacing = _props$attributes.subTitleSpacing,
                separatorStyle = _props$attributes.separatorStyle,
                separatorColor = _props$attributes.separatorColor,
                separatorStroke = _props$attributes.separatorStroke,
                separatorPosition = _props$attributes.separatorPosition,
                separatorWidth = _props$attributes.separatorWidth,
                separatorSpacing = _props$attributes.separatorSpacing,
                animation = _props$attributes.animation,
                globalZindex = _props$attributes.globalZindex,
                enablePosition = _props$attributes.enablePosition,
                selectPosition = _props$attributes.selectPosition,
                positionXaxis = _props$attributes.positionXaxis,
                positionYaxis = _props$attributes.positionYaxis,
                hideTablet = _props$attributes.hideTablet,
                hideMobile = _props$attributes.hideMobile,
                globalCss = _props$attributes.globalCss,
                interaction = _props$attributes.interaction;
            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                isSelected = _props2.isSelected;
            var _state = this.state,
                device = _state.device,
                openPanelSetting = _state.openPanelSetting;

            var separators = {
                solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
                double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
                dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
                dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
                pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
                pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
                zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
                zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
            };

            var titleTagName = 'h' + titleLevel;
            var subTitleTagName = 'h' + subTitleLevel;

            var renderSeparators = React.createElement(
                Fragment,
                null,
                separatorStyle && React.createElement(
                    Fragment,
                    null,
                    separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
                    separators[separatorStyle].type == 'svg' && React.createElement(
                        'span',
                        { className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
                        separators[separatorStyle].svg
                    )
                )
            );

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'text', uniqueId);
            }
            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { initialOpen: true },
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Text'), initialOpen: false },
                        React.createElement(Typography, { label: __('Typography'), value: typography, onChange: function onChange(val) {
                                return setAttributes({ typography: val });
                            }, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(Color, { label: __('Text Color'), value: textColor, onChange: function onChange(val) {
                                return setAttributes({ textColor: val });
                            } }),
                        React.createElement(Toggle, { label: __('Drop Cap'), value: dropCap, onChange: function onChange(val) {
                                return setAttributes({ dropCap: val });
                            } }),
                        dropCap == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, { label: __('Size'), value: dropCapSize, onChange: function onChange(value) {
                                    return setAttributes({ dropCapSize: value });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: dropCapColor, onChange: function onChange(val) {
                                    return setAttributes({ dropCapColor: val });
                                } }),
                            React.createElement(Range, { label: __('Spacing'), value: dropCapSpacing, onChange: function onChange(value) {
                                    return setAttributes({ dropCapSpacing: value });
                                }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        )
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Title'), opened: 'Title' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Title' ? 'Title' : '');
                            } },
                        React.createElement(Toggle, { label: __('Enable'), value: enableTitle, onChange: function onChange(val) {
                                return setAttributes({ enableTitle: val });
                            } }),
                        enableTitle == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Headings, { selectedLevel: titleLevel, onChange: function onChange(value) {
                                    return setAttributes({ titleLevel: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), value: titleTypography, onChange: function onChange(value) {
                                    return setAttributes({ titleTypography: value });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: titleColor, onChange: function onChange(value) {
                                    return setAttributes({ titleColor: value });
                                } }),
                            React.createElement(Range, { label: React.createElement(
                                    'span',
                                    null,
                                    __('Spacing'),
                                    ' ',
                                    React.createElement('span', { className: 'dashicons dashicons-sort', title: 'Y Spacing' })
                                ), value: titleSpacing, onChange: function onChange(val) {
                                    return setAttributes({ titleSpacing: val });
                                }, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Separator, null),
                            React.createElement(SelectControl, {
                                label: __('Separator'),
                                value: separatorStyle,
                                options: [{ label: '--Select--', value: '' }, { label: 'Line', value: 'solid' }, { label: 'Line Doubled', value: 'double' }, { label: 'Dashed', value: 'dashed' }, { label: 'Dotted', value: 'dotted' }, { label: 'Pin', value: 'pin' }, { label: 'Pin Filled', value: 'pin_filled' }, { label: 'Zigzag', value: 'zigzag' }, { label: 'Zigzag Large', value: 'zigzag_large' }],
                                onChange: function onChange(val) {
                                    return setAttributes({ separatorStyle: val });
                                }
                            }),
                            separatorStyle && React.createElement(
                                Fragment,
                                null,
                                React.createElement(Color, { label: __('Separator Color'), value: separatorColor, onChange: function onChange(val) {
                                        return setAttributes({ separatorColor: val });
                                    } }),
                                separatorStyle != 'pin' && separatorStyle != 'pin_filled' && React.createElement(Range, { label: __('Stroke'), value: separatorStroke, onChange: function onChange(val) {
                                        return setAttributes({ separatorStroke: parseInt(val) });
                                    }, min: 1, max: separators[separatorStyle].stroke }),
                                React.createElement(Range, { label: __('Width'), value: separatorWidth, onChange: function onChange(val) {
                                        return setAttributes({ separatorWidth: val });
                                    }, min: 20, max: separators[separatorStyle].width, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Range, { label: __('Spacing'), value: separatorSpacing, onChange: function onChange(val) {
                                        return setAttributes({ separatorSpacing: val });
                                    }, min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(SelectControl, {
                                    label: 'Position',
                                    value: separatorPosition,
                                    options: [{ label: 'Top', value: 'top' }, { label: 'Bottom', value: 'bottom' }, { label: 'Left', value: 'left' }, { label: 'Right', value: 'right' }, { label: 'Left & Right', value: 'leftright' }],
                                    onChange: function onChange(val) {
                                        return setAttributes({ separatorPosition: val });
                                    }
                                })
                            )
                        )
                    ),
                    enableTitle == 1 && React.createElement(
                        PanelBody,
                        { title: __('Sub Title'), opened: 'Sub Title' === openPanelSetting, onToggle: function onToggle() {
                                return _this2.handlePanelOpenings(openPanelSetting !== 'Sub Title' ? 'Sub Title' : '');
                            } },
                        React.createElement(Toggle, { label: __('Enable'), value: subTitle, onChange: function onChange(val) {
                                return setAttributes({ subTitle: val });
                            } }),
                        subTitle == 1 && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Headings, { selectedLevel: subTitleLevel, onChange: function onChange(value) {
                                    return setAttributes({ subTitleLevel: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), value: subTitleTypography, onChange: function onChange(val) {
                                    return setAttributes({ subTitleTypography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Range, { label: React.createElement(
                                    'span',
                                    null,
                                    __('Spacing'),
                                    ' ',
                                    React.createElement('span', { className: 'dashicons dashicons-sort', title: 'Y Spacing' })
                                ), value: subTitleSpacing, onChange: function onChange(value) {
                                    return setAttributes({ subTitleSpacing: value });
                                }, unit: ['px', 'em', '%'], min: 0, max: 100, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Color, { label: __('Color'), value: subTitleColor, onChange: function onChange(val) {
                                    return setAttributes({ subTitleColor: val });
                                } })
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(InlineSelector, { options: [['p', 'Paragraph'], ['span', 'span'], ['div', 'div']], selector: selector, setAttributes: setAttributes }),
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
                        }, this.props, {
                            prevState: this.state,
                            device: device,
                            onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            }
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        {
                            onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            },
                            className: 'qubely-block-text ' + (dropCap == 1 ? 'qubely-has-drop-cap' : '') },
                        enableTitle == 1 && React.createElement(
                            'div',
                            { className: 'qubely-block-text-title-container ' + (separatorStyle ? 'qubely-has-separator' : '') + ' ' + (separatorPosition ? 'qubely-separator-position-' + separatorPosition : '') },
                            React.createElement(
                                'div',
                                { className: 'qubely-block-text-title-inner' },
                                separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') ? React.createElement(
                                    'div',
                                    { className: 'qubely-separator qubely-separator-before' },
                                    renderSeparators
                                ) : '',
                                React.createElement(
                                    'div',
                                    { onClick: function onClick() {
                                            return _this2.handlePanelOpenings('Title');
                                        } },
                                    React.createElement(RichText, {
                                        key: 'editable',
                                        tagName: titleTagName,
                                        className: 'qubely-block-text-title',
                                        keepPlaceholderOnFocus: true,
                                        placeholder: __('Add Text...'),
                                        onChange: function onChange(value) {
                                            return setAttributes({ title: value });
                                        },
                                        value: title })
                                ),
                                separatorStyle != '' && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') ? React.createElement(
                                    'div',
                                    { className: 'qubely-separator qubely-separator-after' },
                                    renderSeparators
                                ) : ''
                            ),
                            subTitle == 1 && React.createElement(
                                'div',
                                { className: 'qubely-block-text-sub-title-container', onClick: function onClick() {
                                        return _this2.handlePanelOpenings('Sub Title');
                                    } },
                                React.createElement(RichText, {
                                    key: 'editable',
                                    tagName: subTitleTagName,
                                    className: 'qubely-block-text-sub-title',
                                    keepPlaceholderOnFocus: true,
                                    placeholder: __('Add Text...'),
                                    onChange: function onChange(value) {
                                        return setAttributes({ subTitleContent: value });
                                    },
                                    value: subTitleContent })
                            )
                        ),
                        React.createElement(RichText, {
                            key: 'editable',
                            tagName: selector,
                            keepPlaceholderOnFocus: true,
                            placeholder: __('Add Text...'),
                            onChange: function onChange(value) {
                                return setAttributes({ content: value });
                            },
                            value: content
                        }),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/text/Save.js":
/*!*********************************!*\
  !*** ./src/blocks/text/Save.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _this2 = this;

			var separators = {
				solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
				double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
				dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
				dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
				pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
				pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
				zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
				zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
			};

			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    content = _props$attributes.content,
			    selector = _props$attributes.selector,
			    dropCap = _props$attributes.dropCap,
			    enableTitle = _props$attributes.enableTitle,
			    titleLevel = _props$attributes.titleLevel,
			    subTitleLevel = _props$attributes.subTitleLevel,
			    separatorStyle = _props$attributes.separatorStyle,
			    separatorPosition = _props$attributes.separatorPosition,
			    title = _props$attributes.title,
			    subTitle = _props$attributes.subTitle,
			    subTitleContent = _props$attributes.subTitleContent,
			    animation = _props$attributes.animation,
			    interaction = _props$attributes.interaction;

			var titleTagName = 'h' + titleLevel;
			var subTitleTagName = 'h' + subTitleLevel;
			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';

			var renderSeparators = React.createElement(
				Fragment,
				null,
				separatorStyle && React.createElement(
					Fragment,
					null,
					separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
					separators[separatorStyle].type == 'svg' && React.createElement(
						'span',
						{ className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
						separators[separatorStyle].svg
					)
				)
			);
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-text ' + interactionClass + ' ' + (dropCap == 1 ? 'qubely-has-drop-cap' : '') },
					enableTitle == 1 && React.createElement(
						'div',
						{ className: 'qubely-block-text-title-container ' + (separatorStyle ? 'qubely-has-separator' : '') + ' ' + (separatorPosition ? 'qubely-separator-position-' + separatorPosition : '') },
						React.createElement(
							'div',
							{ className: 'qubely-block-text-title-inner' },
							separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') ? React.createElement(
								'div',
								{ className: 'qubely-separator qubely-separator-before' },
								renderSeparators
							) : '',
							React.createElement(RichText.Content, { tagName: titleTagName, className: 'qubely-block-text-title', value: title }),
							separatorStyle != '' && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') ? React.createElement(
								'div',
								{ className: 'qubely-separator qubely-separator-after' },
								renderSeparators
							) : ''
						),
						subTitle == 1 && React.createElement(
							'div',
							{ className: 'qubely-block-text-sub-title-container', onClick: function onClick() {
									return _this2.handlePanelOpenings('Sub Title');
								} },
							React.createElement(RichText.Content, { tagName: subTitleTagName, className: 'qubely-block-text-sub-title', value: subTitleContent })
						)
					),
					React.createElement(RichText.Content, { tagName: selector, value: content })
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/text/index.js":
/*!**********************************!*\
  !*** ./src/blocks/text/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/text/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/text/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/text/Save.js");

var _Save2 = _interopRequireDefault(_Save);

var _separators = __webpack_require__(/*! ../heading/separators */ "./src/blocks/heading/separators.js");

var _separators2 = _interopRequireDefault(_separators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var RichText = wp.blockEditor.RichText;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$qubelyComponents = wp.qubelyComponents,
    globalAttributes = _wp$qubelyComponents.gloalSettings.globalAttributes,
    animationAttr = _wp$qubelyComponents.HelperFunction.animationAttr;


registerBlockType('qubely/text', {
    title: __('Advanced Text'),
    description: 'Apply texts and tweak designs with Qubely Advanced Text.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-text.svg', alt: __('Advanced Text Block') }),
    supports: {
        align: ['center', 'wide', 'full']
    },
    keywords: [__('text'), __('paragraph'), __('heading'), __('Advanced')],
    example: {
        attributes: {
            enableTitle: true,
            title: __('Advanced Text Block', 'qubely'),
            dropCap: true,
            content: __('Qubely blocks is added to the Gutenberg editor as soon as you install the plugin. You can start using it as any other Gutenberg block. Add ready blocks using the plus sign where you’ll find a new section of blocks under the Qubely icon.', 'qubely')
        }
    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
        content: {
            type: 'string',
            source: 'html',
            selector: '.qubely-block-text> *:last-child',
            default: 'Qubely blocks is added to the Gutenberg editor as soon as you install the plugin. You can start using it as any other Gutenberg block. Add ready blocks using the plus sign where you’ll find a new section of blocks under the Qubely icon.'
        },
        alignment: { type: 'object', default: { md: 'left' }, style: [{ selector: '{{QUBELY}} .qubely-block-text {text-align: {{alignment}}; }' }] },
        selector: { type: 'string', default: 'p' },
        dropCap: { type: 'boolean', default: false },
        dropCapSize: {
            type: 'object', default: { md: 48, unit: 'px' },
            style: [{
                condition: [{ key: 'dropCap', relation: '==', value: true }],
                selector: '{{QUBELY}} .qubely-block-text p::first-letter, {{QUBELY}} .qubely-block-text .editor-rich-text p::first-letter {font-size: {{dropCapSize}};}'
            }]
        },
        dropCapColor: {
            type: 'string', default: '#2962FF',
            style: [{
                condition: [{ key: 'dropCap', relation: '==', value: true }],
                selector: '{{QUBELY}} .qubely-block-text p::first-letter, {{QUBELY}} .qubely-block-text .editor-rich-text p::first-letter {color: {{dropCapColor}};}'
            }]
        },
        dropCapSpacing: {
            type: 'object', default: { md: 15, unit: 'px' },
            style: [{
                condition: [{ key: 'dropCap', relation: '==', value: true }],
                selector: '{{QUBELY}} .qubely-block-text p::first-letter, {{QUBELY}} .qubely-block-text .editor-rich-text p::first-letter {margin-right: {{dropCapSpacing}};}'
            }]
        },

        typography: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-text, {{QUBELY}} .qubely-block-text .editor-rich-text p' }] },
        textColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-text > * { color:{{textColor}}; }' }] },

        // Title
        enableTitle: { type: 'boolean', default: 1 },
        title: {
            type: 'string',
            source: 'html',
            selector: '.qubely-block-text-title',
            default: 'Advanced Text Block'
        },
        titleLevel: { type: 'number', default: 2 },
        titleTypography: { type: 'object', default: { openTypography: 1, size: { md: 24, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-block-text-title' }] },
        titleColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-text-title {color: {{titleColor}};}' }] },
        titleSpacing: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-block-text-title-inner {margin-bottom: {{titleSpacing}};}' }] },

        subTitle: { type: 'boolean', default: 0 },
        subTitleLevel: { type: 'number', default: 3 },
        subTitleContent: {
            type: 'string',
            source: 'html',
            selector: '.qubely-block-text-sub-title',
            default: 'Sub Title'
        },
        subTitleTypography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-block-text .qubely-block-text-sub-title' }] },
        subTitleColor: {
            type: 'string', default: '#333',
            style: [{
                condition: [{ key: 'subTitle', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-text .qubely-block-text-sub-title {color: {{subTitleColor}};}'
            }]
        },
        subTitleSpacing: {
            type: 'object', default: { md: 15, unit: 'px' },
            style: [{
                condition: [{ key: 'subTitle', relation: '==', value: 1 }],
                selector: '{{QUBELY}} .qubely-block-text .qubely-block-text-sub-title {margin-bottom: {{subTitleSpacing}};}'
            }]
        },

        // Title separator
        separatorStyle: {
            type: 'string', default: '',
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-text .qubely-separator-type-css {border-top-style: {{separatorStyle}};}'
            }]
        },
        separatorPosition: { type: 'string', default: 'top' },
        separatorColor: {
            type: 'string', default: '#5D7FEB',
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-text .qubely-separator-type-svg svg .qubely-separator-stroke {stroke: {{separatorColor}};} {{QUBELY}} .qubely-block-text svg .qubely-separator-fill {fill: {{separatorColor}};} {{QUBELY}} .qubely-block-text .qubely-separator-type-css {border-top-color: {{separatorColor}};}'
            }]
        },
        separatorStroke: {
            type: 'number', default: 3,
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-text .qubely-separator-type-svg svg .qubely-separator-stroke {stroke-width: {{separatorStroke}}px;} {{QUBELY}} .qubely-block-text .qubely-separator-type-css {border-top-width: {{separatorStroke}}px;}'
            }]
        },
        separatorWidth: {
            type: 'object', default: { md: 60 },
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }],
                selector: '{{QUBELY}} .qubely-block-text .qubely-separator-type-css {width: {{separatorWidth}}px;} {{QUBELY}} .qubely-block-text .qubely-separator-type-svg svg {width: {{separatorWidth}}px;}'
            }]
        },
        separatorSpacing: {
            type: 'object', default: { md: 10 },
            style: [{
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'left' }],
                selector: '{{QUBELY}} .qubely-separator {margin-right: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'right' }],
                selector: '{{QUBELY}} .qubely-separator {margin-left: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'leftright' }],
                selector: '{{QUBELY}} .qubely-separator-before {margin-right: {{separatorSpacing}}px;} {{QUBELY}} .qubely-separator-after {margin-left: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'top' }],
                selector: '{{QUBELY}} .qubely-separator {margin-bottom: {{separatorSpacing}}px;}'
            }, {
                condition: [{ key: 'separatorStyle', relation: '!=', value: '' }, { key: 'separatorPosition', relation: '==', value: 'bottom' }],
                selector: '{{QUBELY}} .qubely-separator {margin-top: {{separatorSpacing}}px;}'
            }]
        },
        sourceOfCopiedStyle: { type: 'boolean', default: false }
    }),
    deprecated: [{
        save: function save(props) {
            var _this = this;

            var separators = {
                solid: { type: 'css', separator: 'solid', width: 300, stroke: 10 },
                double: { type: 'css', separator: 'double', width: 300, stroke: 10 },
                dotted: { type: 'css', separator: 'dotted', width: 300, stroke: 10 },
                dashed: { type: 'css', separator: 'dashed', width: 300, stroke: 10 },
                pin: { type: 'svg', separator: 'pin', svg: _separators2.default['pin'], width: 100, stroke: 0 },
                pin_filled: { type: 'svg', separator: 'pin_filled', svg: _separators2.default['pin_filled'], width: 100, stroke: 0 },
                zigzag: { type: 'svg', separator: 'zigzag', svg: _separators2.default['zigzag'], style: 'fill', width: 88, stroke: 5 },
                zigzag_large: { type: 'svg', separator: 'zigzag_large', svg: _separators2.default['zigzag_large'], style: 'fill', width: 161, stroke: 5 }
            };

            var _props$attributes = props.attributes,
                uniqueId = _props$attributes.uniqueId,
                content = _props$attributes.content,
                selector = _props$attributes.selector,
                dropCap = _props$attributes.dropCap,
                enableTitle = _props$attributes.enableTitle,
                titleLevel = _props$attributes.titleLevel,
                subTitleLevel = _props$attributes.subTitleLevel,
                separatorStyle = _props$attributes.separatorStyle,
                separatorPosition = _props$attributes.separatorPosition,
                title = _props$attributes.title,
                subTitle = _props$attributes.subTitle,
                subTitleContent = _props$attributes.subTitleContent,
                animation = _props$attributes.animation;

            var titleTagName = 'h' + titleLevel;
            var subTitleTagName = 'h' + subTitleLevel;

            var renderSeparators = React.createElement(
                Fragment,
                null,
                separatorStyle && React.createElement(
                    Fragment,
                    null,
                    separators[separatorStyle].type == 'css' && React.createElement('span', { className: 'qubely-separator-type-css qubely-separator-' + separatorStyle }),
                    separators[separatorStyle].type == 'svg' && React.createElement(
                        'span',
                        { className: 'qubely-separator-type-svg qubely-separator-' + separatorStyle },
                        separators[separatorStyle].svg
                    )
                )
            );

            return React.createElement(
                'div',
                _extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
                React.createElement(
                    'div',
                    { className: 'qubely-block-text ' + (dropCap == 1 ? 'qubely-has-drop-cap' : '') },
                    enableTitle == 1 && React.createElement(
                        'div',
                        { className: 'qubely-block-text-title-container ' + (separatorStyle ? 'qubely-has-separator' : '') + ' ' + (separatorPosition ? 'qubely-separator-position-' + separatorPosition : '') },
                        React.createElement(
                            'div',
                            { className: 'qubely-block-text-title-inner' },
                            separatorStyle && (separatorPosition == 'left' || separatorPosition == 'top' || separatorPosition == 'leftright') ? React.createElement(
                                'div',
                                { className: 'qubely-separator qubely-separator-before' },
                                renderSeparators
                            ) : '',
                            React.createElement(RichText.Content, { tagName: titleTagName, className: 'qubely-block-text-title', value: title }),
                            separatorStyle != '' && (separatorPosition == 'right' || separatorPosition == 'bottom' || separatorPosition == 'leftright') ? React.createElement(
                                'div',
                                { className: 'qubely-separator qubely-separator-after' },
                                renderSeparators
                            ) : ''
                        ),
                        subTitle == 1 && React.createElement(
                            'div',
                            { className: 'qubely-block-text-sub-title-container', onClick: function onClick() {
                                    return _this.handlePanelOpenings('Sub Title');
                                } },
                            React.createElement(RichText.Content, { tagName: subTitleTagName, className: 'qubely-block-text-sub-title', value: subTitleContent })
                        )
                    ),
                    React.createElement(RichText.Content, { tagName: selector, value: content, className: 'qubely-block-text-content' })
                )
            );
        }
    }],
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/text/style.scss":
/*!************************************!*\
  !*** ./src/blocks/text/style.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/text/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/timeline/Edit.js":
/*!*************************************!*\
  !*** ./src/blocks/timeline/Edit.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Tooltip = _wp$components.Tooltip,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    RichText = _wp$blockEditor.RichText,
    BlockControls = _wp$blockEditor.BlockControls,
    MediaUpload = _wp$blockEditor.MediaUpload;
var _wp$qubelyComponents = wp.qubelyComponents,
    IconList = _wp$qubelyComponents.IconList,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Range = _wp$qubelyComponents.Range,
    Color = _wp$qubelyComponents.Color,
    Typography = _wp$qubelyComponents.Typography,
    Toggle = _wp$qubelyComponents.Toggle,
    Separator = _wp$qubelyComponents.Separator,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Alignment = _wp$qubelyComponents.Alignment,
    Padding = _wp$qubelyComponents.Padding,
    Headings = _wp$qubelyComponents.Headings,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit(props) {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

		_this.updateTimelineContent = function (key, value, index) {
			var _this$props = _this.props,
			    setAttributes = _this$props.setAttributes,
			    _this$props$attribute = _this$props.attributes,
			    timelineItems = _this$props$attribute.timelineItems,
			    timelineContents = _this$props$attribute.timelineContents;

			if (key === 'add' || key === 'delete') {
				var updatedAttributes = key === 'add' ? [].concat(_toConsumableArray(timelineContents), [{ title: 'Timeline Block', date: 'January 1, 2021', description: 'Include detailed timelines for your products, company, etc with Qubely Timeline.' }]) : timelineContents.slice(0, timelineItems - 1);
				setAttributes({
					timelineContents: updatedAttributes,
					timelineItems: key === 'add' ? timelineItems + 1 : timelineItems - 1
				});
			} else {
				var _updatedAttributes = timelineContents.map(function (data, itemIndex) {
					if (index === itemIndex) {
						return _extends({}, data, _defineProperty({}, key, value));
					} else {
						return data;
					}
				});
				setAttributes({ timelineContents: _updatedAttributes });
			}
		};

		_this.removeItem = function (index) {
			var _this$props2 = _this.props,
			    setAttributes = _this$props2.setAttributes,
			    _this$props2$attribut = _this$props2.attributes,
			    timelineContents = _this$props2$attribut.timelineContents,
			    timelineItems = _this$props2$attribut.timelineItems;

			var newTimelineContents = JSON.parse(JSON.stringify(timelineContents));
			newTimelineContents.splice(index, 1);
			setAttributes({ timelineContents: newTimelineContents, timelineItems: timelineItems - 1 });
		};

		_this.renderTimeline = function () {
			var _this$props$attribute2 = _this.props.attributes,
			    timelineContents = _this$props$attribute2.timelineContents,
			    enableContentBorder = _this$props$attribute2.enableContentBorder,
			    headingLevel = _this$props$attribute2.headingLevel,
			    enableDateTime = _this$props$attribute2.enableDateTime,
			    enableImage = _this$props$attribute2.enableImage,
			    connectorIcon = _this$props$attribute2.connectorIcon;

			var titleTagName = 'h' + headingLevel;
			return timelineContents.map(function (_ref, index) {
				var title = _ref.title,
				    date = _ref.date,
				    description = _ref.description,
				    image = _ref.image;


				return React.createElement(
					'div',
					{ key: index, className: 'qubely-timeline-item qubely-timeline-' + (index % 2 ? 'right' : 'left') },
					React.createElement(
						'div',
						{ className: 'qubely-timeline-connector' },
						connectorIcon != '' && React.createElement('span', { className: 'qubely-timeline-connector-icon ' + connectorIcon })
					),
					React.createElement(
						'div',
						{ className: 'qubely-timeline-content' + (enableContentBorder == 1 ? ' qubely-content-has-border' : '') },
						enableImage == 1 && React.createElement(
							'div',
							{ className: 'qubely-timeline-image-container' + (image != undefined && image.url != undefined ? '' : ' qubely-empty-image') },
							React.createElement(MediaUpload, {
								onSelect: function onSelect(value) {
									return _this.updateTimelineContent('image', value, index);
								},
								allowedTypes: ['image'],
								multiple: false,
								value: image,
								render: function render(_ref2) {
									var open = _ref2.open;
									return React.createElement(
										Fragment,
										null,
										image != undefined && image.url != undefined ? React.createElement(
											'div',
											{ className: 'qubely-timeline-content-image-editor' },
											React.createElement('img', { src: image.url, alt: __('image') }),
											React.createElement(
												'div',
												{ className: 'qubely-media-actions qubely-field-button-list' },
												React.createElement(
													Tooltip,
													{ text: __('Edit') },
													React.createElement(
														'button',
														{ className: 'qubely-button', 'aria-label': __('Edit'), onClick: open, role: 'button' },
														React.createElement('span', { 'aria-label': __('Edit'), className: 'fas fa-pencil-alt fa-fw' })
													)
												),
												React.createElement(
													Tooltip,
													{ text: __('Remove') },
													React.createElement(
														'button',
														{ className: 'qubely-button', 'aria-label': __('Remove'), onClick: function onClick() {
																return _this.updateTimelineContent('image', '', index);
															}, role: 'button' },
														React.createElement('span', { 'aria-label': __('Close'), className: 'far fa-trash-alt fa-fw' })
													)
												)
											)
										) : React.createElement(
											'a',
											{ className: 'qubely-insert-image', href: '#', onClick: open },
											React.createElement(
												'svg',
												{ 'aria-hidden': 'true', role: 'img', focusable: 'false', 'class': 'dashicon dashicons-insert', xmlns: 'http://www.w3.org/2000/svg', width: '20', height: '20', viewBox: '0 0 20 20' },
												React.createElement('path', { d: 'M10 1c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9zm0 16c-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7-3.1 7-7 7zm1-11H9v3H6v2h3v3h2v-3h3V9h-3V6z' })
											),
											React.createElement(
												'span',
												null,
												__('Insert')
											)
										)
									);
								}
							})
						),
						React.createElement(
							'div',
							{ className: 'qubely-timeline-description' },
							React.createElement(RichText, {
								placeholder: __('Add title'),
								tagName: titleTagName,
								className: 'qubely-timeline-title',
								value: title,
								onChange: function onChange(value) {
									return _this.updateTimelineContent('title', value, index);
								},
								keepPlaceholderOnFocus: true
							}),
							React.createElement(RichText, {
								placeholder: __('Add description'),
								tagName: 'div',
								className: 'qubely-timeline-description',
								value: description,
								onChange: function onChange(value) {
									return _this.updateTimelineContent('description', value, index);
								},
								keepPlaceholderOnFocus: true
							})
						),
						React.createElement(
							Tooltip,
							{ text: __('Delete this item') },
							React.createElement(
								'span',
								{ className: 'qubely-action-timeline-remove', role: 'button', onClick: function onClick() {
										return _this.removeItem(index);
									} },
								React.createElement('i', { className: 'fas fa-times' })
							)
						)
					),
					enableDateTime == 1 && React.createElement(
						'div',
						{ className: 'qubely-timeline-date-container' },
						React.createElement(RichText, {
							placeholder: __('Add Date'),
							tagName: 'div',
							className: 'qubely-timeline-date',
							value: date,
							onChange: function onChange(value) {
								return _this.updateTimelineContent('date', value, index);
							},
							keepPlaceholderOnFocus: true
						})
					)
				);
			});
		};

		_this.state = {
			device: 'md',
			spacer: true
		};
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    uniqueId = _props.attributes.uniqueId;

			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    name = _props2.name,
			    isSelected = _props2.isSelected,
			    setAttributes = _props2.setAttributes,
			    _props2$attributes = _props2.attributes,
			    uniqueId = _props2$attributes.uniqueId,
			    className = _props2$attributes.className,
			    timelineItems = _props2$attributes.timelineItems,
			    orientation = _props2$attributes.orientation,
			    horizontalSpacing = _props2$attributes.horizontalSpacing,
			    verticalSpacing = _props2$attributes.verticalSpacing,
			    headingLevel = _props2$attributes.headingLevel,
			    headingTypography = _props2$attributes.headingTypography,
			    headingColor = _props2$attributes.headingColor,
			    headingSpacing = _props2$attributes.headingSpacing,
			    contentBg = _props2$attributes.contentBg,
			    contentColor = _props2$attributes.contentColor,
			    contentTypography = _props2$attributes.contentTypography,
			    enableContentBorder = _props2$attributes.enableContentBorder,
			    contentBorderWidth = _props2$attributes.contentBorderWidth,
			    contentBorderColor = _props2$attributes.contentBorderColor,
			    contentPadding = _props2$attributes.contentPadding,
			    contentBorderRadius = _props2$attributes.contentBorderRadius,
			    contentBoxShadow = _props2$attributes.contentBoxShadow,
			    enableDateTime = _props2$attributes.enableDateTime,
			    enableDateTimeTypography = _props2$attributes.enableDateTimeTypography,
			    enableDateTimeColor = _props2$attributes.enableDateTimeColor,
			    enableImage = _props2$attributes.enableImage,
			    imagePosition = _props2$attributes.imagePosition,
			    imageBorderRadius = _props2$attributes.imageBorderRadius,
			    imageSpacing = _props2$attributes.imageSpacing,
			    connectorSize = _props2$attributes.connectorSize,
			    connectorColor = _props2$attributes.connectorColor,
			    connectorBorder = _props2$attributes.connectorBorder,
			    connectorBoxShadow = _props2$attributes.connectorBoxShadow,
			    connectorBorderRadius = _props2$attributes.connectorBorderRadius,
			    connectorIcon = _props2$attributes.connectorIcon,
			    connectorIconSize = _props2$attributes.connectorIconSize,
			    connectorIconColor = _props2$attributes.connectorIconColor,
			    connectorBarWidth = _props2$attributes.connectorBarWidth,
			    connectorBarColor = _props2$attributes.connectorBarColor,
			    animation = _props2$attributes.animation,
			    globalZindex = _props2$attributes.globalZindex,
			    enablePosition = _props2$attributes.enablePosition,
			    selectPosition = _props2$attributes.selectPosition,
			    positionXaxis = _props2$attributes.positionXaxis,
			    positionYaxis = _props2$attributes.positionYaxis,
			    hideTablet = _props2$attributes.hideTablet,
			    hideMobile = _props2$attributes.hideMobile,
			    globalCss = _props2$attributes.globalCss,
			    interaction = _props2$attributes.interaction;
			var device = this.state.device;


			if (uniqueId) {
				CssGenerator(this.props.attributes, 'timeline', uniqueId);
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: __('Timeline Settings') },
						React.createElement(Range, {
							min: 2,
							max: 100,
							label: __('Number of Items'),
							value: timelineItems,
							onChange: function onChange(value) {
								return _this2.updateTimelineContent(value > timelineItems ? 'add' : 'delete');
							}
						}),
						React.createElement(Alignment, { label: __('Orientation'), value: orientation, onChange: function onChange(val) {
								return setAttributes({ orientation: val });
							}, alignmentType: 'content', disableJustify: true })
					),
					React.createElement(
						PanelBody,
						{ title: __('Spacing'), initialOpen: false },
						React.createElement(Range, { label: __('Horizontal Spacing'), value: horizontalSpacing, onChange: function onChange(val) {
								return setAttributes({ horizontalSpacing: val });
							}, min: 0, max: 100, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Range, { label: __('Vertical Spacing'), value: verticalSpacing, onChange: function onChange(val) {
								return setAttributes({ verticalSpacing: val });
							}, min: 0, max: 100, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} })
					),
					React.createElement(
						PanelBody,
						{ title: __('Content'), initialOpen: false },
						React.createElement(Color, { label: __('Background Color'), value: contentBg, onChange: function onChange(value) {
								return setAttributes({ contentBg: value });
							} }),
						React.createElement(Toggle, { label: __('Enable Border'), value: enableContentBorder, onChange: function onChange(val) {
								return setAttributes({ enableContentBorder: val });
							} }),
						enableContentBorder == 1 && React.createElement(
							Fragment,
							null,
							React.createElement(Range, { label: __('Border Width'), value: contentBorderWidth, onChange: function onChange(val) {
									return setAttributes({ contentBorderWidth: val });
								}, min: 1, max: 5, responsive: true, device: device, unit: ['px'], onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(Color, { label: __('Border Color'), value: contentBorderColor, onChange: function onChange(value) {
									return setAttributes({ contentBorderColor: value });
								} }),
							React.createElement(Separator, null)
						),
						React.createElement(BorderRadius, { label: __('Radius'), value: contentBorderRadius, onChange: function onChange(val) {
								return setAttributes({ contentBorderRadius: val });
							}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Padding, { label: __('Padding'), value: contentPadding, onChange: function onChange(val) {
								return setAttributes({ contentPadding: val });
							}, min: 0, max: 200, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(BoxShadow, { label: __('Box-Shadow'), value: contentBoxShadow, onChange: function onChange(val) {
								return setAttributes({ contentBoxShadow: val });
							}, disableInset: true }),
						React.createElement(Separator, null),
						React.createElement(Headings, { label: __('Heading Tag'), selectedLevel: headingLevel, onChange: function onChange(value) {
								return setAttributes({ headingLevel: value });
							} }),
						React.createElement(Typography, { label: __('Heading Typography'), value: headingTypography, onChange: function onChange(val) {
								return setAttributes({ headingTypography: val });
							}, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Color, { label: __('Heading Color'), value: headingColor, onChange: function onChange(value) {
								return setAttributes({ headingColor: value });
							} }),
						React.createElement(Range, { label: __('Heading Spacing'), value: headingSpacing, onChange: function onChange(val) {
								return setAttributes({ headingSpacing: val });
							}, min: 0, max: 100, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(Color, { label: __('Content Color'), value: contentColor, onChange: function onChange(value) {
								return setAttributes({ contentColor: value });
							} }),
						React.createElement(Typography, { label: __('Content Typography'), value: contentTypography, onChange: function onChange(val) {
								return setAttributes({ contentTypography: val });
							}, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(Toggle, { label: __('Enable Date/Time'), value: enableDateTime, onChange: function onChange(val) {
								return setAttributes({ enableDateTime: val });
							} }),
						enableDateTime == 1 && React.createElement(
							Fragment,
							null,
							React.createElement(Typography, { label: __('Date/Time Typography'), value: enableDateTimeTypography, onChange: function onChange(val) {
									return setAttributes({ enableDateTimeTypography: val });
								}, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(Color, { label: __('Date/Time Color'), value: enableDateTimeColor, onChange: function onChange(value) {
									return setAttributes({ enableDateTimeColor: value });
								} })
						)
					),
					React.createElement(
						PanelBody,
						{ title: __('Image'), initialOpen: false },
						React.createElement(Toggle, { label: __('Enable'), value: enableImage, onChange: function onChange(val) {
								return setAttributes({ enableImage: val });
							} }),
						enableImage == 1 && React.createElement(
							Fragment,
							null,
							React.createElement(RadioAdvanced, { label: __('Position'), value: imagePosition, onChange: function onChange(value) {
									return setAttributes({ imagePosition: value });
								},
								options: [{ label: __('Before'), value: 'before', title: __('Before') }, { label: __('After'), value: 'after', title: __('After') }]
							}),
							React.createElement(BorderRadius, { label: __('Radius'), value: imageBorderRadius, onChange: function onChange(val) {
									return setAttributes({ imageBorderRadius: val });
								}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(Range, { label: __('Spacing'), value: imageSpacing, onChange: function onChange(val) {
									return setAttributes({ imageSpacing: val });
								}, min: 0, max: 100, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					),
					React.createElement(
						PanelBody,
						{ title: __('Connector'), initialOpen: false },
						React.createElement(Color, { label: __('Color'), value: connectorColor, onChange: function onChange(value) {
								return setAttributes({ connectorColor: value });
							} }),
						React.createElement(Range, { label: __('Size'), value: connectorSize, onChange: function onChange(val) {
								return setAttributes({ connectorSize: val });
							}, min: 16, max: 64, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Border, { label: __('Border'), value: connectorBorder, onChange: function onChange(val) {
								return setAttributes({ connectorBorder: val });
							}, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(BoxShadow, { label: __('Box-Shadow'), value: connectorBoxShadow, onChange: function onChange(val) {
								return setAttributes({ connectorBoxShadow: val });
							}, disableInset: true }),
						React.createElement(BorderRadius, { label: __('Radius'), value: connectorBorderRadius, onChange: function onChange(val) {
								return setAttributes({ connectorBorderRadius: val });
							}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(IconList, { label: __('Icon'), value: connectorIcon, onChange: function onChange(val) {
								return setAttributes({ connectorIcon: val });
							} }),
						React.createElement(Range, { label: __('Icon Size'), value: connectorIconSize, onChange: function onChange(val) {
								return setAttributes({ connectorIconSize: val });
							}, min: 16, max: 64, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Color, { label: __('Icon Color'), value: connectorIconColor, onChange: function onChange(value) {
								return setAttributes({ connectorIconColor: value });
							} }),
						React.createElement(Separator, null),
						React.createElement(Range, { label: __('Bar Width'), value: connectorBarWidth, onChange: function onChange(val) {
								return setAttributes({ connectorBarWidth: val });
							}, min: 2, max: 20, responsive: true, unit: ['px', 'em', '%'], device: device, onDeviceChange: function onDeviceChange(value) {
								return _this2.setState({ device: value });
							} }),
						React.createElement(Color, { label: __('Bar Color'), value: connectorBarColor, onChange: function onChange(value) {
								return setAttributes({ connectorBarColor: value });
							} })
					),
					animationSettings(uniqueId, animation, setAttributes),
					interactionSettings(uniqueId, interaction, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
						}, this.props, {
							prevState: this.state
						}))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					React.createElement(
						'div',
						{ className: 'qubely-block-timeline qubely-timeline-layout-vertical qubely-timeline-orientation-' + orientation },
						React.createElement(
							'div',
							{ className: 'qubely-timeline-items' },
							this.renderTimeline()
						)
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/timeline/Save.js":
/*!*************************************!*\
  !*** ./src/blocks/timeline/Save.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var RichText = wp.blockEditor.RichText;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, Save);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Save.__proto__ || Object.getPrototypeOf(Save)).call.apply(_ref, [this].concat(args))), _this), _this.renderTimeline = function () {
			var _this$props$attribute = _this.props.attributes,
			    timelineContents = _this$props$attribute.timelineContents,
			    enableContentBorder = _this$props$attribute.enableContentBorder,
			    headingLevel = _this$props$attribute.headingLevel,
			    enableDateTime = _this$props$attribute.enableDateTime,
			    enableImage = _this$props$attribute.enableImage,
			    connectorIcon = _this$props$attribute.connectorIcon;


			var titleTagName = 'h' + headingLevel;

			return timelineContents.map(function (_ref2, index) {
				var title = _ref2.title,
				    date = _ref2.date,
				    description = _ref2.description,
				    image = _ref2.image;

				return React.createElement(
					'div',
					{ key: index, className: 'qubely-timeline-item qubely-timeline-' + (index % 2 ? 'right' : 'left') },
					React.createElement(
						'div',
						{ className: 'qubely-timeline-connector' },
						connectorIcon != '' && React.createElement('span', { className: 'qubely-timeline-connector-icon ' + connectorIcon })
					),
					React.createElement(
						'div',
						{ className: 'qubely-timeline-content' + (enableContentBorder == 1 ? ' qubely-content-has-border' : '') },
						enableImage == 1 && image != undefined && image.url != undefined && React.createElement(
							'div',
							{ className: 'qubely-timeline-image-container' },
							React.createElement('img', { src: image.url, alt: title })
						),
						React.createElement(
							'div',
							{ className: 'qubely-timeline-description' },
							React.createElement(RichText.Content, { tagName: titleTagName, className: 'qubely-timeline-title', value: title }),
							React.createElement(RichText.Content, { tagName: 'div', className: 'qubely-timeline-description', value: description })
						),
						React.createElement('span', { className: 'qubely-timeline-indicator' })
					),
					enableDateTime == 1 && React.createElement(
						'div',
						{ className: 'qubely-timeline-date-container' },
						React.createElement(RichText.Content, { tagName: 'div', className: 'qubely-timeline-date', value: date })
					)
				);
			});
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    orientation = _props$attributes.orientation,
			    animation = _props$attributes.animation,
			    interaction = _props$attributes.interaction;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-timeline ' + interactionClass + ' qubely-timeline-layout-vertical qubely-timeline-orientation-' + orientation },
					React.createElement(
						'div',
						{ className: 'qubely-timeline-items' },
						this.renderTimeline()
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/timeline/index.js":
/*!**************************************!*\
  !*** ./src/blocks/timeline/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/timeline/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/timeline/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/timeline/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/timeline', {
	title: __('Timeline'),
	category: 'qubely',
	description: 'Showcase detailed timelines/roadmaps with Qubely Timeline.',
	icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-timeline.svg', alt: __('Timeline') }),
	supports: {
		align: ['center', 'wide', 'full']
	},
	keywords: [__('Timeline'), __('Content'), __('Roadmap')],
	example: {
		attributes: {
			timelineItems: 1,
			orientation: 'left',
			enableDateTime: false,
			verticalSpacing: {
				md: 50,
				unit: 'px'
			},
			timelineContents: [{
				description: __('Make headlines/titles that attract users with Qubely Heading.', 'qubely')
			}, {
				description: __('Make headlines/title', 'qubely')
			}]
		}
	},
	attributes: _extends({
		uniqueId: { type: 'string', default: '' }
	}, globalAttributes, {
		spacer: {
			type: 'object',
			default: {
				spaceTop: {
					md: '10',
					unit: "px"
				},
				spaceBottom: {
					md: '10',
					unit: "px"
				}
			},
			style: [{ selector: '{{QUBELY}}' }]
		},

		timelineContents: {
			type: 'Array',
			default: [{ title: 'Qubely Blocks', date: 'January 1, 2019', description: 'Qubely offers a rich collection of highly customizable dedicated Gutenberg blocks.' }, { title: 'Pre-made Sections', date: 'February 1, 2019', description: 'Qubely has a rich library of ready sections that can be imported and used as blocks on the Gutenberg editor.' }, { title: 'Rich Blocks Collection', date: 'March 1, 2019', description: 'Get a rich collection of blocks that are highly customizable and easy to use even for the beginners.' }, { title: 'Layout Packs', date: 'April 1, 2019', description: 'Qubely gives you many beautiful template layouts completely free of cost. These can also be customized and styled your way.' }, { title: 'Smart Layout Builder', date: 'May 1, 2019', description: 'Its row-column structure lets you take 1 to as many as 6 columns in a single row.' }]
		},

		orientation: {
			type: 'string',
			default: 'center'
		},

		horizontalSpacing: {
			type: 'object',
			default: {
				md: 70,
				unit: 'px'
			},
			style: [{
				condition: [{ key: 'orientation', relation: '==', value: 'center' }],
				selector: '@media (max-width: 767px) { {{QUBELY}} .qubely-timeline-item {padding-left: {{horizontalSpacing}};}}' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-left {padding-right: {{horizontalSpacing}};} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-left .qubely-timeline-date-container {padding-left: {{horizontalSpacing}};} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-right {padding-left: {{horizontalSpacing}};} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-right .qubely-timeline-date-container {padding-right: {{horizontalSpacing}};} }'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'left' }],
				selector: '{{QUBELY}} .qubely-timeline-item {padding-left: {{horizontalSpacing}};} ' + '{{QUBELY}} .qubely-timeline-date-container {padding-left: {{horizontalSpacing}};}'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'right' }],
				selector: '{{QUBELY}} .qubely-timeline-item {padding-right: {{horizontalSpacing}};} ' + '{{QUBELY}} .qubely-timeline-date-container {padding-right: {{horizontalSpacing}};}'
			}]
		},

		verticalSpacing: {
			type: 'object',
			default: {
				md: 100,
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-item:not(:last-child) {margin-bottom: {{verticalSpacing}};} '
			}]
		},

		// Content
		enableContentBorder: {
			type: 'boolean',
			default: false
		},

		contentBorderWidth: {
			type: 'object',
			default: {
				md: 1,
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-content {border-style: solid; border-width: {{contentBorderWidth}};}'
			}, {
				condition: [{ key: 'enableContentBorder', relation: '==', value: true }, { key: 'orientation', relation: '==', value: 'center' }],
				selector: '@media (max-width: 767px) { {{QUBELY}} .qubely-timeline-content.qubely-content-has-border:after {border-width: calc(15px + {{contentBorderWidth}}); left: calc(-15px*2 - {{contentBorderWidth}}*2 - {{contentBorderWidth}}/2);} }' + // Phone
				'@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-left .qubely-timeline-content.qubely-content-has-border:after {border-width: calc(15px + {{contentBorderWidth}}); right: calc(-15px*2 - {{contentBorderWidth}}*2 - {{contentBorderWidth}}/2);} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-right .qubely-timeline-content.qubely-content-has-border:after {border-width: calc(15px + {{contentBorderWidth}}); left: calc(-15px*2 - {{contentBorderWidth}}*2 - {{contentBorderWidth}}/2);} }'
			}, {
				condition: [{ key: 'enableContentBorder', relation: '==', value: true }, { key: 'orientation', relation: '==', value: 'left' }],
				selector: '{{QUBELY}} .qubely-timeline-content.qubely-content-has-border:after {border-width: calc(15px + {{contentBorderWidth}}); left: calc(-15px*2 - {{contentBorderWidth}}*2 - {{contentBorderWidth}}/2);}'
			}, {
				condition: [{ key: 'enableContentBorder', relation: '==', value: true }, { key: 'orientation', relation: '==', value: 'right' }],
				selector: '{{QUBELY}} .qubely-timeline-content.qubely-content-has-border:after {border-width: calc(15px + {{contentBorderWidth}}); right: calc(-15px*2 - {{contentBorderWidth}}*2 - {{contentBorderWidth}}/2);}'
			}]
		},

		contentBorderColor: {
			type: 'string',
			default: '#F6F7FB',
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-content {border-color: {{contentBorderColor}};}'
			}, {
				condition: [{ key: 'enableContentBorder', relation: '==', value: true }, { key: 'orientation', relation: '==', value: 'center' }],
				selector: '@media (max-width: 767px) { {{QUBELY}} .qubely-timeline-content.qubely-content-has-border:after {border-color: transparent {{contentBorderColor}} transparent transparent;} }' + // Phone
				'@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-left .qubely-timeline-content.qubely-content-has-border:after {border-color: transparent transparent transparent {{contentBorderColor}};}' + '{{QUBELY}} .qubely-timeline-right .qubely-timeline-content.qubely-content-has-border:after {border-color: transparent {{contentBorderColor}} transparent transparent;} }'
			}, {
				condition: [{ key: 'enableContentBorder', relation: '==', value: true }, { key: 'orientation', relation: '==', value: 'left' }],
				selector: '{{QUBELY}} .qubely-timeline-content.qubely-content-has-border:after {border-color: transparent {{contentBorderColor}} transparent transparent;}'
			}, {
				condition: [{ key: 'enableContentBorder', relation: '==', value: true }, { key: 'orientation', relation: '==', value: 'right' }],
				selector: '{{QUBELY}} .qubely-timeline-content.qubely-content-has-border:after {border-color: transparent transparent transparent {{contentBorderColor}};}'
			}]
		},

		contentBg: {
			type: 'string',
			default: '#F9F9F9',
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-content {background-color: {{contentBg}};}'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'center' }],
				selector: '@media (max-width: 767px) { {{QUBELY}} .qubely-timeline-content:before {border-color: transparent {{contentBg}} transparent transparent;} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-left .qubely-timeline-content:before {border-color: transparent transparent transparent {{contentBg}};} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-right .qubely-timeline-content:before {border-color: transparent {{contentBg}} transparent transparent;} }'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'left' }],
				selector: '{{QUBELY}} .qubely-timeline-content:before {border-color: transparent {{contentBg}} transparent transparent;}'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'right' }],
				selector: '{{QUBELY}} .qubely-timeline-content:before {border-color: transparent transparent transparent {{contentBg}};}'
			}]
		},

		contentPadding: {
			type: 'object',
			default: {
				openPadding: 1,
				paddingType: 'global',
				unit: 'px',
				global: {
					md: 30
				}
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-content'
			}]
		},

		contentBorderRadius: {
			type: 'object',
			default: {
				openBorderRadius: 1,
				radiusType: 'global',
				global: {
					md: 5
				},
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-content'
			}]
		},

		contentBoxShadow: {
			type: 'object',
			default: {
				openShadow: true,
				vertical: 3,
				horizontal: 0,
				blur: 6,
				spread: 0,
				color: 'rgba(0,0,0,0.1)'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-content'
			}]
		},

		// Heading
		headingLevel: {
			type: 'number',
			default: 4
		},

		headingTypography: {
			type: 'object',
			default: {},
			style: [{
				selector: '{{QUBELY}} .qubely-block-timeline .qubely-timeline-items .qubely-timeline-item .qubely-timeline-content .qubely-timeline-description .qubely-timeline-title'
			}]
		},

		headingColor: {
			type: 'string',
			default: '',
			style: [{ selector: '{{QUBELY}} .qubely-block-timeline .qubely-timeline-items .qubely-timeline-item .qubely-timeline-content .qubely-timeline-description .qubely-timeline-title {color: {{headingColor}};}' }]
		},

		headingSpacing: {
			type: 'object',
			default: {
				md: 10,
				unit: 'px'
			},
			style: [{ selector: '{{QUBELY}} .qubely-timeline-title {margin: 0 0 {{headingSpacing}} 0;}' }]
		},

		// Content
		contentColor: {
			type: 'string',
			default: '',
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-description {color: {{contentColor}};}'
			}]
		},

		contentTypography: {
			type: 'object',
			default: {},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-description'
			}]
		},

		// Date Time
		enableDateTime: {
			type: 'boolean',
			default: true
		},

		enableDateTimeTypography: {
			type: 'object',
			default: {},
			style: [{
				condition: [{ key: 'enableDateTime', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-timeline-date'
			}]
		},

		enableDateTimeColor: {
			type: 'string',
			default: '',
			style: [{
				condition: [{ key: 'enableDateTime', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-timeline-date {color: {{enableDateTimeColor}};}'
			}]
		},

		enableImage: {
			type: 'boolean',
			default: false
		},

		imagePosition: {
			type: 'string',
			default: 'before',
			style: [{
				condition: [{ key: 'enableImage', relation: '==', value: true }, { key: 'imagePosition', relation: '==', value: 'after' }],
				selector: '{{QUBELY}} .qubely-timeline-content {display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: reverse; -ms-flex-direction: column-reverse; flex-direction: column-reverse;}'
			}]
		},

		imageBorderRadius: {
			type: 'object',
			default: {},
			style: [{
				condition: [{ key: 'enableImage', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-timeline-image-container img'
			}]
		},

		imageSpacing: {
			type: 'object',
			default: {
				md: 20,
				unit: 'px'
			},
			style: [{
				condition: [{ key: 'enableImage', relation: '==', value: true }, { key: 'imagePosition', relation: '==', value: 'before' }],
				selector: '{{QUBELY}} .qubely-timeline-image-container {margin-bottom: {{imageSpacing}};}'
			}, {
				condition: [{ key: 'enableImage', relation: '==', value: true }, { key: 'imagePosition', relation: '==', value: 'after' }],
				selector: '{{QUBELY}} .qubely-timeline-image-container {margin-top: {{imageSpacing}};}'
			}]
		},

		// Connector
		connectorSize: {
			type: 'object',
			default: {
				md: 48,
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector {width: {{connectorSize}}; height: {{connectorSize}};}'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'center' }],
				selector: '@media (max-width: 767px) { {{QUBELY}} .qubely-timeline-connector {left: calc(-{{connectorSize}}/2);margin-top: calc(-{{connectorSize}}/2);} }' + // Phone
				'@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-left .qubely-timeline-connector {right: calc(-{{connectorSize}}/2);} }' + '@media (min-width: 768px) { {{QUBELY}} .qubely-timeline-right .qubely-timeline-connector {left: calc(-{{connectorSize}}/2);} }'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'left' }],
				selector: '{{QUBELY}} .qubely-timeline-connector {left: calc(-{{connectorSize}}/2); margin-top: calc(-{{connectorSize}}/2)}'
			}, {
				condition: [{ key: 'orientation', relation: '==', value: 'right' }],
				selector: '{{QUBELY}} .qubely-timeline-connector {right: calc(-{{connectorSize}}/2); margin-top: calc(-{{connectorSize}}/2)}'
			}]
		},

		connectorColor: {
			type: 'string',
			default: '#2184F9',
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector {background-color: {{connectorColor}};}'
			}]
		},

		connectorBorder: {
			type: 'object',
			default: {},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector'
			}]
		},

		connectorBoxShadow: {
			type: 'object',
			default: {},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector'
			}]
		},

		connectorBorderRadius: {
			type: 'object',
			default: {
				openBorderRadius: 1,
				radiusType: 'global',
				global: {
					md: 50
				},
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector'
			}]
		},

		connectorIcon: {
			type: 'string',
			default: 'far fa-calendar-times'
		},

		connectorIconSize: {
			type: 'object',
			default: {
				md: 18,
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector-icon {font-size: {{connectorIconSize}};}'
			}]
		},

		connectorIconColor: {
			type: 'string',
			default: '#fff',
			style: [{
				selector: '{{QUBELY}} .qubely-timeline-connector-icon {color: {{connectorIconColor}};}'
			}]
		},

		// Bar
		connectorBarWidth: {
			type: 'object',
			default: {
				md: 6,
				unit: 'px'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-block-timeline:after {width: {{connectorBarWidth}};}'
			}]
		},

		connectorBarColor: {
			type: 'string',
			default: '#D2D2D2',
			style: [{
				selector: '{{QUBELY}} .qubely-block-timeline:after {background-color: {{connectorBarColor}};}'
			}]
		},

		//
		timelineItems: { type: 'number', default: 5 },
		sourceOfCopiedStyle: { type: 'boolean', default: false }
	}),
	edit: _Edit2.default,
	save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/timeline/style.scss":
/*!****************************************!*\
  !*** ./src/blocks/timeline/style.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/timeline/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/videopopup/Edit.js":
/*!***************************************!*\
  !*** ./src/blocks/videopopup/Edit.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls;
var _wp$qubelyComponents = wp.qubelyComponents,
    Media = _wp$qubelyComponents.Media,
    Background = _wp$qubelyComponents.Background,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Range = _wp$qubelyComponents.Range,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Separator = _wp$qubelyComponents.Separator,
    RadioAdvanced = _wp$qubelyComponents.RadioAdvanced,
    Typography = _wp$qubelyComponents.Typography,
    Select = _wp$qubelyComponents.Select,
    Color = _wp$qubelyComponents.Color,
    Styles = _wp$qubelyComponents.Styles,
    Toggle = _wp$qubelyComponents.Toggle,
    Border = _wp$qubelyComponents.Border,
    Alignment = _wp$qubelyComponents.Alignment,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    _wp$qubelyComponents$2 = _wp$qubelyComponents.ContextMenu,
    ContextMenu = _wp$qubelyComponents$2.ContextMenu,
    handleContextMenu = _wp$qubelyComponents$2.handleContextMenu;

var Edit = function (_Component) {
    _inherits(Edit, _Component);

    function Edit(props) {
        _classCallCheck(this, Edit);

        var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).call(this, props));

        _this.state = { device: 'md', spacer: true };
        return _this;
    }

    _createClass(Edit, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                setAttributes = _props.setAttributes,
                clientId = _props.clientId,
                uniqueId = _props.attributes.uniqueId;

            var _client = clientId.substr(0, 6);
            if (!uniqueId) {
                setAttributes({ uniqueId: _client });
            } else if (uniqueId && uniqueId != _client) {
                setAttributes({ uniqueId: _client });
            }

            this.$el = $(this.el);
            this.$el.magnificPopup({
                type: 'iframe',
                rtl: true,
                mainClass: 'mfp-fade',
                removalDelay: 300,
                preloader: false,
                fixedContentPos: false
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                attributes = _props2.attributes,
                isSelected = _props2.isSelected,
                setAttributes = _props2.setAttributes,
                _props2$attributes = _props2.attributes,
                uniqueId = _props2$attributes.uniqueId,
                className = _props2$attributes.className,
                videoSource = _props2$attributes.videoSource,
                bgVideo = _props2$attributes.bgVideo,
                url = _props2$attributes.url,
                icon = _props2$attributes.icon,
                height = _props2$attributes.height,
                iconColor = _props2$attributes.iconColor,
                iconHoverColor = _props2$attributes.iconHoverColor,
                iconSize = _props2$attributes.iconSize,
                iconSizeCustom = _props2$attributes.iconSizeCustom,
                background = _props2$attributes.background,
                enableBackgroundOverlay = _props2$attributes.enableBackgroundOverlay,
                borderRadius = _props2$attributes.borderRadius,
                layout = _props2$attributes.layout,
                shadow = _props2$attributes.shadow,
                shadowHover = _props2$attributes.shadowHover,
                postfix = _props2$attributes.postfix,
                prefix = _props2$attributes.prefix,
                typography = _props2$attributes.typography,
                textGap = _props2$attributes.textGap,
                overlayBackground = _props2$attributes.overlayBackground,
                overlayBlend = _props2$attributes.overlayBlend,
                overlayOpacity = _props2$attributes.overlayOpacity,
                overlayHoverOpacity = _props2$attributes.overlayHoverOpacity,
                iconBorderRadius = _props2$attributes.iconBorderRadius,
                iconBgColor = _props2$attributes.iconBgColor,
                isRipple = _props2$attributes.isRipple,
                iconHoverBgColor = _props2$attributes.iconHoverBgColor,
                border = _props2$attributes.border,
                hoverBorder = _props2$attributes.hoverBorder,
                prePostColor = _props2$attributes.prePostColor,
                prePostHoverColor = _props2$attributes.prePostHoverColor,
                alignment = _props2$attributes.alignment,
                animation = _props2$attributes.animation,
                globalZindex = _props2$attributes.globalZindex,
                enablePosition = _props2$attributes.enablePosition,
                selectPosition = _props2$attributes.selectPosition,
                positionXaxis = _props2$attributes.positionXaxis,
                positionYaxis = _props2$attributes.positionYaxis,
                hideTablet = _props2$attributes.hideTablet,
                hideMobile = _props2$attributes.hideMobile,
                globalCss = _props2$attributes.globalCss,
                interaction = _props2$attributes.interaction;
            var device = this.state.device;

            if (uniqueId) {
                CssGenerator(this.props.attributes, 'videopopup', uniqueId);
            }

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    InspectorControls,
                    { key: 'inspector' },
                    React.createElement(
                        PanelBody,
                        { title: '' },
                        React.createElement(Styles, { value: layout, onChange: function onChange(val) {
                                return setAttributes({ layout: val });
                            },
                            options: [{ value: 'fill', svg: _icons2.default.videopopup_fill, label: __('Fill') }, { value: 'nofill', svg: _icons2.default.videopopup_classic, label: __('Classic') }]
                        }),
                        React.createElement(Alignment, { label: __('Alignment'), value: alignment, alignmentType: 'content', onChange: function onChange(val) {
                                return setAttributes({ alignment: val });
                            }, disableJustify: true })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Video'), initialOpen: false },
                        React.createElement(Select, { label: __('Source'), value: videoSource, options: [['local', __('Self Hosted ( Local )')], ['external', __('External')]], onChange: function onChange(val) {
                                return setAttributes({ videoSource: val });
                            } }),
                        videoSource == 'external' ? React.createElement(TextControl, { type: 'url', label: __('URL'), value: url, onChange: function onChange(val) {
                                if (val.indexOf('youtu.be')) {
                                    val = val.replace("youtu.be/", "www.youtube.com/watch?v=");
                                }
                                setAttributes({ url: val });
                            } }) : React.createElement(Media, {
                            video: true,
                            panel: true,
                            value: bgVideo,
                            multiple: false,
                            type: ['video'],
                            label: __('Path'),
                            onChange: function onChange(val) {
                                return setAttributes({ bgVideo: val });
                            }
                        })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Icon'), initialOpen: false },
                        React.createElement(RadioAdvanced, {
                            label: __('Icon'),
                            options: [{ icon: 'fas fa-play', value: 'fas fa-play', title: __('Play') }, { icon: 'fas fa-video', value: 'fas fa-video', title: __('Video') }, { icon: 'fab fa-youtube', value: 'fab fa-youtube', title: __('YouTube') }, { icon: 'fab fa-vimeo-v', value: 'fab fa-vimeo-v', title: __('Vimeo') }, { icon: 'fas fa-search-plus', value: 'fas fa-search-plus', title: __('Search') }],
                            value: icon,
                            onChange: function onChange(val) {
                                return setAttributes({ icon: val });
                            }
                        }),
                        React.createElement(BorderRadius, { label: __('Radius'), value: iconBorderRadius, onChange: function onChange(val) {
                                return setAttributes({ iconBorderRadius: val });
                            }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                return _this2.setState({ device: value });
                            } }),
                        React.createElement(RadioAdvanced, {
                            label: __('Icon Size'),
                            options: [{ label: 'S', value: 'small', title: 'Small' }, { label: 'M', value: 'medium', title: 'Medium' }, { label: 'L', value: 'large', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
                            value: iconSize,
                            onChange: function onChange(val) {
                                return setAttributes({ iconSize: val });
                            }
                        }),
                        iconSize == 'custom' && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, { value: iconSizeCustom, onChange: function onChange(val) {
                                    return setAttributes({ iconSizeCustom: val });
                                }, min: 20, max: 200, responsive: true, unit: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } })
                        ),
                        React.createElement(
                            Tabs,
                            null,
                            React.createElement(
                                Tab,
                                { tabTitle: __('Normal') },
                                React.createElement(Color, { label: __('Icon Color'), value: iconColor, onChange: function onChange(val) {
                                        return setAttributes({ iconColor: val });
                                    } }),
                                React.createElement(Color, { label: __('Background Color'), value: iconBgColor || '', onChange: function onChange(val) {
                                        return setAttributes({ iconBgColor: val });
                                    } }),
                                React.createElement(Border, { label: __('Border'), value: border, onChange: function onChange(val) {
                                        return setAttributes({ border: val });
                                    }, min: 0, max: 20, responsive: true, unit: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            ),
                            React.createElement(
                                Tab,
                                { tabTitle: __('Hover') },
                                React.createElement(Color, { label: __('Icon Color'), value: iconHoverColor, onChange: function onChange(val) {
                                        return setAttributes({ iconHoverColor: val });
                                    } }),
                                React.createElement(Color, { label: __('Background Color'), value: iconHoverBgColor || '', onChange: function onChange(val) {
                                        return setAttributes({ iconHoverBgColor: val });
                                    } }),
                                React.createElement(Border, { label: __('Border'), value: hoverBorder, onChange: function onChange(val) {
                                        return setAttributes({ hoverBorder: val });
                                    }, min: 0, max: 20, responsive: true, unit: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } })
                            )
                        ),
                        iconBgColor && React.createElement(Toggle, { label: __('Ripple Effect'), value: isRipple, onChange: function onChange(val) {
                                return setAttributes({ isRipple: val });
                            } })
                    ),
                    React.createElement(
                        PanelBody,
                        { title: __('Prefix & Postfix'), initialOpen: false },
                        React.createElement(TextControl, { label: __('Prefix'), value: prefix, onChange: function onChange(val) {
                                return setAttributes({ prefix: val });
                            } }),
                        React.createElement(TextControl, { label: __('Postfix'), value: postfix, onChange: function onChange(val) {
                                return setAttributes({ postfix: val });
                            } }),
                        (prefix || postfix) && React.createElement(
                            Fragment,
                            null,
                            React.createElement(Range, { label: __('Spacing'), value: textGap, onChange: function onChange(val) {
                                    return setAttributes({ textGap: val });
                                }, min: 0, max: 150, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Typography, { label: __('Typography'), color: true, value: typography, onChange: function onChange(val) {
                                    return setAttributes({ typography: val });
                                }, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(Color, { label: __('Color'), value: prePostColor, onChange: function onChange(val) {
                                            return setAttributes({ prePostColor: val });
                                        } })
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Hover') },
                                    React.createElement(Color, { label: __('Color'), value: prePostHoverColor, onChange: function onChange(val) {
                                            return setAttributes({ prePostHoverColor: val });
                                        } })
                                )
                            )
                        )
                    ),
                    layout == 'fill' && React.createElement(
                        Fragment,
                        null,
                        React.createElement(
                            PanelBody,
                            { title: __('Background'), initialOpen: false },
                            React.createElement(Range, { label: __('Height'), value: height, onChange: function onChange(val) {
                                    return setAttributes({ height: val });
                                }, min: 100, max: 1200, responsive: true, unit: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                    return _this2.setState({ device: value });
                                } }),
                            React.createElement(Background, { label: __('Background'), sources: ['image', 'gradient'], value: background, onChange: function onChange(val) {
                                    return setAttributes({ background: val });
                                } }),
                            background.openBg == 1 && React.createElement(
                                Fragment,
                                null,
                                React.createElement(BorderRadius, { label: __('Radius'), value: borderRadius, onChange: function onChange(value) {
                                        return setAttributes({ borderRadius: value });
                                    }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                                        return _this2.setState({ device: value });
                                    } }),
                                React.createElement(Separator, null),
                                React.createElement(Toggle, { label: __('Enable Overlay'), value: enableBackgroundOverlay, onChange: function onChange(val) {
                                        return setAttributes({ enableBackgroundOverlay: val });
                                    } }),
                                enableBackgroundOverlay == 1 && React.createElement(
                                    Fragment,
                                    null,
                                    React.createElement(Background, { label: __('Overlay'), sources: ['image', 'gradient'], value: overlayBackground, onChange: function onChange(val) {
                                            return setAttributes({ overlayBackground: val });
                                        } }),
                                    overlayBackground.openBg == 1 && React.createElement(
                                        Fragment,
                                        null,
                                        React.createElement(RangeControl, { beforeIcon: "lightbulb", label: __('Opacity'), min: 0.01, max: 1, step: .01, value: overlayOpacity, onChange: function onChange(val) {
                                                return setAttributes({ overlayOpacity: val });
                                            } }),
                                        React.createElement(RangeControl, { beforeIcon: "lightbulb", label: __('Hover Opacity'), min: 0.01, max: 1, step: .01, value: overlayHoverOpacity, onChange: function onChange(val) {
                                                return setAttributes({ overlayHoverOpacity: val });
                                            } }),
                                        React.createElement(Select, { label: __('Overlay Blend Mode'), options: [['normal', __('Normal')], ['multiply', __('Multiply')], ['screen', __('Screen')], ['overlay', __('Overlay')], ['darken', __('Darken')], ['lighten', __('Lighten')], ['color-dodge', __('Color Dodge')], ['saturation', __('Saturation')], ['luminosity', __('Luminosity')], ['color', __('Color')], ['color-burn', __('Color Burn')], ['exclusion', __('Exclusion')], ['hue', __('Hue')]], value: overlayBlend, onChange: function onChange(val) {
                                                return setAttributes({ overlayBlend: val });
                                            } })
                                    )
                                )
                            ),
                            React.createElement(
                                Tabs,
                                null,
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Normal') },
                                    React.createElement(BoxShadow, { label: __('Box-Shadow'), value: shadow, onChange: function onChange(val) {
                                            return setAttributes({ shadow: val });
                                        } })
                                ),
                                React.createElement(
                                    Tab,
                                    { tabTitle: __('Hover') },
                                    React.createElement(BoxShadow, { label: __('Box-Shadow'), value: shadowHover, onChange: function onChange(val) {
                                            return setAttributes({ shadowHover: val });
                                        } })
                                )
                            )
                        )
                    ),
                    animationSettings(uniqueId, animation, setAttributes),
                    interactionSettings(uniqueId, interaction, setAttributes)
                ),
                React.createElement(
                    BlockControls,
                    null,
                    React.createElement(
                        Toolbar,
                        null,
                        React.createElement(InlineToolbar, _extends({
                            data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true }]
                        }, this.props, {
                            prevState: this.state
                        }))
                    )
                ),
                globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
                React.createElement(
                    'div',
                    { className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
                    React.createElement(
                        'div',
                        { className: 'qubely-block-videopopup-wrapper qubely-alignment-' + alignment, onContextMenu: function onContextMenu(event) {
                                return handleContextMenu(event, _this2.refs.qubelyContextMenu);
                            } },
                        layout == 'fill' && React.createElement('div', { className: 'qubely-block-videopopup-overlay' }),
                        React.createElement(
                            'div',
                            { className: 'qubely-block-videopopup qubely-size-' + iconSize },
                            React.createElement(
                                'a',
                                { className: 'qubely-video-popup', ref: function ref(el) {
                                        return _this2.el = el;
                                    }, href: videoSource == 'external' ? url : bgVideo.url || '' },
                                prefix && React.createElement(
                                    'span',
                                    { className: 'qubely-video-popup-prefix' },
                                    ' ',
                                    prefix,
                                    ' '
                                ),
                                icon && React.createElement(
                                    'span',
                                    { className: 'qubely-btn-icon-wrapper' },
                                    React.createElement(
                                        'i',
                                        { className: 'qubely-btn-icon ' + icon },
                                        iconBgColor && isRipple && React.createElement('span', { className: 'qubely-ripple' })
                                    )
                                ),
                                postfix && React.createElement(
                                    'span',
                                    { className: 'qubely-video-popup-postfix' },
                                    postfix
                                )
                            )
                        ),
                        React.createElement(
                            'div',
                            { ref: 'qubelyContextMenu', className: 'qubely-context-menu-wraper' },
                            React.createElement(ContextMenu, {
                                name: name,
                                clientId: clientId,
                                attributes: attributes,
                                setAttributes: setAttributes,
                                qubelyContextMenu: this.refs.qubelyContextMenu
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/videopopup/Save.js":
/*!***************************************!*\
  !*** ./src/blocks/videopopup/Save.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    layout = _props$attributes.layout,
			    animation = _props$attributes.animation,
			    alignment = _props$attributes.alignment,
			    icon = _props$attributes.icon,
			    postfix = _props$attributes.postfix,
			    prefix = _props$attributes.prefix,
			    iconSize = _props$attributes.iconSize,
			    url = _props$attributes.url,
			    isRipple = _props$attributes.isRipple,
			    iconBorderRadius = _props$attributes.iconBorderRadius,
			    iconBgColor = _props$attributes.iconBgColor,
			    videoSource = _props$attributes.videoSource,
			    bgVideo = _props$attributes.bgVideo,
			    interaction = _props$attributes.interaction;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-videopopup-wrapper ' + interactionClass + ' qubely-alignment-' + alignment },
					layout == 'fill' && React.createElement('div', { className: 'qubely-block-videopopup-overlay' }),
					React.createElement(
						'div',
						{ className: 'qubely-block-videopopup qubely-size-' + iconSize },
						React.createElement(
							'a',
							{ className: 'qubely-video-popup', href: videoSource == 'external' ? url : bgVideo.url || '' },
							prefix && React.createElement(
								'span',
								{ className: 'qubely-video-popup-prefix' },
								' ',
								prefix,
								' '
							),
							icon && React.createElement(
								'i',
								{ className: 'qubely-btn-icon ' + icon },
								iconBgColor && isRipple && React.createElement('span', { className: 'qubely-ripple' })
							),
							postfix && React.createElement(
								'span',
								{ className: 'qubely-video-popup-postfix' },
								postfix
							)
						)
					)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/videopopup/index.js":
/*!****************************************!*\
  !*** ./src/blocks/videopopup/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/videopopup/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/videopopup/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/videopopup/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/videopopup', {
	title: __('Video Popup'),
	description: 'Engage your audience with videos with Qubely Video Popup.',
	icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-videopopup.svg', alt: __('Video popup Block') }),
	category: 'qubely',
	supports: {
		align: ['center', 'wide', 'full']
	},
	keywords: [__('video'), __('popup'), __('video popup')],
	example: {
		attributes: {}
	},
	attributes: _extends({
		uniqueId: { type: 'string', default: '' }
	}, globalAttributes, {
		layout: { type: 'string', default: 'fill' },
		alignment: { type: 'string', default: 'center' },
		spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },
		videoSource: { type: 'string', default: 'external' },
		bgVideo: { type: 'object', default: {} },
		url: { type: 'string', default: 'https://www.youtube.com/watch?v=HY3sut8LTSw' },
		height: { type: 'object', default: { md: 500, unit: 'px' }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-block-videopopup-wrapper{ height:{{height}};}' }] },
		background: { type: 'object', default: { bgType: 'image', openBg: 1, bgimgSize: 'cover', bgimgPosition: 'center center', bgImage: { url: 'http://qubely.io/wp-content/uploads/qubely-assets/demo/image8.jpg' } }, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-block-videopopup-wrapper' }] },
		isRipple: { type: 'boolean', default: true },

		// Icon
		icon: { type: 'string', default: 'fas fa-play' },
		iconColor: { type: 'string', default: '#FFFFFF', style: [{ selector: '{{QUBELY}} .qubely-btn-icon{ color:{{iconColor}}; }' }] },
		iconHoverColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-btn-icon:hover{ color:{{iconHoverColor}}; }' }] },
		iconSize: { type: 'string', default: 'medium' },
		iconSizeCustom: { type: 'object', default: { md: 110, unit: 'px' }, style: [{ condition: [{ key: 'iconSize', relation: '==', value: 'custom' }], selector: '{{QUBELY}} .qubely-block-videopopup .qubely-btn-icon{ width:{{iconSizeCustom}}; height: {{iconSizeCustom}}; font-size:calc({{iconSizeCustom}} - ({{iconSizeCustom}}/1.7)); }' }] },
		iconBorderRadius: {
			type: 'object',
			default: {
				openBorderRadius: 1,
				radiusType: 'global',
				global: { md: 50 },
				unit: '%'
			},
			style: [{
				selector: '{{QUBELY}} .qubely-block-videopopup .qubely-video-popup .qubely-btn-icon, {{QUBELY}} .qubely-block-videopopup .qubely-video-popup .qubely-btn-icon .qubely-ripple'
			}]
		},

		iconBgColor: {
			type: 'string',
			default: '#2476CA',
			style: [{
				selector: '{{QUBELY}} .qubely-block-videopopup .qubely-video-popup .qubely-btn-icon{ background-color:{{iconBgColor}}; }'
			}]
		},
		iconHoverBgColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-videopopup .qubely-video-popup .qubely-btn-icon:hover{ background-color:{{iconHoverBgColor}}; }' }] },

		border: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-btn-icon' }] },
		hoverBorder: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-btn-icon:hover' }] },

		borderRadius: {
			type: 'object',
			default: {
				openBorderRadius: 1,
				radiusType: 'global'
			},
			style: [{
				condition: [{ key: 'layout', relation: '==', value: 'fill' }],
				selector: '{{QUBELY}} .qubely-block-videopopup-wrapper, {{QUBELY}} .qubely-block-videopopup-overlay'
			}]
		},

		shadow: { type: 'object', default: {}, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-block-videopopup-wrapper' }] },
		shadowHover: { type: 'object', default: {}, style: [{ condition: [{ key: 'layout', relation: '==', value: 'fill' }], selector: '{{QUBELY}} .qubely-block-videopopup-wrapper:hover' }] },
		prefix: { type: 'string', default: '' },
		postfix: { type: 'string', default: '' },
		prePostColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-videopopup-wrapper .qubely-block-videopopup span {color: {{prePostColor}};}' }] },
		prePostHoverColor: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-videopopup-wrapper:hover .qubely-block-videopopup span {color: {{prePostHoverColor}};}' }] },
		typography: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-videopopup span' }] },
		textGap: { type: 'object', default: { md: 10, unit: 'px' }, style: [{ selector: '{{QUBELY}} .qubely-video-popup-prefix{ margin-right:{{textGap}};} {{QUBELY}} .qubely-video-popup-postfix{ margin-left:{{textGap}};}' }] },

		// overlay
		enableBackgroundOverlay: { type: 'boolean', default: true },
		overlayBackground: {
			type: 'object',
			default: {
				openBg: 1,
				bgDefaultColor: '#000'
			},
			style: [{
				condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'enableBackgroundOverlay', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-block-videopopup-overlay'
			}]
		},
		overlayOpacity: {
			type: 'number',
			default: .5,
			style: [{
				condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'enableBackgroundOverlay', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-block-videopopup-overlay{opacity: {{overlayOpacity}}; }'
			}]
		},
		overlayHoverOpacity: {
			type: 'number',
			default: .6,
			style: [{
				condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'enableBackgroundOverlay', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-block-videopopup-wrapper:hover .qubely-block-videopopup-overlay{opacity: {{overlayHoverOpacity}}; }'
			}]
		},
		overlayBlend: {
			type: 'string',
			default: '',
			style: [{
				condition: [{ key: 'layout', relation: '==', value: 'fill' }, { key: 'enableBackgroundOverlay', relation: '==', value: true }],
				selector: '{{QUBELY}} .qubely-block-videopopup-overlay{ mix-blend-mode:{{overlayBlend}}; }'
			}]
		},
		sourceOfCopiedStyle: { type: 'boolean', default: false }
	}),
	edit: _Edit2.default,
	save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/videopopup/style.scss":
/*!******************************************!*\
  !*** ./src/blocks/videopopup/style.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/videopopup/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/blocks/wrapper/Edit.js":
/*!************************************!*\
  !*** ./src/blocks/wrapper/Edit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar;
var _wp$blockEditor = wp.blockEditor,
    InspectorControls = _wp$blockEditor.InspectorControls,
    BlockControls = _wp$blockEditor.BlockControls,
    InnerBlocks = _wp$blockEditor.InnerBlocks;
var _wp$qubelyComponents = wp.qubelyComponents,
    Color = _wp$qubelyComponents.Color,
    Padding = _wp$qubelyComponents.Padding,
    BoxShadow = _wp$qubelyComponents.BoxShadow,
    Tabs = _wp$qubelyComponents.Tabs,
    Tab = _wp$qubelyComponents.Tab,
    Border = _wp$qubelyComponents.Border,
    BorderRadius = _wp$qubelyComponents.BorderRadius,
    Background = _wp$qubelyComponents.Background,
    _wp$qubelyComponents$ = _wp$qubelyComponents.gloalSettings,
    globalSettingsPanel = _wp$qubelyComponents$.globalSettingsPanel,
    animationSettings = _wp$qubelyComponents$.animationSettings,
    interactionSettings = _wp$qubelyComponents$.interactionSettings,
    InlineToolbar = _wp$qubelyComponents.Inline.InlineToolbar,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator;

var Edit = function (_Component) {
	_inherits(Edit, _Component);

	function Edit() {
		_classCallCheck(this, Edit);

		var _this = _possibleConstructorReturn(this, (Edit.__proto__ || Object.getPrototypeOf(Edit)).apply(this, arguments));

		_this.state = { device: 'md', spacer: true };
		return _this;
	}

	_createClass(Edit, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    setAttributes = _props.setAttributes,
			    clientId = _props.clientId,
			    uniqueId = _props.attributes.uniqueId;

			var _client = clientId.substr(0, 6);
			if (!uniqueId) {
				setAttributes({ uniqueId: _client });
			} else if (uniqueId && uniqueId != _client) {
				setAttributes({ uniqueId: _client });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    name = _props2.name,
			    setAttributes = _props2.setAttributes,
			    isSelected = _props2.isSelected,
			    _props2$attributes = _props2.attributes,
			    uniqueId = _props2$attributes.uniqueId,
			    className = _props2$attributes.className,
			    bgColor = _props2$attributes.bgColor,
			    bgColorHover = _props2$attributes.bgColorHover,
			    bgShadow = _props2$attributes.bgShadow,
			    bgShadowHover = _props2$attributes.bgShadowHover,
			    bgBorderColorHover = _props2$attributes.bgBorderColorHover,
			    padding = _props2$attributes.padding,
			    borderRadius = _props2$attributes.borderRadius,
			    border = _props2$attributes.border,
			    animation = _props2$attributes.animation,
			    globalZindex = _props2$attributes.globalZindex,
			    enablePosition = _props2$attributes.enablePosition,
			    selectPosition = _props2$attributes.selectPosition,
			    positionXaxis = _props2$attributes.positionXaxis,
			    positionYaxis = _props2$attributes.positionYaxis,
			    hideTablet = _props2$attributes.hideTablet,
			    hideMobile = _props2$attributes.hideMobile,
			    globalCss = _props2$attributes.globalCss,
			    interaction = _props2$attributes.interaction;
			var device = this.state.device;

			if (uniqueId) {
				CssGenerator(this.props.attributes, 'wrapper', uniqueId);
			}

			return React.createElement(
				Fragment,
				null,
				React.createElement(
					InspectorControls,
					{ key: 'inspector' },
					React.createElement(
						PanelBody,
						{ title: __('Background'), initialOpen: false },
						React.createElement(
							Tabs,
							null,
							React.createElement(
								Tab,
								{ tabTitle: __('Normal') },
								React.createElement(Background, { label: __('Background'), sources: ['image', 'gradient'], value: bgColor, onChange: function onChange(val) {
										return setAttributes({ bgColor: val });
									} }),
								React.createElement(Padding, {
									label: __('Padding'),
									value: padding,
									min: 0,
									max: 300,
									responsive: true,
									device: device,
									unit: ['px', 'em', '%'],
									onChange: function onChange(val) {
										return setAttributes({ padding: val });
									},
									onDeviceChange: function onDeviceChange(value) {
										return _this2.setState({ device: value });
									}
								}),
								React.createElement(Border, { label: __('Border'), value: border, onChange: function onChange(val) {
										return setAttributes({ border: val });
									}, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
										return _this2.setState({ device: value });
									} }),
								React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bgShadow, onChange: function onChange(value) {
										return setAttributes({ bgShadow: value });
									} }),
								React.createElement(BorderRadius, { label: __('Radius'), value: borderRadius, onChange: function onChange(value) {
										return setAttributes({ borderRadius: value });
									}, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
										return _this2.setState({ device: value });
									} })
							),
							React.createElement(
								Tab,
								{ tabTitle: __('Hover') },
								React.createElement(Background, { label: __('Background'), sources: ['image', 'gradient'], value: bgColorHover, onChange: function onChange(val) {
										return setAttributes({ bgColorHover: val });
									} }),
								border.openBorder != undefined && border.openBorder == 1 && React.createElement(Color, { label: __('Border Color'), value: bgBorderColorHover, onChange: function onChange(value) {
										return setAttributes({ bgBorderColorHover: value });
									} }),
								React.createElement(BoxShadow, { label: __('Box-Shadow'), value: bgShadowHover, onChange: function onChange(value) {
										return setAttributes({ bgShadowHover: value });
									} })
							)
						)
					),
					animationSettings(uniqueId, animation, setAttributes),
					interactionSettings(uniqueId, interaction, setAttributes)
				),
				React.createElement(
					BlockControls,
					null,
					React.createElement(
						Toolbar,
						null,
						React.createElement(InlineToolbar, _extends({
							data: [{ name: 'InlineSpacer', key: 'spacer', responsive: true, unit: ['px', 'em', '%'] }]
						}, this.props, {
							prevState: this.state
						}))
					)
				),
				globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes),
				React.createElement(
					'div',
					{ className: 'qubely-block-' + uniqueId + (className ? ' ' + className : '') },
					React.createElement(
						'div',
						{ className: 'qubely-block-wrapper-block' },
						React.createElement(InnerBlocks, { templateLock: false })
					)
				)
			);
		}
	}]);

	return Edit;
}(Component);

exports.default = Edit;

/***/ }),

/***/ "./src/blocks/wrapper/Save.js":
/*!************************************!*\
  !*** ./src/blocks/wrapper/Save.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var InnerBlocks = wp.blockEditor.InnerBlocks;
var _wp$qubelyComponents$ = wp.qubelyComponents.HelperFunction,
    animationAttr = _wp$qubelyComponents$.animationAttr,
    IsInteraction = _wp$qubelyComponents$.IsInteraction;

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save() {
		_classCallCheck(this, Save);

		return _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).apply(this, arguments));
	}

	_createClass(Save, [{
		key: 'render',
		value: function render() {
			var _props$attributes = this.props.attributes,
			    uniqueId = _props$attributes.uniqueId,
			    animation = _props$attributes.animation,
			    interaction = _props$attributes.interaction;

			var interactionClass = IsInteraction(interaction) ? 'qubley-block-interaction' : '';
			return React.createElement(
				'div',
				_extends({ className: 'qubely-block-' + uniqueId }, animationAttr(animation)),
				React.createElement(
					'div',
					{ className: 'qubely-block-wrapper-block ' + interactionClass },
					React.createElement(InnerBlocks.Content, null)
				)
			);
		}
	}]);

	return Save;
}(Component);

exports.default = Save;

/***/ }),

/***/ "./src/blocks/wrapper/index.js":
/*!*************************************!*\
  !*** ./src/blocks/wrapper/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

__webpack_require__(/*! ./style.scss */ "./src/blocks/wrapper/style.scss");

var _Edit = __webpack_require__(/*! ./Edit */ "./src/blocks/wrapper/Edit.js");

var _Edit2 = _interopRequireDefault(_Edit);

var _Save = __webpack_require__(/*! ./Save */ "./src/blocks/wrapper/Save.js");

var _Save2 = _interopRequireDefault(_Save);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var globalAttributes = wp.qubelyComponents.gloalSettings.globalAttributes;


registerBlockType('qubely/wrapper', {
    title: __('Block Wrapper'),
    description: 'Make Blocks more attractive with Block Wraper.',
    category: 'qubely',
    icon: React.createElement('img', { src: qubely_admin.plugin + 'assets/img/blocks/block-wrapper.svg', alt: __('Icon Block') }),
    supports: {
        align: ['center', 'wide', 'full']
    },
    keywords: [__('Block'), __('Block Wrapper'), __('Wrapper')],
    example: {
        attributes: {},
        innerBlocks: [{
            name: 'qubely/icon',
            attributes: {
                iconStyle: "fill",
                name: "fas fa-rocket"
            }
        }]

    },
    attributes: _extends({
        uniqueId: { type: 'string', default: '' }
    }, globalAttributes, {
        spacer: { type: 'object', default: { spaceTop: { md: '0', unit: "px" }, spaceBottom: { md: '0', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },

        bgColor: { type: 'object', default: { openColor: 1, type: "color", color: "#f5f5f5" }, style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block' }] },
        bgColorHover: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block:hover' }] },

        padding: {
            type: 'object',
            default: {
                openPadding: 1,
                paddingType: 'global',
                global: { md: '30' },
                custom: { md: '30 30 30 30' },
                unit: 'px'
            },
            style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block ' }]
        },
        borderRadius: {
            type: 'object',
            default: {
                openBorderRadius: 1,
                radiusType: 'global',
                global: { md: 4 },
                unit: 'px'
            },
            style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block' }]
        },
        border: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block' }] },
        bgBorderColorHover: { type: 'string', default: '', style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block:hover {border-color: {{bgBorderColorHover}};}' }] },

        bgShadow: { type: 'object', default: { openShadow: 1, horizontal: 1, vertical: 1, blur: 2, color: 'rgba(0, 0, 0, .2)', spread: 0 }, style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block' }] },
        bgShadowHover: { type: 'object', default: { color: '' }, style: [{ selector: '{{QUBELY}} .qubely-block-wrapper-block:hover' }] }
    }),
    edit: _Edit2.default,
    save: _Save2.default
});

/***/ }),

/***/ "./src/blocks/wrapper/style.scss":
/*!***************************************!*\
  !*** ./src/blocks/wrapper/style.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/blocks/wrapper/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/CssGenerator.js":
/*!****************************************!*\
  !*** ./src/components/CssGenerator.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CssGenerator = exports.singleField = exports.objectAppend = exports.objectReplace = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _CssHelper = __webpack_require__(/*! ./CssHelper */ "./src/components/CssHelper.js");

// Replace Value
var replaceData = function replaceData(selector, key, value) {
    return selector.replace(new RegExp(key, "g"), value);
};

// Object Empty Check
var isEmpty = function isEmpty(obj) {
    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && Object.keys(obj).length != 0 ? true : false;
};

// {{QUBELY}} Replace
var replaceWarp = function replaceWarp(selector, ID) {
    return selector.replace(new RegExp('{{QUBELY}}', "g"), '.qubely-block-' + ID);
};

var objectReplace = exports.objectReplace = function objectReplace(warp, value) {
    var output = '';
    value.forEach(function (sel) {
        output += sel + ';';
    });
    return warp + '{' + output + '}';
};

var objectAppend = exports.objectAppend = function objectAppend(warp, value) {
    var output = '';
    value.forEach(function (sel) {
        output += warp + sel;
    });
    return output;
};

// Plain String/Number Field CSS Replace
var singleField = exports.singleField = function singleField(style, blockID, key, value) {
    value = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) != 'object' ? value : objectField(value).data;
    if (typeof style == 'string') {
        if (style) {
            if (value) {
                var warpData = replaceWarp(style, blockID);
                if (typeof value == 'boolean') {
                    return [warpData];
                } else {
                    if (warpData.indexOf('{{') == -1 && warpData.indexOf('{') < 0) {
                        return [warpData + value];
                    } else {
                        return [replaceData(warpData, '{{' + key + '}}', value)];
                    }
                }
            } else {
                return [];
            }
        } else {
            return [replaceWarp(value, blockID)]; // Custom CSS Field
        }
    } else {
        var output = [];
        style.forEach(function (sel) {
            output.push(replaceData(replaceWarp(sel, blockID), '{{' + key + '}}', value));
        });
        return output;
    }
};

// Object Field CSS Replace
var objectField = function objectField(data) {
    if (data.openTypography) {
        return { data: (0, _CssHelper.cssTypography)(data), action: 'append' }; //Typography
    } else if (data.openBg) {
        return { data: (0, _CssHelper.cssBackground)(data), action: 'append' }; //Background
    } else if (data.openBorder) {
        return { data: (0, _CssHelper.cssBorder)(data), action: 'append' }; //Border
    } else if (data.openShadow && data.color) {
        return { data: (0, _CssHelper.cssBoxShadow)(data), action: 'append' }; //Shadow
    } else if (data.direction) {
        return { data: (0, _CssHelper.cssGradient)(data, 'return'), action: 'append' }; //Gradient
    } else if (typeof data.top != 'undefined' || typeof data.left != 'undefined' || typeof data.right != 'undefined' || typeof data.bottom != 'undefined') {
        return { data: (0, _CssHelper.cssDimension)(data), action: 'replace' }; //Dimension
    } else if (data.openShape) {
        return { data: (0, _CssHelper.cssShape)(data), action: 'append' }; //Shape
    } else if (data.openColor) {
        return { data: (0, _CssHelper.cssColor)(data), action: 'append' }; //Color Advanced
    } else if (data.spaceTop || data.spaceBottom) {
        return { data: (0, _CssHelper.cssSpacer)(data), action: 'append' }; //Spacer
    } else if (data.selectedSize) {
        return { data: (0, _CssHelper.cssSize)(data), action: 'append' }; //Size
    } else if (data.openBorderRadius) {
        return { data: (0, _CssHelper.cssBorderRadius)(data), action: 'append' }; //cssBorderRadius
    } else if (data.openPadding) {
        return { data: (0, _CssHelper.cssPadding)(data), action: 'append' }; //padding
    } else if (data.openMargin) {
        return { data: (0, _CssHelper.cssMargin)(data), action: 'append' }; //margin
    } else if (data.openRowReverse) {
        return { data: (0, _CssHelper.cssRowReverse)(data), action: 'append' }; //column reverse
    } else if (data.openTransfrom) {
        return { data: (0, _CssHelper.cssTransform)(data), action: 'append' }; //transform 
    } else {
        return { data: '', action: 'append' };
    }
};

var checkDepends = function checkDepends(settings, selectData, key, indexStyle) {
    var _depends = true;
    if (selectData.hasOwnProperty('condition')) {
        selectData.condition.forEach(function (data) {
            var previous = _depends;
            if (data.relation == '==') {
                if (typeof data.value == 'string' || typeof data.value == 'number' || typeof data.value == 'boolean') {
                    if (settings[data.key] == data.value) {
                        _depends = true;
                    } else {
                        _depends = false;
                    }
                } else {
                    var select = false;
                    data.value.forEach(function (arrData) {
                        if (settings[data.key] == arrData) {
                            select = true;
                        }
                    });
                    if (select) {
                        _depends = true;
                    }
                }
            } else if (data.relation == '!=') {
                if (typeof data.value == 'string' || typeof data.value == 'number' || typeof data.value == 'boolean') {
                    if (settings[data.key] != data.value) {
                        _depends = true;
                    } else {
                        _depends = false;
                    }
                } else {
                    var _select = false;
                    data.value.forEach(function (arrData) {
                        if (settings[data.key] != arrData) {
                            _select = true;
                        }
                    });
                    if (_select) {
                        _depends = true;
                    }
                }
            }
            if (previous == false) {
                _depends = false;
            }
        });
    }

    return _depends;
};

var CssGenerator = exports.CssGenerator = function CssGenerator(settings, blockName, blockID) {
    var isInline = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    if (!blockID) return;
    var __CSS = '',
        md = [],
        sm = [],
        xs = [],
        notResponsiveCss = [];

    Object.keys(settings).forEach(function (key) {
        var attributes = typeof blockName === 'string' ? wp.blocks.getBlockType('qubely/' + blockName).attributes : blockName;
        if (attributes[key] && attributes[key].hasOwnProperty('style')) {

            attributes[key].style.forEach(function (selectData, indexStyle) {
                var cssSelecor = selectData.selector;
                if (checkDepends(settings, selectData, key, indexStyle)) {
                    if (_typeof(settings[key]) == 'object') {
                        var device = false;
                        var dimension = '';

                        if (settings[key].md) {
                            // Desktop
                            device = true;
                            dimension = _typeof(settings[key].md) == 'object' ? objectField(settings[key].md).data : settings[key].md + (settings[key].unit || '');
                            md = md.concat(singleField(cssSelecor, blockID, key, dimension));
                        }
                        if (settings[key].sm) {
                            // Tablet
                            device = true;
                            dimension = _typeof(settings[key].sm) == 'object' ? objectField(settings[key].sm).data : settings[key].sm + (settings[key].unit || '');
                            sm = sm.concat(singleField(cssSelecor, blockID, key, dimension));
                        }
                        if (settings[key].xs) {
                            // Phone
                            device = true;
                            dimension = _typeof(settings[key].xs) == 'object' ? objectField(settings[key].xs).data : settings[key].xs + (settings[key].unit || '');
                            xs = xs.concat(singleField(cssSelecor, blockID, key, dimension));
                        }

                        if (!device) {
                            // Object Field Type Only
                            var objectCss = objectField(settings[key]);
                            var repWarp = replaceWarp(cssSelecor, blockID);
                            if (_typeof(objectCss.data) == 'object') {
                                if (Object.keys(objectCss.data).length != 0) {
                                    if (objectCss.data.background) {
                                        notResponsiveCss.push(repWarp + objectCss.data.background);
                                    }

                                    // Typography
                                    if (isEmpty(objectCss.data.md)) {
                                        md.push(objectReplace(repWarp, objectCss.data.md));
                                    }
                                    if (isEmpty(objectCss.data.sm)) {
                                        sm.push(objectReplace(repWarp, objectCss.data.sm));
                                    }
                                    if (isEmpty(objectCss.data.xs)) {
                                        xs.push(objectReplace(repWarp, objectCss.data.xs));
                                    }
                                    if (objectCss.data.simple) {
                                        notResponsiveCss.push(repWarp + objectCss.data.simple);
                                    }
                                    if (objectCss.data.font) {
                                        md.unshift(objectCss.data.font);
                                    }

                                    if (objectCss.data.shape) {
                                        objectCss.data.shape.forEach(function (el) {
                                            notResponsiveCss.push(repWarp + el);
                                        });
                                        if (isEmpty(objectCss.data.data.md)) {
                                            md.push(objectAppend(repWarp, objectCss.data.data.md));
                                        }
                                        if (isEmpty(objectCss.data.data.sm)) {
                                            sm.push(objectAppend(repWarp, objectCss.data.data.sm));
                                        }
                                        if (isEmpty(objectCss.data.data.xs)) {
                                            xs.push(objectAppend(repWarp, objectCss.data.data.xs));
                                        }
                                    }
                                }
                            } else if (objectCss.data && objectCss.data.indexOf('{{') == -1) {
                                if (objectCss.action == 'append') {
                                    notResponsiveCss.push(repWarp + objectCss.data);
                                } else {
                                    notResponsiveCss.push(singleField(cssSelecor, blockID, key, objectCss.data));
                                }
                            }
                        }
                    } else {
                        if (key == 'hideTablet') {
                            if (isInline) {
                                sm = sm.concat(singleField(cssSelecor, blockID, key, settings[key]));
                            }
                        } else if (key == 'hideMobile') {
                            if (isInline) {
                                xs = xs.concat(singleField(cssSelecor, blockID, key, settings[key]));
                            }
                        } else {
                            if (settings[key]) {
                                notResponsiveCss = notResponsiveCss.concat(singleField(cssSelecor, blockID, key, settings[key]));
                            }
                        }
                    }
                }
            });
        }
    });

    // Join CSS
    if (md.length > 0) {
        __CSS += md.join('');
    }
    if (sm.length > 0) {
        __CSS += '@media (max-width: 1199px) {' + sm.join('') + '}';
    }
    if (xs.length > 0) {
        __CSS += '@media (max-width: 991px) {' + xs.join('') + '}';
    }
    if (notResponsiveCss.length > 0) {
        __CSS += notResponsiveCss.join('');
    }

    if (isInline) {
        return __CSS;
    }

    // Set CSS
    setStyle(__CSS, blockID);
};

// Set CSS to Head
var setStyle = function setStyle(styleCss, blockID) {
    var styleSelector = window.document;
    if (styleSelector.getElementById('qubely-block-' + blockID) === null) {
        var cssInline = document.createElement('style');
        cssInline.type = 'text/css';
        cssInline.id = 'qubely-block-' + blockID;
        if (cssInline.styleSheet) {
            cssInline.styleSheet.cssText = styleCss;
        } else {
            cssInline.innerHTML = styleCss;
        }
        styleSelector.getElementsByTagName("head")[0].appendChild(cssInline);
    } else {
        styleSelector.getElementById('qubely-block-' + blockID).innerHTML = styleCss;
    }
};

/***/ }),

/***/ "./src/components/CssHelper.js":
/*!*************************************!*\
  !*** ./src/components/CssHelper.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// CSS Gradient
var cssGradient = exports.cssGradient = function cssGradient(v, type) {
    var gradietValue = v.type == 'linear' ? 'linear-gradient(' + v.direction + 'deg, ' : 'radial-gradient( circle at ' + v.radial + ' , ';
    gradietValue += v.color1 + ' ' + v.start + '%,' + v.color2 + ' ' + v.stop + '%)';
    if (type == 'object') {
        return { background: gradietValue };
    } else {
        gradietValue = 'background:' + gradietValue + (v.clip ? '-webkit-background-clip: text; -webkit-text-fill-color: transparent;' : '');
        return '{' + gradietValue + '}';
    }
};

// CSS Box Shadow
var cssBoxShadow = exports.cssBoxShadow = function cssBoxShadow(v) {
    return '{ box-shadow:' + (v.inset || '') + ' ' + v.horizontal + 'px ' + v.vertical + 'px ' + v.blur + 'px ' + v.spread + 'px ' + v.color + '; }';
};

// CSS Border
var cssBorder = exports.cssBorder = function cssBorder(v) {
    v = Object.assign({}, { type: 'solid', width: {}, color: '#e5e5e5' }, v);
    var nonResponsiveCss = 'border-color:  ' + (v.color ? v.color : '#555d66') + '; border-style: ' + (v.type ? v.type : 'solid') + ';';

    if (_typeof(v.global) === 'object' || _typeof(v.custom) === 'object') {
        var data = { md: [], sm: [], xs: [] };
        data = v.widthType == 'global' ? _push(_device(_extends({}, v.global, { unit: v.unit ? v.unit : 'px' }), 'border-width:{{key}};'), data) : _push(_customDevice(_extends({}, v.custom, { unit: v.unit ? v.unit : 'px' }), 'border-width:{{key}};'), data);

        data.md.push(nonResponsiveCss);
        data.sm.push(nonResponsiveCss);
        data.xs.push(nonResponsiveCss);
        return { md: data.md, sm: data.sm, xs: data.xs };
    } else {
        var _data = '';
        if (v.widthType == 'global') {
            _data = 'border-width:' + v.global + (v.unit ? v.unit : 'px') + ';' + nonResponsiveCss;
        } else {
            var temp = v.custom ? v.custom.split(" ") : ['0', '0', '0', '0'];
            var unit = v.unit ? v.unit : 'px';
            _data = 'border-width:' + (temp[0] ? temp[0] : '0') + unit + ' ' + (temp[1] ? temp[1] : '0') + unit + ' ' + (temp[2] ? temp[2] : '0') + unit + ' ' + (temp[3] ? temp[3] : '0') + unit + ';' + nonResponsiveCss;
        }
        return '{' + _data + '}';
    }
};

// CSS Typography
var _device = function _device(val, selector) {
    var data = {};
    if (val && val.md) {
        data.md = selector.replace(new RegExp('{{key}}', "g"), val.md + (val.unit || ''));
    }
    if (val && val.sm) {
        data.sm = selector.replace(new RegExp('{{key}}', "g"), val.sm + (val.unit || ''));
    }
    if (val && val.xs) {
        data.xs = selector.replace(new RegExp('{{key}}', "g"), val.xs + (val.unit || ''));
    }
    return data;
};
var _push = function _push(val, data) {
    if (val.md) {
        data.md.push(val.md);
    }
    if (val.sm) {
        data.sm.push(val.sm);
    }
    if (val.xs) {
        data.xs.push(val.xs);
    }
    return data;
};
var cssTypography = exports.cssTypography = function cssTypography(v) {
    var font = '';
    if (v.family) {
        if (!['Arial', 'Tahoma', 'Verdana', 'Helvetica', 'Times New Roman', 'Trebuchet MS', 'Georgia'].includes(v.family)) {
            font = "@import url('https://fonts.googleapis.com/css?family=" + v.family.replace(/\s/g, '+') + ':' + (v.weight || 400) + "');";
        }
    }
    var data = { md: [], sm: [], xs: [] };
    if (v.size) {
        data = _push(_device(v.size, 'font-size:{{key}}'), data);
    }
    if (v.height) {
        data = _push(_device(v.height, 'line-height:{{key}} !important'), data);
    }
    if (v.spacing) {
        data = _push(_device(v.spacing, 'letter-spacing:{{key}}'), data);
    }
    var simple = '{' + (v.family ? "font-family:'" + v.family + "'," + v.type + ";" : '') + (v.weight ? 'font-weight:' + v.weight + ';' : '') + (v.color ? 'color:' + v.color + ';' : '') + (v.style ? 'font-style:' + v.style + ';' : '') + (v.transform ? 'text-transform:' + v.transform + ';' : '') + (v.decoration ? 'text-decoration:' + v.decoration + ';' : '') + '}';
    return { md: data.md, sm: data.sm, xs: data.xs, simple: simple, font: font };
};

// CSS Dimension
var cssDimension = exports.cssDimension = function cssDimension(v) {
    var unit = v.unit ? v.unit : 'px';
    return (v.top || 0) + unit + ' ' + (v.right || 0) + unit + ' ' + (v.bottom || 0) + unit + ' ' + (v.left || 0) + unit;
};

// CSS Background
var split_bg = function split_bg(type) {
    var image = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var imgPosition = arguments[2];
    var imgAttachment = arguments[3];
    var imgRepeat = arguments[4];
    var imgSize = arguments[5];
    var DefaultColor = arguments[6];
    var bgGradient = arguments[7];

    var bgData = DefaultColor ? 'background-color:' + DefaultColor + ';' : '';
    if (type == 'image') {
        bgData += (image.hasOwnProperty('url') ? 'background-image:url(' + image.url + ');' : '') + (imgPosition ? 'background-position:' + imgPosition + ';' : '') + (imgAttachment ? 'background-attachment:' + imgAttachment + ';' : '') + (imgRepeat ? 'background-repeat:' + imgRepeat + ';' : '') + (imgSize ? 'background-size:' + imgSize + ';' : '');
    } else if (type == 'gradient') {
        if (bgGradient && bgGradient.type == 'linear') {
            bgData += 'background-image: linear-gradient(' + bgGradient.direction + 'deg, ' + bgGradient.color1 + ' ' + bgGradient.start + '%,' + bgGradient.color2 + ' ' + bgGradient.stop + '%);';
        } else {
            bgData += 'background-image: radial-gradient( circle at ' + bgGradient.radial + ' , ' + bgGradient.color1 + ' ' + bgGradient.start + '%,' + bgGradient.color2 + ' ' + bgGradient.stop + '%);';
        }
    }
    return bgData;
};
var cssBackground = exports.cssBackground = function cssBackground(v) {
    var background = '{';
    background += split_bg(v.bgType, v.bgImage, v.bgimgPosition, v.bgimgAttachment, v.bgimgRepeat, v.bgimgSize, v.bgDefaultColor, v.bgGradient);
    background += '}';
    if (v.bgType == 'video') {
        if (v.bgVideoFallback) {
            if (v.bgVideoFallback.url) {
                background += 'background-image: url(' + v.bgVideoFallback.url + '); background-position: center; background-repeat: no-repeat; background-size: cover;';
            }
        }
    }
    if (background != '{}') {
        return background;
    }
    return {};
};

// CSS Shape
var cssShape = exports.cssShape = function cssShape(v) {
    var data = { md: [], sm: [], xs: [] };
    var shape = [];
    if (v.color) {
        shape.push(' svg path{fill:' + v.color + ';}');
        shape.push(' svg polygon{fill:' + v.color + ';}');
    }
    if (v.front) {
        shape.push('{z-index: 99;}');
    }
    if (v.width) {
        data = _push(_device(v.width, ' svg {width:{{key}};}'), data);
    }
    if (v.height) {
        data = _push(_device(v.height, ' svg {height:{{key}};}'), data);
    }
    return { data: data, shape: shape };
};

// CSS ColorAdvanced
var cssColor = exports.cssColor = function cssColor(v) {
    var data = v.clip ? '-webkit-background-clip: text; -webkit-text-fill-color: transparent;' : '';
    if (v.type == 'color') {
        if (v.textColor) {
            data += v.color ? 'color: ' + v.color + ';' : '';
        } else {
            data += v.color ? 'background-image: none; background-color: ' + v.color + ';' : '';
        }
    } else if (v.type == 'gradient') {
        if (v.gradient && v.gradient.type == 'linear') {
            if (v.textColor) {
                data += 'background : -webkit-linear-gradient(' + v.gradient.direction + 'deg, ' + v.gradient.color1 + ' ' + v.gradient.start + '%,' + v.gradient.color2 + ' ' + v.gradient.stop + '%);-webkit-background-clip: text;-webkit-text-fill-color: transparent;';
            } else {
                data += 'background-image : linear-gradient(' + v.gradient.direction + 'deg, ' + v.gradient.color1 + ' ' + v.gradient.start + '%,' + v.gradient.color2 + ' ' + v.gradient.stop + '%);';
            }
        } else {
            if (v.textColor) {
                data += 'background : radial-gradient(circle at ' + v.gradient.radial + ' , ' + v.gradient.color1 + ' ' + v.gradient.start + '%,' + v.gradient.color2 + ' ' + v.gradient.stop + '%);-webkit-background-clip: text;-webkit-text-fill-color: transparent;';
            } else {
                data += 'background-image : radial-gradient( circle at ' + v.gradient.radial + ' , ' + v.gradient.color1 + ' ' + v.gradient.start + '%,' + v.gradient.color2 + ' ' + v.gradient.stop + '%);';
            }
        }
    }
    return '{' + data + '}';
};

// CSS Spacer
var cssSpacer = exports.cssSpacer = function cssSpacer(v) {
    var data = { md: [], sm: [], xs: [] };
    if (v.spaceTop) {
        data = _push(_device(v.spaceTop, 'padding-top:{{key}}'), data);
    }
    if (v.spaceBottom) {
        data = _push(_device(v.spaceBottom, 'padding-bottom:{{key}}'), data);
    }
    return { md: data.md, sm: data.sm, xs: data.xs };
};

// CSS Size
var cssSize = exports.cssSize = function cssSize(v) {
    var data = { md: [], sm: [], xs: [] };
    if (v.paddingX) {
        data = _push(_device(v.paddingX, 'padding-left:{{key}}' + (v.paddingX.unit || '') + ';padding-right:{{key}}'), data);
    }
    if (v.paddingY) {
        data = _push(_device(v.paddingY, 'padding-top:{{key}}' + (v.paddingY.unit || '') + ';padding-bottom:{{key}}'), data);
    }
    return { md: data.md, sm: data.sm, xs: data.xs };
};

// CSS transfrom
var cssTransform = exports.cssTransform = function cssTransform(v) {
    var data = { md: [], sm: [], xs: [] };
    if (v.translateX && v.translateX.md || v.translateY && v.translateY.md) {
        data.md = ('transform: translateX({{key}}' + (v.translateX && v.translateX.unit ? v.translateX.unit : 'px') + ') ').replace(new RegExp('{{key}}', "g"), v.translateX ? v.translateX.md || '0' : '0') + ('translateY({{key}}' + (v.translateY && v.translateY.unit ? v.translateY.unit : 'px') + ')').replace(new RegExp('{{key}}', "g"), v.translateY ? v.translateY.md || '0' : '0');
    }
    if (v.translateX && v.translateX.sm || v.translateY && v.translateY.sm) {
        data.sm = ('transform: translateX({{key}}' + (v.translateX && v.translateX.unit ? v.translateX.unit : 'px') + ') ').replace(new RegExp('{{key}}', "g"), v.translateX ? v.translateX.sm || '0' : '0') + ('translateY({{key}}' + (v.translateY && v.translateY.unit ? v.translateY.unit : 'px') + ')').replace(new RegExp('{{key}}', "g"), v.translateY ? v.translateY.sm || '0' : '0');
    }
    if (v.translateX && v.translateX.xs || v.translateY && v.translateY.xs) {
        data.xs = ('transform: translateX({{key}}' + (v.translateX && v.translateX.unit ? v.translateX.unit : 'px') + ') ').replace(new RegExp('{{key}}', "g"), v.translateX ? v.translateX.xs || '0' : '0') + ('translateY({{key}}' + (v.translateY && v.translateY.unit ? v.translateY.unit : 'px') + ')').replace(new RegExp('{{key}}', "g"), v.translateY ? v.translateY.xs || '0' : '0');
    }
    return { md: [data.md], sm: [data.sm], xs: [data.xs] };
};

var _customDevice = function _customDevice(val, selector) {
    var data = {};
    if (val && val.md) {
        var _selector$replace$spl = selector.replace(new RegExp('{{key}}', "g"), val.md).split(":"),
            _selector$replace$spl2 = _slicedToArray(_selector$replace$spl, 2),
            cssSyntax = _selector$replace$spl2[0],
            value = _selector$replace$spl2[1];

        var _value$split = value.split(" "),
            _value$split2 = _slicedToArray(_value$split, 4),
            top = _value$split2[0],
            right = _value$split2[1],
            bottom = _value$split2[2],
            left = _value$split2[3];

        left = left.length > 0 ? left.slice(0, -1) : '0';
        data.md = cssSyntax + ':' + (top ? top : '0') + val.unit + ' ' + (right ? right : '0') + val.unit + ' ' + (bottom ? bottom : '0') + val.unit + ' ' + (left ? left : '0') + val.unit + ';';
    }
    if (val && val.sm) {
        var _selector$replace$spl3 = selector.replace(new RegExp('{{key}}', "g"), val.sm).split(":"),
            _selector$replace$spl4 = _slicedToArray(_selector$replace$spl3, 2),
            _cssSyntax = _selector$replace$spl4[0],
            _value = _selector$replace$spl4[1];

        var _value$split3 = _value.split(" "),
            _value$split4 = _slicedToArray(_value$split3, 4),
            _top = _value$split4[0],
            _right = _value$split4[1],
            _bottom = _value$split4[2],
            _left = _value$split4[3];

        _left = _left.length > 0 ? _left.slice(0, -1) : '0';
        data.sm = _cssSyntax + ':' + (_top ? _top : '0') + val.unit + ' ' + (_right ? _right : '0') + val.unit + ' ' + (_bottom ? _bottom : '0') + val.unit + ' ' + (_left ? _left : '0') + val.unit + ';';
    }
    if (val && val.xs) {
        var _selector$replace$spl5 = selector.replace(new RegExp('{{key}}', "g"), val.xs).split(":"),
            _selector$replace$spl6 = _slicedToArray(_selector$replace$spl5, 2),
            _cssSyntax2 = _selector$replace$spl6[0],
            _value2 = _selector$replace$spl6[1];

        var _value2$split = _value2.split(" "),
            _value2$split2 = _slicedToArray(_value2$split, 4),
            _top2 = _value2$split2[0],
            _right2 = _value2$split2[1],
            _bottom2 = _value2$split2[2],
            _left2 = _value2$split2[3];

        _left2 = _left2.length > 0 ? _left2.slice(0, -1) : '0';
        data.xs = _cssSyntax2 + ':' + (_top2 ? _top2 : '0') + val.unit + ' ' + (_right2 ? _right2 : '0') + val.unit + ' ' + (_bottom2 ? _bottom2 : '0') + val.unit + ' ' + (_left2 ? _left2 : '0') + val.unit + ';';
    }
    return data;
};

// CSS cssBorderRadius
var cssBorderRadius = exports.cssBorderRadius = function cssBorderRadius(v) {
    if (_typeof(v.global) === 'object' || _typeof(v.custom) === 'object') {

        var data = { md: [], sm: [], xs: [] };
        data = v.radiusType == 'global' ? _push(_device(_extends({}, v.global, { unit: v.unit ? v.unit : 'px' }), 'border-radius:{{key}};'), data) : _push(_customDevice(_extends({}, v.custom, { unit: v.unit ? v.unit : 'px' }), 'border-radius:{{key}};'), data);

        return { md: data.md, sm: data.sm, xs: data.xs };
    } else {
        var _data2 = '';
        if (v.radiusType == 'global') {
            _data2 = 'border-radius:' + (v.global || '0') + (v.unit ? v.unit : 'px') + ' ';
        } else {
            var temp = v.custom ? v.custom.split(" ") : ['0', '0', '0', '0'];
            var unit = v.unit ? v.unit : 'px';
            _data2 = 'border-radius:' + (temp[0] ? temp[0] : '0') + unit + ' ' + (temp[1] ? temp[1] : '0') + unit + ' ' + (temp[2] ? temp[2] : '0') + unit + ' ' + (temp[3] ? temp[3] : '0') + unit;
        }
        return '{' + _data2 + '}';
    }
};

// CSS cssPadding
var cssPadding = exports.cssPadding = function cssPadding(v) {

    if (_typeof(v.global) === 'object' || _typeof(v.custom) === 'object') {
        var data = { md: [], sm: [], xs: [] };
        data = v.paddingType == 'global' ? _push(_device(_extends({}, v.global, { unit: v.unit ? v.unit : 'px' }), 'padding:{{key}};'), data) : _push(_customDevice(_extends({}, v.custom, { unit: v.unit ? v.unit : 'px' }), 'padding:{{key}};'), data);

        return { md: data.md, sm: data.sm, xs: data.xs };
    } else {
        var _data3 = '';
        if (v.paddingType == 'global') {
            _data3 = 'padding:' + v.global + (v.unit ? v.unit : 'px') + ' ';
        } else {
            var temp = v.custom ? v.custom.split(" ") : ['0', '0', '0', '0'];
            var unit = v.unit ? v.unit : 'px';
            _data3 = 'padding:' + (temp[0] ? temp[0] : '0') + unit + ' ' + (temp[1] ? temp[1] : '0') + unit + ' ' + (temp[2] ? temp[2] : '0') + unit + ' ' + (temp[3] ? temp[3] : '0') + unit;
        }
        return '{' + _data3 + '}';
    }
};

// CSS cssMargin
var cssMargin = exports.cssMargin = function cssMargin(v) {

    if (_typeof(v.global) === 'object' || _typeof(v.custom) === 'object') {
        var data = { md: [], sm: [], xs: [] };
        data = v.marginType == 'global' ? _push(_device(_extends({}, v.global, { unit: v.unit ? v.unit : 'px' }), 'margin:{{key}};'), data) : _push(_customDevice(_extends({}, v.custom, { unit: v.unit ? v.unit : 'px' }), 'margin:{{key}};'), data);

        return { md: data.md, sm: data.sm, xs: data.xs };
    } else {
        var _data4 = '';
        if (v.marginType == 'global') {
            _data4 = 'margin:' + v.global + (v.unit ? v.unit : 'px') + ' ';
        } else {
            var temp = v.custom ? v.custom.split(" ") : ['0', '0', '0', '0'];
            var unit = v.unit ? v.unit : 'px';
            _data4 = 'margin:' + (temp[0] ? temp[0] : '0') + unit + ' ' + (temp[1] ? temp[1] : '0') + unit + ' ' + (temp[2] ? temp[2] : '0') + unit + ' ' + (temp[3] ? temp[3] : '0') + unit;
        }
        return '{' + _data4 + '}';
    }
};

// CSS cssRowReverse
var cssRowReverse = exports.cssRowReverse = function cssRowReverse(v) {
    var data = { md: [], sm: [], xs: [] };
    if (v.values.md) {
        data.md.push('flex-direction:row-reverse');
    }
    if (v.values.sm) {
        data.sm.push('flex-direction:column-reverse');
    }
    if (v.values.xs) {
        data.xs.push('flex-direction:column-reverse');
    }

    return { md: data.md, sm: data.sm, xs: data.xs };
};

/***/ }),

/***/ "./src/components/FieldRender.js":
/*!***************************************!*\
  !*** ./src/components/FieldRender.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _Alignment = __webpack_require__(/*! ./fields/Alignment */ "./src/components/fields/Alignment.js");

var _Alignment2 = _interopRequireDefault(_Alignment);

var _Border = __webpack_require__(/*! ./fields/Border */ "./src/components/fields/Border.js");

var _Border2 = _interopRequireDefault(_Border);

var _BorderRadius = __webpack_require__(/*! ./fields/BorderRadius */ "./src/components/fields/BorderRadius.js");

var _BorderRadius2 = _interopRequireDefault(_BorderRadius);

var _BoxShadow = __webpack_require__(/*! ./fields/BoxShadow */ "./src/components/fields/BoxShadow.js");

var _BoxShadow2 = _interopRequireDefault(_BoxShadow);

var _ButtonGroup = __webpack_require__(/*! ./fields/ButtonGroup */ "./src/components/fields/ButtonGroup.js");

var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

var _Color = __webpack_require__(/*! ./fields/Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

var _Device = __webpack_require__(/*! ./fields/Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

var _Dimension = __webpack_require__(/*! ./fields/Dimension */ "./src/components/fields/Dimension.js");

var _Dimension2 = _interopRequireDefault(_Dimension);

var _Gradient = __webpack_require__(/*! ./fields/Gradient */ "./src/components/fields/Gradient.js");

var _Gradient2 = _interopRequireDefault(_Gradient);

var _IconList = __webpack_require__(/*! ./fields/IconList */ "./src/components/fields/IconList.js");

var _IconList2 = _interopRequireDefault(_IconList);

var _IconSelector = __webpack_require__(/*! ./fields/IconSelector */ "./src/components/fields/IconSelector.js");

var _IconSelector2 = _interopRequireDefault(_IconSelector);

var _Styles = __webpack_require__(/*! ./fields/Styles */ "./src/components/fields/Styles.js");

var _Styles2 = _interopRequireDefault(_Styles);

var _Separator = __webpack_require__(/*! ./fields/Separator */ "./src/components/fields/Separator.js");

var _Separator2 = _interopRequireDefault(_Separator);

var _Headings = __webpack_require__(/*! ./fields/Headings */ "./src/components/fields/Headings.js");

var _Headings2 = _interopRequireDefault(_Headings);

var _Wrapper = __webpack_require__(/*! ./fields/Wrapper */ "./src/components/fields/Wrapper.js");

var _Wrapper2 = _interopRequireDefault(_Wrapper);

var _Shape = __webpack_require__(/*! ./fields/Shape */ "./src/components/fields/Shape.js");

var _Shape2 = _interopRequireDefault(_Shape);

var _Media = __webpack_require__(/*! ./fields/Media */ "./src/components/fields/Media.js");

var _Media2 = _interopRequireDefault(_Media);

var _Typography = __webpack_require__(/*! ./fields/Typography */ "./src/components/fields/Typography.js");

var _Typography2 = _interopRequireDefault(_Typography);

var _Url = __webpack_require__(/*! ./fields/Url */ "./src/components/fields/Url.js");

var _Url2 = _interopRequireDefault(_Url);

var _Selector = __webpack_require__(/*! ./fields/Selector */ "./src/components/fields/Selector.js");

var _Selector2 = _interopRequireDefault(_Selector);

var _Background = __webpack_require__(/*! ./fields/Background */ "./src/components/fields/Background.js");

var _Background2 = _interopRequireDefault(_Background);

var _Tabs = __webpack_require__(/*! ./fields/Tabs */ "./src/components/fields/Tabs.js");

var _Tabs2 = _interopRequireDefault(_Tabs);

var _Tab = __webpack_require__(/*! ./fields/Tab */ "./src/components/fields/Tab.js");

var _Tab2 = _interopRequireDefault(_Tab);

var _InnerPanel = __webpack_require__(/*! ./fields/InnerPanel */ "./src/components/fields/InnerPanel.js");

var _InnerPanel2 = _interopRequireDefault(_InnerPanel);

var _Interaction = __webpack_require__(/*! ./fields/Interaction */ "./src/components/fields/Interaction.js");

var _Interaction2 = _interopRequireDefault(_Interaction);

var _Select = __webpack_require__(/*! ./fields/Select */ "./src/components/fields/Select.js");

var _Select2 = _interopRequireDefault(_Select);

var _Range = __webpack_require__(/*! ./fields/Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Toggle = __webpack_require__(/*! ./fields/Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

var _ColorAdvanced = __webpack_require__(/*! ./fields/ColorAdvanced */ "./src/components/fields/ColorAdvanced.js");

var _ColorAdvanced2 = _interopRequireDefault(_ColorAdvanced);

var _RadioAdvanced = __webpack_require__(/*! ./fields/RadioAdvanced */ "./src/components/fields/RadioAdvanced.js");

var _RadioAdvanced2 = _interopRequireDefault(_RadioAdvanced);

var _DragDimension = __webpack_require__(/*! ./fields/DragDimension */ "./src/components/fields/DragDimension.js");

var _DragDimension2 = _interopRequireDefault(_DragDimension);

var _Counter = __webpack_require__(/*! ./fields/Counter */ "./src/components/fields/Counter.js");

var _Counter2 = _interopRequireDefault(_Counter);

var _Animation = __webpack_require__(/*! ./fields/Animation */ "./src/components/fields/Animation.js");

var _Animation2 = _interopRequireDefault(_Animation);

var _DropDown = __webpack_require__(/*! ./fields/DropDown */ "./src/components/fields/DropDown.js");

var _DropDown2 = _interopRequireDefault(_DropDown);

var _Padding = __webpack_require__(/*! ./fields/Padding */ "./src/components/fields/Padding.js");

var _Padding2 = _interopRequireDefault(_Padding);

var _Margin = __webpack_require__(/*! ./fields/Margin */ "./src/components/fields/Margin.js");

var _Margin2 = _interopRequireDefault(_Margin);

var _Carousel = __webpack_require__(/*! ./fields/Carousel */ "./src/components/fields/Carousel/index.js");

var _Carousel2 = _interopRequireDefault(_Carousel);

var _icons = __webpack_require__(/*! ../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

var _headingToolbar = __webpack_require__(/*! ./fields/headingToolbar */ "./src/components/fields/headingToolbar/index.js");

var _headingToolbar2 = _interopRequireDefault(_headingToolbar);

var _Templates = __webpack_require__(/*! ./fields/Templates */ "./src/components/fields/Templates.js");

var _Templates2 = _interopRequireDefault(_Templates);

var _QubelyButton = __webpack_require__(/*! ./fields/QubelyButton */ "./src/components/fields/QubelyButton.js");

var _QubelyIconList = __webpack_require__(/*! ./fields/QubelyIconList */ "./src/components/fields/QubelyIconList.js");

var _inline = __webpack_require__(/*! ./fields/inline */ "./src/components/fields/inline/index.js");

var _CssGenerator = __webpack_require__(/*! ./CssGenerator */ "./src/components/CssGenerator.js");

var _HelperFunction = __webpack_require__(/*! ./HelperFunction */ "./src/components/HelperFunction.js");

var _GlobalSettings = __webpack_require__(/*! ./fields/GlobalSettings */ "./src/components/fields/GlobalSettings.js");

var _ButtonSettings = __webpack_require__(/*! ./fields/ButtonSettings */ "./src/components/fields/ButtonSettings.js");

var _ListSettings = __webpack_require__(/*! ./fields/ListSettings */ "./src/components/fields/ListSettings.js");

var _ContextMenu = __webpack_require__(/*! ./fields/ContextMenu */ "./src/components/fields/ContextMenu.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//hooks

//functions
wp.qubelyComponents = {
    Alignment: _Alignment2.default,
    Animation: _Animation2.default,
    Background: _Background2.default,
    Border: _Border2.default,
    ContextMenu: {
        ContextMenu: _ContextMenu.ContextMenu,
        handleContextMenu: _ContextMenu.handleContextMenu
    },
    QubelyButton: {
        buttonAttributes: _ButtonSettings.buttonAttributes,
        buttonSettings: _ButtonSettings.buttonSettings
    },
    QubelyList: {
        listAttributes: _ListSettings.listAttributes,
        listSettings: _ListSettings.listSettings
    },
    BorderRadius: _BorderRadius2.default,
    BoxShadow: _BoxShadow2.default,
    ButtonGroup: _ButtonGroup2.default,
    Color: _Color2.default,
    ColorAdvanced: _ColorAdvanced2.default,
    Counter: _Counter2.default,
    Carousel: _Carousel2.default,
    CssGenerator: {
        CssGenerator: _CssGenerator.CssGenerator,
        objectReplace: _CssGenerator.objectReplace,
        objectAppend: _CssGenerator.objectAppend,
        singleField: _CssGenerator.singleField
    },
    Dimension: _Dimension2.default,
    Device: _Device2.default,
    Dropdown: _DropDown2.default,
    DragDimension: _DragDimension2.default,
    gloalSettings: {
        globalAttributes: _GlobalSettings.globalAttributes,
        animationSettings: _GlobalSettings.animationSettings,
        interactionSettings: _GlobalSettings.interactionSettings,
        globalSettingsPanel: _GlobalSettings.globalSettingsPanel
    },
    Gradient: _Gradient2.default,
    Headings: _Headings2.default,
    HeadingToolbar: _headingToolbar2.default,
    HelperFunction: {
        _equal: _HelperFunction._equal,
        animationAttr: _HelperFunction.animationAttr,
        selectValue: _HelperFunction.selectValue,
        isObject: _HelperFunction.isObject,
        isArray: _HelperFunction.isArray,
        setValue: _HelperFunction.setValue,
        videoBackground: _HelperFunction.videoBackground,
        parseResponsiveViewPort: _HelperFunction.parseResponsiveViewPort,
        IsInteraction: _HelperFunction.IsInteraction,
        copyToClipboard: _HelperFunction.copyToClipboard
    },
    IconList: _IconList2.default,
    IconSelector: _IconSelector2.default,
    InnerPanel: _InnerPanel2.default,
    Interaction: _Interaction2.default,
    Inline: {
        InlineToolbar: _inline.InlineToolbar,
        InlineSpacer: _inline.InlineSpacer,
        InlineSelector: _inline.InlineSelector
    },
    Margin: _Margin2.default,
    Media: _Media2.default,
    Padding: _Padding2.default,
    Range: _Range2.default,
    RadioAdvanced: _RadioAdvanced2.default,
    Selector: _Selector2.default,
    Select: _Select2.default,
    Styles: _Styles2.default,
    Shape: _Shape2.default,
    Separator: _Separator2.default,
    Tabs: _Tabs2.default,
    Tab: _Tab2.default,
    Templates: _Templates2.default,
    Toggle: _Toggle2.default,
    Typography: _Typography2.default,
    Wrapper: _Wrapper2.default,
    Url: _Url2.default,
    QubelyButtonEdit: _QubelyButton.QubelyButtonEdit,
    QubelyButtonSave: _QubelyButton.QubelyButtonSave,
    QubelyIconListEdit: _QubelyIconList.QubelyIconListEdit,
    QubelyIconListSave: _QubelyIconList.QubelyIconListSave,
    QubelyFreeIcons: _icons2.default
};

//inline
//fields

/***/ }),

/***/ "./src/components/HelperFunction.js":
/*!******************************************!*\
  !*** ./src/components/HelperFunction.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var animationAttr = exports.animationAttr = function animationAttr(data) {
    if (typeof data !== 'undefined' && typeof data.name !== 'undefined' && data.openAnimation) {
        return { 'data-qubelyanimation': JSON.stringify(data) };
    } else {
        return {};
    }
};

// Select Option Generator
var selectValue = exports.selectValue = function selectValue(data) {
    return data.map(function (val) {
        return { value: val, label: val };
    });
};

var isObject = exports.isObject = function isObject(obj) {
    return typeof obj === 'function' || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !!obj;
};
var isArray = exports.isArray = function isArray(arg) {
    return Object.prototype.toString.call(arg) === '[object Array]';
};

var setValue = exports.setValue = function setValue(defaultVal, key) {
    var data = {};
    defaultVal.forEach(function (val) {
        return data[val] = false;
    });
    if (key) {
        var innerData = {};
        key.forEach(function (val) {
            return innerData[val] = true;
        });
        return Object.assign({}, data, innerData);
    } else {
        return data;
    }
};

var videoBackground = exports.videoBackground = function videoBackground(settings) {
    if (settings.bgType == 'video') {
        if (settings.videoSource == 'local') {
            if (settings.bgVideo && settings.bgVideo.url) {
                return React.createElement(
                    'div',
                    { className: 'qubely-video-bg-wrap' },
                    React.createElement(
                        'video',
                        { className: 'qubely-video-bg', autoPlay: true, muted: true, loop: true },
                        React.createElement('source', { src: settings.bgVideo.url })
                    )
                );
            }
        }
        if (settings.videoSource == 'external') {
            if (settings.bgExternalVideo) {
                var video = settings.bgExternalVideo,
                    src = '';
                if (video.match('youtube|youtu\.be')) {
                    var id = 0;
                    if (video.match('embed') && video.split(/embed\//)[1]) {
                        id = video.split(/embed\//)[1].split('"')[0];
                    } else if (video.split(/v\/|v=|youtu\.be\//)[1]) {
                        id = video.split(/v\/|v=|youtu\.be\//)[1].split(/[?&]/)[0];
                    }
                    src = '//www.youtube.com/embed/' + id + '?playlist=' + id + '&iv_load_policy=3&enablejsapi=1&disablekb=1&autoplay=1&mute=1&controls=0&showinfo=0&rel=0&loop=1&wmode=transparent&widgetid=1';
                } else if (video.match('vimeo\.com')) {
                    var _id = video.split(/video\/|https:\/\/vimeo\.com\//)[1].split(/[?&]/)[0];
                    src = "//player.vimeo.com/video/" + _id + "?autoplay=1&loop=1&title=0&byline=0&portrait=0";
                }
                return React.createElement(
                    'div',
                    { className: 'qubely-video-bg-wrap' },
                    React.createElement('iframe', { src: src, frameBorder: '0', allowFullScreen: true })
                );
            }
        }
    }
};

var IsInteraction = exports.IsInteraction = function IsInteraction(interaction) {
    return typeof interaction.while_scroll_into_view !== 'undefined' && interaction.while_scroll_into_view.enable === true || typeof interaction.mouse_movement !== 'undefined' && interaction.mouse_movement.enable === true;
};

var _equal = exports._equal = function _equal(value, other) {
    var isEqual = function isEqual(value, other) {
        var type = Object.prototype.toString.call(value);
        if (type !== Object.prototype.toString.call(other)) return false;

        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;

        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;
        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;
        if (valueLen !== otherLen) return false;
        var compare = function compare(item1, item2) {
            var itemType = Object.prototype.toString.call(item1);
            if (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {
                if (!isEqual(item1, item2)) return false;
            } else {
                if (itemType !== Object.prototype.toString.call(item2)) return false;
                if (itemType === '[object Function]') {
                    if (item1.toString() !== item2.toString()) return false;
                } else {
                    if (item1 !== item2) return false;
                }
            }
        };
        if (type === '[object Array]') {
            for (var i = 0; i < valueLen; i++) {
                if (compare(value[i], other[i]) === false) return false;
            }
        } else {
            for (var key in value) {
                if (value.hasOwnProperty(key)) {
                    if (compare(value[key], other[key]) === false) return false;
                }
            }
        }
        return true;
    };
    return isEqual(value, other);
};

var parseResponsiveViewPort = exports.parseResponsiveViewPort = function parseResponsiveViewPort() {
    var responsive = [{ viewport: 1170 }, { viewport: 980 }, { viewport: 580 }];
    if (typeof responsive === 'undefined') return;
    var activeView = null;

    for (var i = 0; i < responsive.length; i++) {
        if (window.innerWidth > responsive[i].viewport) {
            activeView = responsive[i];
            break;
        }
    }
    if (activeView === null) {
        activeView = responsive[responsive.length - 1];
    }
    return activeView.viewport <= 1199 ? activeView.viewport <= 991 ? 'xs' : 'sm' : 'md';
};

var copyToClipboard = exports.copyToClipboard = function copyToClipboard(string) {
    var textField = document.createElement('textarea');
    textField.innerText = string;
    document.body.appendChild(textField);
    textField.select();
    document.execCommand('copy');
    textField.remove();
};

/***/ }),

/***/ "./src/components/InteractionFields/InteractionData.js":
/*!*************************************************************!*\
  !*** ./src/components/InteractionFields/InteractionData.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var defaultInteraction = {
    while_scroll_into_view: {
        enable: false,
        action_list: [{
            id: 'b3fdc1c1e6bfde5942ea',
            index: 0,
            keyframe: 0,
            name: 'move',
            property: {
                x: 0,
                y: -100,
                z: 0
            },
            range: {
                max: 1000,
                min: -1000,
                step: 1
            },
            single: true,
            title: "Move"
        }, {
            id: '936e0225e6dc8edfba7d',
            index: 1,
            keyframe: 100,
            name: 'move',
            property: {
                x: 0,
                y: 0,
                z: 0
            },
            range: {
                max: 1000,
                min: -1000,
                step: 1
            },
            single: true,
            title: "Move"
        }],
        transform_origin_x: 'center',
        transform_origin_y: 'center',
        enable_mobile: false,
        enable_tablet: false
    },
    mouse_movement: {
        enable: false,
        mouse_tilt_direction: 'Direct',
        mouse_tilt_speed: 1,
        mouse_tilt_max: 15,
        enable_mobile: false,
        enable_tablet: false
    }
};

var interactionActions = [{
    name: 'move',
    title: "Move",
    property: {
        x: 0,
        y: -100,
        z: 0
    },
    range: {
        max: 1000,
        min: -1000,
        step: 1
    }
}, {
    name: 'scale',
    title: "Scale",
    property: {
        x: 1,
        y: 1,
        z: 1
    },
    range: {
        max: 3,
        min: 0,
        step: 0.1
    }
}, {
    name: 'rotate',
    title: "Rotate",
    property: {
        x: 0,
        y: -100,
        z: 0
    },
    range: {
        max: 1000,
        min: -1000,
        step: 1
    }
}, {
    name: 'skew',
    title: "Skew",
    property: {
        x: 0,
        y: -100
    },
    range: {
        max: 80,
        min: -80,
        step: 1
    }
}, {
    name: 'opacity',
    title: "Opacity",
    property: {
        value: 0
    },
    range: {
        max: 1,
        min: 0,
        step: 0.1
    }
}, {
    name: 'blur',
    title: "Blur",
    property: {
        value: 0
    },
    range: {
        max: 100,
        min: 0,
        step: 1
    }
}];

exports.defaultInteraction = defaultInteraction;
exports.interactionActions = interactionActions;

/***/ }),

/***/ "./src/components/InteractionFields/InteractionParser.js":
/*!***************************************************************!*\
  !*** ./src/components/InteractionFields/InteractionParser.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function InteractionMath(animationProperty) {
  this.actions = animationProperty;
  this.actionProperty = ['move', 'rotate', 'scale', 'skew', 'opacity', 'blur'];
  this.actionSortList = {};
}
InteractionMath.prototype.bindCustomAnimation = function () {
  var _this = this;

  this.actionProperty.map(function (ActionName) {
    _this.actionSortList[ActionName] = _this.actions.filter(function (action) {
      return action.name === ActionName;
    });
  });
};
InteractionMath.prototype.getCustomAnimationActionByName = function (actionName) {
  var keyframe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if (keyframe === null) {
    return typeof this.actionSortList[actionName] !== "undefined" ? this.actionSortList[actionName] : [];
  } else {
    var animation = { from: null, to: null };
    var actions = typeof this.actionSortList[actionName] !== "undefined" ? this.actionSortList[actionName] : [];
    if (actions.length === 0) {
      return animation;
    }
    var found = false;
    actions.map(function (action, index) {
      if (keyframe < parseInt(action.keyframe) && animation.to === null) {
        if (typeof animation.fixed !== 'undefined') delete animation.fixed;
        action.toKF = 0;
        animation.to = action;
        if (typeof actions[index - 1] !== 'undefined') {
          actions[index - 1].scroll = 0;
          animation.from = actions[index - 1];
        }
        found = true;
      }
      if (index === actions.length - 1 && found === false) {
        animation.to = action;
        animation.fixed = true;
        if (typeof actions[index - 1] !== 'undefined') {
          actions[index - 1].scroll = 0;
          animation.from = actions[index - 1];
        }
      }
    });
    return animation;
  }
};
InteractionMath.prototype.getTAxis = function (from, to, scrollPercentage, combinedPercentage) {
  var toKF = combinedPercentage.toKF,
      fromKF = combinedPercentage.fromKF;

  var tf = fromKF === 0 ? scrollPercentage : scrollPercentage - fromKF;
  return from - (from - to) / toKF * tf;
};

InteractionMath.prototype.getMoveTransform = function (key, nextTriggerActions, scrollPercentage) {
  var keyframe = nextTriggerActions.to.keyframe;
  var Fkeyframe = nextTriggerActions.from.keyframe;
  var toKF = isNaN(keyframe) ? 100 : Math.abs(Fkeyframe - keyframe);
  var combinedPercentage = { toKF: toKF, fromKF: Fkeyframe, totalKF: keyframe };

  var Xfrom = nextTriggerActions.from.x;
  var Xto = nextTriggerActions.to.x;
  var Yfrom = nextTriggerActions.from.y;
  var Yto = nextTriggerActions.to.y;
  var Zfrom = nextTriggerActions.from.z;
  var Zto = nextTriggerActions.to.z;
  nextTriggerActions.goal.x = this.getTAxis(Xfrom, Xto, scrollPercentage, combinedPercentage);
  nextTriggerActions.goal.y = this.getTAxis(Yfrom, Yto, scrollPercentage, combinedPercentage); //IM.getTAxis(Yfrom, Yto, scrollPercentage, combinedPercentage)
  nextTriggerActions.goal.z = this.getTAxis(Zfrom, Zto, scrollPercentage, combinedPercentage);
  return nextTriggerActions;
};
InteractionMath.prototype.getSkew = function (key, nextTriggerActions, scrollPercentage) {
  var keyframe = nextTriggerActions.to.keyframe;
  var Fkeyframe = nextTriggerActions.from.keyframe;
  var toKF = isNaN(keyframe) ? 100 : Math.abs(Fkeyframe - keyframe);

  var combinedPercentage = { toKF: toKF, fromKF: Fkeyframe, totalKF: keyframe };
  var Xfrom = nextTriggerActions.from.x;
  var Xto = nextTriggerActions.to.x;
  var Yfrom = nextTriggerActions.from.y;
  var Yto = nextTriggerActions.to.y;
  nextTriggerActions.goal.x = this.getTAxis(Xfrom, Xto, scrollPercentage, combinedPercentage);
  nextTriggerActions.goal.y = this.getTAxis(Yfrom, Yto, scrollPercentage, combinedPercentage);
  return nextTriggerActions;
};
InteractionMath.prototype.getOpacity = function (key, nextTriggerActions, scrollPercentage) {
  var keyframe = nextTriggerActions.to.keyframe;
  var Fkeyframe = nextTriggerActions.from.keyframe;
  var toKF = isNaN(keyframe) ? 100 : Math.abs(Fkeyframe - keyframe);

  var combinedPercentage = { toKF: toKF, fromKF: Fkeyframe, totalKF: keyframe };
  var Ofrom = nextTriggerActions.from.value;
  var Oto = nextTriggerActions.to.value;
  nextTriggerActions.goal.value = this.getTAxis(Ofrom, Oto, scrollPercentage, combinedPercentage);
  return nextTriggerActions;
};

var MouseTilt = function () {
  function MouseTilt(element) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, MouseTilt);

    this.width = null;
    this.height = null;
    this.clientWidth = null;
    this.clientHeight = null;
    this.left = null;
    this.top = null;

    // for Gyroscope sampling
    this.gammazero = null;
    this.betazero = null;
    this.lastgammazero = null;
    this.lastbetazero = null;

    this.transitionTimeout = null;
    this.updateCall = null;
    this.event = null;

    this.updateBind = this.update.bind(this);
    this.resetBind = this.reset.bind(this);

    this.element = element;
    this.destroys = false;
    this.settings = this.extendSettings(settings);

    this.reverse = this.settings.reverse ? -1 : 1;
    this.glare = MouseTilt.isSettingTrue(this.settings.glare);
    this.glarePrerender = MouseTilt.isSettingTrue(this.settings["glare-prerender"]);
    this.fullPageListening = MouseTilt.isSettingTrue(this.settings["full-page-listening"]);
    this.gyroscope = MouseTilt.isSettingTrue(this.settings.gyroscope);
    this.gyroscopeSamples = this.settings.gyroscopeSamples;

    this.elementListener = this.getElementListener();
    this.wrapWithParent();
    if (this.glare) {
      this.prepareGlare();
    }

    if (this.fullPageListening) {
      this.updateClientSize();
    }

    this.addEventListeners();
    this.updateInitialPosition();
  }

  _createClass(MouseTilt, [{
    key: 'getElementListener',


    /**
     * Method returns element what will be listen mouse events
     * @return {Node}
     */
    value: function getElementListener() {
      return this.element;
    }

    /**
     * Method set listen methods for this.elementListener
     * @return {Node}
     */

  }, {
    key: 'addEventListeners',
    value: function addEventListeners() {
      this.onMouseEnterBind = this.onMouseEnter.bind(this);
      this.onMouseMoveBind = this.onMouseMove.bind(this);
      this.onMouseLeaveBind = this.onMouseLeave.bind(this);
      this.onWindowResizeBind = this.onWindowResize.bind(this);
      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);

      this.elementListener.addEventListener("mouseenter", this.onMouseEnterBind);
      this.elementListener.addEventListener("mouseleave", this.onMouseLeaveBind);
      this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);

      if (this.glare || this.fullPageListening) {
        window.addEventListener("resize", this.onWindowResizeBind);
      }

      if (this.gyroscope) {
        window.addEventListener("deviceorientation", this.onDeviceOrientationBind);
      }
    }

    /**
     * Method remove event listeners from current this.elementListener
     */

  }, {
    key: 'removeEventListeners',
    value: function removeEventListeners() {
      this.elementListener.removeEventListener("mouseenter", this.onMouseEnterBind);
      this.elementListener.removeEventListener("mouseleave", this.onMouseLeaveBind);
      this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);

      if (this.gyroscope) {
        window.removeEventListener("deviceorientation", this.onDeviceOrientationBind);
      }

      if (this.glare || this.fullPageListening) {
        window.removeEventListener("resize", this.onWindowResizeBind);
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      clearTimeout(this.transitionTimeout);
      if (this.updateCall !== null) {
        cancelAnimationFrame(this.updateCall);
      }
      this.reset();
      this.destroys = true;
      this.unWrapParent(this.element);
      this.removeEventListeners();
      if (typeof this.element.mouseTilt !== 'undefined') {
        this.element.mouseTilt = null;
        delete this.element.mouseTilt;
      }

      this.element = null;
    }
  }, {
    key: 'onDeviceOrientation',
    value: function onDeviceOrientation(event) {
      if (event.gamma === null || event.beta === null) {
        return;
      }

      this.updateElementPosition();

      if (this.gyroscopeSamples > 0) {
        this.lastgammazero = this.gammazero;
        this.lastbetazero = this.betazero;

        if (this.gammazero === null) {
          this.gammazero = event.gamma;
          this.betazero = event.beta;
        } else {
          this.gammazero = (event.gamma + this.lastgammazero) / 2;
          this.betazero = (event.beta + this.lastbetazero) / 2;
        }

        this.gyroscopeSamples -= 1;
      }

      var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;
      var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;

      var degreesPerPixelX = totalAngleX / this.width;
      var degreesPerPixelY = totalAngleY / this.height;

      var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);
      var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);

      var posX = angleX / degreesPerPixelX;
      var posY = angleY / degreesPerPixelY;

      if (this.updateCall !== null) {
        cancelAnimationFrame(this.updateCall);
      }

      this.event = {
        clientX: posX + this.left,
        clientY: posY + this.top
      };

      this.updateCall = requestAnimationFrame(this.updateBind);
    }

    /**
     * Wrap with extra div when initiate or mouse enter to the element
     */

  }, {
    key: 'wrapWithParent',
    value: function wrapWithParent() {
      if (typeof this.element.parentElement !== 'undefined' && this.element.parentElement !== null && this.element.parentElement.className === 'qubley-interaction-wrapper') {
        this.element = this.element.parentElement;
      }
      if (this.element.className === 'qubley-interaction-wrapper' || this.element.parentElement.className === 'qubley-interaction-wrapper') {
        return;
      }
      var newDom = document.createElement('div');
      newDom.setAttribute('class', 'qubley-interaction-wrapper');
      this.element.parentNode.insertBefore(newDom, this.element);
      newDom.appendChild(this.element);
      this.element = newDom;
    }

    /**
     * Unwrap the extra div when destroy or need to remove other time
     */

  }, {
    key: 'unWrapParent',
    value: function unWrapParent(element) {
      if (element.parentNode !== null && element.parentElement.className === 'qubley-interaction-wrapper') {
        element = element.parentElement;
      }
      if (element.className !== 'qubley-interaction-wrapper' || element.parentNode === null) {
        return;
      }
      var elem = element.childNodes;
      if (elem.length > 0) {
        var newElement = element.parentNode.insertBefore(elem[0], element);
        element.parentElement.removeChild(element);
        this.element = newElement;
      }
    }
  }, {
    key: 'onMouseEnter',
    value: function onMouseEnter() {
      this.wrapWithParent();
      this.updateElementPosition();
      this.element.style.willChange = "transform";
      this.setTransition();
    }
  }, {
    key: 'onMouseMove',
    value: function onMouseMove(event) {
      if (this.updateCall !== null) {
        cancelAnimationFrame(this.updateCall);
      }

      this.event = event;
      this.updateCall = requestAnimationFrame(this.updateBind);
    }
  }, {
    key: 'onMouseLeave',
    value: function onMouseLeave() {
      this.setTransition();
      if (this.settings.reset) {
        requestAnimationFrame(this.resetBind);
      }
    }
  }, {
    key: 'reset',
    value: function reset() {
      this.event = {
        clientX: this.left + this.width / 2,
        clientY: this.top + this.height / 2
      };

      if (this.element !== null && this.element.parentElement !== null) {
        if (this.element.parentElement.className === 'qubley-interaction-wrapper') {
          this.element = this.element.parentElement;
        }
      }

      if (this.element.className !== 'qubley-interaction-wrapper') {
        return;
      }
      if (this.element && this.element.style) {
        this.element.style.transform = 'perspective(' + this.settings.perspective + 'px) ' + 'rotateX(0deg) ' + 'rotateY(0deg) ' + 'scale3d(1, 1, 1)';
      }

      this.resetGlare();
    }
  }, {
    key: 'resetGlare',
    value: function resetGlare() {
      if (this.glare) {
        this.glareElement.style.transform = "rotate(180deg) translate(-50%, -50%)";
        this.glareElement.style.opacity = "0";
      }
    }
  }, {
    key: 'updateInitialPosition',
    value: function updateInitialPosition() {
      if (this.settings.startX === 0 && this.settings.startY === 0) {
        return;
      }

      this.onMouseEnter();
      if (this.fullPageListening) {
        this.event = {
          clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,
          clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight
        };
      } else {
        this.event = {
          clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,
          clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height
        };
      }

      var backupScale = this.settings.scale;
      this.settings.scale = 1;
      this.update();
      this.settings.scale = backupScale;
      this.resetGlare();
    }
  }, {
    key: 'getValues',
    value: function getValues() {
      var x = void 0,
          y = void 0;

      if (this.fullPageListening) {
        x = this.event.clientX / this.clientWidth;
        y = this.event.clientY / this.clientHeight;
      } else {
        x = (this.event.clientX - this.left) / this.width;
        y = (this.event.clientY - this.top) / this.height;
      }

      x = Math.min(Math.max(x, 0), 1);
      y = Math.min(Math.max(y, 0), 1);

      var tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);
      var tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);
      var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);

      return {
        tiltX: tiltX,
        tiltY: tiltY,
        percentageX: x * 100,
        percentageY: y * 100,
        angle: angle
      };
    }
  }, {
    key: 'updateElementPosition',
    value: function updateElementPosition() {
      var rect = this.element.getBoundingClientRect();
      this.width = this.element.offsetWidth;
      this.height = this.element.offsetHeight;
      this.left = rect.left;
      this.top = rect.top;
    }
  }, {
    key: 'updateBorder',
    value: function updateBorder() {
      this.element.style.border = '1px solid red';
    }
  }, {
    key: 'update',
    value: function update() {
      var values = this.getValues();
      this.element.style.transform = "perspective(" + this.settings.perspective + "px) " + "rotateX(" + (this.settings.axis === "x" ? 0 : values.tiltY) + "deg) " + "rotateY(" + (this.settings.axis === "y" ? 0 : values.tiltX) + "deg) " + "scale3d(" + this.settings.scale + ", " + this.settings.scale + ", " + this.settings.scale + ")";

      if (this.glare) {
        this.glareElement.style.transform = 'rotate(' + values.angle + 'deg) translate(-50%, -50%)';
        this.glareElement.style.opacity = '' + values.percentageY * this.settings["max-glare"] / 100;
      }

      this.element.dispatchEvent(new CustomEvent("tiltChange", {
        "detail": values
      }));

      this.updateCall = null;
    }

    /**
     * Appends the glare element (if glarePrerender equals false)
     * and sets the default style
     */

  }, {
    key: 'prepareGlare',
    value: function prepareGlare() {
      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.
      if (!this.glarePrerender) {
        // Create glare element
        var jsTiltGlare = document.createElement("div");
        jsTiltGlare.classList.add("js-tilt-glare");

        var jsTiltGlareInner = document.createElement("div");
        jsTiltGlareInner.classList.add("js-tilt-glare-inner");

        jsTiltGlare.appendChild(jsTiltGlareInner);
        this.element.appendChild(jsTiltGlare);
      }

      this.glareElementWrapper = this.element.querySelector(".js-tilt-glare");
      this.glareElement = this.element.querySelector(".js-tilt-glare-inner");

      if (this.glarePrerender) {
        return;
      }

      Object.assign(this.glareElementWrapper.style, {
        "position": "absolute",
        "top": "0",
        "left": "0",
        "width": "100%",
        "height": "100%",
        "overflow": "hidden",
        "pointer-events": "none"
      });

      Object.assign(this.glareElement.style, {
        "position": "absolute",
        "top": "50%",
        "left": "50%",
        "pointer-events": "none",
        "background-image": 'linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)',
        "width": this.element.offsetWidth * 2 + 'px',
        "height": this.element.offsetWidth * 2 + 'px',
        "transform": "rotate(180deg) translate(-50%, -50%)",
        "transform-origin": "0% 0%",
        "opacity": "0"
      });
    }
  }, {
    key: 'updateGlareSize',
    value: function updateGlareSize() {
      if (this.glare) {
        Object.assign(this.glareElement.style, {
          "width": '' + this.element.offsetWidth * 2,
          "height": '' + this.element.offsetWidth * 2
        });
      }
    }
  }, {
    key: 'updateClientSize',
    value: function updateClientSize() {
      this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;

      this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    }
  }, {
    key: 'onWindowResize',
    value: function onWindowResize() {
      this.updateGlareSize();
      this.updateClientSize();
    }
  }, {
    key: 'setTransition',
    value: function setTransition() {
      var _this2 = this;

      clearTimeout(this.transitionTimeout);
      this.element.style.transition = this.settings.speed + "ms " + this.settings.easing;
      if (this.glare) this.glareElement.style.transition = 'opacity ' + this.settings.speed + 'ms ' + this.settings.easing;

      this.transitionTimeout = setTimeout(function () {
        _this2.element.style.transition = "";
        if (_this2.glare) {
          _this2.glareElement.style.transition = "";
        }
      }, this.settings.speed);
    }
  }, {
    key: 'extendSettings',
    value: function extendSettings(settings) {
      var defaultSettings = {
        reverse: false,
        max: 15,
        startX: 0,
        startY: 0,
        perspective: 1000,
        easing: "cubic-bezier(.03,.98,.52,.99)",
        scale: 1,
        speed: 300,
        transition: true,
        axis: null,
        glare: false,
        "max-glare": 1,
        "glare-prerender": false,
        "full-page-listening": false,
        "mouse-event-element": null,
        reset: true,
        gyroscope: true,
        gyroscopeMinAngleX: -45,
        gyroscopeMaxAngleX: 45,
        gyroscopeMinAngleY: -45,
        gyroscopeMaxAngleY: 45,
        gyroscopeSamples: 10
      };

      var newSettings = {};
      for (var property in defaultSettings) {
        if (property in settings) {
          newSettings[property] = settings[property];
        } else if (this.element.hasAttribute("data-tilt-" + property)) {
          var attribute = this.element.getAttribute("data-tilt-" + property);
          try {
            newSettings[property] = JSON.parse(attribute);
          } catch (e) {
            newSettings[property] = attribute;
          }
        } else {
          newSettings[property] = defaultSettings[property];
        }
      }

      return newSettings;
    }
  }], [{
    key: 'isSettingTrue',
    value: function isSettingTrue(setting) {
      return setting === "" || setting === true || setting === 1;
    }
  }, {
    key: 'init',
    value: function init(element, settings) {
      element.mouseTilt = new MouseTilt(element, settings);
    }
  }]);

  return MouseTilt;
}();

/**
 * Parser for get the ineraction css string for live preview
 * Init() for default animation 
 * ScrollParser for custom animation (Scroll animation)
 */


var InteractionParser = function () {
  function InteractionParser() {
    _classCallCheck(this, InteractionParser);

    this.element = null;
    this.addonId = null;
  }

  _createClass(InteractionParser, [{
    key: 'parseBeforeFixedWindowPosition',
    value: function parseBeforeFixedWindowPosition(animation) {
      var customAnimationProperty = {
        move: null,
        scale: null,
        skew: null,
        opacity: null,
        blur: null,
        rotate: null
      };

      var IM = new InteractionMath(animation);
      IM.bindCustomAnimation();
      var iniTriggerActions = {
        move: { x: 0, y: 0, z: 0 },
        scale: { x: 1, y: 1, z: 1 },
        skew: { x: 0, y: 0 },
        rotate: { x: 0, y: 0, z: 0 },
        opacity: 0,
        blur: 0
      };
      Object.keys(customAnimationProperty).forEach(function (key) {
        customAnimationProperty[key] = IM.getCustomAnimationActionByName(key);
        if (customAnimationProperty[key] !== null && customAnimationProperty[key].length > 0) {
          iniTriggerActions[key] = customAnimationProperty[key][0].property;
        }
      });

      Object.keys(iniTriggerActions).forEach(function (key) {
        if (typeof iniTriggerActions[key].x !== "undefined") {
          iniTriggerActions[key].x = iniTriggerActions[key].x === "" ? 0 : parseFloat(iniTriggerActions[key].x);
        }
        if (typeof iniTriggerActions[key].y !== "undefined") iniTriggerActions[key].y = iniTriggerActions[key].y === "" ? 0 : parseFloat(iniTriggerActions[key].y);
        if (typeof iniTriggerActions[key].z !== "undefined") iniTriggerActions[key].z = iniTriggerActions[key].z === "" ? 0 : parseFloat(iniTriggerActions[key].z);
      });

      return '{\n                \'will-change\': "transform";\n                 \'transform\' : "translate3d(' + iniTriggerActions.move.x + 'px, ' + iniTriggerActions.move.y + 'px, ' + iniTriggerActions.move.z + 'px) \n                                scale3d(' + iniTriggerActions.scale.x + ', ' + iniTriggerActions.scale.y + ', ' + iniTriggerActions.scale.z + ')\n                                rotateX(' + iniTriggerActions.rotate.x + 'deg) rotateY(' + iniTriggerActions.rotate.y + 'deg) rotateZ(' + iniTriggerActions.rotate.y + 'deg) \n                                skew(' + iniTriggerActions.skew.x + 'deg, ' + iniTriggerActions.skew.y + 'deg)";\n                }';
    }

    /**
     * Live scroll animation parser
     * 
     */

  }, {
    key: 'parseScrollAction',
    value: function parseScrollAction(actions, scrollPercentage, origin) {
      var animation = actions;
      var IM = new InteractionMath(animation);
      IM.bindCustomAnimation();
      var nextTriggerActions = {
        move: {
          from: { x: 0, y: 0, z: 0, keyframe: 0, f: false },
          to: { x: 0, y: 0, z: 0, keyframe: 0, f: false },
          goal: { x: 0, y: 0, z: 0, keyframe: 0 }
        },
        scale: {
          from: { x: 1, y: 1, z: 1, keyframe: 0 },
          to: { x: 1, y: 1, z: 1, keyframe: 0 },
          goal: { x: 1, y: 1, z: 1, keyframe: 0 }
        },
        skew: {
          from: { x: 0, y: 0, keyframe: 0 },
          to: { x: 0, y: 0, keyframe: 0 },
          goal: { x: 0, y: 0, keyframe: 0 }
        },
        rotate: {
          from: { x: 0, y: 0, z: 0, keyframe: 0 },
          to: { x: 0, y: 0, z: 0, keyframe: 0 },
          goal: { x: 0, y: 0, z: 0, keyframe: 0 }
        },
        opacity: {
          from: { value: 0, keyframe: 0 },
          to: { value: 0, keyframe: 0 },
          goal: { value: 1, keyframe: 0 }
        },
        blur: {
          from: { value: 0, keyframe: 0 },
          to: { value: 0, keyframe: 0 },
          goal: { value: 0, keyframe: 0 }
        }
      };
      IM.actionProperty.map(function (key) {
        var action = IM.getCustomAnimationActionByName(key, scrollPercentage); // Grater than current keyframe/scrollPercentage

        if (action.from !== null) {
          Object.assign(nextTriggerActions[key].from, action.from.property);
          nextTriggerActions[key].from.f = true;
          nextTriggerActions[key].from.keyframe = parseInt(action.from.keyframe);

          if (typeof nextTriggerActions[key].from.x !== "undefined") nextTriggerActions[key].from.x = nextTriggerActions[key].from.x === "" ? 0 : parseFloat(nextTriggerActions[key].from.x);
          if (typeof nextTriggerActions[key].from.y !== "undefined") nextTriggerActions[key].from.y = nextTriggerActions[key].from.y === "" ? 0 : parseFloat(nextTriggerActions[key].from.y);
          if (typeof nextTriggerActions[key].from.z !== "undefined") nextTriggerActions[key].from.z = nextTriggerActions[key].from.z === "" ? 0 : parseFloat(nextTriggerActions[key].from.z);
          if (typeof nextTriggerActions[key].from.value !== "undefined") nextTriggerActions[key].from.value = nextTriggerActions[key].from.value === "" ? 0 : parseFloat(nextTriggerActions[key].from.value);
        }
        if (action.to !== null) {
          Object.assign(nextTriggerActions[key].to, action.to.property);
          if (typeof nextTriggerActions[key].to.x !== "undefined") {
            nextTriggerActions[key].to.x = nextTriggerActions[key].to.x === "" ? 0 : parseFloat(nextTriggerActions[key].to.x);
            nextTriggerActions[key].goal.x = nextTriggerActions[key].to.x;
          }
          if (typeof nextTriggerActions[key].to.y !== "undefined") {
            nextTriggerActions[key].to.y = nextTriggerActions[key].to.y === "" ? 0 : parseFloat(nextTriggerActions[key].to.y);
            nextTriggerActions[key].goal.y = nextTriggerActions[key].to.y;
          }
          if (typeof nextTriggerActions[key].to.z !== "undefined") {
            nextTriggerActions[key].to.z = nextTriggerActions[key].to.z === "" ? 0 : parseFloat(nextTriggerActions[key].to.z);
            nextTriggerActions[key].goal.z = nextTriggerActions[key].to.z;
          }
          if (typeof nextTriggerActions[key].to.value !== "undefined") {
            nextTriggerActions[key].to.value = nextTriggerActions[key].to.value === "" ? 0 : parseFloat(nextTriggerActions[key].to.value);
            nextTriggerActions[key].goal.value = nextTriggerActions[key].to.value;
          }

          nextTriggerActions[key].to.keyframe = parseInt(action.to.keyframe);
          nextTriggerActions[key].to.f = true;
        }

        if (nextTriggerActions[key].to.f === true && nextTriggerActions[key].from.f === true && typeof action.fixed === 'undefined') {
          if (key === 'opacity' || key === 'blur') {
            nextTriggerActions[key] = IM.getOpacity(key, nextTriggerActions[key], scrollPercentage);
          } else if (key === 'skew') {
            nextTriggerActions[key] = IM.getSkew(key, nextTriggerActions[key], scrollPercentage);
          } else {
            nextTriggerActions[key] = IM.getMoveTransform(key, nextTriggerActions[key], scrollPercentage);
          }
        }
      });

      return {
        'willChange': 'opacity, transform, filter',
        '-webkit-transition-timing-function': 'linear',
        "transitionProperty": "transform, opacity, filter",
        "transformStyle": "preserve-3d",
        "transformOrigin": origin.x_offset + ' ' + origin.y_offset,
        'opacity': '' + nextTriggerActions.opacity.goal.value,
        'filter': 'blur(' + nextTriggerActions.blur.goal.value + 'px)',
        '-webkit-filter:': 'blur(' + nextTriggerActions.blur.goal.value + 'px)',
        'transform': 'perspective(1000px) translate3d(' + nextTriggerActions.move.goal.x + 'px, ' + nextTriggerActions.move.goal.y + 'px, ' + nextTriggerActions.move.goal.z + 'px)\n                    scale3d(' + nextTriggerActions.scale.goal.x + ', ' + nextTriggerActions.scale.goal.y + ', ' + nextTriggerActions.scale.goal.z + ')\n                    rotateX(' + nextTriggerActions.rotate.goal.x + 'deg) rotateY(' + nextTriggerActions.rotate.goal.y + 'deg) rotateZ(' + nextTriggerActions.rotate.goal.z + 'deg) \n                    skew(' + nextTriggerActions.skew.goal.x + 'deg, ' + nextTriggerActions.skew.goal.y + 'deg)'
      };
    }
  }]);

  return InteractionParser;
}();

var IntParser = new InteractionParser();
exports.IntParser = IntParser;
exports.InteractionMath = InteractionMath;
exports.MouseTilt = MouseTilt;

/***/ }),

/***/ "./src/components/InteractionFields/RenderFields.js":
/*!**********************************************************!*\
  !*** ./src/components/InteractionFields/RenderFields.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ../fields/Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;

var RenderFields = function (_Component) {
    _inherits(RenderFields, _Component);

    function RenderFields() {
        _classCallCheck(this, RenderFields);

        return _possibleConstructorReturn(this, (RenderFields.__proto__ || Object.getPrototypeOf(RenderFields)).apply(this, arguments));
    }

    _createClass(RenderFields, [{
        key: '_onChangeProperties',
        value: function _onChangeProperties(key, value) {
            var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
            var fields = this.props.fields;

            var newFields = '';
            if (parent === '') {
                newFields = Object.assign({}, fields, _defineProperty({}, key, value));
            } else {
                var parentProps = Object.assign({}, fields[parent], _defineProperty({}, key, parseFloat(value)));
                newFields = Object.assign({}, fields, _defineProperty({}, parent, _extends({}, parentProps)));
            }
            this.props.onChange(newFields);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props$fields = this.props.fields,
                property = _props$fields.property,
                range = _props$fields.range,
                keyframe = _props$fields.keyframe,
                title = _props$fields.title;

            return React.createElement(
                'div',
                { className: 'qubely-animation-controller-fields' },
                React.createElement(
                    'div',
                    { className: 'qubely-animation-control-keyframe' },
                    React.createElement(_Range2.default, { label: __("Timeline/Keyframe"), value: parseInt(keyframe), onChange: function onChange(value) {
                            return _this2._onChangeProperties('keyframe', value);
                        }, min: 0, max: 100 })
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-animation-control-property-title' },
                    ' Action : ',
                    title,
                    ' '
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-animation-control-property-fields' },
                    Object.keys(property).map(function (key, index) {
                        return React.createElement(_Range2.default, { key: index, label: __(key), value: parseFloat(property[key]), onChange: function onChange(value) {
                                return _this2._onChangeProperties(key, value, 'property');
                            }, min: range.min, max: range.max, step: range.step });
                    })
                )
            );
        }
    }]);

    return RenderFields;
}(Component);

exports.default = RenderFields;

/***/ }),

/***/ "./src/components/InteractionFields/Timeline.js":
/*!******************************************************!*\
  !*** ./src/components/InteractionFields/Timeline.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _InteractionParser = __webpack_require__(/*! ./InteractionParser */ "./src/components/InteractionFields/InteractionParser.js");

var _RenderFields = __webpack_require__(/*! ./RenderFields */ "./src/components/InteractionFields/RenderFields.js");

var _RenderFields2 = _interopRequireDefault(_RenderFields);

var _InteractionData = __webpack_require__(/*! ./InteractionData */ "./src/components/InteractionFields/InteractionData.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp = wp,
    isShallowEqual = _wp.isShallowEqual;
var Component = wp.element.Component;

var Timeline = function (_Component) {
    _inherits(Timeline, _Component);

    function Timeline(props) {
        _classCallCheck(this, Timeline);

        var _this = _possibleConstructorReturn(this, (Timeline.__proto__ || Object.getPrototypeOf(Timeline)).call(this));

        _this.state = {
            isActionList: false,
            timeline: false,
            initialAction: [{ id: '', name: '', keyframe: 0, timing_func: '', property: null }, { id: '', name: '', keyframe: 100, timing_func: '', property: null }],
            selectedActionIndex: null,
            coPosition: { x: 0, y: 0 },
            contextAxis: { x: 0, y: 0 },
            timeLineCoPosition: {
                linePosition: 0,
                percentage: 0,
                id: null,
                isVisible: false,
                index: null
            },
            contextMenuVisible: null,
            isHoverAction: false,
            showTimelineActionList: false,

            enableAnimationNameField: false,
            currentAction: null,
            // Live scroll percetage
            scrollPercent: 0,
            timelineHeight: 0,
            addOnId: null,
            keyframeCounter: {},

            actionListDargIndex: null,
            actionListOverKeyframe: null,
            selectedDargAction: null,
            maskPosition: 0
        };
        return _this;
    }

    _createClass(Timeline, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.addEventListener('mousedown', this.handleClickOutside.bind(this));
            var editorView = document.getElementsByClassName('edit-post-layout__content');
            if (editorView.length > 0) {
                editorView[0].addEventListener('scroll', this.handleScroll.bind(this), true);
            }
            this.renderAnimationActionList();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var editorView = document.getElementsByClassName('edit-post-layout__content');
            document.removeEventListener('mousedown', this.handleClickOutside.bind(this));
            if (editorView.length > 0) {
                editorView[0].removeEventListener('scroll', this.handleScroll.bind(this), false);
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (!isShallowEqual(prevProps.actionList, this.props.actionList) || prevState.selectedActionIndex !== this.state.selectedActionIndex || prevState.contextMenuVisible !== this.state.contextMenuVisible || prevState.actionListOverKeyframe !== this.state.actionListOverKeyframe) {
                this.renderAnimationActionList();
            }
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll(event) {
            if (typeof this.timelineWrapper === 'undefined' || this.timelineWrapper === null) {
                return false;
            }
            var element = document.getElementsByClassName('qubely-block-' + this.props.uniqueId);
            if (element.length > 0) {
                element = element[0].parentElement;
                var percentage = this.percentageSeen(element);
                var timelineHeight = this.timelineWrapper.getBoundingClientRect().height;
                if (percentage > -1 && percentage <= 100) {
                    this.setState({ scrollPercent: percentage, timelineHeight: timelineHeight });
                }
            }
        }
    }, {
        key: 'percentageSeen',
        value: function percentageSeen(element) {
            var elementRect = element.getBoundingClientRect();
            var viewportHeight = document.body.offsetHeight,
                scrollTop = window.pageYOffset,
                elementOffsetTop = elementRect.top,
                elementHeight = elementRect.height;
            if (elementOffsetTop > scrollTop + viewportHeight) {
                return -1;
            } else if (elementOffsetTop + elementHeight < scrollTop) {
                return 101;
            } else {
                var distance = scrollTop + viewportHeight - elementOffsetTop;
                var percentage = distance / ((viewportHeight + elementHeight) / 100);
                return percentage > 100 ? 100 : percentage;
            }
        }
    }, {
        key: 'handleClickOutside',
        value: function handleClickOutside(event) {
            if (this.itemWrapper && !this.itemWrapper.contains(event.target) && this.state.contextMenuVisible !== null) {
                if (typeof this.contextMenuRoot !== 'undefined' && !this.contextMenuRoot.contains(event.target)) {
                    this.setState({ contextMenuVisible: null });
                }
            }
            if (this.actionListWrapper && !this.actionListWrapper.contains(event.target) && this.state.isActionList) {
                this.setState({ isActionList: false });
            }
        }

        // List fo the actions

    }, {
        key: 'showActionList',
        value: function showActionList() {
            this.setState({ isActionList: !this.state.isActionList });
        }
    }, {
        key: 'revisedRandId',
        value: function revisedRandId() {
            var S4 = function S4() {
                return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);
            };
            return S4() + S4() + S4() + S4() + S4();
        }
    }, {
        key: 'onMouseMoveAction',
        value: function onMouseMoveAction(keyStart, keyEnd, id, index, event) {
            var trect = this.timelineWrapper.getBoundingClientRect();
            var rect = event.target.getBoundingClientRect();
            var yAxis = event.clientY - rect.top;
            var startFrom = parseInt(keyStart) - 1;
            var endTo = parseInt(keyEnd) + 1;
            var fullKeyFrame = startFrom + endTo - 1;
            var percentage = Math.floor(yAxis / rect.height * startFrom) + endTo;
            var yyAxis = event.clientY - trect.top;
            var position = Math.abs(yyAxis / trect.height * 100);

            var isVisible = !(fullKeyFrame + 1 === endTo);
            var timeLineCoPosition = {
                linePosition: position,
                percentage: percentage,
                id: id,
                isVisible: isVisible,
                index: index
            };
            this.setState({ timeLineCoPosition: timeLineCoPosition, isHoverAction: true });
        }

        // Select action for update

    }, {
        key: 'onSelectAction',
        value: function onSelectAction(index) {
            var actionList = this.props.actionList;

            var currentAction = actionList[index];
            this.setState({ selectedActionIndex: index, contextMenuVisible: null, currentAction: currentAction, showTimelineActionList: false });
            this.props.selectAction(currentAction);
        }
    }, {
        key: 'onContextMenu',
        value: function onContextMenu(index, event) {
            event.preventDefault();
            var contextAxis = { x: event.clientX, y: event.clientY };
            this.setState({ contextMenuVisible: index, contextAxis: contextAxis, showTimelineActionList: false });
        }
        /*
         * Need set the position with mouse position
         */

    }, {
        key: 'setContextMenuRoot',
        value: function setContextMenuRoot(node) {
            this.contextMenuRoot = node;
        }
    }, {
        key: '_onDeleteItem',
        value: function _onDeleteItem(index) {
            var actionList = this.props.actionList;

            actionList.splice(index, 1);
            this.setState({ contextMenuVisible: null, selectedActionIndex: null });
            this.props.onChange(actionList);
        }
    }, {
        key: '_onDuplicateItem',
        value: function _onDuplicateItem(index) {
            var actionList = this.props.actionList;

            var currentItem = JSON.parse(JSON.stringify(actionList[index]));
            var actionIndex = index + 1;
            currentItem.id = this.revisedRandId();
            actionList.splice(actionIndex, 0, currentItem);
            this.setState({
                currentAction: currentItem,
                contextMenuVisible: null,
                selectedActionIndex: actionIndex
            });
            this.props.onChange(actionList);
        }

        //Context menu

    }, {
        key: 'contextMenu',
        value: function contextMenu(index) {
            var contextAxis = this.state.contextAxis;

            var trect = this.timelineWrapper.getBoundingClientRect();
            var position = contextAxis.x - trect.left;
            position = trect.width < position + 120 ? Math.abs(position - 120) : position;
            var style = { left: position + 'px' };
            return React.createElement(
                'div',
                { style: style, className: 'qubely-action-context-menu', ref: this.setContextMenuRoot.bind(this) },
                React.createElement(
                    'div',
                    { className: 'qubely-action-content-menu-item', onClick: this._onDeleteItem.bind(this, index) },
                    ' ',
                    React.createElement('i', { className: 'fa fa-trash' }),
                    ' Delete '
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-action-content-menu-item', onClick: this._onDuplicateItem.bind(this, index) },
                    ' ',
                    React.createElement('i', { className: 'fa fa-clone' }),
                    ' Duplicate '
                )
            );
        }
    }, {
        key: 'onMouseDragStartOnActionList',
        value: function onMouseDragStartOnActionList(index, event) {
            var _this2 = this;

            var trect = this.timelineWrapper.getBoundingClientRect();
            var yyAxis = event.clientY - trect.top;
            var position = Math.abs(yyAxis / trect.height * 100);
            this.timeCounter = 0;
            this.onDragDelayTimer = setInterval(function () {
                _this2.updateDragAction(position, index);
                _this2.timeCounter = _this2.timeCounter + 1;
            }, 100);
        }
    }, {
        key: 'updateDragAction',
        value: function updateDragAction(position, index) {
            if (this.timeCounter > 0) {
                clearInterval(this.onDragDelayTimer);
                this.timeCounter = 0;
                var actionList = this.props.actionList;

                this.setState({ actionListDargIndex: index, selectedDargAction: actionList[index], maskPosition: position });
            }
        }
    }, {
        key: 'onMouseOverOnActionList',
        value: function onMouseOverOnActionList(keyframe, event) {
            if (this.state.actionListDargIndex !== null) {
                this.setState({ actionListOverKeyframe: keyframe });
            }
        }
    }, {
        key: 'onMouseOutOnActionList',
        value: function onMouseOutOnActionList(event) {
            if (this.state.actionListOverKeyframe !== null) {
                this.setState({ actionListOverKeyframe: null });
            }
        }
    }, {
        key: 'onMouseDragEndOnActionList',
        value: function onMouseDragEndOnActionList(event) {
            var _state = this.state,
                actionListDargIndex = _state.actionListDargIndex,
                actionListOverKeyframe = _state.actionListOverKeyframe,
                percentage = _state.timeLineCoPosition.percentage;

            if (actionListDargIndex !== null) {
                if (actionListOverKeyframe !== null) {
                    percentage = parseInt(actionListOverKeyframe);
                }
                var newActionList = JSON.parse(JSON.stringify(this.props.actionList));
                var newAction = Object.assign({}, newActionList[actionListDargIndex], { keyframe: percentage });
                newActionList[actionListDargIndex] = newAction;
                this.setState({ actionListDargIndex: null, selectedDargAction: null, actionListOverKeyframe: null, selectedActionIndex: actionListDargIndex, currentAction: newAction });
                this.props.onChange(newActionList);
            }
            if (this.onDragDelayTimer) {
                clearInterval(this.onDragDelayTimer);
            }
        }
    }, {
        key: 'onMouseMoveOnTimeline',
        value: function onMouseMoveOnTimeline(event) {
            var actionListDargIndex = this.state.actionListDargIndex;

            if (actionListDargIndex === null) return;
            var trect = this.timelineWrapper.getBoundingClientRect();
            var yyAxis = event.clientY - trect.top;
            var position = Math.abs(yyAxis / trect.height * 100);
            this.setState({ maskPosition: position });
        }

        // Created action lists

    }, {
        key: 'actionItemHtml',
        value: function actionItemHtml(action, index) {
            var _this3 = this;

            var _state2 = this.state,
                selectedActionIndex = _state2.selectedActionIndex,
                contextMenuVisible = _state2.contextMenuVisible,
                currentAction = _state2.currentAction;


            var activeClass = selectedActionIndex === index ? 'qubely-action-active' : '';
            activeClass = contextMenuVisible === index ? activeClass + ' qubely-action-context-menu-active' : activeClass;
            activeClass = action.id === '' ? activeClass + ' qubely-action-empty-box' : activeClass;
            var similarAction = currentAction !== null && selectedActionIndex !== index && action.name === currentAction.name ? 'qubely-action-similar' : '';
            return React.createElement(
                'div',
                { key: index,
                    className: 'qubely-action-item ' + activeClass + ' ' + similarAction,
                    ref: function ref(_ref) {
                        _this3.itemWrapper = _ref;
                    },
                    onMouseDown: this.onMouseDragStartOnActionList.bind(this, index)
                },
                React.createElement(
                    'div',
                    { className: 'qubely-action-item-inner' },
                    React.createElement(
                        'div',
                        { className: 'qubely-action-pointer-range' },
                        React.createElement('div', { className: 'qubely-connect-line' }),
                        React.createElement(
                            'div',
                            { className: 'qubely-point-bullet' },
                            '\xA0'
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-point-range' },
                            action.keyframe,
                            '%'
                        )
                    ),
                    React.createElement(
                        'div',
                        {
                            className: 'qubely-action-property',
                            onClick: this.onSelectAction.bind(this, index),
                            onContextMenu: this.onContextMenu.bind(this, index)
                        },
                        action.name
                    )
                ),
                contextMenuVisible === index && this.contextMenu(index)
            );
        }
    }, {
        key: 'parentItemHtml',
        value: function parentItemHtml(actions, ci) {
            var _this4 = this;

            var mouseOverClass = actions.keyframe === this.state.actionListOverKeyframe ? 'qubley-action-mouse-on-item' : '';
            return React.createElement(
                'div',
                { className: 'qubely-parent-item-container ' + mouseOverClass,
                    key: ci,
                    onMouseEnter: this.onMouseOverOnActionList.bind(this, actions.keyframe),
                    onMouseLeave: this.onMouseOutOnActionList.bind(this)
                },
                actions.map(function (action) {
                    return _this4.actionItemHtml(action, action.index);
                })
            );
        }
    }, {
        key: 'actionBlankSpaceHtml',
        value: function actionBlankSpaceHtml(keyFrame, lastKeyframe, id, index) {
            var style = {
                flexGrow: keyFrame / 100
            };
            if (keyFrame === 0) style.padding = 0;
            return React.createElement('div', { key: this.revisedRandId(), className: 'qubely-action-item-blank-space',
                onMouseMove: this.onMouseMoveAction.bind(this, keyFrame, lastKeyframe, id, index),
                style: style });
        }
    }, {
        key: 'renderAnimationActionList',
        value: function renderAnimationActionList() {
            var _this5 = this;

            var actionList = this.props.actionList;

            var htmlView = [];
            var collection = {};
            var lastKeyframe = 0;
            var checkSingleEntry = {};

            if (actionList.length > 0) {
                actionList.map(function (action, index) {
                    //Check if action not add second time
                    if (typeof checkSingleEntry[action.name] === 'undefined') {
                        action.single = true;
                        checkSingleEntry[action.name] = action.keyframe;
                    } else {
                        delete action.single;
                    }

                    if (typeof collection[action.keyframe] !== "undefined") {
                        action.index = index;
                        collection[action.keyframe].push(action);
                    } else {
                        action.index = index;
                        collection[action.keyframe] = [action];
                        collection[action.keyframe].keyframe = action.keyframe;
                        collection[action.keyframe].index = index;
                    }
                });

                _.map(collection, function (actions, ci) {
                    var keyDiff = Math.abs(lastKeyframe - actions.keyframe);
                    htmlView.push(_this5.actionBlankSpaceHtml(keyDiff, lastKeyframe, ci, actions.index));
                    htmlView.push(_this5.parentItemHtml(actions, ci));
                    lastKeyframe = actions.keyframe;
                });
                if (lastKeyframe !== 100) {
                    var keyDiff = Math.abs(lastKeyframe - 100);
                    htmlView.push(this.actionBlankSpaceHtml(keyDiff, lastKeyframe, this.revisedRandId(), actionList.length));
                }
            } else {
                this.state.initialAction.map(function (action) {
                    var keyframeDiff = Math.abs(lastKeyframe - action.keyframe);
                    if (lastKeyframe !== action.keyframe) {
                        htmlView.push(_this5.actionBlankSpaceHtml(keyframeDiff, lastKeyframe, _this5.revisedRandId(), 0));
                        htmlView.push(_this5.actionItemHtml(action, _this5.revisedRandId()));
                    } else {
                        htmlView.push(_this5.actionItemHtml(action, _this5.revisedRandId()));
                    }
                    lastKeyframe = action.keyframe;
                });
            }
            this.setState({ renderHtmlActionlist: htmlView });
        }

        //Create timeline action

    }, {
        key: 'createAction',
        value: function createAction(action, rowIndex) {
            var actionList = this.props.actionList;

            var actionIndex = actionList.length;
            var newAction = Object.assign({}, action, { id: this.revisedRandId(), keyframe: 0 });

            if (this.state.isActionList) {
                actionList.push(newAction);
                var lastAction = JSON.parse(JSON.stringify(newAction));
                lastAction.keyframe = 100;
                lastAction.id = this.revisedRandId();
                actionList.push(lastAction);
            } else {
                if (rowIndex !== null) {
                    var percentage = this.state.timeLineCoPosition.percentage;

                    actionIndex = rowIndex;
                    newAction.keyframe = percentage;
                    actionList.splice(rowIndex, 0, newAction);
                } else {
                    actionList.splice(actionList.length - 1, 0, newAction);
                }
            }
            this.setState({
                currentAction: newAction,
                isActionList: false,
                selectedActionIndex: actionIndex,
                showTimelineActionList: false
            });
            this.props.onChange(actionList);
        }

        // Action List

    }, {
        key: 'renderAnimationActions',
        value: function renderAnimationActions() {
            var _this6 = this;

            var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

            return React.createElement(
                'div',
                { className: 'qubely-animation-action-option-box', ref: function ref(_ref2) {
                        return _this6.actionListWrapper = _ref2;
                    } },
                React.createElement(
                    'div',
                    { className: 'qubely-animation-action-option-lists' },
                    _InteractionData.interactionActions.map(function (action, index) {
                        return React.createElement(
                            'div',
                            { key: index, onClick: _this6.createAction.bind(_this6, action, rowIndex), className: 'qubely-animation-action-option-item' },
                            action.name
                        );
                    })
                )
            );
        }
    }, {
        key: 'showAnimationAction',
        value: function showAnimationAction() {
            this.setState({ showTimelineActionList: !this.state.showTimelineActionList });
        }
    }, {
        key: 'enableEverything',
        value: function enableEverything() {
            this.setState({ showTimelineActionList: !this.state.showTimelineActionList });
        }
    }, {
        key: '_changeProperty',
        value: function _changeProperty(property) {
            var selectedActionIndex = this.state.selectedActionIndex;
            var actionList = this.props.actionList;

            var newActionList = JSON.parse(JSON.stringify(actionList));
            var newAction = Object.assign({}, newActionList[selectedActionIndex], _extends({}, property));
            newActionList[selectedActionIndex] = newAction;
            this.props.onChange(newActionList);
            this.setState({ currentAction: newAction });
        }

        /**
         * Render timeline view
         */

    }, {
        key: 'timeline',
        value: function timeline() {
            var _this7 = this;

            var _props = this.props,
                actionList = _props.actionList,
                transformOrigin = _props.transformOrigin;
            var _state3 = this.state,
                selectedActionIndex = _state3.selectedActionIndex,
                currentAction = _state3.currentAction,
                _state3$timeLineCoPos = _state3.timeLineCoPosition,
                linePosition = _state3$timeLineCoPos.linePosition,
                percentage = _state3$timeLineCoPos.percentage,
                index = _state3$timeLineCoPos.index,
                isVisible = _state3$timeLineCoPos.isVisible,
                showTimelineActionList = _state3.showTimelineActionList,
                scrollPercent = _state3.scrollPercent,
                timelineHeight = _state3.timelineHeight,
                maskPosition = _state3.maskPosition,
                actionListDargIndex = _state3.actionListDargIndex,
                selectedDargAction = _state3.selectedDargAction;

            var timelineEmptyClass = actionList.length > 0 ? "qubely-timeline-has-no-memory" : '';
            var pointerStyle = { top: linePosition + '%' };

            var showPerc = timelineHeight * scrollPercent / 100;
            var liveStyle = { top: showPerc + 'px' };
            var maskStyle = { top: maskPosition + '%' };
            if (actionList.length > 0) {
                var cssProps = _InteractionParser.IntParser.parseScrollAction(actionList, this.state.scrollPercent, transformOrigin);
                $('.qubely-block-' + this.props.uniqueId).addClass('qubely-block-interaction').css(cssProps);
            }
            return React.createElement(
                'div',
                { className: 'qubely-animation-timeline-container' },
                React.createElement(
                    'div',
                    { className: 'qubely-animation-view' },
                    React.createElement(
                        'div',
                        { className: 'qubely-animation-trigger-header' },
                        React.createElement(
                            'label',
                            null,
                            ' Scroll Action '
                        ),
                        React.createElement(
                            'span',
                            { className: 'qubely-add-animation-action-btn', onClick: this.showActionList.bind(this) },
                            '\uFE62'
                        ),
                        this.state.isActionList && this.renderAnimationActions()
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-animation-flexible-area' },
                        React.createElement(
                            'div',
                            {
                                className: 'qubely-animation-flexible-area-inner-box ' + timelineEmptyClass,
                                ref: function ref(node) {
                                    _this7.timelineWrapper = node;
                                },
                                onMouseMove: this.onMouseMoveOnTimeline.bind(this),
                                onMouseUp: this.onMouseDragEndOnActionList.bind(this),
                                onMouseLeave: this.onMouseDragEndOnActionList.bind(this)
                            },
                            React.createElement('div', { className: 'qubely-animation-timline-bar', ref: function ref(_ref3) {
                                    return _this7.timeLineBarWrapper = _ref3;
                                } }),
                            this.state.renderHtmlActionlist,
                            actionListDargIndex !== null && React.createElement(
                                'div',
                                { className: 'qubely-action-drag-mask', style: maskStyle },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-action-mask-peroperty' },
                                    React.createElement(
                                        'span',
                                        { className: 'qubely-action-percentage' },
                                        ' ',
                                        percentage,
                                        '% '
                                    ),
                                    React.createElement(
                                        'span',
                                        { className: 'qubely-action-title' },
                                        ' ',
                                        selectedDargAction.title,
                                        ' '
                                    )
                                )
                            ),
                            isVisible && actionList.length > 0 && React.createElement(
                                'div',
                                { style: pointerStyle, className: 'qubely-timeline-pointer-hr-line',
                                    onClick: this.showAnimationAction.bind(this) },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-action-item-pointer' },
                                    React.createElement(
                                        'span',
                                        null,
                                        ' ',
                                        percentage,
                                        '% '
                                    )
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'qubely-action-item-pointer-icon' },
                                    React.createElement(
                                        'span',
                                        null,
                                        '+'
                                    )
                                ),
                                React.createElement('div', { className: 'qubely-action-item-line-hr-container' }),
                                showTimelineActionList && this.renderAnimationActions(index)
                            ),
                            actionList.length === 0 && React.createElement(
                                'div',
                                { className: 'qubely-animation-timeline-placeholder' },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-animation-timeline-placeholder-text' },
                                    React.createElement('i', { className: 'fa fa-send' }),
                                    React.createElement(
                                        'h3',
                                        { className: 'qubely-timeline-placeholder-title' },
                                        ' Animation '
                                    ),
                                    React.createElement(
                                        'p',
                                        null,
                                        ' Apply various actions on one or multiple elements to create a sequenced animation. '
                                    )
                                )
                            )
                        )
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-animation-controller-view' },
                    React.createElement(
                        'div',
                        { className: 'qubely-animation-controller-header' },
                        React.createElement(
                            'label',
                            null,
                            React.createElement('span', { className: 'fa fa-gear' }),
                            ' Interaction Settings '
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-animation-controller-body' },
                        this.state.selectedActionIndex === null && React.createElement(
                            'div',
                            { className: 'qubely-animation-timeline-placeholder' },
                            React.createElement(
                                'div',
                                { className: 'qubely-animation-timeline-placeholder-text' },
                                React.createElement(
                                    'h3',
                                    { className: 'qubely-timeline-placeholder-title' },
                                    ' No Action Selected '
                                ),
                                React.createElement(
                                    'p',
                                    null,
                                    ' Select an action in the list to adjust the settings. '
                                )
                            )
                        ),
                        this.state.selectedActionIndex !== null && React.createElement(_RenderFields2.default, {
                            fields: currentAction,
                            onChange: function onChange(value) {
                                return _this7._changeProperty(value);
                            }
                        })
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            return this.timeline();
        }
    }]);

    return Timeline;
}(Component);

exports.default = Timeline;

/***/ }),

/***/ "./src/components/css/InnerPanel.scss":
/*!********************************************!*\
  !*** ./src/components/css/InnerPanel.scss ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./InnerPanel.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/InnerPanel.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/alignment.scss":
/*!*******************************************!*\
  !*** ./src/components/css/alignment.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./alignment.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/alignment.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/animation.scss":
/*!*******************************************!*\
  !*** ./src/components/css/animation.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./animation.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/animation.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/border.scss":
/*!****************************************!*\
  !*** ./src/components/css/border.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./border.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/border.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/buttonGroup.scss":
/*!*********************************************!*\
  !*** ./src/components/css/buttonGroup.scss ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./buttonGroup.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/buttonGroup.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/color.scss":
/*!***************************************!*\
  !*** ./src/components/css/color.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./color.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/color.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/contextmenu.scss":
/*!*********************************************!*\
  !*** ./src/components/css/contextmenu.scss ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./contextmenu.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/contextmenu.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/dimension.scss":
/*!*******************************************!*\
  !*** ./src/components/css/dimension.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./dimension.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dimension.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/dragdimension.scss":
/*!***********************************************!*\
  !*** ./src/components/css/dragdimension.scss ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./dragdimension.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dragdimension.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/dropdown.scss":
/*!******************************************!*\
  !*** ./src/components/css/dropdown.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./dropdown.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/dropdown.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/editorinline.scss":
/*!**********************************************!*\
  !*** ./src/components/css/editorinline.scss ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./editorinline.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/editorinline.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/gradient.scss":
/*!******************************************!*\
  !*** ./src/components/css/gradient.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./gradient.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/gradient.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/iconlist.scss":
/*!******************************************!*\
  !*** ./src/components/css/iconlist.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./iconlist.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/iconlist.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/inline_toolbar.scss":
/*!************************************************!*\
  !*** ./src/components/css/inline_toolbar.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./inline_toolbar.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/inline_toolbar.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/interaction.scss":
/*!*********************************************!*\
  !*** ./src/components/css/interaction.scss ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./interaction.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/interaction.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/media.scss":
/*!***************************************!*\
  !*** ./src/components/css/media.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./media.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/media.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/panelTabs.scss":
/*!*******************************************!*\
  !*** ./src/components/css/panelTabs.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./panelTabs.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/panelTabs.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/range.scss":
/*!***************************************!*\
  !*** ./src/components/css/range.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./range.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/range.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/select.scss":
/*!****************************************!*\
  !*** ./src/components/css/select.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./select.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/select.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/selector.scss":
/*!******************************************!*\
  !*** ./src/components/css/selector.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./selector.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/selector.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/separator.scss":
/*!*******************************************!*\
  !*** ./src/components/css/separator.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./separator.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/separator.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/shape.scss":
/*!***************************************!*\
  !*** ./src/components/css/shape.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./shape.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/shape.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/styles.scss":
/*!****************************************!*\
  !*** ./src/components/css/styles.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./styles.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/styles.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/template.scss":
/*!******************************************!*\
  !*** ./src/components/css/template.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./template.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/template.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/toggle.scss":
/*!****************************************!*\
  !*** ./src/components/css/toggle.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./toggle.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/toggle.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/typography.scss":
/*!********************************************!*\
  !*** ./src/components/css/typography.scss ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./typography.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/typography.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/url.scss":
/*!*************************************!*\
  !*** ./src/components/css/url.scss ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./url.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/url.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/css/wrapper.scss":
/*!*****************************************!*\
  !*** ./src/components/css/wrapper.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./wrapper.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/css/wrapper.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/components/fields/Alignment.js":
/*!********************************************!*\
  !*** ./src/components/fields/Alignment.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/alignment.scss */ "./src/components/css/alignment.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var Tooltip = wp.components.Tooltip;

var Alignment = function (_Component) {
    _inherits(Alignment, _Component);

    function Alignment(props) {
        _classCallCheck(this, Alignment);

        var _this = _possibleConstructorReturn(this, (Alignment.__proto__ || Object.getPrototypeOf(Alignment)).call(this, props));

        _this.state = { current: _this._filterValue() };
        return _this;
    }

    _createClass(Alignment, [{
        key: '_filterValue',
        value: function _filterValue() {
            var _props = this.props,
                value = _props.value,
                responsive = _props.responsive,
                responsiveGroup = _props.responsiveGroup;

            return value ? responsive || responsiveGroup ? value[window.qubelyDevice] || '' : value : '';
        }
    }, {
        key: 'setSettings',
        value: function setSettings(val) {
            var _props2 = this.props,
                value = _props2.value,
                onChange = _props2.onChange,
                responsive = _props2.responsive,
                responsiveGroup = _props2.responsiveGroup,
                disableToggle = _props2.disableToggle;

            if (val == '' && disableToggle) {
                return;
            }
            var final = responsive || responsiveGroup ? Object.assign({}, value, _defineProperty({}, window.qubelyDevice, val)) : val;
            onChange(final);
            this.setState({ current: final });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props3 = this.props,
                label = _props3.label,
                responsive = _props3.responsive,
                flex = _props3.flex,
                disableJustify = _props3.disableJustify,
                disableCenter = _props3.disableCenter,
                device = _props3.device,
                onDeviceChange = _props3.onDeviceChange;

            var defData = flex ? ['flex-start', 'center', 'flex-end'] : disableJustify ? disableCenter ? ['left', 'right'] : ['left', 'center', 'right'] : ['left', 'center', 'right', 'justify'];

            return React.createElement(
                'div',
                { className: 'qubely-field-alignment qubely-field ' + (this.props.responsive ? 'qubely-responsive' : '') },
                React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
                    label && React.createElement(
                        'label',
                        null,
                        label
                    ),
                    responsive && React.createElement(
                        'div',
                        { className: 'qubely-ml-auto' },
                        device ? React.createElement(_Device2.default, { device: device, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                                return onDeviceChange(val);
                            } }) : React.createElement(_Device2.default, { onChange: function onChange(val) {
                                return _this2.setState({ current: val });
                            } })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-button-list qubely-field-button-list-fluid' },
                    defData.map(function (data, index) {
                        return React.createElement(
                            'button',
                            { className: (_this2._filterValue() == data ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                    return _this2.setSettings(_this2._filterValue() == data ? '' : data);
                                } },
                            _this2.props.alignmentType == 'content' ? React.createElement(
                                Fragment,
                                null,
                                (data == 'left' || data == 'flex-start') && React.createElement(
                                    Tooltip,
                                    { text: __('Left') },
                                    React.createElement(
                                        'svg',
                                        { width: '21', height: '18', viewBox: '0 0 21 18', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { transform: 'translate(-29 -4) translate(29 4)', fill: 'none' },
                                            React.createElement('path', { d: 'M1 .708v15.851', className: 'qubely-svg-stroke', 'stroke-linecap': 'square' }),
                                            React.createElement('rect', { className: 'qubely-svg-fill', x: '5', y: '5', width: '16', height: '7', rx: '1' })
                                        )
                                    )
                                ),
                                data == 'center' && React.createElement(
                                    Tooltip,
                                    { text: __('Middle') },
                                    React.createElement(
                                        'svg',
                                        { width: '16', height: '18', viewBox: '0 0 16 18', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { transform: 'translate(-115 -4) translate(115 4)', fill: 'none' },
                                            React.createElement('path', { d: 'M8 .708v15.851', className: 'qubely-svg-stroke', 'stroke-linecap': 'square' }),
                                            React.createElement('rect', { className: 'qubely-svg-fill', y: '5', width: '16', height: '7', rx: '1' })
                                        )
                                    )
                                ),
                                (data == 'right' || data == 'flex-end') && React.createElement(
                                    Tooltip,
                                    { text: __('Right') },
                                    React.createElement(
                                        'svg',
                                        { width: '21', height: '18', viewBox: '0 0 21 18', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { transform: 'translate(0 1) rotate(-180 10.5 8.5)', fill: 'none' },
                                            React.createElement('path', { d: 'M1 .708v15.851', className: 'qubely-svg-stroke', 'stroke-linecap': 'square' }),
                                            React.createElement('rect', { className: 'qubely-svg-fill', 'fill-rule': 'nonzero', x: '5', y: '5', width: '16', height: '7', rx: '1' })
                                        )
                                    )
                                )
                            ) : React.createElement('i', { className: 'fa fa-align-' + data })
                        );
                    })
                )
            );
        }
    }]);

    return Alignment;
}(Component);

exports.default = Alignment;

/***/ }),

/***/ "./src/components/fields/Animation.js":
/*!********************************************!*\
  !*** ./src/components/fields/Animation.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/animation.scss */ "./src/components/css/animation.scss");

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Select = __webpack_require__(/*! ./Select */ "./src/components/fields/Select.js");

var _Select2 = _interopRequireDefault(_Select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;


var defaultData = { animation: '', name: 'fadeCenter', repeat: 'once', direction: 'center', duration: 1000, delay: 0, curve: 'ease-in-out' };

var Animation = function (_Component) {
    _inherits(Animation, _Component);

    function Animation() {
        _classCallCheck(this, Animation);

        var _this = _possibleConstructorReturn(this, (Animation.__proto__ || Object.getPrototypeOf(Animation)).apply(this, arguments));

        _this.state = {
            isAnimate: false
        };
        return _this;
    }

    _createClass(Animation, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.props.onChange(Object.assign({}, defaultData, this.props.value || {}));
        }
    }, {
        key: 'setSettings',
        value: function setSettings(type, val) {
            var _ref;

            var openAnimation = val == '' ? { openAnimation: 0 } : { openAnimation: 1 };
            var data = Object.assign({}, this.props.value, openAnimation, type == 'animation' ? (_ref = {}, _defineProperty(_ref, type, val), _defineProperty(_ref, 'direction', this._valueChange(val, 'change')), _ref) : _defineProperty({}, type, val));
            data.name = data.animation + data.direction;
            this.props.onChange(data);
        }
    }, {
        key: '_valueChange',
        value: function _valueChange(value, type) {
            var returnData = value == 'rotate' ? ['DownLeft', 'DownRight', 'UpLeft', 'UpRight'] : value == 'slide' || value == 'flip' || value == 'fold' ? ['Right', 'Left', 'Up', 'Down'] : ['Center', 'Right', 'Left', 'Up', 'Down'];
            if (type == 'data') {
                return returnData;
            } else {
                return returnData[0];
            }
        }
    }, {
        key: 'doAnimate',
        value: function doAnimate() {
            var _props = this.props,
                value = _props.value,
                uniqueId = _props.uniqueId;

            if (typeof uniqueId !== 'undefined') {
                var isAnimate = this.state.isAnimate;

                var blockId = $('.qubely-block-' + uniqueId);
                if (isAnimate && value.repeat !== 'once') {
                    blockId.css({ 'animation-name': '' });
                } else {
                    blockId.css({ 'animation-name': '' });
                    var cssObject = {
                        'animation-name': value.name,
                        'animation-timing-function': value.curve,
                        'animation-duration': value.duration + 'ms',
                        'animation-delay': value.delay + 'ms',
                        'animation-iteration-count': value.repeat === 'once' ? 1 : 'infinite'
                    };
                    if (typeof this.timer !== 'undefined' && this.timer > 0) {
                        clearTimeout(this.timer);
                    }
                    this.timer = setTimeout(function () {
                        blockId.css(cssObject);
                    }, 300);
                }
                this.setState({ isAnimate: !isAnimate });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                value = _props2.value,
                label = _props2.label,
                uniqueId = _props2.uniqueId;

            var isActive = value && value.openAnimation === 1 ? true : false;

            return React.createElement(
                'div',
                { className: 'qubely-fields qubely-animation qubely-field-alt' },
                React.createElement(_Select2.default, {
                    clear: true,
                    label: label ? label : '',
                    noValue: 'None',
                    value: value.animation || '',
                    options: [['fade', __('Fade')], ['slide', __('Slide')], ['bounce', __('Bounce')], ['zoom', __('Zoom')], ['flip', __('Flip')], ['fold', __('Fold')], ['rotate', 'Rotate']],
                    onChange: function onChange(val) {
                        return _this2.setSettings('animation', val);
                    }
                }),
                isActive && React.createElement(
                    Fragment,
                    null,
                    React.createElement(_Select2.default, {
                        label: __('Direction'),
                        value: value.direction || 'center',
                        options: this._valueChange(value.animation, 'data'),
                        onChange: function onChange(val) {
                            return _this2.setSettings('direction', val);
                        } }),
                    React.createElement(_Select2.default, {
                        label: __('Repeat'),
                        value: value.repeat || 'once',
                        options: [['once', __('Once')], ['loop', __('Loop')]],
                        onChange: function onChange(val) {
                            return _this2.setSettings('repeat', val);
                        } }),
                    React.createElement(_Range2.default, {
                        label: __('Duration'),
                        min: 0,
                        max: 2000,
                        value: value.duration || 1000,
                        onChange: function onChange(val) {
                            return _this2.setSettings('duration', val);
                        } }),
                    React.createElement(_Range2.default, {
                        label: __('Delay'),
                        min: 0,
                        max: 3000,
                        value: value.delay || 0,
                        onChange: function onChange(val) {
                            return _this2.setSettings('delay', val);
                        } }),
                    value && value.animation != 'bounce' && value.animation != 'zoom' && React.createElement(_Select2.default, {
                        label: __('Curve'),
                        value: value.curve || 'ease-in-out',
                        options: ['ease-in-out', 'ease', 'ease-in', 'ease-out', 'linear'],
                        onChange: function onChange(val) {
                            return _this2.setSettings('curve', val);
                        }
                    }),
                    typeof uniqueId !== 'undefined' && React.createElement(
                        'button',
                        { onClick: function onClick() {
                                return _this2.doAnimate();
                            }, className: 'components-button is-button is-default is-primary is-large' },
                        ' ',
                        this.state.isAnimate && value.repeat === 'loop' ? "Stop" : "Animate",
                        ' '
                    )
                )
            );
        }
    }]);

    return Animation;
}(Component);

exports.default = Animation;

/***/ }),

/***/ "./src/components/fields/Background.js":
/*!*********************************************!*\
  !*** ./src/components/fields/Background.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Media = __webpack_require__(/*! ./Media */ "./src/components/fields/Media.js");

var _Media2 = _interopRequireDefault(_Media);

var _Select = __webpack_require__(/*! ./Select */ "./src/components/fields/Select.js");

var _Select2 = _interopRequireDefault(_Select);

var _Gradient = __webpack_require__(/*! ./Gradient */ "./src/components/fields/Gradient.js");

var _Gradient2 = _interopRequireDefault(_Gradient);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    Tooltip = _wp$components.Tooltip,
    TextControl = _wp$components.TextControl,
    Dropdown = _wp$components.Dropdown;


var control = {
    position: [['default', __('Default')], ['left top', __('Left Top')], ['left center', __('Left Center')], ['left bottom', __('Left Bottom')], ['right top', __('Right Top')], ['right center', __('Right Center')], ['right bottom', __('Right Bottom')], ['center top', __('Center Top')], ['center center', __('Center Center')], ['center bottom', __('Center Bottom')]],
    attachment: [['default', __('Default')], ['scroll', __('Scroll')], ['fixed', __('Fixed')]],
    repeat: [['default', __('Default')], ['no-repeat', __('No Repeat')], ['repeat', __('Repeat')], ['repeat-x', __('Repeat X')], ['repeat-y', __('Repeat Y')]],
    size: [['default', __('Default')], ['auto', __('Auto')], ['cover', __('Cover')], ['contain', __('Contain')]],
    parallax: [['none', __('None')], ['fixed', __('Fixed')], ['animated', __('Animated')]]
};

var defaultData = {
    openBg: 0,
    bgType: 'color',
    videoSource: 'local',
    bgDefaultColor: '',
    bgGradient: {}
};

var Background = function (_Component) {
    _inherits(Background, _Component);

    function Background() {
        _classCallCheck(this, Background);

        return _possibleConstructorReturn(this, (Background.__proto__ || Object.getPrototypeOf(Background)).apply(this, arguments));
    }

    _createClass(Background, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var value = this.props.value;

            this.props.onChange(Object.assign({}, defaultData, value || {}));
        }
    }, {
        key: 'setSettings',
        value: function setSettings(val, type) {
            var _props = this.props,
                value = _props.value,
                onChange = _props.onChange;

            if ('bgimgParallax' == type) {
                onChange(Object.assign({}, value, _defineProperty({ bgimgAttachment: val == 'fixed' ? val : val == 'animated' ? 'fixed' : 'scroll' }, type, val)));
            } else {
                onChange(Object.assign({}, value, { openBg: 1 }, _defineProperty({}, type, val)));
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                value = _props2.value,
                label = _props2.label;

            var fieldLabel = label ? label : __('Background');
            return React.createElement(
                'div',
                { className: 'qubely-field-background qubely-field-color-advanced qubely-field' },
                React.createElement(_Color2.default, { label: fieldLabel + ' ' + __('Color'), value: value.bgDefaultColor, onChange: function onChange(val) {
                        return _this2.setSettings(val, 'bgDefaultColor');
                    } }),
                React.createElement(
                    'div',
                    { className: 'qubely-mb-20 qubely-d-flex qubely-align-center' },
                    React.createElement(
                        'div',
                        null,
                        fieldLabel + ' ' + __('Type')
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-button-list qubely-ml-auto' },
                        this.props.sources.map(function (data, index) {
                            return React.createElement(
                                'button',
                                { className: (value.bgType == data && value.openBg ? 'active' : '') + ' qubely-button', onClick: function onClick() {
                                        return _this2.setSettings(data, 'bgType');
                                    } },
                                data == 'image' && React.createElement(
                                    Tooltip,
                                    { text: __('Image') },
                                    React.createElement(
                                        'svg',
                                        { width: '18', height: '15', viewBox: '0 0 18 15', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M16.083.263h-14.446c-.798 0-1.445.648-1.445 1.447v11.579c0 .8.646 1.447 1.445 1.447h14.446c.798 0 1.445-.648 1.445-1.447v-11.579c0-.8-.646-1.447-1.445-1.447zm-4.334 2.171c2.389 0 2.386 3.618 0 3.618-2.385 0-2.39-3.618 0-3.618zm-9.39 10.855l4.334-5.789 2.965 3.961 2.091-2.514 3.611 4.342h-13.001z', className: 'qubely-svg-fill', 'fill-rule': 'nonzero' })
                                    )
                                ),
                                data == 'gradient' && React.createElement(
                                    Tooltip,
                                    { text: __('Gradient') },
                                    React.createElement(
                                        'svg',
                                        { width: '18', height: '15', viewBox: '0 0 18 15', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { transform: 'translate(.735 .263)', fill: 'none' },
                                            React.createElement('rect', { className: 'qubely-svg-stroke', x: '.5', y: '.5', width: '16.072', height: '13.474', rx: '1' }),
                                            React.createElement('path', { className: 'qubely-svg-fill', d: 'M.836.763l15.759 13.158h-15.759z' })
                                        )
                                    )
                                ),
                                data == 'video' && React.createElement(
                                    Tooltip,
                                    { text: __('Video') },
                                    React.createElement(
                                        'svg',
                                        { width: '18', height: '14', viewBox: '0 0 18 14', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M18 1.679v10.929c0 .281-.131.479-.392.593-.087.033-.171.05-.251.05-.181 0-.331-.064-.452-.191l-4.048-4.048v1.667c0 .797-.283 1.478-.849 2.044-.566.566-1.247.849-2.044.849h-7.071c-.797 0-1.478-.283-2.044-.849-.566-.566-.849-1.247-.849-2.044v-7.071c0-.797.283-1.478.849-2.044.566-.566 1.247-.849 2.044-.849h7.071c.797 0 1.478.283 2.044.849.566.566.849 1.247.849 2.044v1.657l4.048-4.038c.121-.127.271-.191.452-.191.08 0 .164.017.251.05.261.114.392.311.392.593z', className: 'qubely-svg-fill', 'fill-rule': 'nonzero' })
                                    )
                                )
                            );
                        })
                    ),
                    value && value.openBg == 1 && value.bgType != 'color' && React.createElement(
                        'div',
                        { className: 'qubely-ml-10' },
                        React.createElement(
                            Tooltip,
                            { text: __('Clear') },
                            React.createElement(
                                'span',
                                { className: 'qubely-border-clear', onClick: function onClick() {
                                        return _this2.setSettings('color', 'bgType');
                                    }, role: 'button' },
                                React.createElement('i', { className: 'fas fa-undo' })
                            )
                        )
                    )
                ),
                value && value.openBg == 1 && value.bgType === 'image' && React.createElement(
                    'div',
                    { className: 'qubely-background-inner' },
                    React.createElement(_Media2.default, { label: __('Background Image'), multiple: false, type: ['image'], panel: true, value: value.bgImage, onChange: function onChange(val) {
                            return _this2.setSettings(val, 'bgImage');
                        } }),
                    value.bgImage && value.bgImage.url && React.createElement(
                        Fragment,
                        null,
                        this.props.parallax && React.createElement(
                            'div',
                            { className: 'qubely-field qubely-d-flex qubely-align-center' },
                            React.createElement(
                                'div',
                                null,
                                __('Parallax')
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-field-button-list qubely-ml-auto' },
                                control.parallax.map(function (data, index) {
                                    return React.createElement(
                                        Tooltip,
                                        { text: data[1] },
                                        React.createElement(
                                            'button',
                                            { className: (value.bgimgParallax == data[0] ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                                    return _this2.setSettings(data[0], 'bgimgParallax');
                                                } },
                                            data[0] == 'none' ? React.createElement('i', { className: 'fas fa-ban' }) : data[1]
                                        )
                                    );
                                })
                            )
                        ),
                        React.createElement(Dropdown, {
                            className: 'qubely-field',
                            renderToggle: function renderToggle(_ref) {
                                var isOpen = _ref.isOpen,
                                    onToggle = _ref.onToggle;
                                return React.createElement(
                                    'div',
                                    { className: 'qubely-d-flex qubely-align-center' },
                                    React.createElement(
                                        'label',
                                        null,
                                        __('Advanced'),
                                        ' ',
                                        fieldLabel
                                    ),
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-field-button-list qubely-ml-auto' },
                                        React.createElement(
                                            'button',
                                            { className: (isOpen == 1 ? 'active' : '') + ' qubely-button qubely-button-rounded', onClick: onToggle, 'aria-expanded': isOpen },
                                            React.createElement('i', { className: 'fas fa-cog' })
                                        )
                                    )
                                );
                            },
                            renderContent: function renderContent() {
                                return React.createElement(
                                    'div',
                                    { style: { padding: '15px' } },
                                    React.createElement(
                                        Fragment,
                                        null,
                                        !_this2.props.position && React.createElement(_Select2.default, { label: fieldLabel + ' ' + __('Position'), value: value.bgimgPosition, options: control.position, onChange: function onChange(val) {
                                                return _this2.setSettings(val, 'bgimgPosition');
                                            } }),
                                        !_this2.props.parallax && React.createElement(_Select2.default, { label: fieldLabel + ' ' + __('Attachment'), value: value.bgimgAttachment, options: control.attachment, onChange: function onChange(val) {
                                                return _this2.setSettings(val, 'bgimgAttachment');
                                            } })
                                    ),
                                    (!_this2.props.size || !_this2.props.repeat) && React.createElement(
                                        Fragment,
                                        null,
                                        !_this2.props.repeat && React.createElement(_Select2.default, { label: fieldLabel + ' ' + __('Repeat'), value: value.bgimgRepeat, options: control.repeat, onChange: function onChange(val) {
                                                return _this2.setSettings(val, 'bgimgRepeat');
                                            } }),
                                        !_this2.props.size && React.createElement(_Select2.default, { label: fieldLabel + ' ' + __('Size'), value: value.bgimgSize, options: control.size, onChange: function onChange(val) {
                                                return _this2.setSettings(val, 'bgimgSize');
                                            } })
                                    )
                                );
                            }
                        })
                    )
                ),
                value && value.openBg == 1 && value.bgType === "gradient" && React.createElement(
                    'div',
                    { className: 'qubely-background-inner' },
                    React.createElement(_Gradient2.default, {
                        inline: true,
                        label: __('Gradient'),
                        value: value.bgGradient,
                        onChange: function onChange(val) {
                            return _this2.setSettings(val, 'bgGradient');
                        }
                    })
                ),
                value && value.openBg == 1 && value.bgType == 'video' && React.createElement(
                    'div',
                    { className: 'qubely-background-inner' },
                    React.createElement(_Select2.default, { label: __('Video Source'), value: value.videoSource, options: [['local', __('Local')], ['external', __('External')]], onChange: function onChange(val) {
                            return _this2.setSettings(val, 'videoSource');
                        } }),
                    value.videoSource === 'external' ? React.createElement(TextControl, {
                        label: __('Video URL'),
                        value: value.bgExternalVideo || "",
                        onChange: function onChange(val) {
                            return _this2.setSettings(val, 'bgExternalVideo');
                        }
                    }) : React.createElement(_Media2.default, { label: __('Video'), multiple: false, type: ['video'], panel: true, value: value.bgVideo, onChange: function onChange(val) {
                            return _this2.setSettings(val, 'bgVideo');
                        } }),
                    React.createElement(_Media2.default, { label: __('Fallback Image (Poster)'), multiple: false, type: ['image'], panel: true, value: value.bgVideoFallback, onChange: function onChange(val) {
                            return _this2.setSettings(val, 'bgVideoFallback');
                        } })
                )
            );
        }
    }]);

    return Background;
}(Component);

exports.default = Background;

/***/ }),

/***/ "./src/components/fields/Border.js":
/*!*****************************************!*\
  !*** ./src/components/fields/Border.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/border.scss */ "./src/components/css/border.scss");

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Separator = __webpack_require__(/*! ./Separator */ "./src/components/fields/Separator.js");

var _Separator2 = _interopRequireDefault(_Separator);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var Tooltip = wp.components.Tooltip;

var Border = function (_Component) {
    _inherits(Border, _Component);

    function Border(props) {
        _classCallCheck(this, Border);

        var _this = _possibleConstructorReturn(this, (Border.__proto__ || Object.getPrototypeOf(Border)).call(this, props));

        _this.updateBorder = function (type, newValue) {
            var _this$props = _this.props,
                onChange = _this$props.onChange,
                value = _this$props.value,
                unit = _this$props.unit,
                responsive = _this$props.responsive,
                device = _this$props.device,
                responsiveGroup = _this$props.responsiveGroup;
            var _this$state = _this.state,
                defaultUnit = _this$state.defaultUnit,
                defaultWidthType = _this$state.defaultWidthType;

            var responsiveDevice = responsive ? device ? device : _this.state.device : window.qubelyDevice;

            var _ref = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''],
                _ref2 = _slicedToArray(_ref, 4),
                top = _ref2[0],
                right = _ref2[1],
                bottom = _ref2[2],
                left = _ref2[3];

            var newBorder = JSON.parse(JSON.stringify(value));
            var tempBorder = type === 'global' ? '' + newValue : (type == 'top' ? '' + newValue : '' + top) + ' ' + (type == 'right' ? '' + newValue : '' + right) + ' ' + (type == 'bottom' ? '' + newValue : '' + bottom) + ' ' + (type == 'left' ? '' + newValue : '' + left);

            if (type === 'global') {
                responsive || responsiveGroup ? newBorder.global ? newBorder.global[responsiveDevice] = tempBorder : newBorder.global = _defineProperty({}, responsiveDevice, tempBorder) : newBorder.global = tempBorder;
            } else {
                responsive || responsiveGroup ? newBorder.custom ? newBorder.custom[responsiveDevice] = tempBorder : newBorder.custom = _defineProperty({}, responsiveDevice, tempBorder) : newBorder.custom = tempBorder;
            }

            unit && value.unit ? newBorder.unit = value.unit : newBorder.unit = defaultUnit;
            newBorder.widthType = value.widthType ? value.widthType : defaultWidthType;
            newBorder.openBorder = 1;
            onChange(newBorder);
        };

        _this.updateUnit = function (newUnit) {
            var _this$props2 = _this.props,
                onChange = _this$props2.onChange,
                value = _this$props2.value;

            var newBorder = JSON.parse(JSON.stringify(value));
            newBorder.unit = newUnit;
            newBorder.widthType = value.widthType ? value.widthType : _this.state.defaultWidthType;
            newBorder.openBorder = value.openBorder ? value.openBorder : 1;
            onChange(newBorder);
        };

        _this.state = {
            device: 'md',
            defaultUnit: 'px',
            defaultWidthType: 'global'
        };
        return _this;
    }

    _createClass(Border, [{
        key: 'setWidth',
        value: function setWidth(type, value) {
            this.props.onChange(Object.assign({}, this.props.value, { width: Object.assign({}, this.props.value.width, _defineProperty({}, type, value)) }));
        }
    }, {
        key: 'setSettings',
        value: function setSettings(type, newValue) {
            var _ref5, _ref6;

            var _props = this.props,
                onChange = _props.onChange,
                value = _props.value,
                responsive = _props.responsive,
                device = _props.device;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;

            var widthType = value.widthType ? value.widthType : 'global';
            var customDefaultValues = responsive ? (_ref5 = {}, _defineProperty(_ref5, widthType, value[widthType] ? value[widthType] : [widthType] == 'global' ? _defineProperty({}, responsiveDevice, '1') : _defineProperty({}, responsiveDevice, '1 1 1 1')), _defineProperty(_ref5, 'unit', value.unit ? value.unit : 'px'), _defineProperty(_ref5, 'widthType', widthType), _ref5) : (_ref6 = {}, _defineProperty(_ref6, widthType, value[widthType] ? value[[widthType]] : [widthType] == 'global' ? '1' : '1 1 1 1'), _defineProperty(_ref6, 'unit', value.unit ? value.unit : 'px'), _defineProperty(_ref6, 'widthType', widthType), _ref6);

            onChange(Object.assign({}, value, { openBorder: type == 'type' && newValue == '' ? 0 : 1 }, _defineProperty({}, type, newValue), type == 'type' ? customDefaultValues : type == 'widthType' ? { openBorder: !value[newValue] ? 0 : value.openBorder } : {}));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                value = _props2.value,
                unit = _props2.unit,
                label = _props2.label,
                min = _props2.min,
                max = _props2.max,
                responsive = _props2.responsive,
                device = _props2.device,
                onDeviceChange = _props2.onDeviceChange,
                responsiveGroup = _props2.responsiveGroup;
            var _state = this.state,
                defaultUnit = _state.defaultUnit,
                defaultWidthType = _state.defaultWidthType;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;
            var values = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''];

            var global = responsive || responsiveGroup ? value.global && value.global[responsiveDevice] ? value.global[responsiveDevice] : '' : value.global ? value.global : '';
            var iterator = ['top', 'right', 'bottom', 'left'];
            return React.createElement(
                'div',
                { className: 'qubely-field-border qubely-field' },
                React.createElement(
                    'div',
                    { className: 'qubely-field qubely-field-border qubely-d-flex qubely-align-center' },
                    React.createElement(
                        'div',
                        null,
                        this.props.label ? this.props.label : __('Border')
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-button-list qubely-ml-auto' },
                        [['solid', __('Solid')], ['dotted', __('Dotted')], ['dashed', __('Dashed')], ['double', __('Double')]].map(function (data, index) {
                            return React.createElement(
                                Tooltip,
                                { text: data[1] },
                                React.createElement(
                                    'button',
                                    { className: (value.type == data[0] ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                            return _this2.setSettings('type', data[0]);
                                        } },
                                    React.createElement('span', { className: 'qubely-field-border-type qubely-field-border-type-' + data[0] })
                                )
                            );
                        })
                    ),
                    value.type && React.createElement(
                        Tooltip,
                        { text: __('Clear') },
                        React.createElement(
                            'div',
                            { className: 'qubely-ml-10' },
                            React.createElement(
                                'span',
                                { className: 'qubely-border-clear', onClick: function onClick() {
                                        return _this2.setSettings('type', '');
                                    }, role: 'button' },
                                React.createElement('i', { className: 'fas fa-undo' })
                            )
                        )
                    )
                ),
                value.type && React.createElement(
                    Fragment,
                    null,
                    React.createElement(_Color2.default, {
                        label: this.props.label ? this.props.label + __(' Color') : __('Border Color'),
                        value: value.color,
                        onChange: function onChange(val) {
                            return _this2.setSettings('color', val);
                        }
                    }),
                    unit && React.createElement(
                        'div',
                        { className: 'qubely-unit-btn-group qubely-d-block qubely-text-right' },
                        ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em']).map(function (unitName) {
                            return React.createElement(
                                'button',
                                { className: (value.unit ? unitName == value.unit : unitName == defaultUnit) ? 'active' : '',
                                    onClick: function onClick() {
                                        return _this2.updateUnit(unitName);
                                    } },
                                unitName
                            );
                        })
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-field qubely-field-border qubely-d-flex qubely-align-center' },
                        React.createElement(
                            'div',
                            null,
                            this.props.label ? this.props.label + __(' Width') : __('Border Width')
                        ),
                        responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                                device ? onDeviceChange(val) : _this2.setState({ device: val });
                            } }),
                        React.createElement(
                            'div',
                            { className: 'qubely-field-button-list qubely-ml-auto' },
                            ['global', 'custom'].map(function (data, index) {
                                return React.createElement(
                                    'button',
                                    { className: (value.widthType == data ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                            return _this2.setSettings('widthType', data);
                                        } },
                                    data == 'global' ? React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M15.971 15.059v.941h-16v-16h16v15.058zm-1.882-.941v-12.235h-12.235v12.235h12.235z', className: 'qubely-svg-fill' })
                                    ) : React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { className: 'qubely-svg-fill' },
                                            React.createElement('path', { d: 'M2.794 0h10.353v1.882h-10.353z' }),
                                            React.createElement('path', { d: 'M15.97 2.824v10.353h-1.882v-10.353z' }),
                                            React.createElement('path', { d: 'M1.853 2.823v10.353h-1.882v-10.353z' }),
                                            React.createElement('path', { d: 'M2.794 14.118h10.353v1.882h-10.353z' })
                                        )
                                    )
                                );
                            })
                        )
                    ),
                    !value.widthType || value.widthType == 'global' ? React.createElement(
                        'div',
                        { className: 'qubely-d-flex qubely-align-center qubely-field' },
                        React.createElement(
                            'div',
                            { className: 'qubely-w-100' },
                            React.createElement(_Range2.default, {
                                value: global,
                                onChange: function onChange(val) {
                                    return _this2.updateBorder('global', val);
                                },
                                min: min || 0,
                                max: max || 10,
                                step: 1
                            })
                        )
                    ) : React.createElement(
                        Fragment,
                        null,
                        iterator.map(function (item, index) {
                            return React.createElement(
                                'div',
                                { className: 'qubely-d-flex qubely-align-center qubely-field' },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-mr-15' },
                                    _icons2.default.border[item]
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'qubely-w-100' },
                                    React.createElement(_Range2.default, {
                                        value: values[index] || '',
                                        onChange: function onChange(val) {
                                            return _this2.updateBorder(iterator[index], val);
                                        },
                                        min: min || 0,
                                        max: max || 10,
                                        step: 1
                                    })
                                )
                            );
                        })
                    ),
                    this.props.separator && React.createElement(_Separator2.default, null)
                )
            );
        }
    }]);

    return Border;
}(Component);

exports.default = Border;

/***/ }),

/***/ "./src/components/fields/BorderRadius.js":
/*!***********************************************!*\
  !*** ./src/components/fields/BorderRadius.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var Tooltip = wp.components.Tooltip;

var BorderRadius = function (_Component) {
    _inherits(BorderRadius, _Component);

    function BorderRadius(props) {
        _classCallCheck(this, BorderRadius);

        var _this = _possibleConstructorReturn(this, (BorderRadius.__proto__ || Object.getPrototypeOf(BorderRadius)).call(this, props));

        _this.setBorderRadius = function (type, newValue) {
            var _this$props = _this.props,
                onChange = _this$props.onChange,
                value = _this$props.value,
                unit = _this$props.unit,
                responsive = _this$props.responsive,
                device = _this$props.device,
                responsiveGroup = _this$props.responsiveGroup;
            var _this$state = _this.state,
                defaultUnit = _this$state.defaultUnit,
                defaultRadiusType = _this$state.defaultRadiusType;

            var responsiveDevice = responsive ? device ? device : _this.state.device : window.qubelyDevice;

            var _ref = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''],
                _ref2 = _slicedToArray(_ref, 4),
                topLeft = _ref2[0],
                topRight = _ref2[1],
                bottomRight = _ref2[2],
                bottomLeft = _ref2[3];

            var newBorderRadius = JSON.parse(JSON.stringify(value));
            var tempRadius = type === 'global' ? '' + newValue : (type == 'topLeft' ? '' + newValue : '' + topLeft) + ' ' + (type == 'topRight' ? '' + newValue : '' + topRight) + ' ' + (type == 'bottomRight' ? '' + newValue : '' + bottomRight) + ' ' + (type == 'bottomLeft' ? '' + newValue : '' + bottomLeft);
            if (type === 'global') {
                responsive || responsiveGroup ? newBorderRadius.global ? newBorderRadius.global[responsiveDevice] = tempRadius : newBorderRadius.global = _defineProperty({}, responsiveDevice, tempRadius) : newBorderRadius.global = tempRadius;
            } else {
                responsive || responsiveGroup ? newBorderRadius.custom ? newBorderRadius.custom[responsiveDevice] = tempRadius : newBorderRadius.custom = _defineProperty({}, responsiveDevice, tempRadius) : newBorderRadius.custom = tempRadius;
            }
            unit && value.unit ? newBorderRadius.unit = value.unit : newBorderRadius.unit = defaultUnit;
            newBorderRadius.radiusType = value.radiusType ? value.radiusType : defaultRadiusType;
            newBorderRadius.openBorderRadius = 1;
            onChange(newBorderRadius);
        };

        _this.updateRadiusType = function (newType) {
            var _this$props2 = _this.props,
                onChange = _this$props2.onChange,
                value = _this$props2.value;

            var newBorderRadius = JSON.parse(JSON.stringify(value));
            newBorderRadius.radiusType = newType;
            onChange(newBorderRadius);
        };

        _this.updateUnit = function (newUnit) {
            var _this$props3 = _this.props,
                onChange = _this$props3.onChange,
                value = _this$props3.value;

            var newBorderRadius = JSON.parse(JSON.stringify(value));
            newBorderRadius.unit = newUnit;
            newBorderRadius.radiusType = value.radiusType ? value.radiusType : _this.state.defaultRadiusType;
            newBorderRadius.openBorderRadius = value.openBorderRadius ? value.openBorderRadius : 1;
            onChange(newBorderRadius);
        };

        _this.state = {
            device: 'md',
            defaultUnit: 'px',
            defaultRadiusType: 'global'
        };
        return _this;
    }

    _createClass(BorderRadius, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                min = _props.min,
                max = _props.max,
                responsive = _props.responsive,
                device = _props.device,
                onDeviceChange = _props.onDeviceChange,
                unit = _props.unit;
            var _state = this.state,
                defaultUnit = _state.defaultUnit,
                defaultRadiusType = _state.defaultRadiusType;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;
            var values = responsive ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''];
            var global = responsive ? value.global && value.global[responsiveDevice] ? value.global[responsiveDevice] : '' : value.global ? value.global : '';
            var iterator = ['topLeft', 'topRight', 'bottomRight', 'bottomLeft'];

            return React.createElement(
                'div',
                { className: "qubely-field qubely-field-border-radius " + (responsive ? 'qubely-responsive' : '') },
                unit && React.createElement(
                    'div',
                    { className: 'qubely-unit-btn-group qubely-d-block qubely-text-right' },
                    ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em', '%']).map(function (unitName) {
                        return React.createElement(
                            'button',
                            { className: (value.unit ? unitName == value.unit : unitName == defaultUnit) ? 'active' : '',
                                onClick: function onClick() {
                                    return _this2.updateUnit(unitName);
                                } },
                            unitName
                        );
                    })
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
                    React.createElement(
                        'label',
                        { htmlFor: 'input' },
                        '   ',
                        label ? label : __('Radius'),
                        '  '
                    ),
                    responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                            device ? onDeviceChange(val) : _this2.setState({ device: val });
                        } }),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-button-list qubely-ml-auto' },
                        [['global', __('Global')], ['custom', __('Custom')]].map(function (data, index) {
                            return React.createElement(
                                Tooltip,
                                { text: data[1] },
                                React.createElement(
                                    'button',
                                    { className: ((value.radiusType ? value.radiusType == data[0] : defaultRadiusType == data[0]) ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                            return _this2.updateRadiusType(data[0]);
                                        } },
                                    data[0] == 'global' ? React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M14.12 0h-12.24c-1.038 0-1.88.842-1.88 1.88v12.24c0 1.038.842 1.88 1.88 1.88h12.24c1.038 0 1.88-.842 1.88-1.88v-12.24c0-1.038-.842-1.88-1.88-1.88zm0 13.18c0 .519-.421.94-.94.94h-10.36c-.519 0-.94-.421-.94-.94v-10.36c0-.519.421-.94.94-.94h10.36c.519 0 .94.421.94.94v10.36z', className: 'qubely-svg-fill', 'fill-rule': 'nonzero' })
                                    ) : React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M1.88 0c-1.038 0-1.88.842-1.88 1.88v4.71h1.88v-3.77c0-.519.421-.94.94-.94h3.77v-1.88h-4.71zm0 9.41h-1.88v4.71c0 1.038.842 1.88 1.88 1.88h4.71v-1.88h-3.77c-.519 0-.94-.421-.94-.94v-3.77zm12.24-9.41h-4.71v1.88h3.77c.519 0 .94.421.94.94v3.77h1.88v-4.71c0-1.038-.842-1.88-1.88-1.88zm-.94 14.12h-3.77v1.88h4.71c1.038 0 1.88-.842 1.88-1.88v-4.71h-1.88v3.77c0 .519-.421.94-.94.94z', className: 'qubely-svg-fill', 'fill-rule': 'nonzero' })
                                    )
                                )
                            );
                        })
                    )
                ),
                (!value.radiusType || value.radiusType == 'global') && React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-field' },
                    React.createElement(
                        'div',
                        { className: 'qubely-w-100' },
                        React.createElement(_Range2.default, {
                            value: global || '',
                            onChange: function onChange(val) {
                                return _this2.setBorderRadius('global', val);
                            },
                            min: min,
                            max: max,
                            step: 1
                        })
                    )
                ),
                value.radiusType == 'custom' && React.createElement(
                    Fragment,
                    null,
                    iterator.map(function (item, index) {
                        return React.createElement(
                            'div',
                            { className: 'qubely-d-flex qubely-align-center qubely-field' },
                            React.createElement(
                                'div',
                                { className: 'qubely-mr-15' },
                                _icons2.default.borderRadius[item]
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-w-100' },
                                React.createElement(_Range2.default, {
                                    value: values[index] || '',
                                    onChange: function onChange(val) {
                                        return _this2.setBorderRadius(iterator[index], val);
                                    },
                                    min: min,
                                    max: max,
                                    step: 1
                                })
                            )
                        );
                    })
                )
            );
        }
    }]);

    return BorderRadius;
}(Component);

exports.default = BorderRadius;

/***/ }),

/***/ "./src/components/fields/BoxShadow.js":
/*!********************************************!*\
  !*** ./src/components/fields/BoxShadow.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var TextControl = wp.components.TextControl;
var Component = wp.element.Component;


var defaultData = {
    openShadow: 0,
    inset: '',
    horizontal: 2,
    vertical: 2,
    blur: 3,
    spread: 0,
    color: 'rgba(0, 0, 0, .2)'
};

var BoxShadow = function (_Component) {
    _inherits(BoxShadow, _Component);

    function BoxShadow() {
        _classCallCheck(this, BoxShadow);

        return _possibleConstructorReturn(this, (BoxShadow.__proto__ || Object.getPrototypeOf(BoxShadow)).apply(this, arguments));
    }

    _createClass(BoxShadow, [{
        key: 'setSettings',


        // componentWillMount(){
        //     const {value} = this.props
        //     this.props.onChange(Object.assign( {}, defaultData, ( value || {} )));
        // }

        value: function setSettings(type, val) {
            var _props = this.props,
                value = _props.value,
                onChange = _props.onChange;

            onChange(Object.assign({}, defaultData, value || {}, _defineProperty({}, type, val || 0)));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var value = this.props.value;

            return React.createElement(
                'div',
                { className: 'qubely-field qubely-field-boxshadow' },
                React.createElement(_Toggle2.default, {
                    value: value.openShadow,
                    label: this.props.label,
                    onChange: function onChange(val) {
                        return _this2.setSettings('openShadow', val);
                    }
                }),
                value.openShadow == 1 && React.createElement(
                    'div',
                    { className: 'qubely-field qubely-d-flex qubely-align-justified' },
                    React.createElement(_Color2.default, {
                        label: __('Color'),
                        value: value.color || '',
                        onChange: function onChange(val) {
                            return _this2.setSettings('color', val);
                        }
                    }),
                    React.createElement(TextControl, {
                        label: __('X'),
                        type: 'number',
                        value: value.horizontal,
                        onChange: function onChange(val) {
                            return _this2.setSettings('horizontal', val);
                        }
                    }),
                    React.createElement(TextControl, {
                        label: __('Y'),
                        type: 'number',
                        value: value.vertical,
                        onChange: function onChange(val) {
                            return _this2.setSettings('vertical', val);
                        }
                    }),
                    React.createElement(TextControl, {
                        label: __('Blur'),
                        type: 'number',
                        value: value.blur,
                        onChange: function onChange(val) {
                            return _this2.setSettings('blur', val);
                        }
                    }),
                    React.createElement(TextControl, {
                        label: __('Spread'),
                        type: 'number',
                        value: value.spread,
                        onChange: function onChange(val) {
                            return _this2.setSettings('spread', val);
                        }
                    })
                ),
                value.openShadow == 1 && !this.props.disableInset && React.createElement(_Toggle2.default, {
                    label: __('Inset'),
                    value: value.inset ? 1 : 0,
                    onChange: function onChange(val) {
                        return _this2.setSettings('inset', val ? 'inset' : '');
                    }
                })
            );
        }
    }]);

    return BoxShadow;
}(Component);

exports.default = BoxShadow;

/***/ }),

/***/ "./src/components/fields/ButtonGroup.js":
/*!**********************************************!*\
  !*** ./src/components/fields/ButtonGroup.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = function (_ref) {
    var label = _ref.label,
        options = _ref.options,
        value = _ref.value,
        onChange = _ref.onChange,
        responsive = _ref.responsive,
        activeDevice = _ref.device,
        onDeviceChange = _ref.onDeviceChange;

    var _useState = useState('md'),
        _useState2 = _slicedToArray(_useState, 2),
        device = _useState2[0],
        setDevice = _useState2[1];

    var responsiveDevice = responsive ? activeDevice ? activeDevice : device : window.qubelyDevice;

    var getValue = function getValue() {
        return value ? responsive ? value[responsiveDevice] || '' : value : '';
    };
    var onButtonClick = function onButtonClick(val) {
        return onChange(responsive ? Object.assign({}, value, _defineProperty({}, responsiveDevice, val)) : val);
    };

    var updateDevice = function updateDevice(newDevice) {
        if (typeof activeDevice !== 'undefined') onChange(_extends({}, value, { device: newDevice }));
        setDevice(newDevice);
    };

    return React.createElement(
        'div',
        { className: 'qubely-field-group-btn qubely-field ' + (responsive ? 'qubely-responsive' : 'qubely-d-flex') },
        responsive && React.createElement(
            'div',
            { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
            label && React.createElement(
                'label',
                null,
                ' ',
                label,
                ' '
            ),
            responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                    device && onDeviceChange ? onDeviceChange(val) : updateDevice(val);
                } })
        ),
        !responsive && label && React.createElement(
            'label',
            null,
            ' ',
            label,
            ' '
        ),
        React.createElement(
            ButtonGroup,
            { className: 'qubely-field-child qubely-d-flex' },
            options.map(function (_ref2) {
                var _ref3 = _slicedToArray(_ref2, 2),
                    title = _ref3[0],
                    option = _ref3[1];

                var activeBtn = option === getValue() ? 'qubley-active-group-btn' : '';
                return React.createElement(
                    Button,
                    { className: 'qubley-group-button ' + activeBtn, onClick: function onClick() {
                            return onButtonClick(option);
                        } },
                    title
                );
            })
        )
    );
};

__webpack_require__(/*! ../css/buttonGroup.scss */ "./src/components/css/buttonGroup.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var useState = wp.element.useState;
var _wp$components = wp.components,
    Button = _wp$components.Button,
    ButtonGroup = _wp$components.ButtonGroup;

/***/ }),

/***/ "./src/components/fields/ButtonSettings.js":
/*!*************************************************!*\
  !*** ./src/components/fields/ButtonSettings.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.buttonAttributes = undefined;
exports.buttonSettings = buttonSettings;

var _Alignment = __webpack_require__(/*! ./Alignment */ "./src/components/fields/Alignment.js");

var _Alignment2 = _interopRequireDefault(_Alignment);

var _Border = __webpack_require__(/*! ./Border */ "./src/components/fields/Border.js");

var _Border2 = _interopRequireDefault(_Border);

var _BorderRadius = __webpack_require__(/*! ./BorderRadius */ "./src/components/fields/BorderRadius.js");

var _BorderRadius2 = _interopRequireDefault(_BorderRadius);

var _BoxShadow = __webpack_require__(/*! ./BoxShadow */ "./src/components/fields/BoxShadow.js");

var _BoxShadow2 = _interopRequireDefault(_BoxShadow);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

var _IconList = __webpack_require__(/*! ./IconList */ "./src/components/fields/IconList.js");

var _IconList2 = _interopRequireDefault(_IconList);

var _Styles = __webpack_require__(/*! ./Styles */ "./src/components/fields/Styles.js");

var _Styles2 = _interopRequireDefault(_Styles);

var _Typography = __webpack_require__(/*! ./Typography */ "./src/components/fields/Typography.js");

var _Typography2 = _interopRequireDefault(_Typography);

var _Url = __webpack_require__(/*! ./Url */ "./src/components/fields/Url.js");

var _Url2 = _interopRequireDefault(_Url);

var _Tabs = __webpack_require__(/*! ./Tabs */ "./src/components/fields/Tabs.js");

var _Tabs2 = _interopRequireDefault(_Tabs);

var _Tab = __webpack_require__(/*! ./Tab */ "./src/components/fields/Tab.js");

var _Tab2 = _interopRequireDefault(_Tab);

var _InnerPanel = __webpack_require__(/*! ./InnerPanel */ "./src/components/fields/InnerPanel.js");

var _InnerPanel2 = _interopRequireDefault(_InnerPanel);

var _Select = __webpack_require__(/*! ./Select */ "./src/components/fields/Select.js");

var _Select2 = _interopRequireDefault(_Select);

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

var _ColorAdvanced = __webpack_require__(/*! ./ColorAdvanced */ "./src/components/fields/ColorAdvanced.js");

var _ColorAdvanced2 = _interopRequireDefault(_ColorAdvanced);

var _RadioAdvanced = __webpack_require__(/*! ./RadioAdvanced */ "./src/components/fields/RadioAdvanced.js");

var _RadioAdvanced2 = _interopRequireDefault(_RadioAdvanced);

var _Padding = __webpack_require__(/*! ./Padding */ "./src/components/fields/Padding.js");

var _Padding2 = _interopRequireDefault(_Padding);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var PanelBody = wp.components.PanelBody;


//attributes 

var buttonAttributes = exports.buttonAttributes = {
    buttonText: { type: 'string', default: '' },
    buttonFillType: { type: 'string', default: 'fill' },
    buttonTag: { type: 'string', default: 'a' },
    buttonUrl: { type: 'object', default: { url: '#' } },
    buttonSize: { type: 'string', default: 'medium' },
    buttonAlignment: {
        type: 'object', default: { md: 'left' },
        style: [{
            condition: [{ key: 'enableButtonAlignment', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-block-btn-wrapper {text-align: {{buttonAlignment}};}'
        }]
    },
    buttonWidthType: {
        type: 'string',
        default: 'auto',
        style: [{
            condition: [{ key: 'buttonWidthType', relation: '==', value: 'block' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor {width:100%; display: -webkit-box; display: -ms-flexbox; display: flex;}'
        }]
    },
    buttonWidth: {
        type: 'object',
        default: {
            md: 260,
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'buttonWidthType', relation: '==', value: 'fixed' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor {width: {{buttonWidth}};}'
        }]
    },
    buttonPadding: {
        type: 'object',
        default: {
            openPadding: 1,
            paddingType: 'global',
            global: { md: 18 },
            custom: { md: '10 10 10 10' },
            unit: 'px'
        },
        style: [{
            condition: [{ key: 'buttonSize', relation: '==', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor'
        }]
    },
    buttonTypography: { type: 'object', default: {}, style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor' }] },
    buttonColor: {
        type: 'string', default: '#000',
        style: [{
            condition: [{ key: 'buttonFillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor { color:{{buttonColor}}; }'
        }]
    },
    buttonColor2: {
        type: 'string', default: '#2184F9',
        style: [{
            condition: [{ key: 'buttonFillType', relation: '!=', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor { color:{{buttonColor2}}; }'
        }]
    },
    buttonHoverColor: {
        type: 'string', default: '#fff',
        style: [{
            condition: [{ key: 'buttonFillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover { color:{{buttonHoverColor}}; }'
        }]
    },
    buttonHoverColor2: {
        type: 'string', default: '#1066CC',
        style: [{
            condition: [{ key: 'buttonFillType', relation: '!=', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover { color:{{buttonHoverColor2}}; }'
        }]
    },
    buttonBgColor: {
        type: 'object', default: { type: 'color', openColor: 1, color: '#2184F9', gradient: { color1: '#1066CC', color2: '#2184F9', direction: 0, start: 0, stop: 100 } },
        style: [{
            condition: [{ key: 'buttonFillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor'
        }]
    },
    buttonBgHoverColor: {
        type: 'object', default: { type: 'color', openColor: 1, color: '#1066CC', gradient: { color1: '#2184F9', color2: '#1066CC', direction: 0, start: 0, stop: 100 } },
        style: [{
            condition: [{ key: 'buttonFillType', relation: '==', value: 'fill' }],
            selector: '{{QUBELY}} .qubely-block-btn-anchor:before'
        }]
    },

    buttonBorder: {
        type: 'object',
        default: {
            openBorder: 1,
            widthType: 'global',
            global: 1,
            color: '#2184F9',
            type: "solid",
            unit: "px"
        },
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor' }]
    },

    buttonBorderHoverColor: {
        type: 'string', default: '#1066CC',
        style: [{
            selector: '{{QUBELY}} .qubely-block-btn-anchor:hover {border-color: {{buttonBorderHoverColor}};}'
        }]
    },

    buttonBorderRadius: {
        type: 'object',
        default: {
            openBorderRadius: 1,
            radiusType: 'global',
            global: {
                md: 4
            },
            unit: 'px'
        },
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor' }]
    },
    buttonShadow: {
        type: 'object', default: {},
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor' }]
    },
    buttonHoverShadow: {
        type: 'object', default: {},
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-anchor:hover' }]
    },
    buttonIconName: { type: 'string', default: '' },
    buttonIconPosition: { type: 'string', default: 'right' },
    buttonIconSize: {
        type: 'object', default: {},
        style: [{
            condition: [{ key: 'buttonIconName', relation: '!=', value: '' }],
            selector: '{{QUBELY}} .qubely-btn-icon {font-size: {{buttonIconSize}}}'
        }]
    },
    buttonIconGap: {
        type: 'object', default: { md: 8, unit: 'px' },
        style: [{
            condition: [{ key: 'buttonIconName', relation: '!=', value: '' }, { key: 'buttonIconPosition', relation: '==', value: 'left' }],
            selector: '{{QUBELY}} .qubely-btn-icon { margin-right: {{buttonIconGap}}; }'
        }, {
            condition: [{ key: 'buttonIconName', relation: '!=', value: '' }, { key: 'buttonIconPosition', relation: '==', value: 'right' }],
            selector: '{{QUBELY}} .qubely-btn-icon { margin-left: {{buttonIconGap}}; }'
        }]
    },
    buttonGap: {
        type: 'object', default: { md: 8, unit: 'px' },
        style: [{ selector: '{{QUBELY}} .qubely-block-btn-wrapper { margin-bottom: {{buttonGap}}; }' }]
    }
};

function buttonSettings(attributes, device, setAttributes, updateParentState, showPostTextTypography) {
    var controlledButtonPanel = attributes.controlledButtonPanel,
        showButtonPanel = attributes.showButtonPanel,
        enableButton = attributes.enableButton,
        buttonToggleOption = attributes.buttonToggleOption,
        enablePostButtonText = attributes.enablePostButtonText,
        postButtonTextTypography = attributes.postButtonTextTypography,
        postButtonTextColor = attributes.postButtonTextColor,
        postButtonTextHoverColor = attributes.postButtonTextHoverColor,
        postButtonTextPaddingBottom = attributes.postButtonTextPaddingBottom,
        postButtonTextPaddingTop = attributes.postButtonTextPaddingTop,
        enableButtonAlignment = attributes.enableButtonAlignment,
        buttonAlignment = attributes.buttonAlignment,
        buttonGap = attributes.buttonGap,
        buttonWidthType = attributes.buttonWidthType,
        buttonWidth = attributes.buttonWidth,
        buttonTag = attributes.buttonTag,
        buttonFillType = attributes.buttonFillType,
        buttonSize = attributes.buttonSize,
        buttonTypography = attributes.buttonTypography,
        buttonPadding = attributes.buttonPadding,
        buttonUrl = attributes.buttonUrl,
        buttonBorderRadius = attributes.buttonBorderRadius,
        buttonIconName = attributes.buttonIconName,
        buttonIconPosition = attributes.buttonIconPosition,
        buttonIconSize = attributes.buttonIconSize,
        buttonIconGap = attributes.buttonIconGap,
        buttonBorder = attributes.buttonBorder,
        buttonBorderHoverColor = attributes.buttonBorderHoverColor,
        buttonColor = attributes.buttonColor,
        buttonColor2 = attributes.buttonColor2,
        buttonHoverColor = attributes.buttonHoverColor,
        buttonHoverColor2 = attributes.buttonHoverColor2,
        buttonBgColor = attributes.buttonBgColor,
        buttonBgHoverColor = attributes.buttonBgHoverColor,
        buttonShadow = attributes.buttonShadow,
        buttonHoverShadow = attributes.buttonHoverShadow;


    var renderButtonControls = function renderButtonControls() {
        return React.createElement(
            Fragment,
            null,
            React.createElement(_Styles2.default, { value: buttonFillType,
                onChange: function onChange(value) {
                    return setAttributes('buttonFillType', value);
                },
                options: [{ value: 'fill', svg: _icons2.default.btn_fill, label: __('Fill') }, { value: 'outline', svg: _icons2.default.btn_outline, label: __('Outline') }]
            }),
            buttonTag == 'a' && React.createElement(_Url2.default, { label: __('URL'), value: buttonUrl, onChange: function onChange(value) {
                    return setAttributes('buttonUrl', value);
                } }),
            enableButtonAlignment && React.createElement(_Alignment2.default, { label: __('Alignment'), value: buttonAlignment, onChange: function onChange(val) {
                    return setAttributes('buttonAlignment', val);
                }, disableJustify: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
                    return updateParentState('device', value);
                } }),
            React.createElement(
                _InnerPanel2.default,
                { title: __('Size') },
                React.createElement(_RadioAdvanced2.default, {
                    label: __('Button Size'),
                    options: [{ label: 'S', value: 'small', title: 'Small' }, { label: 'M', value: 'medium', title: 'Medium' }, { label: 'L', value: 'large', title: 'Large' }, { icon: 'fas fa-cog', value: 'custom', title: 'Custom' }],
                    value: buttonSize,
                    onChange: function onChange(value) {
                        return setAttributes('buttonSize', value);
                    }
                }),
                buttonSize == 'custom' && React.createElement(_Padding2.default, {
                    label: __('Padding'),
                    value: buttonPadding,
                    onChange: function onChange(value) {
                        return setAttributes('buttonPadding', value);
                    },
                    unit: ['px', 'em', '%'],
                    max: 150,
                    min: 0,
                    responsive: true,
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } }),
                React.createElement(_RadioAdvanced2.default, {
                    label: __('Button Width'),
                    options: [{ label: __('Auto'), value: 'auto', title: __('Auto') }, { label: __('Full'), value: 'block', title: __('Full') }, { label: __('Fixed'), value: 'fixed', title: __('Fixed') }],
                    value: buttonWidthType,
                    onChange: function onChange(value) {
                        return setAttributes('buttonWidthType', value);
                    } }),
                buttonWidthType == 'fixed' && React.createElement(_Range2.default, {
                    label: __('Fixed Width'),
                    value: buttonWidth,
                    onChange: function onChange(value) {
                        return setAttributes('buttonWidth', value);
                    },
                    unit: ['px', 'em', '%'],
                    min: 30,
                    max: 800,
                    responsive: true,
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } })
            ),
            React.createElement(
                _InnerPanel2.default,
                { title: __('Design'), initialOpen: false },
                React.createElement(
                    _Tabs2.default,
                    null,
                    React.createElement(
                        _Tab2.default,
                        { tabTitle: __('Normal') },
                        React.createElement(_Color2.default, { label: __('Text Color'), value: buttonFillType == 'fill' ? buttonColor : buttonColor2, onChange: function onChange(value) {
                                return buttonFillType == 'fill' ? setAttributes('buttonColor', value) : setAttributes('buttonColor2', value);
                            } }),
                        buttonFillType == 'fill' && React.createElement(_ColorAdvanced2.default, { label: __('Background'), value: buttonBgColor, onChange: function onChange(value) {
                                return setAttributes('buttonBgColor', value);
                            } }),
                        React.createElement(_Border2.default, {
                            label: __('Border'),
                            separator: true,
                            value: buttonBorder,
                            min: 0,
                            max: 10,
                            onChange: function onChange(val) {
                                return setAttributes('buttonBorder', val);
                            }
                        }),
                        React.createElement(_BoxShadow2.default, {
                            label: __('Box-Shadow'),
                            value: buttonShadow,
                            onChange: function onChange(value) {
                                return setAttributes('buttonShadow', value);
                            } })
                    ),
                    React.createElement(
                        _Tab2.default,
                        { tabTitle: __('Hover') },
                        React.createElement(_Color2.default, { label: __('Text Color'), value: buttonFillType == 'fill' ? buttonHoverColor : buttonHoverColor2, onChange: function onChange(value) {
                                return buttonFillType == 'fill' ? setAttributes('buttonHoverColor', value) : setAttributes('buttonHoverColor2', value);
                            } }),
                        buttonFillType == 'fill' && React.createElement(_ColorAdvanced2.default, { label: __('Background'), value: buttonBgHoverColor, onChange: function onChange(value) {
                                return setAttributes('buttonBgHoverColor', value);
                            } }),
                        React.createElement(_Color2.default, { label: __('Border Color'), value: buttonBorderHoverColor, onChange: function onChange(value) {
                                return setAttributes('buttonBorderHoverColor', value);
                            } }),
                        React.createElement(_BoxShadow2.default, {
                            label: __('Box-Shadow'),
                            value: buttonHoverShadow,
                            onChange: function onChange(value) {
                                return setAttributes('buttonHoverShadow', value);
                            } })
                    )
                ),
                React.createElement(_BorderRadius2.default, {
                    label: __('Radius'),
                    value: buttonBorderRadius,
                    onChange: function onChange(value) {
                        return setAttributes('buttonBorderRadius', value);
                    },
                    min: 0,
                    max: 100, unit: ['px', 'em', '%'],
                    responsive: true,
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } }),
                React.createElement(_Range2.default, {
                    label: __('Gap'),
                    value: buttonGap,
                    min: 0,
                    max: 100,
                    responsive: true,
                    unit: ['px', 'em', '%'],
                    onChange: function onChange(value) {
                        return setAttributes('buttonGap', value);
                    },
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    }
                })
            ),
            React.createElement(
                _InnerPanel2.default,
                { title: __('Icon'), initialOpen: false },
                React.createElement(_IconList2.default, {
                    label: __('Icon'),
                    value: buttonIconName,
                    onChange: function onChange(value) {
                        return setAttributes('buttonIconName', value);
                    } }),
                buttonIconName && React.createElement(
                    Fragment,
                    null,
                    React.createElement(_Select2.default, {
                        label: __('Position'),
                        options: ['left', 'right'],
                        value: buttonIconPosition,
                        onChange: function onChange(value) {
                            return setAttributes('buttonIconPosition', value);
                        } }),
                    React.createElement(_Range2.default, {
                        label: __('Size'),
                        value: buttonIconSize,
                        onChange: function onChange(value) {
                            return setAttributes('buttonIconSize', value);
                        },
                        unit: ['px', 'em', '%'],
                        min: 5,
                        max: 48,
                        responsive: true,
                        device: device,
                        onDeviceChange: function onDeviceChange(value) {
                            return updateParentState('device', value);
                        } }),
                    React.createElement(_Range2.default, {
                        label: __('Gap'),
                        value: buttonIconGap,
                        onChange: function onChange(val) {
                            return setAttributes('buttonIconGap', val);
                        },
                        unit: ['px', 'em', '%'],
                        min: 0,
                        max: 64,
                        responsive: true,
                        device: device,
                        onDeviceChange: function onDeviceChange(value) {
                            return updateParentState('device', value);
                        } })
                )
            ),
            React.createElement(
                _InnerPanel2.default,
                { title: __('Typography'), initialOpen: false },
                React.createElement(_Typography2.default, {
                    value: buttonTypography,
                    onChange: function onChange(value) {
                        return setAttributes('buttonTypography', value);
                    },
                    disableLineHeight: true,
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } })
            )
        );
    };
    return React.createElement(
        Fragment,
        null,
        controlledButtonPanel ? React.createElement(
            PanelBody,
            { title: __('Button'), opened: showButtonPanel, onToggle: function onToggle() {
                    return setAttributes('showButtonPanel', !showButtonPanel);
                } },
            buttonToggleOption && React.createElement(_Toggle2.default, { label: __('Enable Button'), value: enableButton, onChange: function onChange(val) {
                    return setAttributes('enableButton', val);
                } }),
            enableButton && renderButtonControls()
        ) : React.createElement(
            PanelBody,
            { title: __('Button'), initialOpen: false },
            buttonToggleOption && React.createElement(_Toggle2.default, { label: __('Enable Button'), value: enableButton, onChange: function onChange(val) {
                    return setAttributes('enableButton', val);
                } }),
            enableButton && renderButtonControls()
        ),
        typeof enablePostButtonText != 'undefined' && React.createElement(
            PanelBody,
            { title: __('Post Button Text'), initialOpen: false },
            React.createElement(_Toggle2.default, {
                value: enablePostButtonText,
                label: __('Show PostButtonText'),
                onChange: function onChange(val) {
                    return setAttributes('enablePostButtonText', val);
                } }),
            enablePostButtonText && React.createElement(
                Fragment,
                null,
                React.createElement(
                    _Tabs2.default,
                    null,
                    React.createElement(
                        _Tab2.default,
                        { tabTitle: __('Normal') },
                        React.createElement(_Color2.default, {
                            label: __('Color'),
                            value: postButtonTextColor,
                            onChange: function onChange(val) {
                                return setAttributes('postButtonTextColor', val);
                            } })
                    ),
                    React.createElement(
                        _Tab2.default,
                        { tabTitle: __('Hover') },
                        React.createElement(_Color2.default, {
                            label: __('Color'),
                            value: postButtonTextHoverColor,
                            onChange: function onChange(val) {
                                return setAttributes('postButtonTextHoverColor', val);
                            } })
                    )
                ),
                React.createElement(_Toggle2.default, {
                    value: showPostTextTypography,
                    label: __('Typography'),
                    onChange: function onChange(val) {
                        return updateParentState('showPostTextTypography', val);
                    } }),
                showPostTextTypography && React.createElement(_Typography2.default, {
                    value: postButtonTextTypography,
                    onChange: function onChange(val) {
                        return setAttributes('postButtonTextTypography', val);
                    },
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } }),
                React.createElement(_Range2.default, {
                    min: -50,
                    max: 200,
                    responsive: true,
                    value: postButtonTextPaddingTop,
                    unit: ['px', 'em', '%'],
                    label: "Top",
                    onChange: function onChange(val) {
                        return setAttributes('postButtonTextPaddingTop', val);
                    },
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } }),
                React.createElement(_Range2.default, {
                    min: -50,
                    max: 200,
                    responsive: true,
                    value: postButtonTextPaddingBottom,
                    unit: ['px', 'em', '%'],
                    label: "Bottom",
                    onChange: function onChange(val) {
                        return setAttributes('postButtonTextPaddingBottom', val);
                    },
                    device: device,
                    onDeviceChange: function onDeviceChange(value) {
                        return updateParentState('device', value);
                    } })
            )
        )
    );
}

/***/ }),

/***/ "./src/components/fields/Carousel/index.js":
/*!*************************************************!*\
  !*** ./src/components/fields/Carousel/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(/*! ./utils */ "./src/components/fields/Carousel/utils.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    cloneElement = _wp$element.cloneElement,
    Fragment = _wp$element.Fragment,
    findDOMNode = _wp$element.findDOMNode;


var defaultOptions = {
    margin: 10,
    nav: false,
    dots: false,
    center: false,
    autoplay: false,
    dot_indicator: false,
    items: { md: '2', sm: '2', xs: '1' }
};

var Carousel = function (_Component) {
    _inherits(Carousel, _Component);

    function Carousel(props) {
        _classCallCheck(this, Carousel);

        var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));

        _this.parseResponsiveViewPort = function () {
            var responsive = _this.props.options.responsive;

            if (typeof responsive === 'undefined') return;
            var activeView = null;

            for (var i = 0; i < responsive.length; i++) {
                if (window.innerWidth > responsive[i].viewport) {
                    activeView = responsive[i];
                    break;
                }
            }
            if (activeView === null) {
                activeView = responsive[responsive.length - 1];
            }
            return activeView.viewport <= 1199 ? activeView.viewport <= 991 ? 'xs' : 'sm' : 'md';
        };

        _this.finddotLength = function () {
            var items = _this.props.options.items;

            var device = _this.parseResponsiveViewPort();
            var cloneItems = $('.qubely-carousel-extended-outer-stage').find('.clone').length;
            var numberOfItems = $('.qubely-carousel-extended-outer-stage').find('.qubely-carousel-item').length - cloneItems;
            return Math.floor(numberOfItems / items[device]);
        };

        _this.state = { device: '' };
        return _this;
    }

    _createClass(Carousel, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var activeDevice = this.parseResponsiveViewPort();
            this.setState({ device: activeDevice });
            __webpack_require__(/*! ./qubelyCarousel */ "./src/components/fields/Carousel/qubelyCarousel.js");
            this.init(this.getOptions());
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.destroy();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (!(0, _utils._equal)(prevProps.options, this.props.options) || prevProps.children.length !== this.props.children.length) {
                this.init(this.getOptions());
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.destroy();
        }
    }, {
        key: 'init',
        value: function init(options) {
            this.$node.qubelyCarousel(options);
            this.$qubelyCarousel = this.$node.data('qubelyCarousel');
        }
    }, {
        key: 'getOptions',
        value: function getOptions() {
            var options = this.props.options;

            var newOptions = Object.assign(defaultOptions, options);
            return newOptions;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            this.$qubelyCarousel.destroy();
        }
    }, {
        key: 'cloneItems',
        value: function cloneItems() {
            var _props = this.props,
                children = _props.children,
                options = _props.options;

            var device = this.parseResponsiveViewPort();
            var firstChilds = [];
            var lastChilds = [];

            var cloneItems = children.length > options.items[device] ? Math.ceil(children.length / 2) : options.items[device];
            Array(parseInt(cloneItems)).fill(0).map(function (_, i) {
                var lastChild = cloneElement(children[children.length - 1 - i], { className: 'clone qubely-carousel-item' });
                var firstChild = cloneElement(children[i], { className: 'clone qubely-carousel-item' });
                firstChilds.push(firstChild);
                lastChilds.push(lastChild);
            });
            return { firstChilds: firstChilds, lastChilds: lastChilds };
        }
    }, {
        key: 'createDotsItems',
        value: function createDotsItems() {
            var _props2 = this.props,
                children = _props2.children,
                items = _props2.options.items;

            var device = this.parseResponsiveViewPort();
            var dots = Math.floor(children.length / items[device]);
            return Array(dots).fill(0).map(function (item, index) {
                return React.createElement(
                    'li',
                    { className: 'qubely-carousel-dot-' + index + (index === 0 ? ' active' : '') },
                    React.createElement('span', { className: 'dot-indicator' })
                );
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props3 = this.props,
                _props3$options = _props3.options,
                nav = _props3$options.nav,
                dots = _props3$options.dots,
                arrowStyle = _props3$options.arrowStyle,
                arrowPosition = _props3$options.arrowPosition,
                children = _props3.children;

            var cloneItems = this.cloneItems();
            return React.createElement(
                'div',
                _extends({ className: 'qubely-carousel qubely-carousel-wrapper', ref: function ref(item) {
                        return _this2.$node = $(findDOMNode(item));
                    } }, this.props.options),
                React.createElement(
                    'div',
                    { className: 'qubely-carousel-extended-list' },
                    React.createElement(
                        'div',
                        { className: 'qubely-carousel-extended-outer-stage' },
                        cloneItems.lastChilds,
                        children,
                        cloneItems.firstChilds
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-carousel-nav-control' },
                    nav && React.createElement(
                        Fragment,
                        null,
                        React.createElement(
                            'span',
                            { className: 'next-control nav-control ' + arrowPosition, onClick: function onClick() {
                                    return _this2.$qubelyCarousel.navigate('next');
                                } },
                            arrowStyle == 'arrowright2' ? React.createElement('span', { className: 'fas fa-angle-right' }) : React.createElement('span', { className: 'fas fa-arrow-right' })
                        ),
                        React.createElement(
                            'span',
                            { className: 'prev-control nav-control ' + arrowPosition, onClick: function onClick() {
                                    return _this2.$qubelyCarousel.navigate('prev');
                                } },
                            arrowStyle == 'arrowright2' ? React.createElement('span', { className: 'fas fa-angle-left' }) : React.createElement('span', { className: 'fas fa-arrow-left' })
                        )
                    )
                ),
                dots && React.createElement(
                    'div',
                    { className: 'qubely-carousel-dots' },
                    React.createElement(
                        'ul',
                        null,
                        this.createDotsItems()
                    )
                )
            );
        }
    }]);

    return Carousel;
}(Component);

exports.default = Carousel;

/***/ }),

/***/ "./src/components/fields/Carousel/qubelyCarousel.js":
/*!**********************************************************!*\
  !*** ./src/components/fields/Carousel/qubelyCarousel.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Plugin Name: Qubely Carousel
 * Version: 1.0.0
 * Author: Themeum
 * Company: Themeum
 * Website: https://www.themeum.com/
 * Description: Qubely Carousel 
 */
;(function ($, window, document, undefined) {

    var pluginName = 'qubelyCarousel';

    // Create the plugin constructor
    function Plugin(element, options) {
        /*
            Provide local access to the DOM node(s) that called the plugin,
            as well local access to the plugin name and default options.
        */
        this.element = element;
        this.elementWidth = 0;
        this._name = pluginName;
        this.item = null;
        this.delta = 1;
        this.isAnimating = false;

        //interval clear 
        this.timer = 0;
        this._timeoutId1 = 0;
        this._timeoutId2 = 0;
        this._dotControllerTimeId = 0;
        this._lastViewPort = 0;

        this.itemWidth = 0;
        this._clones = 0;
        this._items = 0;

        this._itemCoordinate = [];
        this.coordinate = { x: 0, y: 0 };
        this.prevCoordinate = { x: 0, y: 0, diff: 0, dragPointer: -1 };

        this._defaults = $.fn.qubelyCarousel.defaults;
        /*
            The "$.extend" method merges the contents of two or more objects,
            and stores the result in the first object.
        */
        this.options = $.extend({}, this._defaults, options, { autoplay: false });

        /*
            The "init" method is the starting point for all plugin logic.
        */
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function init() {

            // Build cache for first rendering and search target element
            this.buildCache();

            // Create necessary html DOM and element cache
            this.createHtmlDom();

            // Apply initial style for next initiative
            this.applyBasicStyle();

            // Apply all bind event into this function
            this.bindEvents();

            // On inital start animation
            this.triggerOnStart();

            //init active class

            this.initActiveClass();
        },

        initActiveClass: function initActiveClass() {

            var currentStagePosition = this._currentPosition;
            var startIndex = Math.floor(currentStagePosition / this.itemWidth);

            if (this.options.center) {
                startIndex++;
            }
            var endIndex = Math.floor(Math.abs(parseInt(this.options.items) + parseInt(startIndex)));
            this.$outerStage.find('.qubely-carousel-item.active').removeClass('active');

            for (var i = startIndex; i < endIndex; i++) {
                this.$outerStage.children(':eq(' + i + ')').addClass('active');
            }
        },

        // Trigger animation element on inital time
        triggerOnStart: function triggerOnStart() {
            // Trigger dot indicator if its enable 
            if (this.options.dot_indicator && this.options.dots) {
                var currentActiveDot = this.$dotContainer.find('li.active');
                this.animateDotIndicator(currentActiveDot, 'start');
            }
        },

        /**
         * On browswer close or tab change 
         * Remove plugin instance completely
         */
        destroy: function destroy() {
            this.unbindEvents();
            this.$element.removeData(this._name);
        },

        //navigate through items
        navigate: function navigate(direction) {
            var qubelyCarousel = this;
            if (qubelyCarousel.isAnimating === false) {
                direction === 'next' ? qubelyCarousel.Next() : qubelyCarousel.Prev();
                //Call qubelyCarousel
                qubelyCarousel.checkCallBackMethod.call(qubelyCarousel);
            }
        },

        // Cache DOM nodes for performance
        buildCache: function buildCache() {
            this.$element = $(this.element);
        },

        // Unbind events that trigger methods
        unbindEvents: function unbindEvents() {
            /*
                Unbind all events in our plugin's namespace that are attached
                to "this.$element".
            */
            this.$element.off('.' + this._name);
        },

        /**
         * Create necessary html object for slider 
         * Definetly check user settings and create object based on it
         */
        createHtmlDom: function createHtmlDom() {

            if (this.$element.find(".qubely-carousel-extended-outer-stage").length > 0) {
                this.$outerStage = this.$element.find(".qubely-carousel-extended-outer-stage");
            }

            if (this.$element.find(".qubely-carousel-extended-list").length > 0) {
                this.$sliderList = this.$element.find(".qubely-carousel-extended-list");
            }

            // qubely-carousel-extended-list
            // Do calculate total items and clone numbers
            this.itemProfessor();

            // Create dots element if dots setting enable
            if (this.options.dots) {
                if (this.$element.find('.qubely-carousel-dots').length === 0) {
                    this.createDotsController();
                } else {
                    this.$dotContainer = this.$element.find('.qubely-carousel-dots ul');
                }
            }

            this.calculateItemCoordinate();
        },

        /**
         * Slider professor which calculate and mesure whole slider needs 
         * @elementWidth = Total slider width with margin 
         * @itemWidth = each item width 
         * @_clones = Need to clone number of items 
         * @_maxL = maximum length of items 
         * @_minL = minimum length of items
         */
        itemProfessor: function itemProfessor() {
            var cloneItems = this.$element.find('.clone').length;
            this._numberOfItems = this.$element.find('.qubely-carousel-item').length - cloneItems;
            var viewPort = null;
            if (typeof this.options.responsive !== 'undefined') viewPort = this.parseResponsiveViewPort();

            this.options.items = viewPort === null ? this.options.items : typeof viewPort.items === 'undefined' ? this.options.items : viewPort.items;

            this.elementWidth = this.$element.outerWidth() + this.options.margin;
            this.itemWidth = this.options.center ? Math.abs((this.elementWidth - this.options.centerPadding) / this.options.items) : Math.abs(this.elementWidth / this.options.items);
            this._clones = this._numberOfItems > this.options.items ? Math.ceil(this._numberOfItems / 2) : this.options.items;
            this._maxL = this.itemWidth * (this._numberOfItems + (this._clones - 1));
            this._minL = this.options.center === false ? this.itemWidth * this._clones : this.itemWidth * this._clones - this.options.centerPadding / 2;
        },

        // Append before item
        appendBefore: function appendBefore(clones) {
            var _this = this;

            clones.map(function (item) {
                _this.$outerStage.prepend(item);
            });
        },

        // Append after item
        appendAfter: function appendAfter(clones) {
            var _this2 = this;

            clones.map(function (item) {
                _this2.$outerStage.append(item);
            });
        },

        /**
         * Find each children width and do parallal sum operation and store in array
         */
        calculateItemCoordinate: function calculateItemCoordinate() {
            var qubelyCarousel = this;
            var child_ = this.$outerStage.children();
            child_.each(function (i, obj) {
                qubelyCarousel._itemCoordinate.push((i + 1) * qubelyCarousel.itemWidth);
            });
        },

        /**
         * Add dots navigation
         * @options.dots = true 
         */
        createDotsController: function createDotsController() {
            //Create dots navigation
            var dotBox = document.createElement('div');
            dotBox.setAttribute('class', 'qubely-carousel-dots');
            this.$element.append(dotBox);
            var qubelyCarousel = this;
            var dotContainer = document.createElement('ul');
            var viewPort = null;
            if (typeof this.options.responsive !== 'undefined') viewPort = this.parseResponsiveViewPort();
            var items = viewPort === null ? this.options.items : typeof viewPort.items === 'undefined' ? this.options.items : viewPort.items;
            var dotLength = Math.floor(this._numberOfItems / items);
            if (dotLength > 1) {
                for (var i = 0; i < dotLength; i++) {
                    var dotItem = document.createElement('li');
                    dotItem.setAttribute('class', 'qubely-carousel-dot-' + i);
                    $(dotItem).css({ '-webkit-transition': 'all 0.5s linear 0s' });
                    if (i === 0) {
                        $(dotItem).addClass('active');
                    }

                    // Dot indicator                        
                    if (qubelyCarousel.options.dot_indicator) {
                        var dotIndicator = document.createElement('span');
                        dotIndicator.setAttribute('class', 'dot-indicator');
                        dotItem.append(dotIndicator);
                    }
                    dotContainer.append(dotItem);
                }
            }
            dotBox.append(dotContainer);
            this.$element.append(dotBox);
            //Cache dot container
            this.$dotContainer = $(dotContainer);
        },

        /**
         * Apply base css property on initial hook 
         */
        applyBasicStyle: function applyBasicStyle() {
            var totalItems = 0;
            var cssPropety = {};
            cssPropety.width = this.itemWidth - this.options.margin + 'px';
            if (this.options.margin > 0) {
                cssPropety.marginRight = this.options.margin + 'px';
            }

            this.$element.find('.qubely-carousel-item').each(function () {
                totalItems++;
                $(this).css(cssPropety);
            });

            this._currentPosition = this._clones * this.itemWidth;
            if (this.options.center === true) {
                this._currentPosition = this._clones * this.itemWidth - this.options.centerPadding / 2;
            }
            this.$outerStage.css({
                '-webkit-transition-duration': '0s',
                '-webkit-transform': 'translate3D(-' + this._currentPosition + 'px,0px,0px)',
                width: totalItems * this.itemWidth + 'px'
            });
            this._items = totalItems;
            this.updateResponsiveView();
        },

        /**
         * Go next slider item 
         * @if next slider item is last item 
         * @then go first item 
         * It will be looping one after another item continusely if you continusely click next nav controller
         * 
         * Save the active item to the item object (globally)
         */
        Next: function Next() {
            // this.isAnimating = true
            if (this.delta === -1) this.delta = 1;
            this.updateItemStyle();
        },

        /**
         * Go prevouse slider item 
         * @if prevouse slider item is first one then go to last slider 
         * It will be looping on thread if you continousely click prev icon
         * 
         * Save the active item to the item object (globally) 
         */
        Prev: function Prev() {
            // this.isAnimating = true
            if (this.delta === 1) this.delta = -1;
            this.updateItemStyle();
        },
        /**
         * Go exact slider position by index number
         * If you click on dots navication it will pick the index number of the dot controller
         * then search the slider index item and active that item 
         * 
         * Check also delta that will tell you where we should go (forword|backword)
         * 
         * Save the active item to the item object (globally)
         */
        slideFromPosition: function slideFromPosition(position, delta) {
            // this.isAnimating = true
            var updatedPosition = this.itemWidth * (this.options.items * position);
            var newPosition = position === 0 ? this._minL : this._minL + updatedPosition;
            this.$outerStage.css({
                '-webkit-transition': 'all 0.25s ease 0s',
                '-webkit-transform': 'translate3D(-' + newPosition + 'px,0px,0px)'
            });
            this._currentPosition = newPosition;
            /**
             * Detect am I click the next elment of active one or prev element
             * If prev element then slide from left otherwise from right
             */
            this.delta = delta;

            this.processActivationWorker();
        },

        updateDotsFromPosition: function updateDotsFromPosition(position) {
            var _this3 = this;

            var prevActiveDot = this.$dotContainer.find('li.active').removeClass('active');
            var currentActiveDot = this.$dotContainer.find('li:nth-child(' + position + ')').addClass('active');

            if (this.options.dot_indicator) {
                this.animateDotIndicator(prevActiveDot, 'stop');
                if (this._dotControllerTimeId > 0) {
                    clearTimeout(this._dotControllerTimeId);
                    this._dotControllerTimeId = 0;
                }
                this._dotControllerTimeId = setTimeout(function () {
                    _this3.animateDotIndicator(currentActiveDot, 'start');
                }, this.options.speed);
            }
            currentActiveDot.css({ '-webkit-transition': 'all 0.5s linear 0s' });
        },

        /**
         * Check action 
         * If its start then get the speed between interval and slider speed 
         * Then set the transition duration
         * @param {DOM} dotItem 
         * @param {string} action 
         */
        animateDotIndicator: function animateDotIndicator(dotItem, action) {
            if (action === 'stop') {
                dotItem.find('.dot-indicator').removeClass('active').css({
                    '-webkit-transition-duration': '0s'
                });
            }
            if (action === 'start') {
                var speed = Math.abs(this.options.interval - this.options.speed);
                dotItem.find('.dot-indicator').addClass('active').css({
                    '-webkit-transition-duration': speed + 'ms'
                });
            }
        },

        /**
         * Update active and prevouse item style when change the slider 
         * 
         * Check if the new position gretter then Maximum length 
         * Then set the new position to minimum length 
         * 
         * Check if the new position gretter then Minimum length 
         * Then set the new psoition to maximum length
         * 
         * Update the @_currentPosition with new position
         */
        updateItemStyle: function updateItemStyle() {
            var _this4 = this;

            var dragEndPointer = this.prevCoordinate.dragPointer === -1 ? 0 : this.prevCoordinate.dragPointer;

            var currentPosition = this._currentPosition;
            var thePosition = this.itemWidth + parseInt(dragEndPointer);

            var newPosition = this.delta === 1 ? currentPosition + thePosition : currentPosition - thePosition;

            if (newPosition > this._maxL) {
                this.$outerStage.css({
                    'transition': '0s',
                    '-webkit-transform': 'translate3D(-' + (this._minL - this.itemWidth) + 'px,0px,0px)'
                });
                newPosition = this._minL;
            }
            if (currentPosition < this._minL) {
                this.$outerStage.css({
                    'transition': '0s',
                    '-webkit-transform': 'translate3D(-' + this._maxL + 'px,0px,0px)'
                });
                newPosition = this._maxL - this.itemWidth;
            }

            if (this._timeoutId1 > 0) {
                clearTimeout(this._timeoutId1);
                this._timeoutId1 = 0;
            }
            this._timeoutId1 = setTimeout(function () {
                _this4.$outerStage.css({
                    '-webkit-transition': 'all 0.25s ease 0s',
                    '-webkit-transform': 'translate3D(-' + newPosition + 'px,0px,0px)'
                });
            }, 0);

            this._currentPosition = newPosition;
            this.processActivationWorker();
        },

        /**
         * Add / Remove active class from visible elements  
         * 
         */
        processActivationWorker: function processActivationWorker() {
            var currentStagePosition = this._currentPosition;
            var startIndex = Math.floor(currentStagePosition / this.itemWidth);

            if (this.options.center) {
                startIndex++;
            }
            var endIndex = Math.floor(Math.abs(parseInt(this.options.items) + parseInt(startIndex)));
            this.$outerStage.find('.qubely-carousel-item.active').removeClass('active');

            for (var i = startIndex; i < endIndex; i++) {
                this.$outerStage.children(':eq(' + i + ')').addClass('active');
            }

            var reminder = Math.floor((startIndex - this._clones) / this.options.items) + 1;
            if (this.options.dots) {
                this.$dotContainer.find('.active').removeClass('active');
                this.$dotContainer.find('li:nth-child(' + reminder + ')').addClass('active');
            }
        },

        /**
         * Change the opacity/x-axis based on dragPointer to the active item and next item vice versa
         * It will work only on dragging over the slider 
         * direction right side drag
         */
        dragoverActionToNextItem: function dragoverActionToNextItem(dragPointer) {
            var _this5 = this;

            var currentPosition = this._currentPosition;
            var newPosition = currentPosition + parseInt(dragPointer);
            if (newPosition > this._maxL) {
                newPosition = this._minL - this.itemWidth + parseInt(dragPointer);
            }
            if (this._timeoutId2 > 0) {
                clearTimeout(this._timeoutId2);
                this._timeoutId2 = 0;
            }

            this._timeoutId2 = setTimeout(function () {
                _this5.$outerStage.css({
                    '-webkit-transition': 'all 0s ease 0s',
                    '-webkit-transform': 'translate3D(-' + newPosition + 'px,0px,0px)'
                });
            }, 0);
        },

        /**
         * Change the opacity to the active item and prev item vice versa
         * Active the function only on dragging item 
         * direction left side drag
         */
        dragoverActionToPrevItem: function dragoverActionToPrevItem(dragPointer) {
            var _this6 = this;

            var currentPosition = this._currentPosition;
            var newPosition = currentPosition - parseInt(dragPointer);
            if (newPosition < this._minL - this.itemWidth) {
                newPosition = this._maxL - parseInt(dragPointer);
            }

            if (this._timeoutId2 > 0) {
                clearTimeout(this._timeoutId2);
                this._timeoutId2 = 0;
            }
            this._timeoutId2 = setTimeout(function () {
                _this6.$outerStage.css({
                    '-webkit-transition': 'all 0s ease 0s',
                    '-webkit-transform': 'translate3D(-' + newPosition + 'px,0px,0px)'
                });
            }, 0);
        },

        /**
         * Reset coordination operation
         * When start dragging save some mouse coordinate for calculate the position 
         * So when release the drag it will reset the config to inital setting
         * 
         * Also check if some item already change the opacity on drag operation
         */
        resetCoordiante: function resetCoordiante() {
            this.prevCoordinate = { x: 0, y: 0, diff: 0, dragPointer: -1 };
            this.coordinate = { x: 0, y: 0 };
        },

        /**
         * Back to stage if not drag enough to satisfy condition
         */
        backToStage: function backToStage() {},
        // Bind events that trigger methods
        bindEvents: function bindEvents() {
            var qubelyCarousel = this;

            if (qubelyCarousel.options.dots) {
                qubelyCarousel.$dotContainer.find('li').each(function (index) {
                    $(this).on('click' + '.' + qubelyCarousel._name, function (e) {
                        if ($(this).hasClass('active') || qubelyCarousel.isAnimating === true) return false;

                        var activeDotNav = $(this).parent().find('li.active');
                        var activeIndex = qubelyCarousel.$dotContainer.find('li').index(activeDotNav);
                        var delta = activeIndex > index ? -1 : 1;
                        qubelyCarousel.slideFromPosition(index, delta);
                        qubelyCarousel.updateDotsFromPosition(index + 1);

                        //Call qubelyCarousel
                        qubelyCarousel.checkCallBackMethod.call(qubelyCarousel);
                    });
                });
            }

            $(window).on('resize' + '.' + qubelyCarousel._name, $.proxy(qubelyCarousel.windowResize, qubelyCarousel));
        },

        windowResize: function windowResize(e) {
            if (typeof e === 'undefined') return;
            this.updateResponsiveView();
        },
        parseResponsiveViewPort: function parseResponsiveViewPort() {
            var responsiveProps = this.options.responsive;
            if (typeof responsiveProps === 'undefined') return;
            var activeView = null;
            var wWidth = window.innerWidth;
            for (var i = 0; i < responsiveProps.length; i++) {
                if (wWidth > responsiveProps[i].viewport) {
                    activeView = responsiveProps[i];
                    break;
                }
            }
            if (activeView === null) {
                activeView = responsiveProps[responsiveProps.length - 1];
            }
            return activeView;
        },
        updateResponsiveView: function updateResponsiveView() {
            if (typeof this.options.responsive === 'undefined') return;
            var qubelyCarousel = this;
            var wHeight = window.innerHeight;
            var viewPort = qubelyCarousel.parseResponsiveViewPort();

            if (viewPort.height === 'full') {
                if (this._lastViewPort === wHeight) return;
                this._lastViewPort = wHeight;
                this.$outerStage.css({ height: wHeight + 'px' });
            } else {
                if (this._lastViewPort === viewPort.height) return;
                this._lastViewPort = viewPort.height;
                this.$outerStage.css({ height: viewPort.height });
            }
        },
        /**
         * Get mouse position
         * @on touch device 
         * @on destkop
         */
        getPosition: function getPosition(event) {
            var result = { x: null, y: null };
            event = event.originalEvent || event || window.event;
            event = event.touches && event.touches.length ? event.touches[0] : event.changedTouches && event.changedTouches.length ? event.changedTouches[0] : event;

            if (event.pageX) {
                result.x = event.pageX;
                result.y = event.pageY;
            } else {
                result.x = event.clientX;
                result.y = event.clientY;
            }
            return result;
        },

        /**
         * Check if it has callback function 
         * If has then fire callback function
         */
        checkCallBackMethod: function checkCallBackMethod() {
            this.callback();
        },

        /**
         * Fire callback function with current item 
         */
        callback: function callback() {
            var onChange = this.options.onChange;
            if (typeof onChange === 'function') {
                var items = this.$element.find('.qubely-carousel-item').length;
                var option = { item: this.item, items: items, element: this.$element };
                onChange.call(this.element, option);
            }
        }

    });

    /**
     * Initiate the js-coursel plugin 
     */
    $.fn.qubelyCarousel = function (options) {
        this.each(function () {
            if (!$.data(this, pluginName)) {
                $.data(this, pluginName, new Plugin(this, options));
            }
        });
        return this;
    };

    /**
     * Default setting for intire slide operation
     */
    $.fn.qubelyCarousel.defaults = {

        // Number of item need to show
        items: 4,

        // Autoplay trigger
        autoplay: false,

        // Is item mode center
        center: false,

        centerPadding: 150,

        // Margin between items 
        margin: 10,

        // Slide speed 
        speed: 800,

        // Slider interval 
        interval: 4500,

        // callback function in each onChnage event
        onChange: null,

        // Enable/Disable dots indicator
        dots: true,

        // Set inner span to each dot indicator
        dot_indicator: false,

        //Enable/Disable navigation
        nav: true

    };
})(jQuery, window, document);

/***/ }),

/***/ "./src/components/fields/Carousel/utils.js":
/*!*************************************************!*\
  !*** ./src/components/fields/Carousel/utils.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports._equal = _equal;
exports._copy = _copy;
exports.uuidv4 = uuidv4;
/**
 * Check if two properties are equal or not
 * Check deep equal object|array
 */

function _equal(value, other) {
    var isEqual = function isEqual(value, other) {

        // Get the value type
        var type = Object.prototype.toString.call(value);

        // If the two objects are not the same type, return false
        if (type !== Object.prototype.toString.call(other)) return false;

        // If items are not an object or array, return false
        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;

        // Compare the length of the length of the two items
        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;
        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;
        if (valueLen !== otherLen) return false;

        // Compare two items
        var compare = function compare(item1, item2) {

            // Get the object type
            var itemType = Object.prototype.toString.call(item1);

            // If an object or array, compare recursively
            if (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {
                if (!isEqual(item1, item2)) return false;
            }

            // Otherwise, do a simple comparison
            else {

                    // If the two items are not the same type, return false
                    if (itemType !== Object.prototype.toString.call(item2)) return false;

                    // Else if it's a function, convert to a string and compare
                    // Otherwise, just compare
                    if (itemType === '[object Function]') {
                        if (item1.toString() !== item2.toString()) return false;
                    } else {
                        if (item1 !== item2) return false;
                    }
                }
        };

        // Compare properties
        if (type === '[object Array]') {
            for (var i = 0; i < valueLen; i++) {
                if (compare(value[i], other[i]) === false) return false;
            }
        } else {
            for (var key in value) {
                if (value.hasOwnProperty(key)) {
                    if (compare(value[key], other[key]) === false) return false;
                }
            }
        }

        // If nothing failed, return true
        return true;
    };
    return isEqual(value, other);
};

/**
 * Object Deep copy 
 */

function _copy(obj) {
    var cloneObject = function cloneObject(obj) {
        var clone = {};
        for (var i in obj) {
            if (obj[i] != null && _typeof(obj[i]) == "object") clone[i] = cloneObject(obj[i]);else clone[i] = obj[i];
        }
        return clone;
    };
    return cloneObject(obj);
}

/**
 * Create unit uuid4 
 */
function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0,
            v = c == 'x' ? r : r & 0x3 | 0x8;
        return v.toString(16);
    });
}

/***/ }),

/***/ "./src/components/fields/Color.js":
/*!****************************************!*\
  !*** ./src/components/fields/Color.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/color.scss */ "./src/components/css/color.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    Dropdown = _wp$components.Dropdown,
    ColorPicker = _wp$components.ColorPicker,
    Tooltip = _wp$components.Tooltip;

var Color = function (_Component) {
    _inherits(Color, _Component);

    function Color(props) {
        _classCallCheck(this, Color);

        var _this = _possibleConstructorReturn(this, (Color.__proto__ || Object.getPrototypeOf(Color)).call(this, props));

        _this.state = { current: 'date' };
        return _this;
    }

    _createClass(Color, [{
        key: 'defColors',
        value: function defColors() {
            var val = [];
            var colors = window.globalData.settings;
            val.push(colors.colorPreset1 || qubely_admin.palette[0]);
            val.push(colors.colorPreset2 || qubely_admin.palette[1]);
            val.push(colors.colorPreset3 || qubely_admin.palette[2]);
            val.push(colors.colorPreset4 || qubely_admin.palette[3]);
            val.push(colors.colorPreset5 || qubely_admin.palette[4]);
            val.push(colors.colorPreset6 || qubely_admin.palette[5]);
            return val;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                label = _props.label,
                className = _props.className,
                value = _props.value,
                disablePalette = _props.disablePalette,
                disableAlpha = _props.disableAlpha,
                disableClear = _props.disableClear,
                onChange = _props.onChange;

            return React.createElement(
                'div',
                { className: 'qubely-field qubely-field-color qubely-d-flex qubely-align-center ' + (className ? className : '') },
                label && React.createElement(
                    'label',
                    { className: 'qubely-mb-0' },
                    label
                ),
                React.createElement(Dropdown, {
                    position: 'top center',
                    className: 'qubely-ml-auto',
                    renderToggle: function renderToggle(_ref) {
                        var isOpen = _ref.isOpen,
                            onToggle = _ref.onToggle;
                        return React.createElement(
                            Fragment,
                            null,
                            React.createElement(
                                'span',
                                { className: 'qubely-color-picker-container' },
                                React.createElement('span', { className: 'qubely-color-picker', style: { backgroundColor: value || '' }, isPrimary: true, onClick: onToggle, 'aria-expanded': isOpen })
                            )
                        );
                    },
                    renderContent: function renderContent() {
                        return React.createElement(
                            'span',
                            null,
                            React.createElement(ColorPicker, { color: value || '',
                                onChangeComplete: function onChangeComplete(val) {
                                    if (val.rgb) {
                                        onChange(val.rgb.a != 1 ? 'rgba(' + val.rgb.r + ',' + val.rgb.g + ',' + val.rgb.b + ',' + val.rgb.a + ')' : val.hex);
                                    }
                                },
                                disableAlpha: disableAlpha ? disableAlpha : false }),
                            !disablePalette && React.createElement(
                                'div',
                                { className: 'qubely-rgba-palette', style: { padding: '0px 0px 15px 15px' } },
                                _this2.defColors().map(function (color) {
                                    return React.createElement('button', { style: { color: color }, onClick: function onClick() {
                                            return onChange(color);
                                        } });
                                })
                            )
                        );
                    }
                }),
                value != '' && !disableClear && React.createElement(
                    Tooltip,
                    { text: __('Clear') },
                    React.createElement(
                        'div',
                        { className: 'qubely-ml-10' },
                        React.createElement(
                            'span',
                            { className: 'qubely-border-clear', onClick: function onClick() {
                                    return onChange('');
                                }, role: 'button' },
                            React.createElement('i', { className: 'fas fa-undo' })
                        )
                    )
                )
            );
        }
    }]);

    return Color;
}(Component);

exports.default = Color;

/***/ }),

/***/ "./src/components/fields/ColorAdvanced.js":
/*!************************************************!*\
  !*** ./src/components/fields/ColorAdvanced.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Gradient = __webpack_require__(/*! ./Gradient */ "./src/components/fields/Gradient.js");

var _Gradient2 = _interopRequireDefault(_Gradient);

var _Separator = __webpack_require__(/*! ./Separator */ "./src/components/fields/Separator.js");

var _Separator2 = _interopRequireDefault(_Separator);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var Tooltip = wp.components.Tooltip;


var defaultData = {
    openColor: 0,
    type: 'color',
    color: '#006fbf',
    gradient: {}
};

var ColorAdvanced = function (_Component) {
    _inherits(ColorAdvanced, _Component);

    function ColorAdvanced() {
        _classCallCheck(this, ColorAdvanced);

        return _possibleConstructorReturn(this, (ColorAdvanced.__proto__ || Object.getPrototypeOf(ColorAdvanced)).apply(this, arguments));
    }

    _createClass(ColorAdvanced, [{
        key: 'setSettings',
        value: function setSettings(val, type) {
            var _props = this.props,
                value = _props.value,
                onChange = _props.onChange;

            onChange(Object.assign({}, defaultData, value || {}, { openColor: 1 }, _defineProperty({}, type, val)));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var value = this.props.value;

            return React.createElement(
                'div',
                { className: 'qubely-field-color-advanced qubely-field' },
                React.createElement(
                    'div',
                    { className: 'qubely-mb-20 qubely-d-flex qubely-align-center' },
                    this.props.label && React.createElement(
                        'span',
                        null,
                        this.props.label
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-button-list qubely-ml-auto' },
                        ['color', 'gradient'].map(function (data, index) {
                            return React.createElement(
                                'button',
                                { className: (value && value.type == data && value.openColor ? 'active' : '') + ' qubely-button', onClick: function onClick() {
                                        return _this2.setSettings(data, 'type');
                                    } },
                                data == 'color' && React.createElement(
                                    Tooltip,
                                    { text: __('Color') },
                                    React.createElement(
                                        'svg',
                                        { width: '17', height: '18', viewBox: '0 0 17 18', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M.964 15.047c0 1.091.835 1.983 1.856 1.983 1.021 0 1.856-.892 1.856-1.983 0-1.091-1.856-3.966-1.856-3.966s-1.856 2.875-1.856 3.966zm14.909-7.84l-4.362-4.371c-.291-.292-.639-.489-1.009-.593l.683-.683c.234-.235.233-.611.001-.843-.234-.234-.609-.231-.842.002l-2.831 2.836-.03.033-3.613 3.619c-.906.908-.905 2.378 0 3.284l4.362 4.371c.906.908 2.373.907 3.278 0l4.362-4.371c.906-.908.905-2.378 0-3.284zm-11.494 1.664c0-.289.111-.579.332-.801l4.362-4.37c.442-.443 1.156-.443 1.599 0l4.362 4.37c.221.222.332.511.332.801h-10.986z', className: 'qubely-svg-fill', 'fill-rule': 'nonzero' })
                                    )
                                ),
                                data == 'gradient' && React.createElement(
                                    Tooltip,
                                    { text: __('Gradient') },
                                    React.createElement(
                                        'svg',
                                        { width: '18', height: '15', viewBox: '0 0 18 15', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { transform: 'translate(.735 .263)', fill: 'none' },
                                            React.createElement('rect', { className: 'qubely-svg-stroke', x: '.5', y: '.5', width: '16.072', height: '13.474', rx: '1' }),
                                            React.createElement('path', { className: 'qubely-svg-fill', d: 'M.836.763l15.759 13.158h-15.759z' })
                                        )
                                    )
                                )
                            );
                        })
                    ),
                    value && (value.openColor && value.type) != '' && React.createElement(
                        'div',
                        { className: 'qubely-ml-10' },
                        React.createElement(
                            Tooltip,
                            { text: __('Clear') },
                            React.createElement(
                                'span',
                                { className: 'qubely-border-clear', onClick: function onClick() {
                                        return _this2.setSettings(value.openColor ? 0 : 1, 'openColor');
                                    }, role: 'button' },
                                React.createElement('i', { className: 'fas fa-undo' })
                            )
                        )
                    )
                ),
                value && value.openColor == 1 && React.createElement(
                    Fragment,
                    null,
                    value.type === "color" && React.createElement(_Color2.default, {
                        label: __('Fill Color'),
                        disableClear: true,
                        value: value.color || '#16d03e',
                        onChange: function onChange(val) {
                            return _this2.setSettings(val, 'color');
                        }
                    }),
                    value.type === "gradient" && React.createElement(_Gradient2.default, {
                        inline: true,
                        label: __('Gradient'),
                        value: value.gradient || '',
                        onChange: function onChange(val) {
                            return _this2.setSettings(val, 'gradient');
                        }
                    }),
                    React.createElement(_Separator2.default, null)
                )
            );
        }
    }]);

    return ColorAdvanced;
}(Component);

exports.default = ColorAdvanced;

/***/ }),

/***/ "./src/components/fields/ContextMenu.js":
/*!**********************************************!*\
  !*** ./src/components/fields/ContextMenu.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ContextMenu = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.handleContextMenu = handleContextMenu;

__webpack_require__(/*! ../css/contextmenu.scss */ "./src/components/css/contextmenu.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$data = wp.data,
    select = _wp$data.select,
    dispatch = _wp$data.dispatch;
var Component = wp.element.Component;
function handleContextMenu(event, qubelyContextMenu) {
    event.preventDefault();
    var clickX = event.clientX;
    var clickY = event.clientY;
    var screenW = window.innerWidth;
    var screenH = window.innerHeight;
    var rootW = qubelyContextMenu.offsetWidth;
    var rootH = qubelyContextMenu.offsetHeight;
    var right = screenW - clickX > rootW;
    var left = !right;
    var top = screenH - clickY > rootH;
    var bottom = !top;
    qubelyContextMenu.style.display = 'block';
    if (right) {
        qubelyContextMenu.style.left = clickX + 5 + 'px';
    }
    if (left) {
        qubelyContextMenu.style.left = clickX - rootW - 5 + 'px';
    }
    if (top) {
        qubelyContextMenu.style.top = clickY + 5 + 'px';
    }
    if (bottom) {
        qubelyContextMenu.style.top = clickY - rootH - 5 + 'px';
    }
}

var ContextMenu = exports.ContextMenu = function (_Component) {
    _inherits(ContextMenu, _Component);

    function ContextMenu() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, ContextMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ContextMenu.__proto__ || Object.getPrototypeOf(ContextMenu)).call.apply(_ref, [this].concat(args))), _this), _this.handleonClickOutside = function (event) {
            var qubelyContextMenu = _this.props.qubelyContextMenu;

            if (qubelyContextMenu && !qubelyContextMenu.contains(event.target)) {
                qubelyContextMenu.style.display = 'none';
            }
        }, _this.copyStyles = function () {
            var _this$props = _this.props,
                setAttributes = _this$props.setAttributes,
                clientId = _this$props.clientId,
                name = _this$props.name,
                qubelyContextMenu = _this$props.qubelyContextMenu;

            var _dispatch = dispatch('core/block-editor'),
                updateBlockAttributes = _dispatch.updateBlockAttributes;

            var blockDefaultAttributes = JSON.parse(JSON.stringify(wp.blocks.getBlockType(name))).attributes;
            var blockAttributes = select('core/block-editor').getBlockAttributes(clientId);
            var newStyles = { copiedStyles: {} };

            Object.keys(blockDefaultAttributes).forEach(function (key) {
                if (blockDefaultAttributes[key].hasOwnProperty('style')) {
                    newStyles.copiedStyles[key] = JSON.parse(JSON.stringify(blockAttributes[key]));
                } else if (key.toLowerCase() == 'layout' || key.toLowerCase() == 'style' || key.toLowerCase() == 'filltype' || key == 'iconStyle' || key.toLowerCase() == 'buttonfilltype') {
                    newStyles.copiedStyles[key] = JSON.parse(JSON.stringify(blockAttributes[key]));
                }
            });
            newStyles['copiedFrom'] = clientId;
            newStyles['blockName'] = name;
            var previouslyCopiedStyle = JSON.parse(localStorage.getItem('qubelyCopiedStyles'));

            if (previouslyCopiedStyle) {
                var previouslyCopiedFrom = previouslyCopiedStyle.copiedFrom;
                select('core/block-editor').getBlock('' + previouslyCopiedFrom) && updateBlockAttributes('' + previouslyCopiedFrom, { sourceOfCopiedStyle: false });
            }

            setTimeout(function () {
                return localStorage.setItem('qubelyCopiedStyles', JSON.stringify(newStyles));
            }, 500);

            qubelyContextMenu.style.display = 'none';
            setAttributes({ sourceOfCopiedStyle: true });
        }, _this.pasteStyle = function () {
            var _this$props2 = _this.props,
                setAttributes = _this$props2.setAttributes,
                qubelyContextMenu = _this$props2.qubelyContextMenu;

            var qubelyCopiedStyles = JSON.parse(localStorage.getItem('qubelyCopiedStyles')).copiedStyles;
            qubelyContextMenu.style.display = 'none';
            setAttributes(qubelyCopiedStyles);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(ContextMenu, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props = this.props,
                clientId = _props.clientId,
                sourceOfCopiedStyle = _props.attributes.sourceOfCopiedStyle;

            document.addEventListener('mousedown', this.handleonClickOutside);
            var qubelyCopiedStyles = JSON.parse(localStorage.getItem('qubelyCopiedStyles'));
            if (sourceOfCopiedStyle && qubelyCopiedStyles) {
                qubelyCopiedStyles.copiedFrom = clientId;
                localStorage.setItem('qubelyCopiedStyles', JSON.stringify(qubelyCopiedStyles));
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('mousedown', this.handleonClickOutside);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                name = _props2.name,
                clientId = _props2.clientId,
                sourceOfCopiedStyle = _props2.attributes.sourceOfCopiedStyle;

            var previouslyCopiedStyle = JSON.parse(localStorage.getItem('qubelyCopiedStyles'));
            return React.createElement(
                'div',
                { className: 'qubely-context-menu' },
                React.createElement(
                    'div',
                    { className: 'qubely-context-menu-group' },
                    React.createElement(
                        'div',
                        { className: 'qubely-context-menu-item qubely-context-menu-item-copy', onClick: function onClick() {
                                return _this2.copyStyles();
                            } },
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-icon' },
                            ' ',
                            React.createElement('i', { className: 'fas fa-copy' })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-title' },
                            __('Copy Style')
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-context-menu-item qubely-context-menu-item-paste disable-' + (previouslyCopiedStyle && previouslyCopiedStyle.blockName == name ? sourceOfCopiedStyle : true), onClick: function onClick() {
                                return _this2.pasteStyle();
                            }, 'aria-disabled': sourceOfCopiedStyle },
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-icon' },
                            ' ',
                            React.createElement('i', { className: 'fas fa-paste' })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-title' },
                            __('Paste Style')
                        )
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-context-menu-group' },
                    React.createElement(
                        'div',
                        { className: 'qubely-context-menu-item qubely-context-menu-item-delete', onClick: function onClick() {
                                return dispatch('core/block-editor').removeBlock(clientId);
                            } },
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-icon' },
                            ' ',
                            React.createElement('i', { className: 'fas fa-trash' })
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-title' },
                            __('Delete')
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-context-menu-item-shortcut' },
                            '\u2326'
                        )
                    )
                )
            );
        }
    }]);

    return ContextMenu;
}(Component);

/***/ }),

/***/ "./src/components/fields/Counter.js":
/*!******************************************!*\
  !*** ./src/components/fields/Counter.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var Counter = function (_Component) {
	_inherits(Counter, _Component);

	function Counter(props) {
		_classCallCheck(this, Counter);

		var _this = _possibleConstructorReturn(this, (Counter.__proto__ || Object.getPrototypeOf(Counter)).call(this, props));

		_this.isDone = function () {
			if (_this.state.count == _this.state.upperLimit) {
				clearInterval(_this.intervalId);
			}
		};

		_this.findNextNumber = function () {
			var _this$state = _this.state,
			    count = _this$state.count,
			    upperLimit = _this$state.upperLimit,
			    increment = _this$state.increment;

			var difference = upperLimit - count;
			_this.setState({ count: difference >= increment ? count + increment : difference >= 50 ? count + 50 : count + 1 });
			_this.isDone();
		};

		var _this$props = _this.props,
		    number = _this$props.number,
		    counterDuration = _this$props.counterDuration;

		_this.state = {
			count: 0,
			upperLimit: number,
			counterDuration: counterDuration,
			increment: Math.ceil(number / counterDuration * 10)
		};
		return _this;
	}

	_createClass(Counter, [{
		key: "componentDidMount",
		value: function componentDidMount() {
			if (this.state.count < this.props.number) {
				this.intervalId = setInterval(this.findNextNumber, 10);
			}
		}
	}, {
		key: "componentWillReceiveProps",
		value: function componentWillReceiveProps(nextProps) {
			clearInterval(this.intervalId);
			if (this.state.count != nextProps.number || this.state.counterDuration != nextProps.counterDuration) {
				this.setState({
					upperLimit: nextProps.number,
					count: 0,
					counterDuration: nextProps.counterDuration,
					increment: Math.ceil(nextProps.number / nextProps.counterDuration * 10)
				});
				this.intervalId = setInterval(this.findNextNumber, 10);
			}
		}
	}, {
		key: "render",
		value: function render() {
			return this.state.count;
		}
	}]);

	return Counter;
}(Component);

exports.default = Counter;

/***/ }),

/***/ "./src/components/fields/Device.js":
/*!*****************************************!*\
  !*** ./src/components/fields/Device.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var Tooltip = wp.components.Tooltip;

var Device = function (_Component) {
    _inherits(Device, _Component);

    function Device(props) {
        _classCallCheck(this, Device);

        var _this = _possibleConstructorReturn(this, (Device.__proto__ || Object.getPrototypeOf(Device)).call(this, props));

        _this.state = { current: typeof props.device !== 'undefined' && props.device !== '' ? props.device : 'md' };
        return _this;
    }

    _createClass(Device, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (typeof this.props.device !== 'undefined' && this.props.device !== '') {
                window.qubelyDevice = this.props.device;
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(value) {
            window.qubelyDevice = value;
            this.setState({ current: value });
            this.props.onChange(value);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var current = this.state.current;
            var _props = this.props,
                device = _props.device,
                className = _props.className,
                commonResponsiveDevice = _props.commonResponsiveDevice;


            return React.createElement(
                'div',
                { className: 'qubely-device ' + (className ? className : '') },
                React.createElement(
                    Tooltip,
                    { text: __('Desktop') },
                    React.createElement('button', { onClick: function onClick() {
                            return _this2.setSettings('md');
                        }, title: __('Desktop'), className: "qubely-device-desktop" + (commonResponsiveDevice && device == 'md' || !commonResponsiveDevice && current == 'md' ? ' active' : '') })
                ),
                React.createElement(
                    Tooltip,
                    { text: __('Tablet') },
                    React.createElement('button', { onClick: function onClick() {
                            return _this2.setSettings('sm');
                        }, title: __('Tablet'), className: "qubely-device-tablet" + (commonResponsiveDevice && device == 'sm' || !commonResponsiveDevice && current == 'sm' ? ' active' : '') })
                ),
                React.createElement(
                    Tooltip,
                    { text: __('Mobile') },
                    React.createElement('button', { onClick: function onClick() {
                            return _this2.setSettings('xs');
                        }, title: __('Phone'), className: "qubely-device-mobile" + (commonResponsiveDevice && device == 'xs' || !commonResponsiveDevice && current == 'xs' ? ' active' : '') })
                )
            );
        }
    }]);

    return Device;
}(Component);

exports.default = Device;

/***/ }),

/***/ "./src/components/fields/Dimension.js":
/*!********************************************!*\
  !*** ./src/components/fields/Dimension.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/dimension.scss */ "./src/components/css/dimension.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var Dimension = function (_Component) {
    _inherits(Dimension, _Component);

    function Dimension(props) {
        _classCallCheck(this, Dimension);

        var _this = _possibleConstructorReturn(this, (Dimension.__proto__ || Object.getPrototypeOf(Dimension)).call(this, props));

        _this.state = { lock: false, current: _this._filterValue() };
        return _this;
    }

    _createClass(Dimension, [{
        key: '_filterValue',
        value: function _filterValue(val) {
            var _props = this.props,
                value = _props.value,
                responsive = _props.responsive;

            if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object' && Object.keys(value).length > 0) {
                if (val) {
                    return responsive ? value[window.qubelyDevice] ? value[window.qubelyDevice][val] || '' : '' : value[val];
                } else {
                    return responsive ? value[window.qubelyDevice] || '' : value;
                }
            } else {
                return '';
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(action, position) {
            var _props2 = this.props,
                responsive = _props2.responsive,
                value = _props2.value,
                onChange = _props2.onChange,
                max = _props2.max,
                min = _props2.min;

            var newVal = action;
            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) != undefined) {
                newVal = action < min ? min : newVal;
            }
            if (max) {
                newVal = action > max ? max : newVal;
            }
            var data = this.state.lock && position != 'unit' ? { 'top': newVal, 'right': newVal, 'bottom': newVal, 'left': newVal } : _defineProperty({}, position, newVal);
            data = Object.assign({}, responsive ? value[window.qubelyDevice] || {} : value, data);
            var final = Object.assign({}, value, responsive ? _defineProperty({}, window.qubelyDevice, data) : data);
            final.unit = data.unit || 'px';
            onChange(final);
            this.setState({ current: final });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props3 = this.props,
                unit = _props3.unit,
                label = _props3.label,
                responsive = _props3.responsive,
                device = _props3.device,
                onDeviceChange = _props3.onDeviceChange,
                clientId = _props3.clientId,
                min = _props3.min,
                max = _props3.max;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;

            return React.createElement(
                'div',
                { className: 'qubely-field-dimension qubely-field ' + (responsive ? 'qubely-responsive' : '') },
                React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
                    label && React.createElement(
                        'div',
                        null,
                        React.createElement(
                            'label',
                            { htmlFor: 'input' },
                            label
                        )
                    ),
                    responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                            onDeviceChange(val);
                        } }),
                    unit && React.createElement(
                        'div',
                        { className: 'qubely-unit-btn-group qubely-ml-auto' },
                        ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em', '%']).map(function (value) {
                            return React.createElement(
                                'button',
                                { className: _this2.props.value && value == _this2.props.value.unit ? 'active' : '', onClick: function onClick() {
                                        _this2.setSettings(value, 'unit');
                                    } },
                                value
                            );
                        })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: "qubely-dimension-input-group" + (!this.props.noLock ? ' hasLock' : '') },
                        ['top', 'right', 'bottom', 'left'].map(function (val, index) {
                            return React.createElement(
                                'span',
                                null,
                                React.createElement('input', _extends({ type: 'number' }, (typeof min === 'undefined' ? 'undefined' : _typeof(min)) != undefined ? { min: min } : '', max ? { max: max } : '', { value: _this2._filterValue(val),
                                    onChange: function onChange(v) {
                                        _this2.setSettings(v.target.value, val);
                                        if (clientId) {
                                            $('#block-' + clientId + ' .qubely-section').addClass('active');
                                        }
                                    },
                                    onBlur: function onBlur(v) {
                                        if (clientId) {
                                            $('#block-' + clientId + ' .qubely-section').removeClass('active');
                                        }
                                    } })),
                                React.createElement(
                                    'span',
                                    null,
                                    _this2.props.dataLabel ? _this2.props.dataLabel[index] : val
                                )
                            );
                        }),
                        !this.props.noLock && React.createElement(
                            'button',
                            { className: (this.state.lock ? 'active ' : '') + 'qubely-button', onClick: function onClick() {
                                    return _this2.setState({ lock: !_this2.state.lock });
                                } },
                            this.state.lock ? React.createElement('span', { className: 'fas fa-lock' }) : React.createElement('span', { className: 'fas fa-unlock' })
                        )
                    )
                )
            );
        }
    }]);

    return Dimension;
}(Component);

exports.default = Dimension;

/***/ }),

/***/ "./src/components/fields/DragDimension.js":
/*!************************************************!*\
  !*** ./src/components/fields/DragDimension.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/dragdimension.scss */ "./src/components/css/dragdimension.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;

var DragDimension = function (_Component) {
    _inherits(DragDimension, _Component);

    function DragDimension(props) {
        _classCallCheck(this, DragDimension);

        var _this = _possibleConstructorReturn(this, (DragDimension.__proto__ || Object.getPrototypeOf(DragDimension)).apply(this, arguments));

        _this.state = {
            defaultValue: { top: 0, bottom: 0, left: 0, right: 0, unit: 'px' },
            value: _extends({}, props.value),
            mousePosition: 'margin',
            direction: '',
            x: 0,
            y: 0,
            active: false,
            responseDevice: typeof props.responsive === 'undefined' ? 'md' : window.qubelyDevice,
            units: typeof props.units === 'undefined' ? 'px' : props.units[0],
            isPopover: null
        };
        return _this;
    }

    _createClass(DragDimension, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            window.addEventListener('mousemove', this.onDragOverAction.bind(this));
            window.addEventListener('mouseup', this.onDragStopAction.bind(this));
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            window.removeEventListener('mousemove', this.onDragOverAction.bind(this));
            window.removeEventListener('mouseup', this.onDragStopAction.bind(this));
        }
    }, {
        key: 'onDragOverAction',
        value: function onDragOverAction(event) {
            var _state = this.state,
                active = _state.active,
                x = _state.x,
                y = _state.y,
                direction = _state.direction,
                mousePosition = _state.mousePosition,
                responseDevice = _state.responseDevice,
                value = _state.value;
            var _props = this.props,
                responsive = _props.responsive,
                onChange = _props.onChange,
                uniqueId = _props.uniqueId;

            if (active === true) {
                event.preventDefault();
                if (typeof uniqueId !== 'undefined') {
                    $('.qubely-block-' + uniqueId).addClass(mousePosition + '-dragging');
                }

                var deviceEvent = event;
                var dimension = {};
                if (typeof responsive === 'undefined') {
                    dimension = value[mousePosition];
                } else {
                    dimension = typeof value[mousePosition][responseDevice] === 'undefined' ? {} : value[mousePosition][responseDevice];
                }

                if (direction === 'top') {
                    if (typeof dimension.top === 'undefined') {
                        dimension = _extends({}, dimension, { top: 0 });
                    }
                    dimension.top = mousePosition === 'padding' ? dimension.top + (deviceEvent.pageY - y) : dimension.top + (y - deviceEvent.pageY);
                }
                if (direction === 'bottom') {
                    if (typeof dimension.bottom === 'undefined') {
                        dimension = _extends({}, dimension, { bottom: 0 });
                    }
                    dimension.bottom = mousePosition === 'padding' ? dimension.bottom + (y - deviceEvent.pageY) : dimension.bottom + (deviceEvent.pageY - y);
                }
                if (direction === 'left') {
                    if (typeof dimension.left === 'undefined') {
                        dimension = _extends({}, dimension, { left: 0 });
                    }
                    dimension.left = mousePosition === 'padding' ? dimension.left + (deviceEvent.pageX - x) : dimension.left + (x - deviceEvent.pageX);
                }
                if (direction === 'right') {
                    if (typeof dimension.right === 'undefined') {
                        dimension = _extends({}, dimension, { right: 0 });
                    }
                    dimension.right = mousePosition === 'padding' ? dimension.right + (x - deviceEvent.pageX) : dimension.right + (deviceEvent.pageX - x);
                }
                // Padding will always positive number
                if (mousePosition === 'padding') {
                    dimension.top = dimension.top < 0 ? 0 : dimension.top;
                    dimension.left = dimension.left < 0 ? 0 : dimension.left;
                    dimension.right = dimension.right < 0 ? 0 : dimension.right;
                    dimension.bottom = dimension.bottom < 0 ? 0 : dimension.bottom;
                }
                var currentValue = typeof responsive === 'undefined' ? _extends({}, dimension) : _defineProperty({}, responseDevice, _extends({}, dimension));
                value[mousePosition] = _extends({}, value[mousePosition], currentValue);
                onChange(value);

                this.setState({
                    value: _extends({}, value),
                    x: deviceEvent.pageX,
                    y: deviceEvent.pageY,
                    direction: direction
                });
            }
        }
    }, {
        key: 'onDragStopAction',
        value: function onDragStopAction(event) {
            var mousePosition = this.state.mousePosition;
            var uniqueId = this.props.uniqueId;

            if (typeof uniqueId !== 'undefined') {
                $('.qubely-block-' + uniqueId).removeClass(mousePosition + '-dragging');
            }
            this.setState({ active: false, x: 0, y: 0 });
        }
    }, {
        key: 'onMouseDownAction',
        value: function onMouseDownAction(direction, event) {
            if (event.button === 0) {
                this.setState({
                    active: true,
                    x: event.pageX,
                    y: event.pageY,
                    direction: direction
                });
            }
        }
    }, {
        key: 'onMouseEnter',
        value: function onMouseEnter(position, event) {
            var _state2 = this.state,
                active = _state2.active,
                isPopover = _state2.isPopover;

            if (active === false && isPopover === null) {
                this.setState({ mousePosition: position });
            }
        }
    }, {
        key: 'changeUnit',
        value: function changeUnit(unit, event) {
            var _state3 = this.state,
                responseDevice = _state3.responseDevice,
                value = _state3.value;
            var _props2 = this.props,
                responsive = _props2.responsive,
                onChange = _props2.onChange;

            var mousePositions = ['margin', 'padding'];
            mousePositions.map(function (mousePosition) {
                var dimension = {};
                if (typeof responsive === 'undefined') {
                    dimension = value[mousePosition];
                } else {
                    dimension = typeof value[mousePosition][responseDevice] === 'undefined' ? {} : value[mousePosition][responseDevice];
                }
                if (typeof dimension.unit === 'undefined') {
                    dimension = _extends({}, dimension, { unit: unit });
                } else {
                    dimension.unit = unit;
                }
                var currentValue = typeof responsive === 'undefined' ? _extends({}, dimension) : _defineProperty({}, responseDevice, _extends({}, dimension));
                value[mousePosition] = _extends({}, value[mousePosition], currentValue);
            });
            onChange(value);
            this.setState({
                value: _extends({}, value)
            });
        }
    }, {
        key: 'onChangeDimension',
        value: function onChangeDimension(fieldValue, direction) {
            var _state4 = this.state,
                mousePosition = _state4.mousePosition,
                responseDevice = _state4.responseDevice,
                value = _state4.value;
            var _props3 = this.props,
                responsive = _props3.responsive,
                onChange = _props3.onChange;

            var dimension = {};
            if (typeof responsive === 'undefined') {
                dimension = value[mousePosition];
            } else {
                dimension = typeof value[mousePosition][responseDevice] === 'undefined' ? {} : value[mousePosition][responseDevice];
            }

            var targetValue = fieldValue === '' ? 0 : parseInt(fieldValue);

            if (mousePosition === 'padding') targetValue = targetValue < 0 ? 0 : targetValue;

            if (direction === 'top') {
                if (typeof dimension.top === 'undefined') {
                    dimension = _extends({}, dimension, { top: 0 });
                }
                dimension.top = targetValue;
            }
            if (direction === 'bottom') {
                if (typeof dimension.bottom === 'undefined') {
                    dimension = _extends({}, dimension, { bottom: 0 });
                }
                dimension.bottom = targetValue;
            }
            if (direction === 'left') {
                if (typeof dimension.left === 'undefined') {
                    dimension = _extends({}, dimension, { left: 0 });
                }
                dimension.left = targetValue;
            }
            if (direction === 'right') {
                if (typeof dimension.right === 'undefined') {
                    dimension = _extends({}, dimension, { right: 0 });
                }
                dimension.right = targetValue;
            }
            var unit = typeof dimension.unit === 'undefined' ? 'px' : dimension.unit;
            dimension = _extends({}, dimension, { unit: unit });
            var currentValue = typeof responsive === 'undefined' ? _extends({}, dimension) : _defineProperty({}, responseDevice, _extends({}, dimension));
            value[mousePosition] = _extends({}, value[mousePosition], currentValue);
            onChange(value);
            this.setState({
                value: _extends({}, value)
            });
        }
    }, {
        key: 'changeInput',
        value: function changeInput(type, val, position) {
            var _this2 = this;

            return React.createElement('input', {
                type: 'number',
                min: type == 'margin' ? -220 : 0,
                max: 220,
                step: 1,
                value: val,
                onFocus: function onFocus() {
                    return $('.qubely-block-' + _this2.props.uniqueId).addClass(type + '-input-dragging');
                },
                onBlur: function onBlur() {
                    return $('.qubely-block-' + _this2.props.uniqueId).removeClass(type + '-input-dragging');
                },
                onChange: function onChange(e) {
                    return _this2.onChangeDimension(e.target.value, position);
                } });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state5 = this.state,
                responseDevice = _state5.responseDevice,
                defaultValue = _state5.defaultValue,
                _state5$value = _state5.value,
                margin = _state5$value.margin,
                padding = _state5$value.padding,
                units = _state5.units,
                mousePosition = _state5.mousePosition,
                direction = _state5.direction,
                isPopover = _state5.isPopover;
            var _props4 = this.props,
                responsive = _props4.responsive,
                label = _props4.label,
                unit = _props4.unit;

            var activeMargin = typeof responsive === 'undefined' ? margin : margin[responseDevice];
            activeMargin = _extends({}, defaultValue, activeMargin);
            var activePadding = typeof responsive === 'undefined' ? padding : padding[responseDevice];
            activePadding = _extends({}, defaultValue, activePadding);

            var isMarginDrag = mousePosition === "margin" ? 'qubely-drag-' + mousePosition + '-' + direction : '';
            var isPaddingDrag = mousePosition === "padding" ? 'qubely-drag-' + mousePosition + '-' + direction : '';

            return React.createElement(
                'div',
                { className: 'qubely-drag-dimension qubely-field' },
                React.createElement(
                    'div',
                    { className: 'qubely-field qubely-field-border qubely-d-flex qubely-align-center' },
                    label && React.createElement(
                        'div',
                        null,
                        label
                    ),
                    this.props.responsive && React.createElement(_Device2.default, { className: 'qubely-ml-10', onChange: function onChange(val) {
                            return _this3.setState({ responseDevice: val });
                        } }),
                    unit && React.createElement(
                        'div',
                        { className: 'qubely-unit-btn-group qubely-ml-auto' },
                        ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em', '%']).map(function (value) {
                            return React.createElement(
                                'button',
                                { className: value == activePadding.unit ? 'active' : '', onClick: function onClick() {
                                        return _this3.changeUnit(value);
                                    } },
                                value
                            );
                        })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: 'qubely-drag-dimension-wrap' },
                        React.createElement(
                            'div',
                            { className: 'qubely-dimension-margin-wrap' },
                            React.createElement(
                                'div',
                                {
                                    className: "qubely-dimension-margin " + isMarginDrag,
                                    'data-text': __('margin'),
                                    onMouseEnter: this.onMouseEnter.bind(this, 'margin') },
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item margin-left', onMouseDown: this.onMouseDownAction.bind(this, 'left') },
                                    React.createElement('span', null),
                                    this.changeInput('margin', activeMargin.left, 'left')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item margin-top', onMouseDown: this.onMouseDownAction.bind(this, 'top') },
                                    React.createElement('span', null),
                                    this.changeInput('margin', activeMargin.top, 'top')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item margin-bottom', onMouseDown: this.onMouseDownAction.bind(this, 'bottom') },
                                    React.createElement('span', null),
                                    this.changeInput('margin', activeMargin.bottom, 'bottom')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item margin-right', onMouseDown: this.onMouseDownAction.bind(this, 'right') },
                                    React.createElement('span', null),
                                    this.changeInput('margin', activeMargin.right, 'right')
                                )
                            ),
                            React.createElement(
                                'div',
                                {
                                    className: "qubely-dimension-padding " + isPaddingDrag,
                                    'data-text': __('padding'),
                                    onMouseEnter: this.onMouseEnter.bind(this, 'padding')
                                },
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item padding-left', onMouseDown: this.onMouseDownAction.bind(this, 'left') },
                                    React.createElement('span', null),
                                    this.changeInput('padding', activePadding.left, 'left')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item padding-top', onMouseDown: this.onMouseDownAction.bind(this, 'top') },
                                    React.createElement('span', null),
                                    this.changeInput('padding', activePadding.top, 'top')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item padding-bottom', onMouseDown: this.onMouseDownAction.bind(this, 'bottom') },
                                    React.createElement('span', null),
                                    this.changeInput('padding', activePadding.bottom, 'bottom')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'dimension-item padding-right', onMouseDown: this.onMouseDownAction.bind(this, 'right') },
                                    React.createElement('span', null),
                                    this.changeInput('padding', activePadding.right, 'right')
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return DragDimension;
}(Component);

exports.default = DragDimension;

/***/ }),

/***/ "./src/components/fields/DropDown.js":
/*!*******************************************!*\
  !*** ./src/components/fields/DropDown.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = function (_ref) {
    var label = _ref.label,
        enableSearch = _ref.enableSearch,
        defaultOptionsLabel = _ref.defaultOptionsLabel,
        value = _ref.value,
        options = _ref.options,
        onChange = _ref.onChange;

    var _useState = useState(''),
        _useState2 = _slicedToArray(_useState, 2),
        filteredText = _useState2[0],
        setFilteredText = _useState2[1];

    var _useState3 = useState(false),
        _useState4 = _slicedToArray(_useState3, 2),
        showOptions = _useState4[0],
        toggleOptions = _useState4[1];

    var qubelySelectedOptions = useRef(null);
    var qubelyOptionsWraper = useRef(null);
    var filterOut = function filterOut(option) {
        var flag = true,
            index = 0;
        while (index < value.length) {
            if (value[index].value === option) {
                flag = false;
                break;
            }
            index++;
        }
        return flag;
    };

    var _useState5 = useState(options.filter(function (option) {
        return filterOut(option.value);
    })),
        _useState6 = _slicedToArray(_useState5, 2),
        avaiableOptions = _useState6[0],
        setOptions = _useState6[1];

    var handleClickOutside = function handleClickOutside(event) {
        if (showOptions) {
            if (!(qubelyOptionsWraper.current.contains(event.target) || qubelySelectedOptions.current.contains(event.target))) {
                toggleOptions(false);
            }
        }
    };
    useEffect(function () {
        document.addEventListener('mousedown', handleClickOutside);
        return function () {
            return document.removeEventListener('mousedown', handleClickOutside);
        };
    });

    useEffect(function () {
        setOptions(options.filter(function (option) {
            return filterOut(option.value);
        }));
    }, [options]);

    var findArrayIndex = function findArrayIndex(value) {
        var index = 0;
        while (index < options.length) {
            if (options[index].value == value) {
                break;
            }
            index++;
        }
        return index;
    };

    var renderSelectedOptions = function renderSelectedOptions() {
        return value.map(function (_ref2, index) {
            var label = _ref2.label;

            return React.createElement(
                'span',
                { className: 'qubely-dropdown-selected-value' },
                React.createElement(
                    'span',
                    { className: 'qubely-selected-value-label', role: 'option', 'aria-selected': 'true' },
                    '   ',
                    label,
                    '  '
                ),
                React.createElement(
                    'span',
                    { className: 'qubely-selected-value-icon', 'aria-hidden': 'true',
                        onClick: function onClick() {
                            var newTaxonomies = JSON.parse(JSON.stringify(value));
                            newTaxonomies.splice(index, 1);
                            onChange(newTaxonomies);
                        }
                    },
                    ' X'
                )
            );
        });
    };

    return React.createElement(
        'div',
        { className: 'qubely-field qubely-field-dropdown' },
        React.createElement(
            'label',
            null,
            __(label)
        ),
        React.createElement(
            'div',
            { className: 'qubely-dropdown', ref: qubelySelectedOptions,
                onClick: function onClick() {
                    return !showOptions && toggleOptions(true);
                } },
            React.createElement(
                'span',
                { className: 'qubely-dropdown-selected-options-wrapper' },
                value.length ? renderSelectedOptions() : React.createElement(
                    'span',
                    { className: 'qubely-selected-value-label', role: 'option', 'aria-selected': 'true' },
                    __(defaultOptionsLabel) || __('Default')
                ),
                enableSearch && showOptions && React.createElement('input', {
                    type: 'text',
                    className: 'qubely-dropdown-options-search',
                    placeholder: __('Search...'),
                    value: filteredText,
                    onKeyPress: function onKeyPress(event) {
                        if (event.key === 'Enter') {
                            toggleOptions(false);
                            setFilteredText('');
                            onChange([].concat(_toConsumableArray(value), [options[findArrayIndex(avaiableOptions.filter(function (option) {
                                return !event.target.value ? true : option.label.toLowerCase().search(event.target.value.toLowerCase()) !== -1;
                            })[0].value)]]));
                        }
                    },
                    onChange: function onChange(event) {
                        return setFilteredText(event.target.value);
                    }
                })
            ),
            React.createElement(
                'span',
                { className: 'qubely-dropdown-icon', onClick: function onClick() {
                        return showOptions && toggleOptions(false);
                    } },
                ' ',
                showOptions ? _icons2.default.arrow_up : _icons2.default.arrow_down,
                '  '
            )
        ),
        showOptions && React.createElement(
            'div',
            { className: 'qubely-dropdown-options-wrapper', ref: qubelyOptionsWraper },
            React.createElement(
                'div',
                { className: 'qubely-dropdown-options' },
                options.length > 0 ? avaiableOptions.filter(function (option) {
                    return !filteredText ? true : option.label.toLowerCase().search(filteredText.toLowerCase()) !== -1;
                }).map(function (option, index) {
                    return React.createElement(
                        'div',
                        { className: 'qubely-dropdown-option',
                            id: 'qubely-dropdown-option-' + (index + 1),
                            onClick: function onClick() {
                                toggleOptions(false);
                                setFilteredText('');
                                onChange([].concat(_toConsumableArray(value), [option]));
                            }
                        },
                        option.label
                    );
                }) : React.createElement(
                    'div',
                    { className: 'qubely-dropdown-option no-match', onClick: function onClick() {
                            return toggleOptions(false);
                        } },
                    '  No matched Option  '
                )
            )
        )
    );
};

__webpack_require__(/*! ../css/dropdown.scss */ "./src/components/css/dropdown.scss");

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var __ = wp.i18n.__;
var RichText = wp.blockEditor.RichText;
var _wp$element = wp.element,
    useState = _wp$element.useState,
    useEffect = _wp$element.useEffect,
    useRef = _wp$element.useRef;

/***/ }),

/***/ "./src/components/fields/GlobalSettings.js":
/*!*************************************************!*\
  !*** ./src/components/fields/GlobalSettings.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.globalAttributes = undefined;
exports.globalSettingsPanel = globalSettingsPanel;
exports.animationSettings = animationSettings;
exports.interactionSettings = interactionSettings;

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

var _Separator = __webpack_require__(/*! ./Separator */ "./src/components/fields/Separator.js");

var _Separator2 = _interopRequireDefault(_Separator);

var _Animation = __webpack_require__(/*! ./Animation */ "./src/components/fields/Animation.js");

var _Animation2 = _interopRequireDefault(_Animation);

var _Interaction = __webpack_require__(/*! ./Interaction */ "./src/components/fields/Interaction.js");

var _Interaction2 = _interopRequireDefault(_Interaction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var InspectorAdvancedControls = wp.blockEditor.InspectorAdvancedControls;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    TextareaControl = _wp$components.TextareaControl,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl;

//attributes 

var globalAttributes = exports.globalAttributes = {
    animation: { type: 'object', default: {} },
    interaction: { type: 'object', default: {} },
    enablePosition: { type: 'boolean', default: false },
    selectPosition: { type: 'string', default: 'relative', style: [{ selector: '{{QUBELY}} {position:{{selectPosition}};}' }] },
    positionXaxis: { type: 'object', default: { md: '', unit: 'px' }, style: [{ selector: '{{QUBELY}} {left:{{positionXaxis}};}' }] },
    positionYaxis: { type: 'object', default: { md: '', unit: 'px' }, style: [{ selector: '{{QUBELY}} {top:{{positionYaxis}};}' }] },
    globalZindex: { type: 'string', default: '0', style: [{ selector: '{{QUBELY}} {z-index:{{globalZindex}};}' }] },
    hideTablet: { type: 'boolean', default: false, style: [{ selector: '{{QUBELY}}{display:none;}' }] },
    hideMobile: { type: 'boolean', default: false, style: [{ selector: '{{QUBELY}}{display:none;}' }] },
    globalCss: { type: 'string', default: '', style: [{ selector: '' }] }
};

function globalSettingsPanel(enablePosition, selectPosition, positionXaxis, positionYaxis, globalZindex, hideTablet, hideMobile, globalCss, setAttributes) {
    var isReturn = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;


    var Output = React.createElement(
        Fragment,
        null,
        React.createElement(_Toggle2.default, {
            label: __('Enable Custom Position'),
            value: enablePosition,
            onChange: function onChange() {
                return setAttributes({ enablePosition: !enablePosition });
            }
        }),
        enablePosition && React.createElement(
            Fragment,
            null,
            React.createElement(SelectControl, {
                label: __('Select Position'),
                value: selectPosition || '',
                options: [{ label: __('Relative'), value: 'relative' }, { label: __('Absolute'), value: 'absolute' }, { label: __('Fixed'), value: 'fixed' }],
                onChange: function onChange(val) {
                    return setAttributes({ selectPosition: val });
                }
            }),
            React.createElement(_Range2.default, {
                label: __('From X-axis'),
                min: -2000,
                max: 2000,
                step: 1,
                unit: ['px', 'em', '%'],
                responsive: true
                // device={this.state.device}
                // onDeviceChange={value => this.setState({ device: value })}
                , value: positionXaxis,
                onChange: function onChange(value) {
                    return setAttributes({ positionXaxis: value });
                }
            }),
            React.createElement(_Range2.default, {
                label: __('From Y-axis'),
                min: -2000,
                max: 2000,
                step: 1,
                unit: ['px', 'em', '%'],
                responsive: true
                // device={this.state.device}
                // onDeviceChange={value => this.setState({ device: value })}
                , value: positionYaxis,
                onChange: function onChange(value) {
                    return setAttributes({ positionYaxis: value });
                }
            })
        ),
        React.createElement(_Range2.default, {
            label: __('Z-Index'),
            min: 1,
            max: 10000,
            value: globalZindex,
            onChange: function onChange(value) {
                return setAttributes({ globalZindex: value });
            }
        }),
        React.createElement(_Toggle2.default, {
            label: __('Hide on Tablet'),
            value: hideTablet,
            onChange: function onChange() {
                return setAttributes({ hideTablet: !hideTablet });
            }
        }),
        React.createElement(_Toggle2.default, {
            label: __('Hide on Phone'),
            value: hideMobile,
            onChange: function onChange() {
                return setAttributes({ hideMobile: !hideMobile });
            } }),
        React.createElement(_Separator2.default, {
            label: __('Block Raw CSS') }),
        React.createElement(TextareaControl, {
            value: globalCss,
            rows: 5,
            placeholder: __('Use {{QUBELY}} before the selector to wrap element. Otherwise it works globally.'),
            onChange: function onChange(val) {
                return setAttributes({ globalCss: val });
            } })
    );

    return isReturn ? Output : React.createElement(
        InspectorAdvancedControls,
        null,
        Output
    );
}

function animationSettings(uniqueId, animation, setAttributes) {
    return React.createElement(
        PanelBody,
        { title: __('Animation'), initialOpen: false },
        React.createElement(_Animation2.default, {
            uniqueId: uniqueId,
            label: __('Animation'),
            value: animation,
            onChange: function onChange(value) {
                return setAttributes({ animation: value });
            } })
    );
}

function interactionSettings(uniqueId, interaction, setAttributes) {
    return React.createElement(
        PanelBody,
        { title: __("Interaction"), initialOpen: false },
        React.createElement(_Interaction2.default, {
            uniqueId: uniqueId,
            label: __('Interaction'),
            value: interaction,
            onChange: function onChange(value) {
                return setAttributes({ interaction: value });
            }
        })
    );
}

/***/ }),

/***/ "./src/components/fields/Gradient.js":
/*!*******************************************!*\
  !*** ./src/components/fields/Gradient.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Select = __webpack_require__(/*! ./Select */ "./src/components/fields/Select.js");

var _Select2 = _interopRequireDefault(_Select);

__webpack_require__(/*! ../css/gradient.scss */ "./src/components/css/gradient.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    Dropdown = _wp$components.Dropdown,
    ColorPicker = _wp$components.ColorPicker,
    Tooltip = _wp$components.Tooltip;


var defaultState = {
    color1: '#16d03e',
    color2: '#1f91f3',
    type: 'linear',
    direction: '90',
    start: 5,
    stop: 80,
    radial: 'center',
    clip: false
};

var Gradient = function (_Component) {
    _inherits(Gradient, _Component);

    function Gradient() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Gradient);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Gradient.__proto__ || Object.getPrototypeOf(Gradient)).call.apply(_ref, [this].concat(args))), _this), _this.renderColorPicker = function (colorType, defaultColor) {
            var value = _this.props.value;

            return React.createElement(
                Fragment,
                null,
                React.createElement(ColorPicker, { color: value[colorType] || defaultColor, onChangeComplete: function onChangeComplete(val) {
                        if (val.rgb) {
                            _this.setSettings(val.rgb.a != 1 ? 'rgba(' + val.rgb.r + ', ' + val.rgb.g + ', ' + val.rgb.b + ', ' + val.rgb.a + ')' : val.hex, colorType);
                        }
                    } }),
                React.createElement(
                    "div",
                    { className: "qubely-rgba-palette", style: { padding: '0px 0px 15px 15px' } },
                    _this.defColors().map(function (color) {
                        return React.createElement("button", { style: { color: color }, onClick: function onClick() {
                                return _this.setSettings(color, colorType);
                            } });
                    })
                )
            );
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Gradient, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var value = this.props.value;

            if (!Object.keys(value).length > 0) {
                this.props.onChange(defaultState);
            }
        }
    }, {
        key: "defColors",
        value: function defColors() {
            var val = [];
            var colors = window.globalData.settings;
            val.push(colors.colorPreset1 || qubely_admin.palette[0]);
            val.push(colors.colorPreset2 || qubely_admin.palette[1]);
            val.push(colors.colorPreset3 || qubely_admin.palette[2]);
            val.push(colors.colorPreset4 || qubely_admin.palette[3]);
            val.push(colors.colorPreset5 || qubely_admin.palette[4]);
            val.push(colors.colorPreset6 || qubely_admin.palette[5]);
            return val;
        }
    }, {
        key: "setSettings",
        value: function setSettings(value, type) {
            this.props.onChange(Object.assign({}, this.props.value, _defineProperty({}, type, value)));
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this,
                _React$createElement;

            var value = this.props.value;

            var gradientColors = [['color1', __('Color 1'), '#cccccc', 'left'], ['color2', __('Color 2'), '#1f91f3', 'right']];

            return React.createElement(
                "div",
                { className: "qubely-gradient qubely-field inline" },
                React.createElement(
                    "div",
                    { className: "qubely-field-gradient-preview qubely-mb-20", style: _defineProperty({ background: '-webkit-linear-gradient(' + (value.direction > 90 ? 90 - value.direction + 360 : 90 - value.direction) + 'deg,' + value.color1 + ' ' + value.start + '%, ' + value.color2 + ' ' + value.stop + '%' + ')' }, "background", 'linear-gradient(' + value.direction + 'deg,' + value.color1 + ' ' + value.start + '%, ' + value.color2 + ' ' + value.stop + '%' + ')') },
                    gradientColors.map(function (gradientColor) {
                        var _gradientColor = _slicedToArray(gradientColor, 4),
                            color = _gradientColor[0],
                            label = _gradientColor[1],
                            defaultColor = _gradientColor[2],
                            customClassName = _gradientColor[3];

                        return React.createElement(Dropdown, {
                            position: "bottom left",
                            className: "qubely-gradient-color gradient-color-position-" + customClassName,
                            contentClassName: "qubely-gradient-color-picker",
                            renderToggle: function renderToggle(_ref3) {
                                var isOpen = _ref3.isOpen,
                                    onToggle = _ref3.onToggle;
                                return React.createElement(
                                    "span",
                                    { className: "qubely-color-picker-container qubely-position-" + customClassName },
                                    React.createElement(
                                        Tooltip,
                                        { text: label },
                                        React.createElement("span", { className: "qubely-color-picker", style: { backgroundColor: value[color] || defaultColor }, isPrimary: true, onClick: onToggle, "aria-expanded": isOpen })
                                    )
                                );
                            },

                            renderContent: function renderContent() {
                                return _this2.renderColorPicker(color, defaultColor);
                            }
                        });
                    })
                ),
                React.createElement(
                    "div",
                    { className: "qubely-d-flex qubely-align-center qubely-mb-20" },
                    React.createElement(
                        "div",
                        null,
                        __('Gradient Type')
                    ),
                    React.createElement(
                        "div",
                        { className: "qubely-field-button-list qubely-ml-auto" },
                        ['linear', 'radial'].map(function (data, index) {
                            return React.createElement(
                                "button",
                                { className: (value.type == data ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                        return _this2.setSettings(data, 'type');
                                    } },
                                data == 'linear' ? React.createElement(
                                    Tooltip,
                                    { text: __('Linear') },
                                    value.type == 'linear' ? React.createElement(
                                        "svg",
                                        { width: "18", height: "17", viewBox: "0 0 18 17", xmlns: "http://www.w3.org/2000/svg" },
                                        React.createElement(
                                            "defs",
                                            null,
                                            React.createElement(
                                                "linearGradient",
                                                { x1: "50%", y1: "0%", x2: "50%", y2: "100%", id: "a" },
                                                React.createElement("stop", { "stop-color": "#E7E8EB", offset: "0%" }),
                                                React.createElement("stop", { "stop-color": "#2184F9", offset: "100%" })
                                            )
                                        ),
                                        React.createElement(
                                            "g",
                                            { transform: "translate(.526)", fill: "none" },
                                            React.createElement("rect", { stroke: "#2184F9", x: ".5", y: ".5", width: "16", height: "16", rx: "2" }),
                                            React.createElement("rect", { fill: "url(#a)", x: "3.091", y: "3.091", width: "10.818", height: "10.818", rx: "1" })
                                        )
                                    ) : React.createElement(
                                        "svg",
                                        { width: "17", height: "17", viewBox: "0 0 17 17", xmlns: "http://www.w3.org/2000/svg" },
                                        React.createElement(
                                            "defs",
                                            null,
                                            React.createElement(
                                                "linearGradient",
                                                { x1: "50%", y1: "0%", x2: "50%", y2: "100%", id: "b" },
                                                React.createElement("stop", { "stop-color": "#fff", offset: "0%" }),
                                                React.createElement("stop", { "stop-color": "#D0D1D3", offset: "100%" })
                                            )
                                        ),
                                        React.createElement(
                                            "g",
                                            { transform: "translate(0 0)", fill: "none" },
                                            React.createElement("rect", { stroke: "#D0D1D3", x: ".5", y: ".5", width: "16", height: "16", rx: "2" }),
                                            React.createElement("rect", { fill: "url(#b)", x: "3.091", y: "3.091", width: "10.818", height: "10.818", rx: "1" })
                                        )
                                    )
                                ) : React.createElement(
                                    Tooltip,
                                    { text: __('Radial') },
                                    value.type == 'radial' ? React.createElement(
                                        "svg",
                                        { width: "17", height: "17", viewBox: "0 0 17 17", xmlns: "http://www.w3.org/2000/svg" },
                                        React.createElement(
                                            "defs",
                                            null,
                                            React.createElement(
                                                "radialGradient",
                                                { fx: "50%", fy: "50%", r: "49.832%", gradientTransform: "matrix(0 1 -1.015 0 1.007 0)", id: "c" },
                                                React.createElement("stop", { "stop-color": "#fff", offset: "0%" }),
                                                React.createElement("stop", { "stop-color": "#2184F9", offset: "100%" })
                                            )
                                        ),
                                        React.createElement(
                                            "g",
                                            { transform: "translate(0 0)", fill: "none" },
                                            React.createElement("rect", { stroke: "#2184F9", x: ".5", y: ".5", width: "16", height: "16", rx: "2" }),
                                            React.createElement("rect", { fill: "#2184F9", x: "3.091", y: "3.091", width: "10.818", height: "10.818", rx: "1" }),
                                            React.createElement("circle", { fill: "url(#c)", cx: "8.5", cy: "8.5", r: "5.409" })
                                        )
                                    ) : React.createElement(
                                        "svg",
                                        { width: "17", height: "17", viewBox: "0 0 17 17", xmlns: "http://www.w3.org/2000/svg" },
                                        React.createElement(
                                            "defs",
                                            null,
                                            React.createElement(
                                                "radialGradient",
                                                { fx: "50%", fy: "50%", gradientTransform: "matrix(0 1 -1.015 0 1.007 0)", id: "d" },
                                                React.createElement("stop", { "stop-color": "#fff", offset: "0%" }),
                                                React.createElement("stop", { "stop-color": "#D0D1D3", offset: "100%" })
                                            )
                                        ),
                                        React.createElement(
                                            "g",
                                            { transform: "translate(0 0)", fill: "none" },
                                            React.createElement("rect", { stroke: "#D0D1D3", x: ".5", y: ".5", width: "16", height: "16", rx: "2" }),
                                            React.createElement("rect", { fill: "#D0D1D3", x: "3.091", y: "3.091", width: "10.818", height: "10.818", rx: "1" }),
                                            React.createElement("circle", { fill: "url(#d)", cx: "8.5", cy: "8.5", r: "5.409" })
                                        )
                                    )
                                )
                            );
                        })
                    )
                ),
                value.type == 'radial' ? React.createElement(_Select2.default, (_React$createElement = { label: __('Gradient Position')
                }, _defineProperty(_React$createElement, "label", __('Radial Pointer')), _defineProperty(_React$createElement, "value", value.radial), _defineProperty(_React$createElement, "className", value.type && value.type == 'radial' ? 'half' : ''), _defineProperty(_React$createElement, "value", value.radial ? value.radial : 'center'), _defineProperty(_React$createElement, "options", ['center', 'top left', 'top', 'top right', 'right', 'bottom right', 'bottom', 'bottom left', 'left']), _defineProperty(_React$createElement, "onChange", function onChange(radial) {
                    return _this2.setSettings(radial, 'radial');
                }), _React$createElement)) : React.createElement(_Range2.default, {
                    label: __('Gradient Angle'),
                    min: 0,
                    max: 360,
                    step: 1,
                    beforeIcon: "image-rotate",
                    allowReset: true,
                    value: value.direction || 90,
                    onChange: function onChange(direction) {
                        return _this2.setSettings(direction, 'direction');
                    }
                }),
                React.createElement(_Range2.default, {
                    label: __('Color 1 Stop'),
                    value: value.start || 5,
                    onChange: function onChange(start) {
                        return _this2.setSettings(start, 'start');
                    },
                    min: 0,
                    max: 100,
                    step: 1,
                    beforeIcon: "arrow-up-alt",
                    allowReset: true
                }),
                React.createElement(_Range2.default, {
                    label: __('Color 2 Start'),
                    value: value.stop || 80,
                    onChange: function onChange(stop) {
                        return _this2.setSettings(stop, 'stop');
                    },
                    min: 0,
                    max: 100,
                    step: 1,
                    beforeIcon: "arrow-down-alt",
                    allowReset: true
                })
            );
        }
    }]);

    return Gradient;
}(Component);

exports.default = Gradient;

/***/ }),

/***/ "./src/components/fields/Headings.js":
/*!*******************************************!*\
  !*** ./src/components/fields/Headings.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;

var Headings = function (_Component) {
	_inherits(Headings, _Component);

	function Headings() {
		_classCallCheck(this, Headings);

		return _possibleConstructorReturn(this, (Headings.__proto__ || Object.getPrototypeOf(Headings)).apply(this, arguments));
	}

	_createClass(Headings, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    selectedLevel = _props.selectedLevel,
			    onChange = _props.onChange;

			return React.createElement(
				"div",
				{ className: "qubely-field qubely-field-headings" },
				this.props.label && React.createElement(
					"label",
					null,
					this.props.label
				),
				React.createElement(
					"div",
					{ className: "qubely-field-button-list qubely-field-button-list-fluid" },
					[1, 2, 3, 4, 5, 6].map(function (data, index) {
						return React.createElement(
							"button",
							{ className: (selectedLevel == data ? 'active' : '') + ' qubely-button', onClick: function onClick() {
									return onChange(data);
								} },
							_icons2.default['h' + data]
						);
					})
				)
			);
		}
	}]);

	return Headings;
}(Component);

exports.default = Headings;

/***/ }),

/***/ "./src/components/fields/IconList.js":
/*!*******************************************!*\
  !*** ./src/components/fields/IconList.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/iconlist.scss */ "./src/components/css/iconlist.scss");

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

var _IconListData = __webpack_require__(/*! ./assets/IconListData */ "./src/components/fields/assets/IconListData.js");

var _IconListData2 = _interopRequireDefault(_IconListData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var IconList = function (_Component) {
    _inherits(IconList, _Component);

    function IconList(props) {
        _classCallCheck(this, IconList);

        var _this = _possibleConstructorReturn(this, (IconList.__proto__ || Object.getPrototypeOf(IconList)).call(this, props));

        _this.state = {
            isOpen: false,
            filterText: '',
            showIcons: false
        };
        return _this;
    }

    _createClass(IconList, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                disableToggle = _props.disableToggle,
                colorSettings = _props.colorSettings,
                iconColor = _props.iconColor,
                onColorChange = _props.onColorChange;
            var filterText = this.state.filterText;

            var finalData = [];
            if (filterText.length > 2) {
                _IconListData2.default.forEach(function (name) {
                    if (name.includes(filterText)) {
                        finalData.push(name);
                    }
                });
            } else {
                finalData = _IconListData2.default;
            }
            return React.createElement(
                'div',
                { className: 'qubely-field qubely-field-icon-list ' + (disableToggle ? '' : 'qubely-toggle-enabled') },
                this.props.label && React.createElement(
                    Fragment,
                    null,
                    !disableToggle ? React.createElement(_Toggle2.default, { label: this.props.label, className: 'qubely-icon-list-toggle', value: this.props.value ? true : false, onChange: function onChange() {
                            return _this2.props.onChange(_this2.props.value ? '' : ' ');
                        } }) : React.createElement(
                        'label',
                        null,
                        this.props.label
                    )
                ),
                colorSettings && React.createElement(_Color2.default, { label: __(' Color'), value: iconColor || '#ccc', onChange: function onChange(color) {
                        return onColorChange(color);
                    } }),
                (disableToggle || this.props.value != '') && React.createElement(
                    'div',
                    { className: 'qubely-icon-list-wrapper' },
                    React.createElement('input', { type: 'text', value: this.state.filterText, placeholder: 'Search...', onChange: function onChange(e) {
                            return _this2.setState({ filterText: e.target.value });
                        }, autoComplete: 'off' }),
                    React.createElement(
                        'div',
                        { className: 'qubely-icon-list-icons' },
                        finalData.map(function (name) {
                            return React.createElement(
                                'span',
                                { className: value == name ? 'qubely-active' : '', onClick: function onClick(e) {
                                        _this2.props.onChange(name);
                                    } },
                                React.createElement('span', { className: name })
                            );
                        })
                    )
                )
            );
        }
    }]);

    return IconList;
}(Component);

exports.default = IconList;

/***/ }),

/***/ "./src/components/fields/IconSelector.js":
/*!***********************************************!*\
  !*** ./src/components/fields/IconSelector.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var IconSelector = function (_Component) {
    _inherits(IconSelector, _Component);

    function IconSelector(props) {
        _classCallCheck(this, IconSelector);

        var _this = _possibleConstructorReturn(this, (IconSelector.__proto__ || Object.getPrototypeOf(IconSelector)).call(this, props));

        _this.state = { filterText: '' };
        return _this;
    }

    _createClass(IconSelector, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                icons = _props.icons,
                enableSearch = _props.enableSearch,
                onChange = _props.onChange;
            var filterText = this.state.filterText;

            var finalData = [];
            if (enableSearch && filterText.length >= 2) {
                finalData = icons.filter(function (item) {
                    return item.name.toLowerCase().search(filterText.toLowerCase()) !== -1;
                });
            } else {
                finalData = icons;
            }
            return React.createElement(
                "div",
                { className: "qubely-field qubely-field-icon-list qubely-field-icon-list-selector" },
                label && React.createElement(
                    "label",
                    null,
                    label
                ),
                React.createElement(
                    "div",
                    { className: "qubely-icon-list-wrapper" },
                    enableSearch && React.createElement("input", { type: "text", value: filterText, placeholder: "Search...", onChange: function onChange(e) {
                            return _this2.setState({ filterText: e.target.value });
                        }, autoComplete: "off" }),
                    React.createElement(
                        "div",
                        { className: "qubely-icon-list-icons" },
                        finalData.map(function (item) {
                            return React.createElement(
                                "span",
                                { className: value == item ? 'qubely-active' : '', onClick: function onClick() {
                                        return onChange(item);
                                    } },
                                React.createElement("span", { className: item.value })
                            );
                        })
                    )
                )
            );
        }
    }]);

    return IconSelector;
}(Component);

exports.default = IconSelector;

/***/ }),

/***/ "./src/components/fields/InnerPanel.js":
/*!*********************************************!*\
  !*** ./src/components/fields/InnerPanel.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/InnerPanel.scss */ "./src/components/css/InnerPanel.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var InnerPanel = function (_Component) {
    _inherits(InnerPanel, _Component);

    function InnerPanel(props) {
        _classCallCheck(this, InnerPanel);

        var _this = _possibleConstructorReturn(this, (InnerPanel.__proto__ || Object.getPrototypeOf(InnerPanel)).call(this, props));

        _this.state = { show: false };
        return _this;
    }

    _createClass(InnerPanel, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                children = _props.children,
                onTabChange = _props.onTabChange;


            return React.createElement(
                "div",
                { className: "qubely-field qubely-field-inner-panel" },
                this.props.title && React.createElement(
                    "div",
                    { className: "qubely-field-inner-panel-title", onClick: function onClick() {
                            return _this2.setState({ show: !_this2.state.show });
                        }, role: "button" },
                    React.createElement(
                        "span",
                        null,
                        this.props.title
                    ),
                    React.createElement("i", { className: "fas fa-chevron-" + (this.state.show ? 'down' : 'right') })
                ),
                this.state.show && React.createElement(
                    "div",
                    { className: "qubely-field-inner-panel-body" },
                    Array.isArray(children) ? children.map(function (item) {
                        return item;
                    }) : children
                )
            );
        }
    }]);

    return InnerPanel;
}(Component);

exports.default = InnerPanel;

/***/ }),

/***/ "./src/components/fields/Interaction.js":
/*!**********************************************!*\
  !*** ./src/components/fields/Interaction.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/interaction.scss */ "./src/components/css/interaction.scss");

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _ButtonGroup = __webpack_require__(/*! ./ButtonGroup */ "./src/components/fields/ButtonGroup.js");

var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

var _Timeline = __webpack_require__(/*! ../InteractionFields/Timeline */ "./src/components/InteractionFields/Timeline.js");

var _Timeline2 = _interopRequireDefault(_Timeline);

var _InteractionData = __webpack_require__(/*! ../InteractionFields/InteractionData */ "./src/components/InteractionFields/InteractionData.js");

var _InteractionParser = __webpack_require__(/*! ../InteractionFields/InteractionParser */ "./src/components/InteractionFields/InteractionParser.js");

var _HelperFunction = __webpack_require__(/*! ../HelperFunction */ "./src/components/HelperFunction.js");

var _deepCopy = __webpack_require__(/*! deep-copy */ "./node_modules/deep-copy/index.js");

var _deepCopy2 = _interopRequireDefault(_deepCopy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var Interaction = function (_Component) {
    _inherits(Interaction, _Component);

    function Interaction() {
        _classCallCheck(this, Interaction);

        var _this = _possibleConstructorReturn(this, (Interaction.__proto__ || Object.getPrototypeOf(Interaction)).call(this));

        _this.state = {
            liveMouseTilt: false,
            isTransformOrigin: false
        };
        return _this;
    }

    _createClass(Interaction, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.props.onChange(Object.assign({}, (0, _deepCopy2.default)(_InteractionData.defaultInteraction), this.props.value || {}));
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var block = $('.qubely-block-' + this.props.uniqueId);
            if (block.hasClass('qubely-block-interaction')) {
                block.removeClass('qubely-block-interaction').removeAttr('style');
            }
            if (this.v) {
                this.v.destroy();
                delete this.v;
            }
        }
    }, {
        key: '_saveAttributes',
        value: function _saveAttributes() {
            var parentKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            var _this2 = this;

            var key = arguments[1];
            var val = arguments[2];
            var _props = this.props,
                value = _props.value,
                uniqueId = _props.uniqueId;

            value[parentKey][key] = val;
            var data = Object.assign({}, this.props.value, value);
            this.props.onChange(data);

            if (parentKey === 'mouse_movement') {
                var mouse_movement = value.mouse_movement;

                if (typeof mouse_movement.enable !== 'undefined') {
                    if (mouse_movement.enable === false) {
                        if (this.v) {
                            this.v.destroy();
                            delete this.v;
                        }
                        if (this.state.liveMouseTilt) {
                            this.setState({ liveMouseTilt: false });
                        }
                    }
                    if (mouse_movement.enable && this.state.liveMouseTilt) {
                        setTimeout(function () {
                            var block = document.getElementsByClassName('qubely-block-' + uniqueId);
                            if (block.length > 0) {
                                block = block[0];
                                _this2.updateTiltAnimate(mouse_movement, block);
                            }
                        }, 500);
                    }
                }
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var _nextProps$value = nextProps.value,
                while_scroll_into_view = _nextProps$value.while_scroll_into_view,
                mouse_movement = _nextProps$value.mouse_movement,
                uniqueId = nextProps.uniqueId;

            if (typeof while_scroll_into_view.enable !== 'undefined' && while_scroll_into_view.enable === false) {
                var block = $('.qubely-block-' + uniqueId);
                if (block.hasClass('qubely-block-interaction')) {
                    block.removeClass('qubely-block-interaction').removeAttr('style');
                }
            }
        }
    }, {
        key: 'updateTiltAnimate',
        value: function updateTiltAnimate(mouse_movement, blockElement) {
            var opt = {
                speed: parseFloat(mouse_movement.mouse_tilt_speed) * 100,
                max: parseFloat(mouse_movement.mouse_tilt_max),
                reverse: mouse_movement.mouse_tilt_direction === 'opposite'
            };
            if (!this.v) {
                this.v = new _InteractionParser.MouseTilt(blockElement, opt);
            } else {
                this.v.destroy();
                this.v = new _InteractionParser.MouseTilt(blockElement, opt);
            }
        }
    }, {
        key: 'enableTiltAnimation',
        value: function enableTiltAnimation() {
            var _this3 = this;

            var _props2 = this.props,
                mouse_movement = _props2.value.mouse_movement,
                uniqueId = _props2.uniqueId;
            var liveMouseTilt = this.state.liveMouseTilt;

            if (liveMouseTilt === false) {
                setTimeout(function () {
                    var block = document.getElementsByClassName('qubely-block-' + uniqueId);
                    if (block.length > 0) {
                        block = block[0];
                        _this3.updateTiltAnimate(mouse_movement, block);
                    }
                }, 500);
            } else {
                if (this.v) {
                    this.v.destroy();
                    delete this.v;
                }
            }
            this.setState({ liveMouseTilt: !liveMouseTilt });
        }
    }, {
        key: 'selectAction',
        value: function selectAction(action) {
            var extract = { blur: true, opacity: true };
            var isTransformOrigin = this.state.isTransformOrigin;

            isTransformOrigin = extract[action.name] ? false : true;
            this.setState({ isTransformOrigin: isTransformOrigin });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var value = this.props.value;
            var while_scroll_into_view = value.while_scroll_into_view,
                mouse_movement = value.mouse_movement;

            var transform_origin = { x_offset: 'center', y_offset: 'center' };
            if (typeof while_scroll_into_view !== 'undefined') {
                transform_origin.x_offset = typeof while_scroll_into_view.transform_origin_x === 'undefined' ? 'center' : while_scroll_into_view.transform_origin_x;
                transform_origin.y_offset = typeof while_scroll_into_view.transform_origin_y === 'undefined' ? 'center' : while_scroll_into_view.transform_origin_y;
            }
            return React.createElement(
                Fragment,
                null,
                typeof while_scroll_into_view !== 'undefined' && React.createElement(
                    'div',
                    { className: 'qubely-interaction-view qubely-fields  qubely-field-alt' },
                    React.createElement(
                        'div',
                        { className: 'sppb-interaction-view-body' },
                        !qubely_admin.pro_enable ? React.createElement(
                            'div',
                            { className: 'qubely-field-pro-upgrade' },
                            React.createElement(
                                'div',
                                { className: 'qubely-logo' },
                                React.createElement('img', { src: qubely_admin.plugin + 'assets/img/Qubely-Q.svg', alt: __('Qubely-Q') })
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-upgrade-message' },
                                React.createElement(
                                    'span',
                                    { className: 'qubely-upgrade-message-title' },
                                    __('Upgrade to Pro')
                                ),
                                React.createElement(
                                    'span',
                                    { className: 'qubely-upgrade-message-description' },
                                    __('Get all features of post grid at your disposal by upgrading to pro version')
                                )
                            ),
                            React.createElement(
                                'a',
                                { className: 'qubely-upgrade-button', href: 'https://www.themeum.com/product/qubely', target: '_blank' },
                                __('Upgrade Now')
                            )
                        ) : React.createElement(
                            Fragment,
                            null,
                            React.createElement(_Toggle2.default, {
                                label: __('Enable'),
                                value: while_scroll_into_view.enable,
                                onChange: function onChange() {
                                    return _this4._saveAttributes('while_scroll_into_view', 'enable', !while_scroll_into_view.enable);
                                } }),
                            while_scroll_into_view.enable && React.createElement(
                                Fragment,
                                null,
                                React.createElement(_Timeline2.default, {
                                    uniqueId: this.props.uniqueId,
                                    onChange: function onChange(actionList) {
                                        return _this4._saveAttributes('while_scroll_into_view', 'action_list', actionList);
                                    },
                                    selectAction: this.selectAction.bind(this),
                                    actionList: while_scroll_into_view.action_list,
                                    enable: while_scroll_into_view.enable,
                                    transformOrigin: transform_origin
                                }),
                                this.state.isTransformOrigin && React.createElement(
                                    'div',
                                    { className: 'qubley-flex-d qubley-interaction-transform-origin' },
                                    React.createElement(
                                        'div',
                                        { className: 'qubley-interaction-transform-origin-label' },
                                        React.createElement(
                                            'label',
                                            null,
                                            ' ',
                                            __('Transform Origin'),
                                            ' '
                                        )
                                    ),
                                    React.createElement(_ButtonGroup2.default, {
                                        label: __('X-Axis'),
                                        options: [[__('Left'), 'left'], [__('Middle'), 'center'], [__('Right'), 'right']],
                                        value: transform_origin.x_offset,
                                        onChange: function onChange(value) {
                                            return _this4._saveAttributes('while_scroll_into_view', 'transform_origin_x', value);
                                        }
                                    }),
                                    React.createElement(_ButtonGroup2.default, {
                                        label: __('Y-Axis'),
                                        options: [[__('Top'), 'top'], [__('Middle'), 'center'], [__('Bottom'), 'bottom']],
                                        value: transform_origin.y_offset,
                                        onChange: function onChange(value) {
                                            return _this4._saveAttributes('while_scroll_into_view', 'transform_origin_y', value);
                                        }
                                    })
                                ),
                                React.createElement(_Toggle2.default, {
                                    label: __('Enable Tablet'),
                                    value: while_scroll_into_view.enable_tablet,
                                    onChange: function onChange() {
                                        return _this4._saveAttributes('while_scroll_into_view', 'enable_tablet', !while_scroll_into_view.enable_tablet);
                                    } }),
                                React.createElement(_Toggle2.default, {
                                    label: __('Enable Mobile'),
                                    value: while_scroll_into_view.enable_mobile,
                                    onChange: function onChange() {
                                        return _this4._saveAttributes('while_scroll_into_view', 'enable_mobile', !while_scroll_into_view.enable_mobile);
                                    } })
                            )
                        )
                    )
                ),
                React.createElement('hr', null),
                typeof mouse_movement !== 'undefined' && React.createElement(
                    'div',
                    { className: 'sp-pagebuilder-list-view' },
                    React.createElement(
                        'div',
                        { className: 'sppb-interaction-view-body' },
                        React.createElement(_Toggle2.default, {
                            label: __('Enable Mouse Movement'),
                            value: mouse_movement.enable,
                            onChange: function onChange() {
                                return _this4._saveAttributes('mouse_movement', 'enable', !mouse_movement.enable);
                            } }),
                        mouse_movement.enable && React.createElement(
                            Fragment,
                            null,
                            React.createElement(_ButtonGroup2.default, {
                                label: __('Direction'),
                                options: [[__('Direct'), 'direct'], [__('Opposite'), 'opposite']],
                                value: mouse_movement.mouse_tilt_direction,
                                onChange: function onChange(value) {
                                    return _this4._saveAttributes('mouse_movement', 'mouse_tilt_direction', value);
                                } }),
                            React.createElement(_Range2.default, {
                                label: __("Speed"),
                                value: parseFloat(mouse_movement.mouse_tilt_speed),
                                onChange: function onChange(value) {
                                    return _this4._saveAttributes('mouse_movement', 'mouse_tilt_speed', value);
                                },
                                min: 1,
                                max: 10,
                                step: 0.5
                            }),
                            React.createElement(_Range2.default, {
                                label: __("Maximum"),
                                value: parseFloat(mouse_movement.mouse_tilt_max),
                                onChange: function onChange(value) {
                                    return _this4._saveAttributes('mouse_movement', 'mouse_tilt_max', value);
                                },
                                min: 5,
                                max: 75,
                                step: 5
                            }),
                            React.createElement(_Toggle2.default, {
                                label: __('Enable Tablet'),
                                value: mouse_movement.enable_tablet,
                                onChange: function onChange() {
                                    return _this4._saveAttributes('mouse_movement', 'enable_tablet', !mouse_movement.enable_tablet);
                                } }),
                            React.createElement(_Toggle2.default, {
                                label: __('Enable Mobile'),
                                value: mouse_movement.enable_mobile,
                                onChange: function onChange() {
                                    return _this4._saveAttributes('mouse_movement', 'enable_mobile', !mouse_movement.enable_mobile);
                                } }),
                            React.createElement(
                                'button',
                                { onClick: function onClick() {
                                        return _this4.enableTiltAnimation();
                                    }, className: 'components-button is-button is-default is-primary is-large' },
                                ' ',
                                this.state.liveMouseTilt ? "Stop" : "Live",
                                ' '
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Interaction;
}(Component);

exports.default = Interaction;

/***/ }),

/***/ "./src/components/fields/ListSettings.js":
/*!***********************************************!*\
  !*** ./src/components/fields/ListSettings.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.listAttributes = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.listSettings = listSettings;

var _Alignment = __webpack_require__(/*! ./Alignment */ "./src/components/fields/Alignment.js");

var _Alignment2 = _interopRequireDefault(_Alignment);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

var _IconList = __webpack_require__(/*! ./IconList */ "./src/components/fields/IconList.js");

var _IconList2 = _interopRequireDefault(_IconList);

var _Typography = __webpack_require__(/*! ./Typography */ "./src/components/fields/Typography.js");

var _Typography2 = _interopRequireDefault(_Typography);

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

var _RadioAdvanced = __webpack_require__(/*! ./RadioAdvanced */ "./src/components/fields/RadioAdvanced.js");

var _RadioAdvanced2 = _interopRequireDefault(_RadioAdvanced);

var _Padding = __webpack_require__(/*! ./Padding */ "./src/components/fields/Padding.js");

var _Padding2 = _interopRequireDefault(_Padding);

var _Separator = __webpack_require__(/*! ./Separator */ "./src/components/fields/Separator.js");

var _Separator2 = _interopRequireDefault(_Separator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var PanelBody = wp.components.PanelBody;


//attributes 

var listAttributes = exports.listAttributes = {
    enableListAlignment: { type: 'boolean', default: false },
    listAlignment: {
        type: 'string', default: 'center',
        style: [{
            condition: [{ key: 'enableListAlignment', relation: '==', value: true }],
            selector: '{{QUBELY}} .qubely-list {text-align:{{listAlignment}};}'
        }]
    },

    listItems: {
        type: 'array',
        default: [{
            icon: 'far fa-star',
            text: 'Add beautiful icons and text to this block'
        }, {
            icon: 'far fa-heart',
            text: 'Set icon color for normal and hover state'
        }, {
            icon: 'fas fa-check',
            text: 'Manage space between icon and the text'
        }, {
            icon: 'fas fa-burn',
            text: 'Choose a desired layout from the list'
        }]
    },

    spacer: { type: 'object', default: { spaceTop: { md: '10', unit: "px" }, spaceBottom: { md: '10', unit: "px" } }, style: [{ selector: '{{QUBELY}}' }] },

    typography: { type: 'object', default: { openTypography: 1, size: { md: 16, unit: 'px' } }, style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li' }] },
    enableListIcons: { type: 'boolean', default: true },
    iconSize: {
        type: 'string',
        default: '16px',
        style: [{
            condition: [{ key: 'iconSize', relation: '!=', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {font-size: {{iconSize}};}'
        }]
    },
    iconSizeCustom: {
        type: 'object', default: { md: 16, unit: 'px' },
        style: [{
            condition: [{ key: 'iconSize', relation: '==', value: 'custom' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {font-size: {{iconSizeCustom}};}'
        }]
    },
    iconPosition: { type: 'string', default: 'left' },
    iconSpacing: {
        type: 'object', default: { md: 10, unit: 'px' },
        style: [{
            condition: [{ key: 'iconPosition', relation: '==', value: 'left' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {margin-right: {{iconSpacing}};}'
        }, {
            condition: [{ key: 'iconPosition', relation: '==', value: 'right' }],
            selector: '{{QUBELY}} .qubely-list .qubely-list-item-icon {margin-left: {{iconSpacing}};}'
        }]
    },

    iconColor: { type: 'string', default: '#5D7FEB', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li .qubely-list-item-icon {color: {{iconColor}};}' }] },

    color: { type: 'string', default: '#333', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li .qubely-text{color: {{color}};}' }] },
    spacing: { type: 'string', default: '5', style: [{ selector: '{{QUBELY}} .qubely-list .qubely-list-li:not(:last-child) {margin-bottom: {{spacing}}px;}' }] },
    featuresPadding: {
        type: 'object',
        default: {
            paddingType: 'global'
        },
        style: [{
            selector: '{{QUBELY}} .qubely-pricing-features'
        }]
    }
};

function listSettings(attributes, device, setAttributes) {
    var listItems = attributes.listItems,
        enableListIcons = attributes.enableListIcons,
        clickedListItem = attributes.clickedListItem,
        iconSize = attributes.iconSize,
        iconSizeCustom = attributes.iconSizeCustom,
        iconSpacing = attributes.iconSpacing,
        iconPosition = attributes.iconPosition,
        color = attributes.color,
        typography = attributes.typography,
        enableListAlignment = attributes.enableListAlignment,
        listAlignment = attributes.listAlignment,
        iconColor = attributes.iconColor,
        spacing = attributes.spacing,
        featuresPadding = attributes.featuresPadding,
        controlledFeaturesPanel = attributes.controlledFeaturesPanel,
        showFeaturesPanel = attributes.showFeaturesPanel;


    var modifySpecificItem = function modifySpecificItem(value, index) {
        var modifiedListItems = listItems.map(function (listItem, currentIndex) {
            if (index === currentIndex) {
                listItem = _extends({}, listItem, value);
            }
            return listItem;
        });
        setAttributes({ listItems: modifiedListItems });
    };

    var renderListControls = function renderListControls() {

        return React.createElement(
            Fragment,
            null,
            React.createElement(_Toggle2.default, { value: enableListAlignment, label: __('Custom Alignment'), onChange: function onChange(val) {
                    return setAttributes({ enableListAlignment: val });
                } }),
            enableListAlignment && React.createElement(_Alignment2.default, { label: __('Alignment'), value: listAlignment, onChange: function onChange(val) {
                    return setAttributes({ listAlignment: val });
                }, disableJustify: true }),
            React.createElement(_Color2.default, { label: __('Color'), value: color, onChange: function onChange(val) {
                    return setAttributes({ color: val });
                } }),
            React.createElement(_Typography2.default, { label: __('Typography'), value: typography, onChange: function onChange(val) {
                    return setAttributes({ typography: val });
                } }),
            React.createElement(_Range2.default, { label: __('Spacing'), value: spacing, onChange: function onChange(val) {
                    return setAttributes({ spacing: val });
                }, min: 0, max: 60 }),
            React.createElement(_Padding2.default, {
                min: 0,
                max: 200,
                responsive: true,
                value: featuresPadding,
                unit: ['px', 'em', '%'],
                label: "Padding",
                onChange: function onChange(val) {
                    return setAttributes({ featuresPadding: val });
                } }),
            React.createElement(_Separator2.default, null),
            React.createElement(_Toggle2.default, { value: enableListIcons, label: __('Icons'), onChange: function onChange(val) {
                    return setAttributes({ enableListIcons: val });
                } }),
            enableListIcons && React.createElement(
                Fragment,
                null,
                React.createElement(_IconList2.default, {
                    disableToggle: true,
                    value: listItems.length > 0 && listItems[clickedListItem] && listItems[clickedListItem].icon,
                    onChange: function onChange(value) {
                        return modifySpecificItem({ icon: value }, clickedListItem);
                    },
                    colorSettings: true,
                    iconColor: listItems.length > 0 && listItems[clickedListItem] && (listItems[clickedListItem].customColor || '#5D7FEB'),
                    onColorChange: function onColorChange(color) {
                        return modifySpecificItem({ customColor: color }, clickedListItem);
                    }
                }),
                React.createElement(_Separator2.default, { label: __('Common Settings'), customClassName: "qubely-separtor-extra-margin" }),
                React.createElement(_Color2.default, { label: __('Icon Color'), value: iconColor, onChange: function onChange(value) {
                        return setAttributes({ iconColor: value });
                    } }),
                React.createElement(_RadioAdvanced2.default, { label: __('Icon Size'), value: iconSize, onChange: function onChange(val) {
                        return setAttributes({ iconSize: val });
                    },
                    options: [{ label: 'S', value: '12px', title: __('Small') }, { label: 'M', value: '16px', title: __('Medium') }, { label: 'L', value: '20px', title: __('Large') }, { label: 'XL', value: '28px', title: __('Extra Large') }, { icon: 'fas fa-cog', value: 'custom', title: __('Custom') }]
                }),
                iconSize == 'custom' && React.createElement(_Range2.default, { label: __('Custom Size'), value: iconSizeCustom, onChange: function onChange(value) {
                        return setAttributes({ iconSizeCustom: value });
                    }, min: 0, max: 100, unit: ['px', 'em', '%'], responsive: true }),
                React.createElement(_RadioAdvanced2.default, { label: __('Position'), value: iconPosition, onChange: function onChange(val) {
                        return setAttributes({ iconPosition: val });
                    },
                    options: [{ label: 'Left', value: 'left', title: __('Left') }, { label: 'Right', value: 'right', title: __('Right') }]
                }),
                React.createElement(_Range2.default, { label: __('Gap'), value: iconSpacing, onChange: function onChange(val) {
                        return setAttributes({ iconSpacing: val });
                    }, min: 0, max: 60, unit: ['px', 'em', '%'], responsive: true })
            )
        );
    };

    return React.createElement(
        Fragment,
        null,
        controlledFeaturesPanel ? React.createElement(
            PanelBody,
            { title: __('Features'), opened: showFeaturesPanel, onToggle: function onToggle() {
                    return setAttributes({ showFeaturesPanel: !showFeaturesPanel });
                } },
            renderListControls()
        ) : React.createElement(
            PanelBody,
            { title: __('Features'), initialOpen: false },
            renderListControls()
        )
    );
}

/***/ }),

/***/ "./src/components/fields/Margin.js":
/*!*****************************************!*\
  !*** ./src/components/fields/Margin.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var Tooltip = wp.components.Tooltip;

var LABEL = 'Margin';

var Margin = function (_Component) {
    _inherits(Margin, _Component);

    function Margin(props) {
        _classCallCheck(this, Margin);

        var _this = _possibleConstructorReturn(this, (Margin.__proto__ || Object.getPrototypeOf(Margin)).call(this, props));

        _this.updateMargin = function (type, newValue) {
            var _this$props = _this.props,
                onChange = _this$props.onChange,
                value = _this$props.value,
                unit = _this$props.unit,
                responsive = _this$props.responsive,
                responsiveGroup = _this$props.responsiveGroup,
                device = _this$props.device;
            var _this$state = _this.state,
                defaultUnit = _this$state.defaultUnit,
                defaultMarginType = _this$state.defaultMarginType;

            var responsiveDevice = responsive ? device ? device : _this.state.device : window.qubelyDevice;

            var _ref = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''],
                _ref2 = _slicedToArray(_ref, 4),
                top = _ref2[0],
                right = _ref2[1],
                bottom = _ref2[2],
                left = _ref2[3];

            var newMargin = JSON.parse(JSON.stringify(value));
            var tempMargin = type === 'global' ? '' + newValue : (type == 'top' ? '' + newValue : '' + top) + ' ' + (type == 'right' ? '' + newValue : '' + right) + ' ' + (type == 'bottom' ? '' + newValue : '' + bottom) + ' ' + (type == 'left' ? '' + newValue : '' + left);

            if (type === 'global') {
                responsive || responsiveGroup ? newMargin.global ? newMargin.global[responsiveDevice] = tempMargin : newMargin.global = _defineProperty({}, responsiveDevice, tempMargin) : newMargin.global = tempMargin;
            } else {
                responsive || responsiveGroup ? newMargin.custom ? newMargin.custom[responsiveDevice] = tempMargin : newMargin.custom = _defineProperty({}, responsiveDevice, tempMargin) : newMargin.custom = tempMargin;
            }

            unit && value.unit ? newMargin.unit = value.unit : newMargin.unit = defaultUnit;
            newMargin.marginType = value.marginType ? value.marginType : defaultMarginType;
            newMargin.openMargin = 1;
            onChange(newMargin);
        };

        _this.updateMarginType = function (newType) {
            var _this$props2 = _this.props,
                onChange = _this$props2.onChange,
                value = _this$props2.value;

            var newMargin = JSON.parse(JSON.stringify(value));
            newMargin.marginType = newType;
            onChange(newMargin);
        };

        _this.updateUnit = function (newUnit) {
            var _this$props3 = _this.props,
                onChange = _this$props3.onChange,
                value = _this$props3.value;

            var newMargin = JSON.parse(JSON.stringify(value));
            newMargin.unit = newUnit;
            newMargin.marginType = value.marginType ? value.marginType : _this.state.defaultRadiusType;
            newMargin.openMargin = value.openMargin ? value.openMargin : 1;
            onChange(newMargin);
        };

        _this.state = {
            device: 'md',
            defaultUnit: 'px',
            defaultMarginType: 'global'
        };
        return _this;
    }

    _createClass(Margin, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                unit = _props.unit,
                min = _props.min,
                max = _props.max,
                responsive = _props.responsive,
                device = _props.device,
                onDeviceChange = _props.onDeviceChange,
                responsiveGroup = _props.responsiveGroup;
            var _state = this.state,
                defaultUnit = _state.defaultUnit,
                defaultMarginType = _state.defaultMarginType;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;
            var values = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''];

            var global = responsive || responsiveGroup ? value.global && value.global[responsiveDevice] ? value.global[responsiveDevice] : '' : value.global ? value.global : '';
            var iterator = ['top', 'right', 'bottom', 'left'];
            return React.createElement(
                'div',
                { className: "qubely-field-margin qubely-field" + (responsive ? ' qubely-responsive' : '') },
                unit && React.createElement(
                    'div',
                    { className: 'qubely-unit-btn-group qubely-d-block qubely-text-right' },
                    ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em', '%']).map(function (unitName) {
                        return React.createElement(
                            'button',
                            {
                                className: (value.unit ? unitName == value.unit : unitName == defaultUnit) ? 'active' : '',
                                onClick: function onClick() {
                                    return _this2.updateUnit(unitName);
                                } },
                            unitName
                        );
                    })
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
                    React.createElement(
                        'label',
                        { htmlFor: 'input' },
                        '   ',
                        label ? label : LABEL,
                        '  '
                    ),
                    responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                            device ? onDeviceChange(val) : _this2.setState({ device: val });
                        } }),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-button-list qubely-ml-auto' },
                        [['global', __('Global')], ['custom', __('Custom')]].map(function (data, index) {
                            return React.createElement(
                                Tooltip,
                                { text: data[1] },
                                React.createElement(
                                    'button',
                                    { className: ((value.marginType ? value.marginType == data[0] : defaultMarginType == data[0]) ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                            return _this2.updateMarginType(data[0]);
                                        } },
                                    data[0] == 'global' ? React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M15.971 15.059v.941h-16v-16h16v15.058zm-1.882-.941v-12.235h-12.235v12.235h12.235z', className: 'qubely-svg-fill' })
                                    ) : React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { className: 'qubely-svg-fill' },
                                            React.createElement('path', { d: 'M2.794 0h10.353v1.882h-10.353z' }),
                                            React.createElement('path', { d: 'M15.97 2.824v10.353h-1.882v-10.353z' }),
                                            React.createElement('path', { d: 'M1.853 2.823v10.353h-1.882v-10.353z' }),
                                            React.createElement('path', { d: 'M2.794 14.118h10.353v1.882h-10.353z' })
                                        )
                                    )
                                )
                            );
                        })
                    )
                ),
                !value.marginType || value.marginType == 'global' ? React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-20' },
                    React.createElement(
                        'div',
                        { className: 'qubely-w-100' },
                        React.createElement(_Range2.default, {
                            value: global,
                            onChange: function onChange(val) {
                                return _this2.updateMargin('global', val);
                            },
                            min: min,
                            max: max,
                            step: 1
                        })
                    )
                ) : React.createElement(
                    Fragment,
                    null,
                    iterator.map(function (item, index) {
                        return React.createElement(
                            'div',
                            { className: 'qubely-d-flex qubely-align-center qubely-mb-20' },
                            React.createElement(
                                'div',
                                { className: 'qubely-mr-15' },
                                _icons2.default.spacing[item]
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-w-100' },
                                React.createElement(_Range2.default, {
                                    value: values[index] || '',
                                    onChange: function onChange(val) {
                                        return _this2.updateMargin(iterator[index], val);
                                    },
                                    min: min,
                                    max: max,
                                    step: 1
                                })
                            )
                        );
                    })
                )
            );
        }
    }]);

    return Margin;
}(Component);

exports.default = Margin;

/***/ }),

/***/ "./src/components/fields/Media.js":
/*!****************************************!*\
  !*** ./src/components/fields/Media.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Dashicon = exports.Tooltip = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/media.scss */ "./src/components/css/media.scss");

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var MediaUpload = wp.blockEditor.MediaUpload;
var _wp$components = wp.components;
var Tooltip = _wp$components.Tooltip,
    Dashicon = _wp$components.Dashicon;
exports.Tooltip = Tooltip;
exports.Dashicon = Dashicon;

var Media = function (_Component) {
	_inherits(Media, _Component);

	function Media() {
		_classCallCheck(this, Media);

		return _possibleConstructorReturn(this, (Media.__proto__ || Object.getPrototypeOf(Media)).apply(this, arguments));
	}

	_createClass(Media, [{
		key: 'setSettings',
		value: function setSettings(media) {
			var _props = this.props,
			    multiple = _props.multiple,
			    onChange = _props.onChange,
			    value = _props.value;

			if (multiple) {
				var medias = [];
				media.forEach(function (single) {
					if (single && single.url) {
						medias.push({ url: single.url, id: single.id });
					}
				});
				onChange(value ? value.concat(medias) : medias);
			} else {
				if (media && media.url) {
					onChange({ url: media.url, id: media.id });
				}
			}
		}
	}, {
		key: 'removeImage',
		value: function removeImage(id) {
			var _props2 = this.props,
			    multiple = _props2.multiple,
			    onChange = _props2.onChange;

			if (multiple) {
				var value = this.props.value.slice();
				value.splice(id, 1);
				onChange(value);
			} else {
				onChange({});
			}
		}
	}, {
		key: 'isUrl',
		value: function isUrl(url) {
			if (['wbm', 'jpg', 'jpeg', 'gif', 'png', 'svg'].indexOf(url.split('.').pop().toLowerCase()) != -1) {
				return url;
			} else {
				return qubely_admin.plugin + 'assets/img/qubely-medium.jpg';
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props3 = this.props,
			    type = _props3.type,
			    multiple = _props3.multiple,
			    value = _props3.value,
			    panel = _props3.panel,
			    video = _props3.video;

			return React.createElement(
				'div',
				{ className: 'qubely-media' },
				this.props.label && React.createElement(
					'label',
					null,
					this.props.label
				),
				React.createElement(MediaUpload, {
					onSelect: function onSelect(val) {
						return _this2.setSettings(val);
					},
					allowedTypes: type.length ? [].concat(_toConsumableArray(type)) : ['image'],
					multiple: multiple || false,
					value: value,
					render: function render(_ref) {
						var open = _ref.open;
						return React.createElement(
							'div',
							{ className: 'qubely-single-img' },
							React.createElement(
								'div',
								null,
								multiple ? React.createElement(
									'div',
									null,
									value.length > 0 && value.map(function (v, index) {
										return React.createElement(
											'span',
											{ className: 'qubely-media-image-parent' },
											React.createElement('img', { src: _this2.isUrl(v.url), alt: __('image') }),
											panel && React.createElement(
												'div',
												{ className: 'qubely-media-actions qubely-field-button-list' },
												React.createElement(
													Tooltip,
													{ text: __('Edit') },
													React.createElement(
														'button',
														{ className: 'qubely-button', 'aria-label': __('Edit'), onClick: open, role: 'button' },
														React.createElement('span', { 'aria-label': __('Edit'), className: 'fas fa-pencil-alt fa-fw' })
													)
												),
												React.createElement(
													Tooltip,
													{ text: __('Remove') },
													React.createElement(
														'button',
														{ className: 'qubely-button', 'aria-label': __('Remove'), onClick: function onClick() {
																return _this2.removeImage(index);
															}, role: 'button' },
														React.createElement('span', { 'aria-label': __('Close'), className: 'far fa-trash-alt fa-fw' })
													)
												)
											)
										);
									}),
									React.createElement(
										'div',
										{ onClick: open, className: "qubely-placeholder-image" },
										React.createElement(Dashicon, { icon: 'insert' }),
										React.createElement(
											'span',
											null,
											__('Insert')
										)
									)
								) : value && value.url ? React.createElement(
									'span',
									{ className: 'qubely-media-image-parent' },
									video ? React.createElement('video', { controls: true, autoPlay: true, loop: true, src: value.url }) : React.createElement('img', { src: _this2.isUrl(value.url), alt: __('image') }),
									panel && React.createElement(
										'div',
										{ className: 'qubely-media-actions qubely-field-button-list' },
										React.createElement(
											Tooltip,
											{ text: __('Edit') },
											React.createElement(
												'button',
												{ className: 'qubely-button', 'aria-label': __('Edit'), onClick: open, role: 'button' },
												React.createElement('span', { 'aria-label': __('Edit'), className: 'fas fa-pencil-alt fa-fw' })
											)
										),
										React.createElement(
											Tooltip,
											{ text: __('Remove') },
											React.createElement(
												'button',
												{ className: 'qubely-button', 'aria-label': __('Remove'), onClick: function onClick() {
														return _this2.removeImage(value.id);
													}, role: 'button' },
												React.createElement('span', { 'aria-label': __('Close'), className: 'far fa-trash-alt fa-fw' })
											)
										)
									)
								) : React.createElement(
									'div',
									{ onClick: open, className: "qubely-placeholder-image" },
									React.createElement(Dashicon, { icon: 'insert' }),
									React.createElement(
										'span',
										null,
										__('Insert')
									)
								)
							)
						);
					}
				})
			);
		}
	}]);

	return Media;
}(Component);

exports.default = Media;

/***/ }),

/***/ "./src/components/fields/Padding.js":
/*!******************************************!*\
  !*** ./src/components/fields/Padding.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var Tooltip = wp.components.Tooltip;

var Padding = function (_Component) {
    _inherits(Padding, _Component);

    function Padding(props) {
        _classCallCheck(this, Padding);

        var _this = _possibleConstructorReturn(this, (Padding.__proto__ || Object.getPrototypeOf(Padding)).call(this, props));

        _this.updatePadding = function (type, newValue) {
            var _this$props = _this.props,
                onChange = _this$props.onChange,
                value = _this$props.value,
                unit = _this$props.unit,
                responsive = _this$props.responsive,
                responsiveGroup = _this$props.responsiveGroup,
                device = _this$props.device;
            var _this$state = _this.state,
                defaultUnit = _this$state.defaultUnit,
                defaultPaddingType = _this$state.defaultPaddingType;

            var responsiveDevice = responsive ? device ? device : _this.state.device : window.qubelyDevice;

            var _ref = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''],
                _ref2 = _slicedToArray(_ref, 4),
                top = _ref2[0],
                right = _ref2[1],
                bottom = _ref2[2],
                left = _ref2[3];

            var newPadding = JSON.parse(JSON.stringify(value));
            var tempPadding = type === 'global' ? '' + newValue : (type == 'top' ? '' + newValue : '' + top) + ' ' + (type == 'right' ? '' + newValue : '' + right) + ' ' + (type == 'bottom' ? '' + newValue : '' + bottom) + ' ' + (type == 'left' ? '' + newValue : '' + left);

            if (type === 'global') {
                responsive || responsiveGroup ? newPadding.global ? newPadding.global[responsiveDevice] = tempPadding : newPadding.global = _defineProperty({}, responsiveDevice, tempPadding) : newPadding.global = tempPadding;
            } else {
                responsive || responsiveGroup ? newPadding.custom ? newPadding.custom[responsiveDevice] = tempPadding : newPadding.custom = _defineProperty({}, responsiveDevice, tempPadding) : newPadding.custom = tempPadding;
            }

            unit && value.unit ? newPadding.unit = value.unit : newPadding.unit = defaultUnit;
            newPadding.paddingType = value.paddingType ? value.paddingType : defaultPaddingType;
            newPadding.openPadding = 1;
            onChange(newPadding);
        };

        _this.updatePaddingType = function (newType) {
            var _this$props2 = _this.props,
                onChange = _this$props2.onChange,
                value = _this$props2.value;

            var newPadding = JSON.parse(JSON.stringify(value));
            newPadding.paddingType = newType;
            onChange(newPadding);
        };

        _this.updateUnit = function (newUnit) {
            var _this$props3 = _this.props,
                onChange = _this$props3.onChange,
                value = _this$props3.value;

            var newPadding = JSON.parse(JSON.stringify(value));
            newPadding.unit = newUnit;
            newPadding.paddingType = value.paddingType ? value.paddingType : _this.state.defaultPaddingType;
            newPadding.openPadding = value.openPadding ? value.openPadding : 1;
            onChange(newPadding);
        };

        _this.state = {
            device: 'md',
            defaultUnit: 'px',
            defaultPaddingType: 'global'
        };
        return _this;
    }

    _createClass(Padding, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                unit = _props.unit,
                min = _props.min,
                max = _props.max,
                responsive = _props.responsive,
                device = _props.device,
                onDeviceChange = _props.onDeviceChange,
                responsiveGroup = _props.responsiveGroup;
            var _state = this.state,
                defaultUnit = _state.defaultUnit,
                defaultPaddingType = _state.defaultPaddingType;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;
            var values = responsive || responsiveGroup ? value.custom && value.custom[responsiveDevice] ? value.custom[responsiveDevice].split(" ") : ['', '', '', ''] : value.custom ? value.custom.split(" ") : ['', '', '', ''];

            var global = responsive || responsiveGroup ? value.global && value.global[responsiveDevice] ? value.global[responsiveDevice] : '' : value.global ? value.global : '';
            var iterator = ['top', 'right', 'bottom', 'left'];
            return React.createElement(
                'div',
                { className: "qubely-field-padding qubely-field" + (responsive ? ' qubely-responsive' : '') },
                unit && React.createElement(
                    'div',
                    { className: 'qubely-unit-btn-group qubely-d-block qubely-text-right' },
                    ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em', '%']).map(function (unitName) {
                        return React.createElement(
                            'button',
                            { className: (value.unit ? unitName == value.unit : unitName == defaultUnit) ? 'active' : '',
                                onClick: function onClick() {
                                    return _this2.updateUnit(unitName);
                                } },
                            unitName
                        );
                    })
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
                    React.createElement(
                        'label',
                        { htmlFor: 'input' },
                        '   ',
                        label ? label : 'Padding',
                        '  '
                    ),
                    responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                            device ? onDeviceChange(val) : _this2.setState({ device: val });
                        } }),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-button-list qubely-ml-auto' },
                        [['global', __('Global')], ['custom', __('Custom')]].map(function (data, index) {
                            return React.createElement(
                                Tooltip,
                                { text: data[1] },
                                React.createElement(
                                    'button',
                                    { className: ((value.paddingType ? value.paddingType == data[0] : defaultPaddingType == data[0]) ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                            return _this2.updatePaddingType(data[0]);
                                        } },
                                    data[0] == 'global' ? React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement('path', { d: 'M15.971 15.059v.941h-16v-16h16v15.058zm-1.882-.941v-12.235h-12.235v12.235h12.235z', className: 'qubely-svg-fill' })
                                    ) : React.createElement(
                                        'svg',
                                        { width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },
                                        React.createElement(
                                            'g',
                                            { className: 'qubely-svg-fill' },
                                            React.createElement('path', { d: 'M2.794 0h10.353v1.882h-10.353z' }),
                                            React.createElement('path', { d: 'M15.97 2.824v10.353h-1.882v-10.353z' }),
                                            React.createElement('path', { d: 'M1.853 2.823v10.353h-1.882v-10.353z' }),
                                            React.createElement('path', { d: 'M2.794 14.118h10.353v1.882h-10.353z' })
                                        )
                                    )
                                )
                            );
                        })
                    )
                ),
                !value.paddingType || value.paddingType == 'global' ? React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-20' },
                    React.createElement(
                        'div',
                        { className: 'qubely-w-100' },
                        React.createElement(_Range2.default, {
                            value: global,
                            onChange: function onChange(val) {
                                return _this2.updatePadding('global', val);
                            },
                            min: min,
                            max: max,
                            step: 1
                        })
                    )
                ) : React.createElement(
                    Fragment,
                    null,
                    iterator.map(function (item, index) {
                        return React.createElement(
                            'div',
                            { className: 'qubely-d-flex qubely-align-center qubely-mb-20' },
                            React.createElement(
                                'div',
                                { className: 'qubely-mr-15' },
                                _icons2.default.spacing[item]
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-w-100' },
                                React.createElement(_Range2.default, {
                                    value: values[index] || '',
                                    onChange: function onChange(val) {
                                        return _this2.updatePadding(iterator[index], val);
                                    },
                                    min: min,
                                    max: max,
                                    step: 1
                                })
                            )
                        );
                    })
                )
            );
        }
    }]);

    return Padding;
}(Component);

exports.default = Padding;

/***/ }),

/***/ "./src/components/fields/QubelyButton.js":
/*!***********************************************!*\
  !*** ./src/components/fields/QubelyButton.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var RichText = wp.blockEditor.RichText;

var QubelyButtonEdit = function (_Component) {
    _inherits(QubelyButtonEdit, _Component);

    function QubelyButtonEdit() {
        _classCallCheck(this, QubelyButtonEdit);

        return _possibleConstructorReturn(this, (QubelyButtonEdit.__proto__ || Object.getPrototypeOf(QubelyButtonEdit)).apply(this, arguments));
    }

    _createClass(QubelyButtonEdit, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                buttonIconName = _props.buttonIconName,
                buttonIconPosition = _props.buttonIconPosition,
                buttonSize = _props.buttonSize,
                buttonText = _props.buttonText,
                onTextChange = _props.onTextChange;

            return React.createElement(
                "div",
                { className: "qubely-block-btn-wrapper" },
                React.createElement(
                    "div",
                    { className: "qubely-block-btn" },
                    React.createElement(
                        "span",
                        { className: "qubely-block-btn-anchor is-" + buttonSize },
                        buttonIconName && buttonIconPosition == 'left' && React.createElement("i", { className: "qubely-btn-icon " + buttonIconName }),
                        React.createElement(RichText, {
                            key: "editable",
                            keepPlaceholderOnFocus: true,
                            placeholder: __('Add Text...'),
                            onChange: function onChange(value) {
                                return onTextChange(value);
                            },
                            value: buttonText
                        }),
                        buttonIconName && buttonIconPosition == 'right' && React.createElement("i", { className: "qubely-btn-icon " + buttonIconName })
                    )
                )
            );
        }
    }]);

    return QubelyButtonEdit;
}(Component);

var QubelyButtonSave = function (_Component2) {
    _inherits(QubelyButtonSave, _Component2);

    function QubelyButtonSave() {
        _classCallCheck(this, QubelyButtonSave);

        return _possibleConstructorReturn(this, (QubelyButtonSave.__proto__ || Object.getPrototypeOf(QubelyButtonSave)).apply(this, arguments));
    }

    _createClass(QubelyButtonSave, [{
        key: "render",
        value: function render() {
            var _props2 = this.props,
                buttonIconName = _props2.buttonIconName,
                buttonIconPosition = _props2.buttonIconPosition,
                buttonSize = _props2.buttonSize,
                buttonText = _props2.buttonText,
                buttonUrl = _props2.buttonUrl,
                buttonTag = _props2.buttonTag,
                buttonId = _props2.buttonId;


            var buttonHtml = React.createElement(
                Fragment,
                null,
                buttonIconName && buttonIconPosition == 'left' && React.createElement("i", { className: "qubely-btn-icon " + buttonIconName }),
                React.createElement(RichText.Content, { value: buttonText ? buttonText : 'Add Text...' }),
                buttonIconName && buttonIconPosition == 'right' && React.createElement("i", { className: "qubely-btn-icon " + buttonIconName })
            );

            return React.createElement(
                "div",
                { className: "qubely-block-btn-wrapper" },
                React.createElement(
                    "div",
                    { className: "qubely-block-btn" },
                    buttonTag == 'a' ? React.createElement(
                        "a",
                        _extends({ className: "qubely-block-btn-anchor is-" + [buttonSize] }, buttonId ? 'id="' + buttonId + '"' : '', { href: buttonUrl && buttonUrl.url ? buttonUrl.url : '#' }, buttonUrl && buttonUrl.target && { target: '_blank' }, buttonUrl && buttonUrl.nofollow ? { rel: 'nofollow noopener noreferrer' } : _extends({}, buttonUrl && buttonUrl.target && { rel: 'noopener noreferrer' })),
                        buttonHtml
                    ) : React.createElement(
                        "button",
                        _extends({ className: "qubely-block-btn-anchor is-" + buttonSize }, buttonId ? 'id="' + buttonId + '"' : '', { type: "submit", role: "button" }),
                        buttonHtml
                    )
                )
            );
        }
    }]);

    return QubelyButtonSave;
}(Component);

exports.QubelyButtonEdit = QubelyButtonEdit;
exports.QubelyButtonSave = QubelyButtonSave;

/***/ }),

/***/ "./src/components/fields/QubelyIconList.js":
/*!*************************************************!*\
  !*** ./src/components/fields/QubelyIconList.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var Tooltip = wp.components.Tooltip;

var listWraperGlobalClassName = 'qubely-list';

var QubelyIconListEdit = function (_Component) {
    _inherits(QubelyIconListEdit, _Component);

    function QubelyIconListEdit(props) {
        _classCallCheck(this, QubelyIconListEdit);

        var _this = _possibleConstructorReturn(this, (QubelyIconListEdit.__proto__ || Object.getPrototypeOf(QubelyIconListEdit)).call(this, props));

        _this.placeCaretAtEnd = function (el) {
            el.focus();
            if (typeof window.getSelection != "undefined" && typeof document.createRange != "undefined") {
                var range = document.createRange();
                range.selectNodeContents(el);
                range.collapse(false);
                var sel = window.getSelection();
                sel.removeAllRanges();
                sel.addRange(range);
            } else if (typeof document.body.createTextRange != "undefined") {
                var textRange = document.body.createTextRange();
                textRange.moveToElementText(el);
                textRange.collapse(false);
                textRange.select();
            }
        };

        _this.renderDeleteIcon = function (index) {
            var focusedItem = _this.state.focusedItem;

            return React.createElement(
                Tooltip,
                { text: __('Delete this item') },
                React.createElement(
                    "span",
                    { className: "qubely-action-remove", role: "button",
                        onClick: function onClick() {
                            _this.updateListItems(index, 'delete');
                            index == focusedItem ? _this.setState({ focusedItem: index > 0 ? index - 1 : index }) : _this.setState({ focusedItem: focusedItem > 0 ? focusedItem - 1 : focusedItem });
                        } },
                    React.createElement("i", { className: "fas fa-times" })
                )
            );
        };

        _this.renderListItems = function () {
            var _this$props = _this.props,
                enableListIcons = _this$props.enableListIcons,
                iconPosition = _this$props.iconPosition,
                listItems = _this$props.listItems,
                newListItemPlaceHolder = _this$props.newListItemPlaceHolder,
                disableButton = _this$props.disableButton,
                iconColor = _this$props.iconColor,
                onIconColorChange = _this$props.onIconColorChange,
                onChange = _this$props.onChange;
            var _this$state = _this.state,
                focusedItem = _this$state.focusedItem,
                removeItemViaBackSpace = _this$state.removeItemViaBackSpace;

            return listItems.map(function (item, index) {
                return React.createElement(
                    "li",
                    { className: "qubely-list-li qubely-list-li-editor qubely-icon-position-" + iconPosition },
                    React.createElement(
                        "div",
                        { ref: "avoidOnClick", className: "qubely-list-item qubely-list-item-" + index, onClick: function onClick() {
                                return _this.setState({ currentListItemIndex: index });
                            } },
                        iconPosition == 'right' && item.text.length > 0 && _this.renderDeleteIcon(index),
                        enableListIcons && iconPosition == 'left' && React.createElement("span", { className: "qubely-list-item-icon " + item.icon + " fa-fw", style: item.customColor ? { color: item.customColor } : {} }),
                        React.createElement(
                            "div",
                            {
                                className: "qubely-list-item-text-" + index + " qubely-text ",
                                id: "qubely-list-item-text-" + index,
                                contenteditable: "true",
                                placeholder: newListItemPlaceHolder,
                                onBlur: function onBlur(event) {
                                    return _this.modifySpecificItem({ text: event.target.innerText }, index);
                                },
                                onKeyPress: function onKeyPress(event) {
                                    if (event.key == 'Enter') {
                                        event.preventDefault();
                                        _this.updateListItems(index, 'add');
                                        _this.setState({ focusedItem: index + 1 == listItems.length ? listItems.length : _this.state.focusedItem + 1 });
                                    }
                                },
                                onKeyUp: function onKeyUp(event) {
                                    if (event.key == 'Backspace') {
                                        event.target.innerText.length == 0 && _this.setState({ removeItemViaBackSpace: index });
                                        if (removeItemViaBackSpace == index) {
                                            _this.updateListItems(index, 'delete');
                                            _this.setState({ focusedItem: index > 0 ? index - 1 : index, removeItemViaBackSpace: -1 });
                                        }
                                    }
                                },
                                onClick: function onClick() {
                                    return _this.setState({ focusedItem: index });
                                } },
                            item.text
                        ),
                        enableListIcons && iconPosition == 'right' && React.createElement("span", { className: "qubely-list-item-icon " + item.icon + " fa-fw", style: item.customColor ? { color: item.customColor } : {} }),
                        iconPosition == 'left' && item.text.length > 0 && _this.renderDeleteIcon(index),
                        _this.state.currentListItemIndex == index && onChange('clickedListItem', index)
                    )
                );
            });
        };

        _this.modifySpecificItem = function (value, index) {
            var _this$props2 = _this.props,
                listItems = _this$props2.listItems,
                onListItemModification = _this$props2.onListItemModification;

            var modifiedListItems = listItems.map(function (listItem, currentIndex) {
                if (index === currentIndex) {
                    listItem = _extends({}, listItem, value);
                }
                return listItem;
            });
            onListItemModification(modifiedListItems);
        };

        _this.updateListItems = function (index, operation) {
            var _this$props3 = _this.props,
                listItems = _this$props3.listItems,
                onListItemModification = _this$props3.onListItemModification;

            var newList = JSON.parse(JSON.stringify(listItems));
            operation == 'add' ? newList.splice(index + 1, 0, { icon: 'fas fa-check', text: '', customColor: false }) : newList.splice(index, 1);

            onListItemModification(newList);
        };

        _this.state = {
            currentListItemIndex: 0,
            removeItemViaBackSpace: 999,
            focusedItem: _this.props.listItems.length - 1
        };
        return _this;
    }

    _createClass(QubelyIconListEdit, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
            var focusedItem = this.state.focusedItem;

            if (this.props.listItems.length > prevProps.listItems.length) {
                var focusedListItem = document.querySelector("." + this.props.parentBlock + " .qubely-list-item-text-" + focusedItem);
                focusedListItem.focus();
            } else if (this.props.listItems.length < prevProps.listItems.length) {
                var _focusedListItem = document.querySelector("." + this.props.parentBlock + " .qubely-list-item-text-" + focusedItem);
                _focusedListItem && this.placeCaretAtEnd(_focusedListItem);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                listWraperClassName = _props.listWraperClassName,
                listItems = _props.listItems,
                disableButton = _props.disableButton,
                buttonText = _props.buttonText,
                values = _props.values,
                onReplace = _props.onReplace,
                customClassName = _props.customClassName,
                customPlaceHolder = _props.customPlaceHolder,
                onTagChange = _props.onTagChange;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    "ul",
                    { className: listWraperClassName || listWraperGlobalClassName },
                    this.renderListItems()
                ),
                !disableButton && React.createElement(
                    "button",
                    { onClick: function onClick() {
                            _this2.setState({ currentListItemIndex: listItems.length });
                            _this2.updateListItems(listItems.length, 'add');
                        }, className: "button is-default qubely-action-button", role: "button" },
                    React.createElement("i", { className: "fas fa-plus" }),
                    buttonText || __('Add New')
                )
            );
        }
    }]);

    return QubelyIconListEdit;
}(Component);

var QubelyIconListSave = function (_Component2) {
    _inherits(QubelyIconListSave, _Component2);

    function QubelyIconListSave() {
        _classCallCheck(this, QubelyIconListSave);

        return _possibleConstructorReturn(this, (QubelyIconListSave.__proto__ || Object.getPrototypeOf(QubelyIconListSave)).apply(this, arguments));
    }

    _createClass(QubelyIconListSave, [{
        key: "render",
        value: function render() {
            var _props2 = this.props,
                listWraperClassName = _props2.listWraperClassName,
                enableListIcons = _props2.enableListIcons,
                iconPosition = _props2.iconPosition,
                listItems = _props2.listItems;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    "ul",
                    { className: listWraperClassName || listWraperGlobalClassName },
                    listItems.map(function (item, index) {
                        if (item.text.length > 0) {
                            return React.createElement(
                                "li",
                                { className: "qubely-list-li qubely-icon-position-" + iconPosition },
                                React.createElement(
                                    "div",
                                    { className: "qubely-list-item qubely-list-item-" + index },
                                    enableListIcons && iconPosition == 'left' && React.createElement("span", { className: "qubely-list-item-icon " + item.icon + " fa-fw", style: item.customColor ? { color: item.customColor } : {} }),
                                    React.createElement(
                                        "div",
                                        {
                                            className: "qubely-list-item-text-" + index + " qubely-text ",
                                            id: "qubely-list-item-text-" + index
                                        },
                                        item.text
                                    ),
                                    enableListIcons && iconPosition == 'right' && React.createElement("span", { className: "qubely-list-item-icon " + item.icon + " fa-fw", style: item.customColor ? { color: item.customColor } : {} })
                                )
                            );
                        } else return null;
                    })
                )
            );
        }
    }]);

    return QubelyIconListSave;
}(Component);

exports.QubelyIconListEdit = QubelyIconListEdit;
exports.QubelyIconListSave = QubelyIconListSave;

/***/ }),

/***/ "./src/components/fields/RadioAdvanced.js":
/*!************************************************!*\
  !*** ./src/components/fields/RadioAdvanced.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;
var Tooltip = wp.components.Tooltip;

var RadioAdvanced = function (_Component) {
    _inherits(RadioAdvanced, _Component);

    function RadioAdvanced() {
        _classCallCheck(this, RadioAdvanced);

        return _possibleConstructorReturn(this, (RadioAdvanced.__proto__ || Object.getPrototypeOf(RadioAdvanced)).apply(this, arguments));
    }

    _createClass(RadioAdvanced, [{
        key: 'setSettings',
        value: function setSettings(val) {
            this.props.onChange(val);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                options = _props.options;

            return React.createElement(
                'div',
                { className: 'qubely-field qubely-field-radio-advanced qubely-d-flex qubely-align-center' },
                label && React.createElement(
                    'span',
                    null,
                    label
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-button-list' + (label && ' qubely-ml-auto') },
                    options.map(function (data, index) {
                        return React.createElement(
                            Tooltip,
                            { text: data.title || data.value },
                            React.createElement(
                                'button',
                                { className: (value == data.value ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                        return _this2.setSettings(data.value);
                                    } },
                                data.icon ? React.createElement('i', { className: data.icon }) : data.svg ? React.createElement(
                                    'span',
                                    { className: 'qubely-option-svg' },
                                    data.svg
                                ) : data.label
                            )
                        );
                    })
                )
            );
        }
    }]);

    return RadioAdvanced;
}(Component);

exports.default = RadioAdvanced;

/***/ }),

/***/ "./src/components/fields/Range.js":
/*!****************************************!*\
  !*** ./src/components/fields/Range.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/range.scss */ "./src/components/css/range.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var Range = function (_Component) {
    _inherits(Range, _Component);

    function Range(props) {
        _classCallCheck(this, Range);

        var _this = _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, props));

        _this.state = { current: '', device: 'md' };
        return _this;
    }

    _createClass(Range, [{
        key: '_filterValue',
        value: function _filterValue(type) {
            var _props = this.props,
                value = _props.value,
                responsive = _props.responsive;

            if (type == 'unit') {
                return value ? value.unit || 'px' : 'px';
            } else {
                return value ? responsive ? value[window.qubelyDevice] || '' : value : '';
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(val, type) {
            var _props2 = this.props,
                value = _props2.value,
                onChange = _props2.onChange,
                responsive = _props2.responsive,
                min = _props2.min,
                max = _props2.max,
                unit = _props2.unit;

            var final = value || {};
            if (unit && !final.hasOwnProperty('unit')) {
                final.unit = 'px';
            }
            if (type == 'unit' && responsive) {
                final = value || {};
                final.unit = val;
            } else {
                final = responsive ? Object.assign({}, value, _defineProperty({}, window.qubelyDevice, val)) : val;
                final = min ? final < min ? min : final : final < 0 ? 0 : final;
                final = max ? final > max ? max : final : final > 1000 ? 1000 : final;
            }
            onChange(final);
            this.setState({ current: final });
        }
    }, {
        key: '_minMax',
        value: function _minMax(type) {
            var unit = this._filterValue('unit');
            return this.props[type] && this.props[type] != 0 ? unit == 'em' ? Math.round(this.props[type] / 16) : this.props[type] : 0;
        }
    }, {
        key: '_steps',
        value: function _steps() {
            var unit = this._filterValue('unit');
            return unit == 'em' ? .001 : this.props.step || 1;
        }
    }, {
        key: 'updateDevice',
        value: function updateDevice(updatedDevice) {
            var _props3 = this.props,
                value = _props3.value,
                onChange = _props3.onChange,
                device = _props3.device;

            if (typeof device !== 'undefined') {
                onChange(_extends({}, value, { device: updatedDevice }));
            }
            this.setState({ device: updatedDevice });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props4 = this.props,
                unit = _props4.unit,
                label = _props4.label,
                responsive = _props4.responsive,
                device = _props4.device,
                onDeviceChange = _props4.onDeviceChange;

            var responsiveDevice = responsive ? device ? device : this.state.device : window.qubelyDevice;
            return React.createElement(
                'div',
                { className: 'qubely-field-range qubely-field ' + (responsive ? 'qubely-responsive' : '') },
                (label || unit || responsive) && React.createElement(
                    'div',
                    { className: 'qubely-d-flex qubely-align-center qubely-mb-10' },
                    label && React.createElement(
                        'div',
                        null,
                        React.createElement(
                            'label',
                            { htmlFor: 'input' },
                            label
                        )
                    ),
                    responsive && React.createElement(_Device2.default, { device: responsiveDevice, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                            device && onDeviceChange ? onDeviceChange(val) : _this2.updateDevice(val);
                        } }),
                    unit && React.createElement(
                        'div',
                        { className: 'qubely-unit-btn-group qubely-ml-auto' },
                        ((typeof unit === 'undefined' ? 'undefined' : _typeof(unit)) == 'object' ? unit : ['px', 'em', '%']).map(function (value) {
                            return React.createElement(
                                'button',
                                { className: _this2.props.value && value == _this2.props.value.unit ? 'active' : '',
                                    onClick: function onClick() {
                                        _this2.setSettings(value, 'unit');
                                        _this2.setSettings(_this2._filterValue(), 'range');
                                    }
                                },
                                value
                            );
                        })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: 'qubely-input-range' },
                        React.createElement('input', {
                            type: 'range',
                            min: this._minMax('min'),
                            max: this._minMax('max'),
                            value: this._filterValue(),
                            step: this._steps(),
                            onChange: function onChange(e) {
                                return _this2.setSettings(_this2._filterValue() == e.target.value ? '' : e.target.value, 'range');
                            }
                        }),
                        React.createElement('input', _extends({ type: 'number', step: this._steps(), onChange: function onChange(v) {
                                return _this2.setSettings(v.target.value, 'range');
                            }, value: this._filterValue() + (this.props.suffix ? this.props.suffix : '') }, this.props.suffix && { disabled: true }))
                    )
                )
            );
        }
    }]);

    return Range;
}(Component);

exports.default = Range;

/***/ }),

/***/ "./src/components/fields/Select.js":
/*!*****************************************!*\
  !*** ./src/components/fields/Select.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/select.scss */ "./src/components/css/select.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var Select = function (_Component) {
    _inherits(Select, _Component);

    function Select(props) {
        _classCallCheck(this, Select);

        var _this = _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));

        _this.state = { current: _this._filterValue() };
        return _this;
    }

    _createClass(Select, [{
        key: '_filterValue',
        value: function _filterValue() {
            var _props = this.props,
                value = _props.value,
                responsive = _props.responsive,
                responsiveGroup = _props.responsiveGroup;

            return value ? responsive || responsiveGroup ? value[window.qubelyDevice] || '' : value : '';
        }
    }, {
        key: 'setSettings',
        value: function setSettings(val) {
            var _props2 = this.props,
                value = _props2.value,
                onChange = _props2.onChange,
                responsive = _props2.responsive,
                responsiveGroup = _props2.responsiveGroup;

            var final = responsive || responsiveGroup ? Object.assign({}, value, _defineProperty({}, window.qubelyDevice, val)) : val;
            onChange(final);
            this.setState({ current: final });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props3 = this.props,
                label = _props3.label,
                responsive = _props3.responsive,
                device = _props3.device,
                onDeviceChange = _props3.onDeviceChange;

            var direction = this.props.direction == 'left' ? '  direction-left' : this.props.direction == 'right' ? '  direction-right' : '';

            return React.createElement(
                'div',
                { className: "qubely-field-select qubely-field " + (this.props.responsive ? 'qubely-responsive' : '') },
                responsive && React.createElement(
                    Fragment,
                    null,
                    device ? React.createElement(_Device2.default, { device: device, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                            return onDeviceChange(val);
                        } }) : React.createElement(_Device2.default, { onChange: function onChange(val) {
                            return _this2.setState({ current: val });
                        } })
                ),
                label && React.createElement(
                    'label',
                    null,
                    label
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: "qubely-popup-select " + direction, ref: function ref(node) {
                                return _this2.node = node;
                            } },
                        this.props.clear && this._filterValue() != '' && React.createElement(
                            'span',
                            { className: 'qubely-clear', onClick: function onClick() {
                                    return _this2.setSettings("");
                                } },
                            React.createElement('i', { className: 'fas fa-times' })
                        ),
                        React.createElement(
                            'select',
                            { value: this._filterValue(), onChange: function onChange(e) {
                                    return _this2.setSettings(e.target.value);
                                } },
                            (this.props.noValue || this.props.clear) && React.createElement(
                                'option',
                                { value: '' },
                                this.props.noValue || this.props.initial ? this.props.initial : __('Select')
                            ),
                            this.props.options.map(function (item) {
                                return React.createElement(
                                    'option',
                                    { value: Array.isArray(item) ? item[0] : item, onClick: function onClick() {
                                            return _this2.setSettings(Array.isArray(item) ? item[0] : item);
                                        } },
                                    Array.isArray(item) ? item[1] : item
                                );
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Select;
}(Component);

exports.default = Select;

/***/ }),

/***/ "./src/components/fields/Selector.js":
/*!*******************************************!*\
  !*** ./src/components/fields/Selector.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/selector.scss */ "./src/components/css/selector.scss");

var _Select = __webpack_require__(/*! ./Select */ "./src/components/fields/Select.js");

var _Select2 = _interopRequireDefault(_Select);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var Selector = function (_Component) {
    _inherits(Selector, _Component);

    function Selector() {
        _classCallCheck(this, Selector);

        return _possibleConstructorReturn(this, (Selector.__proto__ || Object.getPrototypeOf(Selector)).apply(this, arguments));
    }

    _createClass(Selector, [{
        key: 'setSettings',
        value: function setSettings(value) {
            this.props.onChange(value.target.getAttribute('data-value'));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var value = this.props.value;

            var defaultVal = this.props.defaultVal || [['h1', 'Heading 1'], ['h2', 'Heading 2'], ['h3', 'Heading 3'], ['h4', 'Heading 4'], ['h5', 'Heading 5'], ['h6', 'Heading 6'], ['p', 'Paragraph'], ['span', 'span'], ['div', 'div']];
            return React.createElement(
                'div',
                { className: 'qubely-field-selector qubely-field' },
                this.props.label && React.createElement(
                    'label',
                    null,
                    this.props.label
                ),
                this.props.dropdown == 'yes' ? React.createElement(_Select2.default, {
                    value: value,
                    options: defaultVal,
                    onChange: function onChange(val) {
                        return _this2.setSettings({ val: val });
                    }
                }) : React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: 'qubely-selector-button-group' },
                        defaultVal.map(function (data) {
                            var _data = _slicedToArray(data, 2),
                                tag = _data[0],
                                description = _data[1];

                            return React.createElement(
                                'button',
                                { className: "qubely-button" + (tag == value ? ' active' : ''), onClick: function onClick(val) {
                                        return _this2.setSettings(val);
                                    }, 'data-value': tag },
                                _icons2.default[tag] && _icons2.default[tag],
                                description
                            );
                        })
                    )
                )
            );
        }
    }]);

    return Selector;
}(Component);

exports.default = Selector;

/***/ }),

/***/ "./src/components/fields/Separator.js":
/*!********************************************!*\
  !*** ./src/components/fields/Separator.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/separator.scss */ "./src/components/css/separator.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var Separator = function (_Component) {
    _inherits(Separator, _Component);

    function Separator() {
        _classCallCheck(this, Separator);

        return _possibleConstructorReturn(this, (Separator.__proto__ || Object.getPrototypeOf(Separator)).apply(this, arguments));
    }

    _createClass(Separator, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                label = _props.label,
                customClassName = _props.customClassName;

            return React.createElement(
                'div',
                { className: 'qubely-field-separator qubely-field ' + (label != '' ? 'qubely-has-label' : '') + ' ' + (customClassName ? customClassName : '') },
                label && React.createElement(
                    'label',
                    null,
                    label
                )
            );
        }
    }]);

    return Separator;
}(Component);

exports.default = Separator;

/***/ }),

/***/ "./src/components/fields/Shape.js":
/*!****************************************!*\
  !*** ./src/components/fields/Shape.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/shape.scss */ "./src/components/css/shape.scss");

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Color = __webpack_require__(/*! ./Color */ "./src/components/fields/Color.js");

var _Color2 = _interopRequireDefault(_Color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    CheckboxControl = _wp$components.CheckboxControl,
    Tooltip = _wp$components.Tooltip,
    Dropdown = _wp$components.Dropdown;

var Shape = function (_Component) {
    _inherits(Shape, _Component);

    function Shape(props) {
        _classCallCheck(this, Shape);

        var _this = _possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).call(this, props));

        _this.renderShapeOptions = function () {
            var value = _this.props.value;

            var shapes = ['clouds-flat', 'clouds-opacity', 'paper-torn', 'pointy-wave', 'rocky-mountain', 'single-wave', 'slope-opacity', 'slope', 'waves3-opacity', 'drip', 'turning-slope', 'hill-wave', 'hill', 'line-wave', 'swirl', 'wavy-opacity', 'zigzag-shark'];

            if (value.style) {
                shapes = shapes.filter(function (item) {
                    return item.toLowerCase().search(value.style.toLowerCase()) == -1;
                });
                shapes = [value.style].concat(_toConsumableArray(shapes));
            }

            return React.createElement(
                'ul',
                { className: 'qubely-shape-picker-options' },
                shapes.map(function (item) {
                    return React.createElement('li', { className: 'qubely-shape-picker-option', onClick: function onClick() {
                            return _this.setSettings('style', item);
                        }, dangerouslySetInnerHTML: { __html: qubely_admin.shapes[item] }, style: value.style == item ? { fill: value.color } : {} });
                })
            );
        };

        _this.state = { showShapeOptions: false };
        return _this;
    }

    _createClass(Shape, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var value = this.props.value;

            this.props.onChange(Object.assign({}, { openShape: 0 }, value || {}));
        }
    }, {
        key: 'setSettings',
        value: function setSettings(type, val) {
            var _props = this.props,
                value = _props.value,
                onChange = _props.onChange;

            var styleVal = type == 'style' && val == '' ? { openShape: 0 } : { openShape: 1 };
            onChange(Object.assign({}, value, styleVal, _defineProperty({}, type, val)));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var value = this.props.value;
            var showShapeOptions = this.state.showShapeOptions;

            return React.createElement(
                'div',
                { className: 'qubely-field-shape qubely-field' },
                React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: 'qubely-field qubely-shape-picker-wrapper' },
                        React.createElement(Dropdown, {
                            className: 'qubely-field-child qubely-shape-picker ' + (value.style ? 'has-value' : ''),
                            contentClassName: 'qubely-shape-picker-content',
                            position: 'bottom center',
                            renderToggle: function renderToggle(_ref) {
                                var isOpen = _ref.isOpen,
                                    onToggle = _ref.onToggle;
                                return React.createElement(
                                    'span',
                                    { onClick: onToggle, 'aria-expanded': isOpen },
                                    value.style ? React.createElement('div', { className: 'qubely-field-shape-value', dangerouslySetInnerHTML: { __html: qubely_admin.shapes[value.style] } }) : React.createElement(
                                        'div',
                                        { className: 'qubely-field-shape-placeholder' },
                                        React.createElement(
                                            'span',
                                            null,
                                            'Select Shape'
                                        ),
                                        React.createElement(
                                            'span',
                                            { className: 'qubely-icon' },
                                            showShapeOptions ? _icons2.default.arrow_up : _icons2.default.arrow_down,
                                            '  '
                                        )
                                    )
                                );
                            },
                            renderContent: function renderContent() {
                                return _this2.renderShapeOptions();
                            }
                        }),
                        value.style && React.createElement(
                            Tooltip,
                            { text: __('Clear') },
                            React.createElement(
                                'div',
                                { className: 'qubely-ml-10' },
                                React.createElement(
                                    'span',
                                    { className: 'qubely-shape-clear', onClick: function onClick() {
                                            return _this2.setSettings('style', '');
                                        }, role: 'button' },
                                    React.createElement('i', { className: 'fas fa-undo' })
                                )
                            )
                        )
                    ),
                    value.openShape == 1 && React.createElement(_Color2.default, {
                        label: __('Color'),
                        value: value && value.color,
                        onChange: function onChange(val) {
                            return _this2.setSettings('color', val);
                        } }),
                    value.openShape == 1 && React.createElement(
                        Fragment,
                        null,
                        React.createElement(_Range2.default, {
                            label: __('Shape Width'),
                            min: 100,
                            max: 1000,
                            responsive: true,
                            unit: ['px', 'em', '%'],
                            value: value.width,
                            onChange: function onChange(val) {
                                return _this2.setSettings('width', val);
                            },
                            step: 1,
                            beforeIcon: 'leftright',
                            allowReset: true
                        }),
                        React.createElement(_Range2.default, { label: __('Shape Height'), min: 0, max: 500, responsive: true, unit: ['px', 'em', '%'], value: value.height, onChange: function onChange(val) {
                                return _this2.setSettings('height', val);
                            }, step: 1, beforeIcon: 'sort', allowReset: true })
                    ),
                    value.openShape == 1 && React.createElement(CheckboxControl, { label: __('Bring to front'), isChecked: value.front == 1 ? true : false, onChange: function onChange(val) {
                            return _this2.setSettings('front', val ? 1 : 0);
                        } })
                )
            );
        }
    }]);

    return Shape;
}(Component);

exports.default = Shape;

/***/ }),

/***/ "./src/components/fields/Styles.js":
/*!*****************************************!*\
  !*** ./src/components/fields/Styles.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/styles.scss */ "./src/components/css/styles.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;

var Styles = function (_Component) {
    _inherits(Styles, _Component);

    function Styles() {
        _classCallCheck(this, Styles);

        return _possibleConstructorReturn(this, (Styles.__proto__ || Object.getPrototypeOf(Styles)).apply(this, arguments));
    }

    _createClass(Styles, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                label = _props.label,
                value = _props.value,
                options = _props.options,
                _props$columns = _props.columns,
                columns = _props$columns === undefined ? 2 : _props$columns,
                proUpgradation = _props.proUpgradation,
                onChange = _props.onChange;


            return React.createElement(
                "div",
                { className: "qubely-field qubely-field-styles" },
                label && React.createElement(
                    "label",
                    null,
                    label
                ),
                React.createElement(
                    "div",
                    { className: "qubely-field-style-list qubely-field-style-columns-" + columns },
                    options.map(function (data) {
                        return React.createElement(
                            "div",
                            _extends({
                                role: "button", tabindex: "0", "aria-label": data.label ? data.label : ''
                            }, !data.pro && { onClick: function onClick() {
                                    return onChange(data.value);
                                } }, {
                                className: "" + (value == data.value ? 'qubely-active' : '') + (data.pro ? ' qubely-pro-layout' : '')
                            }),
                            data.icon && React.createElement(
                                "span",
                                { className: "qubely-layout-style qubely-field-style-icon" },
                                data.icon
                            ),
                            data.svg && React.createElement(
                                "span",
                                { className: "qubely-layout-style qubely-field-style-svg" },
                                data.svg
                            ),
                            data.img && React.createElement(
                                "span",
                                { className: "qubely-layout-style qubely-field-style-img" },
                                data.img
                            ),
                            data.label && React.createElement(
                                "span",
                                { className: "qubely-field-style-label" },
                                data.label
                            )
                        );
                    })
                ),
                proUpgradation && React.createElement(
                    "div",
                    { className: "qubely-field-pro-upgrade" },
                    React.createElement(
                        "div",
                        { className: "qubely-logo" },
                        React.createElement("img", { src: qubely_admin.plugin + 'assets/img/Qubely-Q.svg', alt: __('Qubely-Q') })
                    ),
                    React.createElement(
                        "div",
                        { className: "qubely-upgrade-message" },
                        React.createElement(
                            "span",
                            { className: "qubely-upgrade-message-title" },
                            __('Upgrade to Pro')
                        ),
                        React.createElement(
                            "span",
                            { className: "qubely-upgrade-message-description" },
                            __('Get all features of post grid at your disposal by upgrading to pro version')
                        )
                    ),
                    React.createElement(
                        "a",
                        { className: "qubely-upgrade-button", href: 'https://www.themeum.com/product/qubely', target: "_blank" },
                        __('Upgrade Now')
                    )
                )
            );
        }
    }]);

    return Styles;
}(Component);

exports.default = Styles;

/***/ }),

/***/ "./src/components/fields/Tab.js":
/*!**************************************!*\
  !*** ./src/components/fields/Tab.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var Tab = function (_Component) {
    _inherits(Tab, _Component);

    function Tab() {
        _classCallCheck(this, Tab);

        return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
    }

    _createClass(Tab, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                children = _props.children,
                onTabChange = _props.onTabChange;

            onTabChange && onTabChange();
            return React.createElement(
                Fragment,
                null,
                " ",
                Array.isArray(children) ? children.map(function (item) {
                    return item;
                }) : children,
                " "
            );
        }
    }]);

    return Tab;
}(Component);

exports.default = Tab;

/***/ }),

/***/ "./src/components/fields/Tabs.js":
/*!***************************************!*\
  !*** ./src/components/fields/Tabs.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/panelTabs.scss */ "./src/components/css/panelTabs.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var Tooltip = wp.components.Tooltip;

var Tabs = function (_Component) {
    _inherits(Tabs, _Component);

    function Tabs(props) {
        _classCallCheck(this, Tabs);

        var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

        _this.state = { activeTab: _this.props.children[0].props.tabTitle };
        return _this;
    }

    _createClass(Tabs, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var tabs = this.props.children;
            var activeTab = this.state.activeTab;

            return React.createElement(
                'div',
                { className: 'qubely-field qubely-field-tabs ' + (this.props.label ? 'qubely-has-label' : '') },
                React.createElement(
                    'div',
                    { className: 'qubely-field-tab-header' },
                    this.props.label && React.createElement(
                        'label',
                        null,
                        this.props.label
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-tab-menus' },
                        tabs.map(function (tab) {
                            return React.createElement(
                                Tooltip,
                                { text: __(tab.props.tabTitle) },
                                React.createElement(
                                    'button',
                                    { className: "qubely-tab-menu " + (tab.props.tabTitle === activeTab ? 'active' : ''), onClick: function onClick() {
                                            return _this2.setState({ activeTab: tab.props.tabTitle });
                                        } },
                                    tab.props.tabTitle
                                )
                            );
                        })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-tab-items' },
                    tabs.map(function (tab) {
                        return tab.props.tabTitle === activeTab ? tab : "";
                    })
                )
            );
        }
    }]);

    return Tabs;
}(Component);

exports.default = Tabs;

/***/ }),

/***/ "./src/components/fields/Templates.js":
/*!********************************************!*\
  !*** ./src/components/fields/Templates.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/template.scss */ "./src/components/css/template.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var Spinner = wp.components.Spinner;

var Templates = function (_Component) {
    _inherits(Templates, _Component);

    function Templates(props) {
        _classCallCheck(this, Templates);

        var _this = _possibleConstructorReturn(this, (Templates.__proto__ || Object.getPrototypeOf(Templates)).call(this, props));

        _this._handlePrev = function () {
            if (_this.state.currentPage > 1) {
                _this.setState(function (state) {
                    var currentMargin = state.currentMargin - state.slideWidth * 2;
                    if (currentMargin < 0) {
                        currentMargin = 0;
                    }
                    return {
                        currentPage: state.currentPage - 1,
                        currentMargin: currentMargin
                    };
                });
            }
        };

        _this._handleNext = function () {
            if (_this.state.currentPage < _this.state.maxPage) {
                _this.setState(function (state) {
                    var currentMargin = state.currentMargin + state.slideWidth * 2;
                    if (currentMargin > state.maxMargin) {
                        currentMargin = state.maxMargin;
                    }
                    return {
                        currentPage: state.currentPage + 1,
                        currentMargin: currentMargin
                    };
                });
            }
        };

        _this._handleDot = function (index) {
            var currentMargin = index * _this.state.slideWidth * 2;

            if (currentMargin < 0) {
                currentMargin = 0;
            } else if (currentMargin > _this.state.maxMargin) {
                currentMargin = _this.state.maxMargin;
            }

            _this.setState({
                currentPage: index + 1,
                currentMargin: currentMargin
            });
        };

        _this.handleTemplateSelection = function (selectedTemplate) {
            var _this$props = _this.props,
                updateStyle = _this$props.updateStyle,
                attributes = _this$props.attributes;

            updateStyle(_extends({ attributes: attributes }, selectedTemplate));
        };

        _this.state = {
            templates: [],
            slideCount: 0,
            slideWidth: 0,
            sliderWidth: 0,
            maxMargin: 0,
            currentPage: 1,
            maxPage: 1,
            currentMargin: 0
        };
        return _this;
    }

    _createClass(Templates, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var templates = this.props.templates;

            var slideWidth = this.slider.clientWidth;
            var slideCount = Object.keys(templates).length;
            var sliderWidth = slideCount * .5 * slideWidth;

            this.setState({
                sliderWidth: sliderWidth,
                slideWidth: slideWidth * .5,
                maxMargin: sliderWidth - slideWidth,
                slideCount: slideCount,
                maxPage: Math.ceil(slideCount / 2)
            });

            /**
             * Fetch Template JSON from Server
             * @Warning: Please don't remove this code without asking @delowardev
             */

            /*
                const {
                    endPoint
                } = this.props
                 fetch(`https://jsonplaceholder.typicode.com/${endPoint}`)
                .then(response => {
                    response.json().then(values =>
                        this.setState({
                            templates: values
                        }))
                }).catch(error => {
                    console.log('could not retrieve templates : ', error)
                });
            */
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                label = _props.label,
                templates = _props.templates;

            return React.createElement(
                'div',
                { className: 'qubely-templates-container' },
                React.createElement(
                    'h4',
                    null,
                    label || __('Templates')
                ),
                templates ? React.createElement(
                    'div',
                    { className: 'qubely-template-slider-container' },
                    React.createElement(
                        'div',
                        { className: 'qubely-template-slider-wrap' },
                        React.createElement(
                            'div',
                            { className: 'qubely-template-slider', ref: function ref(slider) {
                                    return _this2.slider = slider;
                                } },
                            React.createElement(
                                'div',
                                {
                                    className: 'qubely-template-slider-inner',
                                    style: {
                                        width: this.state.sliderWidth + 'px',
                                        marginLeft: '-' + this.state.currentMargin + 'px'
                                    } },
                                Object.keys(templates).map(function (key, _index) {
                                    var thumbnail = templates[key].thumbnail;
                                    var thumbnail_src = qubely_pro_admin.plugin + 'assets/img/templates/placeholder.svg';
                                    if (thumbnail !== undefined) {
                                        if (thumbnail.type === 'local') {
                                            if (thumbnail.src !== undefined && thumbnail.src !== '') {
                                                thumbnail_src = qubely_pro_admin.plugin + 'assets/img/templates/' + thumbnail.src;
                                            }
                                        } else {
                                            if (thumbnail.src !== undefined && thumbnail.src !== '') {
                                                thumbnail_src = thumbnail.src;
                                            }
                                        }
                                    }
                                    return React.createElement(
                                        'div',
                                        { className: 'qubely-template-slide', style: { width: _this2.state.slideWidth + 'px' } },
                                        React.createElement(
                                            'div',
                                            { className: 'qubely-template-slide-inner' },
                                            React.createElement('img', { src: thumbnail_src, alt: key, height: '240', width: '210' }),
                                            React.createElement(
                                                'button',
                                                { onClick: function onClick() {
                                                        return _this2.handleTemplateSelection(templates[key]);
                                                    } },
                                                __('Apply')
                                            )
                                        )
                                    );
                                })
                            )
                        )
                    ),
                    this.state.maxPage > 1 && React.createElement(
                        'div',
                        { className: 'template-slider-controls' },
                        React.createElement(
                            'button',
                            { className: 'template-slider-nav', onClick: function onClick() {
                                    return _this2._handlePrev();
                                }, disabled: this.state.currentPage === 1 },
                            React.createElement('span', { className: 'fas fa-chevron-left' })
                        ),
                        Array.from({ length: this.state.maxPage }, function (val, index) {
                            return React.createElement(
                                'button',
                                { className: 'template-slider-dot ' + (_this2.state.currentPage === index + 1 ? 'active' : ''), onClick: function onClick() {
                                        return _this2._handleDot(index);
                                    } },
                                React.createElement(
                                    'span',
                                    null,
                                    index + 1
                                )
                            );
                        }),
                        React.createElement(
                            'button',
                            { className: 'template-slider-nav', onClick: function onClick() {
                                    return _this2._handleNext();
                                }, disabled: this.state.currentPage === this.state.maxPage },
                            React.createElement('span', { className: 'fas fa-chevron-right' })
                        )
                    )
                ) : React.createElement(
                    'div',
                    { className: 'qubely-is_loading' },
                    React.createElement(Spinner, null)
                )
            );
        }
    }]);

    return Templates;
}(Component);

exports.default = Templates;

/***/ }),

/***/ "./src/components/fields/Toggle.js":
/*!*****************************************!*\
  !*** ./src/components/fields/Toggle.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/toggle.scss */ "./src/components/css/toggle.scss");

var _Device = __webpack_require__(/*! ./Device */ "./src/components/fields/Device.js");

var _Device2 = _interopRequireDefault(_Device);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var ToggleControl = wp.components.ToggleControl;

var Toggle = function (_Component) {
    _inherits(Toggle, _Component);

    function Toggle(props) {
        _classCallCheck(this, Toggle);

        var _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props));

        _this.state = { current: _this._filterValue() };
        return _this;
    }

    _createClass(Toggle, [{
        key: '_filterValue',
        value: function _filterValue() {
            return this.props.value ? this.props.responsive ? this.props.value[window.qubelyDevice] || '' : this.props.value : '';
        }
    }, {
        key: 'setSettings',
        value: function setSettings(val) {
            var _props = this.props,
                value = _props.value,
                responsive = _props.responsive,
                onChange = _props.onChange;

            var final = responsive ? Object.assign({}, value, _defineProperty({}, window.qubelyDevice, val)) : val;
            onChange(final);
            this.setState({ current: val });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                label = _props2.label,
                customClassName = _props2.customClassName,
                responsive = _props2.responsive,
                device = _props2.device,
                onDeviceChange = _props2.onDeviceChange;

            return React.createElement(
                'div',
                { className: 'qubely-field-toggle qubely-field' + (this.props.responsive ? ' qubely-responsive' : '') + (customClassName ? ' ' + customClassName : '') },
                React.createElement(
                    'label',
                    null,
                    label && label,
                    responsive && React.createElement(
                        Fragment,
                        null,
                        device ? React.createElement(_Device2.default, { device: device, commonResponsiveDevice: device, className: 'qubely-ml-10', onChange: function onChange(val) {
                                return onDeviceChange(val);
                            } }) : React.createElement(_Device2.default, { onChange: function onChange(val) {
                                return _this2.setState({ current: val });
                            } })
                    )
                ),
                React.createElement(ToggleControl, {
                    checked: this._filterValue(),
                    onChange: function onChange(val) {
                        return _this2.setSettings(val);
                    }
                })
            );
        }
    }]);

    return Toggle;
}(Component);

exports.default = Toggle;

/***/ }),

/***/ "./src/components/fields/Typography.js":
/*!*********************************************!*\
  !*** ./src/components/fields/Typography.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ./Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

var _Toggle = __webpack_require__(/*! ./Toggle */ "./src/components/fields/Toggle.js");

var _Toggle2 = _interopRequireDefault(_Toggle);

__webpack_require__(/*! ../css/typography.scss */ "./src/components/css/typography.scss");

var _FontList = __webpack_require__(/*! ./assets/FontList */ "./src/components/fields/assets/FontList.js");

var _FontList2 = _interopRequireDefault(_FontList);

var _icons = __webpack_require__(/*! ../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    Dropdown = _wp$components.Dropdown,
    Tooltip = _wp$components.Tooltip;

var Typography = function (_Component) {
    _inherits(Typography, _Component);

    function Typography(props) {
        _classCallCheck(this, Typography);

        var _this = _possibleConstructorReturn(this, (Typography.__proto__ || Object.getPrototypeOf(Typography)).call(this, props));

        _this.handleClickOutside = function (event) {
            var _this$state = _this.state,
                showFontFamiles = _this$state.showFontFamiles,
                showFontWeights = _this$state.showFontWeights;

            if (showFontFamiles) {
                var qubelyFontFamilyWrapper = _this.refs.qubelyFontFamilyWrapper;
                var qubelySelectedFontFamily = _this.refs.qubelySelectedFontFamily;
                if (qubelyFontFamilyWrapper && !qubelyFontFamilyWrapper.contains(event.target)) {
                    qubelySelectedFontFamily && !qubelySelectedFontFamily.contains(event.target) && _this.setState({ showFontFamiles: false });
                }
            } else if (showFontWeights) {
                var qubelyFontWeightWrapper = _this.refs.qubelyFontWeightWrapper;
                var qubelySelectedFontWeight = _this.refs.qubelySelectedFontWeight;
                if (qubelyFontWeightWrapper && !qubelyFontWeightWrapper.contains(event.target)) {
                    qubelySelectedFontWeight && !qubelySelectedFontWeight.contains(event.target) && _this.setState({ showFontWeights: false });
                }
            }
        };

        _this.findArrayIndex = function (font) {
            var index = 0;
            var qubelyFonts = JSON.parse(localStorage.getItem('qubelyFonts'));
            while (index < 10) {
                if (qubelyFonts[index].n == font) {
                    break;
                }
                index++;
            }
            return index;
        };

        _this.state = {
            showFontFamily: false,
            filterText: '',
            changeType: '',
            showFontFamiles: false,
            showFontWeights: false
        };
        return _this;
    }

    _createClass(Typography, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.addEventListener('mousedown', this.handleClickOutside);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('mousedown', this.handleClickOutside);
        }
    }, {
        key: '_getWeight',
        value: function _getWeight() {
            var value = this.props.value;

            if (value && value.family) {
                return _FontList2.default.filter(function (o) {
                    return o.n == value.family;
                })[0].v;
            } else {
                return [100, 200, 300, 400, 500, 600, 700, 800, 900];
            }
        }
    }, {
        key: 'setSettings',
        value: function setSettings(type, val) {
            var prevValue = this.props.value;
            if (val == 'default' || val == 'Default') {
                if (type == 'family') {
                    delete prevValue.family;
                    delete prevValue.type;
                } else if (type == 'weight') {
                    delete prevValue.weight;
                }
                this.props.onChange(Object.assign({}, prevValue));
            } else {
                if (type == 'family' && val) {
                    var _val;

                    val = (_val = {}, _defineProperty(_val, type, val), _defineProperty(_val, 'type', _FontList2.default.filter(function (o) {
                        return o.n == val;
                    })[0].f), _val);
                } else {
                    val = _defineProperty({}, type, val);
                }
                this.props.onChange(Object.assign({}, prevValue, val));
            }
        }
    }, {
        key: 'handleTypographyChange',
        value: function handleTypographyChange(val) {
            this.setSettings('family', val);

            var qubelyFonts = JSON.parse(localStorage.getItem('qubelyFonts'));
            var selectedFont = _FontList2.default.filter(function (font) {
                return font.n == val;
            });

            if (qubelyFonts) {
                var oldFont = qubelyFonts.filter(function (font) {
                    return font.n == val;
                }).length > 0;
                if (oldFont) {
                    var _qubelyFonts;

                    var index = this.findArrayIndex(val);
                    qubelyFonts.splice(index, 1);
                    (_qubelyFonts = qubelyFonts).unshift.apply(_qubelyFonts, _toConsumableArray(selectedFont));
                } else {
                    var _qubelyFonts2;

                    (_qubelyFonts2 = qubelyFonts).unshift.apply(_qubelyFonts2, _toConsumableArray(selectedFont));
                    qubelyFonts.length > 10 && qubelyFonts.pop();
                }
            } else {
                qubelyFonts = [].concat(_toConsumableArray(selectedFont));
            }

            localStorage.setItem('qubelyFonts', JSON.stringify(qubelyFonts));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                device = _props.device,
                _onDeviceChange = _props.onDeviceChange;
            var _state = this.state,
                showFontFamiles = _state.showFontFamiles,
                showFontWeights = _state.showFontWeights,
                filterText = _state.filterText;

            var qubelyFonts = JSON.parse(localStorage.getItem('qubelyFonts'));
            var filteredFontList = [],
                newFontList = _FontList2.default;
            if (qubelyFonts) {
                filteredFontList = _FontList2.default.filter(function (font) {
                    return !qubelyFonts.filter(function (qubelyFont) {
                        return qubelyFont.n == font.n || font.n == 'Default';
                    }).length > 0;
                });
                newFontList = [{ n: 'Default', f: 'default', v: [] }].concat(_toConsumableArray(qubelyFonts), _toConsumableArray(filteredFontList));
            }
            if (filterText.length >= 2) {
                newFontList = newFontList.filter(function (item) {
                    return item.n.toLowerCase().search(filterText.toLowerCase()) !== -1;
                });
            }
            return React.createElement(
                'div',
                { className: 'qubely-field qubely-field-typography' },
                React.createElement(_Toggle2.default, {
                    value: value.openTypography,
                    label: label || __('Typography'),
                    onChange: function onChange(val) {
                        return _this2.setSettings('openTypography', val);
                    }
                }),
                value && value.openTypography == 1 && React.createElement(
                    Fragment,
                    null,
                    React.createElement(_Range2.default, {
                        label: __('Font Size'),
                        value: value && value.size,
                        onChange: function onChange(val) {
                            return _this2.setSettings('size', val);
                        },
                        min: 8,
                        max: 200,
                        step: 1,
                        unit: true,
                        responsive: true,
                        device: device,
                        onDeviceChange: function onDeviceChange(value) {
                            return _onDeviceChange(value);
                        }
                    }),
                    React.createElement(
                        'div',
                        { className: 'qubely-field-group qubely-65-35' },
                        React.createElement(
                            'div',
                            { className: 'qubely-field qubely-field-font-family' },
                            React.createElement(
                                'label',
                                null,
                                __('Font Family')
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-font-family-picker', ref: 'qubelySelectedFontFamily',
                                    onClick: function onClick() {
                                        _this2.setState({ showFontFamiles: !showFontFamiles });
                                    } },
                                React.createElement(
                                    'span',
                                    { className: 'qubely-font-family-search-wrapper' },
                                    React.createElement('input', {
                                        type: 'text',
                                        className: 'qubely-font-family-search' + (!showFontFamiles ? ' selected-font-family' : ''),
                                        placeholder: __(showFontFamiles ? 'Search' : value.family || 'Select'),
                                        value: filterText,
                                        onChange: function onChange(e) {
                                            return _this2.setState({ filterText: e.target.value });
                                        } }),
                                    React.createElement(
                                        'span',
                                        { className: 'qubely-font-select-icon' },
                                        '   ',
                                        showFontFamiles ? _icons2.default.arrow_up : _icons2.default.arrow_down,
                                        '  '
                                    )
                                )
                            )
                        ),
                        showFontFamiles && React.createElement(
                            'div',
                            { className: 'qubely-font-family-option-wrapper', ref: 'qubelyFontFamilyWrapper' },
                            React.createElement(
                                'div',
                                { className: 'qubely-font-family-options' },
                                newFontList.length > 0 ? newFontList.map(function (font, index) {
                                    return React.createElement(
                                        'div',
                                        { className: '' + (font.n == value.family ? 'qubely-active-font-family' : 'qubely-font-family-option'),
                                            id: 'qubely-font-family-' + index,
                                            onClick: function onClick() {
                                                _this2.setState({ showFontFamiles: false, filterText: '' });
                                                font.n == 'Default' ? _this2.setSettings('family', 'default') : _this2.handleTypographyChange(font.n);
                                            }
                                        },
                                        font.n
                                    );
                                }) : React.createElement(
                                    'div',
                                    { className: 'qubely-font-family-option no-match', onClick: function onClick() {
                                            return _this2.setState({ showFontFamiles: false, filterText: '' });
                                        } },
                                    '  No matched font  '
                                )
                            )
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-field qubely-field-font-weight' },
                            React.createElement(
                                'label',
                                null,
                                __('Weight')
                            ),
                            React.createElement(
                                'div',
                                { className: 'qubely-font-weight-picker-wrapper', ref: 'qubelySelectedFontWeight', onClick: function onClick() {
                                        return _this2.setState({ showFontWeights: !showFontWeights });
                                    } },
                                React.createElement(
                                    'div',
                                    { className: 'qubely-font-weight-picker' },
                                    '  ',
                                    value.weight || 'Select',
                                    '   '
                                ),
                                React.createElement(
                                    'span',
                                    { className: 'qubely-font-select-icon' },
                                    '   ',
                                    showFontWeights ? _icons2.default.arrow_up : _icons2.default.arrow_down,
                                    '  '
                                )
                            )
                        ),
                        showFontWeights && React.createElement(
                            'div',
                            { className: 'qubely-font-weight-wrapper', ref: 'qubelyFontWeightWrapper' },
                            React.createElement(
                                'div',
                                { className: 'qubely-font-family-weights' },
                                ['Default'].concat(_toConsumableArray(this._getWeight())).map(function (font) {
                                    return React.createElement(
                                        'div',
                                        { className: '' + (font == value.weight ? 'qubely-active-font-weight' : 'qubely-font-weight-option'),
                                            onClick: function onClick() {
                                                _this2.setState({ showFontWeights: false });_this2.setSettings('weight', font);
                                            }
                                        },
                                        font
                                    );
                                })
                            )
                        )
                    ),
                    React.createElement(Dropdown, {
                        className: 'qubely-field',
                        renderToggle: function renderToggle(_ref) {
                            var isOpen = _ref.isOpen,
                                onToggle = _ref.onToggle;
                            return React.createElement(
                                'div',
                                { className: 'qubely-d-flex qubely-align-center' },
                                React.createElement(
                                    'label',
                                    null,
                                    __('Advanced Typography')
                                ),
                                React.createElement(
                                    'div',
                                    { className: 'qubely-field-button-list qubely-ml-auto' },
                                    React.createElement(
                                        'button',
                                        { className: (isOpen == 1 ? 'active' : '') + ' qubely-button qubely-button-rounded', onClick: onToggle, 'aria-expanded': isOpen },
                                        React.createElement('i', { className: 'fas fa-cog' })
                                    )
                                )
                            );
                        },
                        renderContent: function renderContent() {
                            return React.createElement(
                                'div',
                                { style: { padding: '15px' } },
                                !_this2.props.disableLineHeight && React.createElement(_Range2.default, {
                                    label: __('Line Height'),
                                    value: value && value.height,
                                    onChange: function onChange(val) {
                                        return _this2.setSettings('height', val);
                                    },
                                    min: 8,
                                    max: 200,
                                    step: 1,
                                    unit: true,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _onDeviceChange(value);
                                    }
                                }),
                                React.createElement(_Range2.default, {
                                    label: __('Letter Spacing'),
                                    value: value && value.spacing,
                                    onChange: function onChange(val) {
                                        return _this2.setSettings('spacing', val);
                                    },
                                    min: -10,
                                    max: 30,
                                    step: 1,
                                    unit: true,
                                    responsive: true,
                                    device: device,
                                    onDeviceChange: function onDeviceChange(value) {
                                        return _onDeviceChange(value);
                                    }
                                }),
                                React.createElement(
                                    'div',
                                    { className: 'qubely-field qubely-d-flex qubely-align-center' },
                                    React.createElement(
                                        'div',
                                        null,
                                        __('Text Transform')
                                    ),
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-field-button-list qubely-ml-auto' },
                                        ['none', 'capitalize', 'uppercase', 'lowercase'].map(function (data, index) {
                                            return React.createElement(
                                                Tooltip,
                                                { text: data.charAt(0).toUpperCase() + data.slice(1) },
                                                React.createElement(
                                                    'button',
                                                    { className: (value.transform == data ? 'active' : '') + ' qubely-button', key: index, onClick: function onClick() {
                                                            return _this2.setSettings('transform', data);
                                                        } },
                                                    data == 'none' && React.createElement('i', { className: 'fas fa-ban' }),
                                                    data == 'capitalize' && React.createElement(
                                                        'span',
                                                        null,
                                                        'Aa'
                                                    ),
                                                    data == 'uppercase' && React.createElement(
                                                        'span',
                                                        null,
                                                        'AA'
                                                    ),
                                                    data == 'lowercase' && React.createElement(
                                                        'span',
                                                        null,
                                                        'aa'
                                                    )
                                                )
                                            );
                                        })
                                    )
                                )
                            );
                        }
                    })
                )
            );
        }
    }]);

    return Typography;
}(Component);

exports.default = Typography;

/***/ }),

/***/ "./src/components/fields/Url.js":
/*!**************************************!*\
  !*** ./src/components/fields/Url.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/url.scss */ "./src/components/css/url.scss");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var _wp$components = wp.components,
    CheckboxControl = _wp$components.CheckboxControl,
    Tooltip = _wp$components.Tooltip;

var Url = function (_Component) {
    _inherits(Url, _Component);

    function Url(props) {
        _classCallCheck(this, Url);

        var _this = _possibleConstructorReturn(this, (Url.__proto__ || Object.getPrototypeOf(Url)).call(this, props));

        _this.state = {
            openAdvance: false
        };
        return _this;
    }

    _createClass(Url, [{
        key: 'setSettings',
        value: function setSettings(type, value) {
            this.props.onChange(Object.assign({}, this.props.value, _defineProperty({}, type, type == 'url' ? value : value == 1 ? 0 : 1)));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                value = _props.value,
                label = _props.label,
                placeholder = _props.placeholder,
                disableAdvanced = _props.disableAdvanced;
            var openAdvance = this.state.openAdvance;

            return React.createElement(
                'div',
                { className: 'qubely-field-url qubely-field' },
                label && React.createElement(
                    'label',
                    null,
                    label
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-field-child' },
                    React.createElement(
                        'div',
                        { className: 'qubely-url-input-group' },
                        React.createElement('input', {
                            placeholder: placeholder ? placeholder : 'https://',
                            type: 'url',
                            value: value.url || '',
                            onChange: function onChange(e) {
                                return _this2.setSettings('url', e.target.value);
                            }
                        }),
                        disableAdvanced !== true && React.createElement(
                            Tooltip,
                            { text: __("Advance Url Settings") },
                            React.createElement(
                                'button',
                                { className: 'qubely-button qubely-button-rounded ' + (openAdvance ? 'active' : ''), onClick: function onClick() {
                                        return _this2.setState({ openAdvance: !openAdvance });
                                    } },
                                React.createElement('i', { className: 'fas fa-cog' })
                            )
                        )
                    ),
                    openAdvance && React.createElement(
                        'div',
                        { className: 'qubely-url-advance-options' },
                        React.createElement(CheckboxControl, {
                            label: __('Open in new window'),
                            checked: value.target,
                            onChange: function onChange(val) {
                                return _this2.setSettings('target', !val);
                            }
                        }),
                        React.createElement(CheckboxControl, {
                            label: __('Add Nofollow'),
                            checked: value.nofollow,
                            onChange: function onChange(val) {
                                return _this2.setSettings('nofollow', !val);
                            }
                        })
                    )
                )
            );
        }
    }]);

    return Url;
}(Component);

exports.default = Url;

/***/ }),

/***/ "./src/components/fields/Wrapper.js":
/*!******************************************!*\
  !*** ./src/components/fields/Wrapper.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/wrapper.scss */ "./src/components/css/wrapper.scss");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var Wrapper = function (_Component) {
    _inherits(Wrapper, _Component);

    function Wrapper(props) {
        _classCallCheck(this, Wrapper);

        var _this = _possibleConstructorReturn(this, (Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).call(this, props));

        _this.handleClickOutside = function (event) {
            var _this$props = _this.props,
                onClickOutside = _this$props.onClickOutside,
                domNodetobeAvoided = _this$props.domNodetobeAvoided;

            var qubelyPopUpWraper = _this.refs.qubelyPopUpWraper;
            if (qubelyPopUpWraper && !qubelyPopUpWraper.contains(event.target)) {
                domNodetobeAvoided && !domNodetobeAvoided.contains(event.target) && onClickOutside();
            }
        };

        _this.state = { cssStyle: {}, positionClass: '' };
        return _this;
    }

    _createClass(Wrapper, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.addEventListener('mousedown', this.handleClickOutside);
            if (this.props.inline) {
                var node = document.querySelector('#qubely-field-wrapper'),
                    rect = node.getBoundingClientRect();
                var topDiff = window.innerHeight - rect.top;
                var bottomDiff = window.innerHeight - topDiff - 120;
                var wrapperHeight = rect.height - 20;
                var positionClass = '';
                if (topDiff >= wrapperHeight) {
                    positionClass = 'quebly-position-bottom';
                } else if (bottomDiff >= wrapperHeight) {
                    positionClass = 'quebly-position-top';
                } else {
                    positionClass = 'quebly-position-middle';
                    this.setState({ cssStyle: { top: '-' + rect.height / 2 + 'px' } });
                }
                this.setState({ positionClass: positionClass });
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('mousedown', this.handleClickOutside);
        }

        /**
        * 
        * @param {object} event 
        * 
        * Close PopUp onClickOutside
        * 
        * If event target is inside the avoidable dom node then Ignore
        * *
        * Else close PopUp executing onClickOutside from parent component
        * 
        */

    }, {
        key: 'render',
        value: function render() {
            var _state = this.state,
                cssStyle = _state.cssStyle,
                positionClass = _state.positionClass;
            var _props = this.props,
                label = _props.label,
                children = _props.children,
                inline = _props.inline,
                customClass = _props.customClass;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    'div',
                    { ref: 'qubelyPopUpWraper', id: 'qubely-field-wrapper', style: _extends({}, cssStyle), className: 'qubely-field qubely-field-wrapper ' + (inline ? 'qubely-field-wrapper-inline' : '') + ' ' + customClass + ' ' + positionClass },
                    label ? React.createElement(
                        'label',
                        { className: 'qubely-field-wrapper-label' },
                        label
                    ) : '',
                    React.createElement(
                        'div',
                        { className: 'qubely-field-wrapper-content' },
                        Array.isArray(children) ? children.map(function (item) {
                            return item;
                        }) : children
                    )
                )
            );
        }
    }]);

    return Wrapper;
}(Component);

exports.default = Wrapper;

/***/ }),

/***/ "./src/components/fields/assets/FontList.js":
/*!**************************************************!*\
  !*** ./src/components/fields/assets/FontList.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = [{ n: 'Default', f: 'default', v: [] }, { n: 'Arial', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Tahoma', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Verdana', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Helvetica', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Times New Roman', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Trebuchet MS', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Georgia', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'ABeeZee', f: 'sans-serif', v: [400, '400i'] }, { n: 'Abel', f: 'sans-serif', v: [400] }, { n: 'Abhaya Libre', f: 'serif', v: [400, 500, 600, 700, 800] }, { n: 'Abril Fatface', f: 'cursive', v: [400] }, { n: 'Aclonica', f: 'sans-serif', v: [400] }, { n: 'Acme', f: 'sans-serif', v: [400] }, { n: 'Actor', f: 'sans-serif', v: [400] }, { n: 'Adamina', f: 'serif', v: [400] }, { n: 'Advent Pro', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700] }, { n: 'Aguafina Script', f: 'cursive', v: [400] }, { n: 'Akronim', f: 'cursive', v: [400] }, { n: 'Aladin', f: 'cursive', v: [400] }, { n: 'Aldrich', f: 'sans-serif', v: [400] }, { n: 'Alef', f: 'sans-serif', v: [400, 700] }, { n: 'Alegreya', f: 'serif', v: [400, '400i', 500, '500i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Alegreya SC', f: 'serif', v: [400, '400i', 500, '500i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Alegreya Sans', f: 'sans-serif', v: [100, '100i', 300, '300i', 400, '400i', 500, '500i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Alegreya Sans SC', f: 'sans-serif', v: [100, '100i', 300, '300i', 400, '400i', 500, '500i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Alex Brush', f: 'cursive', v: [400] }, { n: 'Alfa Slab One', f: 'cursive', v: [400] }, { n: 'Alice', f: 'serif', v: [400] }, { n: 'Alike', f: 'serif', v: [400] }, { n: 'Alike Angular', f: 'serif', v: [400] }, { n: 'Allan', f: 'cursive', v: [400, 700] }, { n: 'Allerta', f: 'sans-serif', v: [400] }, { n: 'Allerta Stencil', f: 'sans-serif', v: [400] }, { n: 'Allura', f: 'cursive', v: [400] }, { n: 'Almendra', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Almendra Display', f: 'cursive', v: [400] }, { n: 'Almendra SC', f: 'serif', v: [400] }, { n: 'Amarante', f: 'cursive', v: [400] }, { n: 'Amaranth', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Amatic SC', f: 'cursive', v: [400, 700] }, { n: 'Amethysta', f: 'serif', v: [400] }, { n: 'Amiko', f: 'sans-serif', v: [400, 600, 700] }, { n: 'Amiri', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Amita', f: 'cursive', v: [400, 700] }, { n: 'Anaheim', f: 'sans-serif', v: [400] }, { n: 'Andada', f: 'serif', v: [400] }, { n: 'Andika', f: 'sans-serif', v: [400] }, { n: 'Angkor', f: 'cursive', v: [400] }, { n: 'Annie Use Your Telescope', f: 'cursive', v: [400] }, { n: 'Anonymous Pro', f: 'monospace', v: [400, '400i', 700, '700i'] }, { n: 'Antic', f: 'sans-serif', v: [400] }, { n: 'Antic Didone', f: 'serif', v: [400] }, { n: 'Antic Slab', f: 'serif', v: [400] }, { n: 'Anton', f: 'sans-serif', v: [400] }, { n: 'Arapey', f: 'serif', v: [400, '400i'] }, { n: 'Arbutus', f: 'cursive', v: [400] }, { n: 'Arbutus Slab', f: 'serif', v: [400] }, { n: 'Architects Daughter', f: 'cursive', v: [400] }, { n: 'Archivo', f: 'sans-serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Archivo Black', f: 'sans-serif', v: [400] }, { n: 'Archivo Narrow', f: 'sans-serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Aref Ruqaa', f: 'serif', v: [400, 700] }, { n: 'Arima Madurai', f: 'cursive', v: [100, 200, 300, 400, 500, 700, 800, 900] }, { n: 'Arimo', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Arizonia', f: 'cursive', v: [400] }, { n: 'Armata', f: 'sans-serif', v: [400] }, { n: 'Arsenal', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Artifika', f: 'serif', v: [400] }, { n: 'Arvo', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Arya', f: 'sans-serif', v: [400, 700] }, { n: 'Asap', f: 'sans-serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Asap Condensed', f: 'sans-serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Asar', f: 'serif', v: [400] }, { n: 'Asset', f: 'cursive', v: [400] }, { n: 'Assistant', f: 'sans-serif', v: [200, 300, 400, 600, 700, 800] }, { n: 'Astloch', f: 'cursive', v: [400, 700] }, { n: 'Asul', f: 'sans-serif', v: [400, 700] }, { n: 'Athiti', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700] }, { n: 'Atma', f: 'cursive', v: [300, 400, 500, 600, 700] }, { n: 'Atomic Age', f: 'cursive', v: [400] }, { n: 'Aubrey', f: 'cursive', v: [400] }, { n: 'Audiowide', f: 'cursive', v: [400] }, { n: 'Autour One', f: 'cursive', v: [400] }, { n: 'Average', f: 'serif', v: [400] }, { n: 'Average Sans', f: 'sans-serif', v: [400] }, { n: 'Averia Gruesa Libre', f: 'cursive', v: [400] }, { n: 'Averia Libre', f: 'cursive', v: [300, '300i', 400, '400i', 700, '700i'] }, { n: 'Averia Sans Libre', f: 'cursive', v: [300, '300i', 400, '400i', 700, '700i'] }, { n: 'Averia Serif Libre', f: 'cursive', v: [300, '300i', 400, '400i', 700, '700i'] }, { n: 'Bad Script', f: 'cursive', v: [400] }, { n: 'Bahiana', f: 'cursive', v: [400] }, { n: 'Baloo', f: 'cursive', v: [400] }, { n: 'Baloo Bhai', f: 'cursive', v: [400] }, { n: 'Baloo Bhaijaan', f: 'cursive', v: [400] }, { n: 'Baloo Bhaina', f: 'cursive', v: [400] }, { n: 'Baloo Chettan', f: 'cursive', v: [400] }, { n: 'Baloo Da', f: 'cursive', v: [400] }, { n: 'Baloo Paaji', f: 'cursive', v: [400] }, { n: 'Baloo Tamma', f: 'cursive', v: [400] }, { n: 'Baloo Tammudu', f: 'cursive', v: [400] }, { n: 'Baloo Thambi', f: 'cursive', v: [400] }, { n: 'Balthazar', f: 'serif', v: [400] }, { n: 'Bangers', f: 'cursive', v: [400] }, { n: 'Barlow', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Barlow Condensed', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Barlow Semi Condensed', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Barrio', f: 'cursive', v: [400] }, { n: 'Basic', f: 'sans-serif', v: [400] }, { n: 'Battambang', f: 'cursive', v: [400, 700] }, { n: 'Baumans', f: 'cursive', v: [400] }, { n: 'Bayon', f: 'cursive', v: [400] }, { n: 'Belgrano', f: 'serif', v: [400] }, { n: 'Bellefair', f: 'serif', v: [400] }, { n: 'Belleza', f: 'sans-serif', v: [400] }, { n: 'BenchNine', f: 'sans-serif', v: [300, 400, 700] }, { n: 'Bentham', f: 'serif', v: [400] }, { n: 'Berkshire Swash', f: 'cursive', v: [400] }, { n: 'Bevan', f: 'cursive', v: [400] }, { n: 'Bigelow Rules', f: 'cursive', v: [400] }, { n: 'Bigshot One', f: 'cursive', v: [400] }, { n: 'Bilbo', f: 'cursive', v: [400] }, { n: 'Bilbo Swash Caps', f: 'cursive', v: [400] }, { n: 'BioRhyme', f: 'serif', v: [200, 300, 400, 700, 800] }, { n: 'BioRhyme Expanded', f: 'serif', v: [200, 300, 400, 700, 800] }, { n: 'Biryani', f: 'sans-serif', v: [200, 300, 400, 600, 700, 800, 900] }, { n: 'Bitter', f: 'serif', v: [400, '400i', 700] }, { n: 'Black And White Picture', f: 'sans-serif', v: [400] }, { n: 'Black Han Sans', f: 'sans-serif', v: [400] }, { n: 'Black Ops One', f: 'cursive', v: [400] }, { n: 'Bokor', f: 'cursive', v: [400] }, { n: 'Bonbon', f: 'cursive', v: [400] }, { n: 'Boogaloo', f: 'cursive', v: [400] }, { n: 'Bowlby One', f: 'cursive', v: [400] }, { n: 'Bowlby One SC', f: 'cursive', v: [400] }, { n: 'Brawler', f: 'serif', v: [400] }, { n: 'Bree Serif', f: 'serif', v: [400] }, { n: 'Bubblegum Sans', f: 'cursive', v: [400] }, { n: 'Bubbler One', f: 'sans-serif', v: [400] }, { n: 'Buda', f: 'cursive', v: [300] }, { n: 'Buenard', f: 'serif', v: [400, 700] }, { n: 'Bungee', f: 'cursive', v: [400] }, { n: 'Bungee Hairline', f: 'cursive', v: [400] }, { n: 'Bungee Inline', f: 'cursive', v: [400] }, { n: 'Bungee Outline', f: 'cursive', v: [400] }, { n: 'Bungee Shade', f: 'cursive', v: [400] }, { n: 'Butcherman', f: 'cursive', v: [400] }, { n: 'Butterfly Kids', f: 'cursive', v: [400] }, { n: 'Cabin', f: 'sans-serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Cabin Condensed', f: 'sans-serif', v: [400, 500, 600, 700] }, { n: 'Cabin Sketch', f: 'cursive', v: [400, 700] }, { n: 'Caesar Dressing', f: 'cursive', v: [400] }, { n: 'Cagliostro', f: 'sans-serif', v: [400] }, { n: 'Cairo', f: 'sans-serif', v: [200, 300, 400, 600, 700, 900] }, { n: 'Calligraffitti', f: 'cursive', v: [400] }, { n: 'Cambay', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Cambo', f: 'serif', v: [400] }, { n: 'Candal', f: 'sans-serif', v: [400] }, { n: 'Cantarell', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Cantata One', f: 'serif', v: [400] }, { n: 'Cantora One', f: 'sans-serif', v: [400] }, { n: 'Capriola', f: 'sans-serif', v: [400] }, { n: 'Cardo', f: 'serif', v: [400, '400i', 700] }, { n: 'Carme', f: 'sans-serif', v: [400] }, { n: 'Carrois Gothic', f: 'sans-serif', v: [400] }, { n: 'Carrois Gothic SC', f: 'sans-serif', v: [400] }, { n: 'Carter One', f: 'cursive', v: [400] }, { n: 'Catamaran', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Caudex', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Caveat', f: 'cursive', v: [400, 700] }, { n: 'Caveat Brush', f: 'cursive', v: [400] }, { n: 'Cedarville Cursive', f: 'cursive', v: [400] }, { n: 'Ceviche One', f: 'cursive', v: [400] }, { n: 'Changa', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 800] }, { n: 'Changa One', f: 'cursive', v: [400, '400i'] }, { n: 'Chango', f: 'cursive', v: [400] }, { n: 'Chathura', f: 'sans-serif', v: [100, 300, 400, 700, 800] }, { n: 'Chau Philomene One', f: 'sans-serif', v: [400, '400i'] }, { n: 'Chela One', f: 'cursive', v: [400] }, { n: 'Chelsea Market', f: 'cursive', v: [400] }, { n: 'Chenla', f: 'cursive', v: [400] }, { n: 'Cherry Cream Soda', f: 'cursive', v: [400] }, { n: 'Cherry Swash', f: 'cursive', v: [400, 700] }, { n: 'Chewy', f: 'cursive', v: [400] }, { n: 'Chicle', f: 'cursive', v: [400] }, { n: 'Chivo', f: 'sans-serif', v: [300, '300i', 400, '400i', 700, '700i', 900, '900i'] }, { n: 'Chonburi', f: 'cursive', v: [400] }, { n: 'Cinzel', f: 'serif', v: [400, 700, 900] }, { n: 'Cinzel Decorative', f: 'cursive', v: [400, 700, 900] }, { n: 'Clicker Script', f: 'cursive', v: [400] }, { n: 'Coda', f: 'cursive', v: [400, 800] }, { n: 'Coda Caption', f: 'sans-serif', v: [800] }, { n: 'Codystar', f: 'cursive', v: [300, 400] }, { n: 'Coiny', f: 'cursive', v: [400] }, { n: 'Combo', f: 'cursive', v: [400] }, { n: 'Comfortaa', f: 'cursive', v: [300, 400, 700] }, { n: 'Coming Soon', f: 'cursive', v: [400] }, { n: 'Concert One', f: 'cursive', v: [400] }, { n: 'Condiment', f: 'cursive', v: [400] }, { n: 'Content', f: 'cursive', v: [400, 700] }, { n: 'Contrail One', f: 'cursive', v: [400] }, { n: 'Convergence', f: 'sans-serif', v: [400] }, { n: 'Cookie', f: 'cursive', v: [400] }, { n: 'Copse', f: 'serif', v: [400] }, { n: 'Corben', f: 'cursive', v: [400, 700] }, { n: 'Cormorant', f: 'serif', v: [300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Cormorant Garamond', f: 'serif', v: [300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Cormorant Infant', f: 'serif', v: [300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Cormorant SC', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Cormorant Unicase', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Cormorant Upright', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Courgette', f: 'cursive', v: [400] }, { n: 'Cousine', f: 'monospace', v: [400, '400i', 700, '700i'] }, { n: 'Coustard', f: 'serif', v: [400, 900] }, { n: 'Covered By Your Grace', f: 'cursive', v: [400] }, { n: 'Crafty Girls', f: 'cursive', v: [400] }, { n: 'Creepster', f: 'cursive', v: [400] }, { n: 'Crete Round', f: 'serif', v: [400, '400i'] }, { n: 'Crimson Text', f: 'serif', v: [400, '400i', 600, '600i', 700, '700i'] }, { n: 'Croissant One', f: 'cursive', v: [400] }, { n: 'Crushed', f: 'cursive', v: [400] }, { n: 'Cuprum', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Cute Font', f: 'cursive', v: [400] }, { n: 'Cutive', f: 'serif', v: [400] }, { n: 'Cutive Mono', f: 'monospace', v: [400] }, { n: 'Damion', f: 'cursive', v: [400] }, { n: 'Dancing Script', f: 'cursive', v: [400, 700] }, { n: 'Dangrek', f: 'cursive', v: [400] }, { n: 'David Libre', f: 'serif', v: [400, 500, 700] }, { n: 'Dawning of a New Day', f: 'cursive', v: [400] }, { n: 'Days One', f: 'sans-serif', v: [400] }, { n: 'Dekko', f: 'cursive', v: [400] }, { n: 'Delius', f: 'cursive', v: [400] }, { n: 'Delius Swash Caps', f: 'cursive', v: [400] }, { n: 'Delius Unicase', f: 'cursive', v: [400, 700] }, { n: 'Della Respira', f: 'serif', v: [400] }, { n: 'Denk One', f: 'sans-serif', v: [400] }, { n: 'Devonshire', f: 'cursive', v: [400] }, { n: 'Dhurjati', f: 'sans-serif', v: [400] }, { n: 'Didact Gothic', f: 'sans-serif', v: [400] }, { n: 'Diplomata', f: 'cursive', v: [400] }, { n: 'Diplomata SC', f: 'cursive', v: [400] }, { n: 'Do Hyeon', f: 'sans-serif', v: [400] }, { n: 'Dokdo', f: 'cursive', v: [400] }, { n: 'Domine', f: 'serif', v: [400, 700] }, { n: 'Donegal One', f: 'serif', v: [400] }, { n: 'Doppio One', f: 'sans-serif', v: [400] }, { n: 'Dorsa', f: 'sans-serif', v: [400] }, { n: 'Dosis', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 800] }, { n: 'Dr Sugiyama', f: 'cursive', v: [400] }, { n: 'Duru Sans', f: 'sans-serif', v: [400] }, { n: 'Dynalight', f: 'cursive', v: [400] }, { n: 'EB Garamond', f: 'serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i'] }, { n: 'Eagle Lake', f: 'cursive', v: [400] }, { n: 'East Sea Dokdo', f: 'cursive', v: [400] }, { n: 'Eater', f: 'cursive', v: [400] }, { n: 'Economica', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Eczar', f: 'serif', v: [400, 500, 600, 700, 800] }, { n: 'El Messiri', f: 'sans-serif', v: [400, 500, 600, 700] }, { n: 'Electrolize', f: 'sans-serif', v: [400] }, { n: 'Elsie', f: 'cursive', v: [400, 900] }, { n: 'Elsie Swash Caps', f: 'cursive', v: [400, 900] }, { n: 'Emblema One', f: 'cursive', v: [400] }, { n: 'Emilys Candy', f: 'cursive', v: [400] }, { n: 'Encode Sans', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Encode Sans Condensed', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Encode Sans Expanded', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Encode Sans Semi Condensed', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Encode Sans Semi Expanded', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Engagement', f: 'cursive', v: [400] }, { n: 'Englebert', f: 'sans-serif', v: [400] }, { n: 'Enriqueta', f: 'serif', v: [400, 700] }, { n: 'Erica One', f: 'cursive', v: [400] }, { n: 'Esteban', f: 'serif', v: [400] }, { n: 'Euphoria Script', f: 'cursive', v: [400] }, { n: 'Ewert', f: 'cursive', v: [400] }, { n: 'Exo', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Exo 2', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Expletus Sans', f: 'cursive', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Fanwood Text', f: 'serif', v: [400, '400i'] }, { n: 'Farsan', f: 'cursive', v: [400] }, { n: 'Fascinate', f: 'cursive', v: [400] }, { n: 'Fascinate Inline', f: 'cursive', v: [400] }, { n: 'Faster One', f: 'cursive', v: [400] }, { n: 'Fasthand', f: 'serif', v: [400] }, { n: 'Fauna One', f: 'serif', v: [400] }, { n: 'Faustina', f: 'serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Federant', f: 'cursive', v: [400] }, { n: 'Federo', f: 'sans-serif', v: [400] }, { n: 'Felipa', f: 'cursive', v: [400] }, { n: 'Fenix', f: 'serif', v: [400] }, { n: 'Finger Paint', f: 'cursive', v: [400] }, { n: 'Fira Mono', f: 'monospace', v: [400, 500, 700] }, { n: 'Fira Sans', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Fira Sans Condensed', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Fira Sans Extra Condensed', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Fjalla One', f: 'sans-serif', v: [400] }, { n: 'Fjord One', f: 'serif', v: [400] }, { n: 'Flamenco', f: 'cursive', v: [300, 400] }, { n: 'Flavors', f: 'cursive', v: [400] }, { n: 'Fondamento', f: 'cursive', v: [400, '400i'] }, { n: 'Fontdiner Swanky', f: 'cursive', v: [400] }, { n: 'Forum', f: 'cursive', v: [400] }, { n: 'Francois One', f: 'sans-serif', v: [400] }, { n: 'Frank Ruhl Libre', f: 'serif', v: [300, 400, 500, 700, 900] }, { n: 'Freckle Face', f: 'cursive', v: [400] }, { n: 'Fredericka the Great', f: 'cursive', v: [400] }, { n: 'Fredoka One', f: 'cursive', v: [400] }, { n: 'Freehand', f: 'cursive', v: [400] }, { n: 'Fresca', f: 'sans-serif', v: [400] }, { n: 'Frijole', f: 'cursive', v: [400] }, { n: 'Fruktur', f: 'cursive', v: [400] }, { n: 'Fugaz One', f: 'cursive', v: [400] }, { n: 'GFS Didot', f: 'serif', v: [400] }, { n: 'GFS Neohellenic', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Gabriela', f: 'serif', v: [400] }, { n: 'Gaegu', f: 'cursive', v: [300, 400, 700] }, { n: 'Gafata', f: 'sans-serif', v: [400] }, { n: 'Galada', f: 'cursive', v: [400] }, { n: 'Galdeano', f: 'sans-serif', v: [400] }, { n: 'Galindo', f: 'cursive', v: [400] }, { n: 'Gamja Flower', f: 'cursive', v: [400] }, { n: 'Gentium Basic', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Gentium Book Basic', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Geo', f: 'sans-serif', v: [400, '400i'] }, { n: 'Geostar', f: 'cursive', v: [400] }, { n: 'Geostar Fill', f: 'cursive', v: [400] }, { n: 'Germania One', f: 'cursive', v: [400] }, { n: 'Gidugu', f: 'sans-serif', v: [400] }, { n: 'Gilda Display', f: 'serif', v: [400] }, { n: 'Give You Glory', f: 'cursive', v: [400] }, { n: 'Glass Antiqua', f: 'cursive', v: [400] }, { n: 'Glegoo', f: 'serif', v: [400, 700] }, { n: 'Gloria Hallelujah', f: 'cursive', v: [400] }, { n: 'Goblin One', f: 'cursive', v: [400] }, { n: 'Gochi Hand', f: 'cursive', v: [400] }, { n: 'Gorditas', f: 'cursive', v: [400, 700] }, { n: 'Gothic A1', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Goudy Bookletter 1911', f: 'serif', v: [400] }, { n: 'Graduate', f: 'cursive', v: [400] }, { n: 'Grand Hotel', f: 'cursive', v: [400] }, { n: 'Gravitas One', f: 'cursive', v: [400] }, { n: 'Great Vibes', f: 'cursive', v: [400] }, { n: 'Griffy', f: 'cursive', v: [400] }, { n: 'Gruppo', f: 'cursive', v: [400] }, { n: 'Gudea', f: 'sans-serif', v: [400, '400i', 700] }, { n: 'Gugi', f: 'cursive', v: [400] }, { n: 'Gurajada', f: 'serif', v: [400] }, { n: 'Habibi', f: 'serif', v: [400] }, { n: 'Halant', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Hammersmith One', f: 'sans-serif', v: [400] }, { n: 'Hanalei', f: 'cursive', v: [400] }, { n: 'Hanalei Fill', f: 'cursive', v: [400] }, { n: 'Handlee', f: 'cursive', v: [400] }, { n: 'Hanuman', f: 'serif', v: [400, 700] }, { n: 'Happy Monkey', f: 'cursive', v: [400] }, { n: 'Harmattan', f: 'sans-serif', v: [400] }, { n: 'Headland One', f: 'serif', v: [400] }, { n: 'Heebo', f: 'sans-serif', v: [100, 300, 400, 500, 700, 800, 900] }, { n: 'Henny Penny', f: 'cursive', v: [400] }, { n: 'Herr Von Muellerhoff', f: 'cursive', v: [400] }, { n: 'Hi Melody', f: 'cursive', v: [400] }, { n: 'Hind', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Hind Guntur', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Hind Madurai', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Hind Siliguri', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Hind Vadodara', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Holtwood One SC', f: 'serif', v: [400] }, { n: 'Homemade Apple', f: 'cursive', v: [400] }, { n: 'Homenaje', f: 'sans-serif', v: [400] }, { n: 'IBM Plex Mono', f: 'monospace', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'IBM Plex Sans', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'IBM Plex Sans Condensed', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'IBM Plex Serif', f: 'serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'IM Fell DW Pica', f: 'serif', v: [400, '400i'] }, { n: 'IM Fell DW Pica SC', f: 'serif', v: [400] }, { n: 'IM Fell Double Pica', f: 'serif', v: [400, '400i'] }, { n: 'IM Fell Double Pica SC', f: 'serif', v: [400] }, { n: 'IM Fell English', f: 'serif', v: [400, '400i'] }, { n: 'IM Fell English SC', f: 'serif', v: [400] }, { n: 'IM Fell French Canon', f: 'serif', v: [400, '400i'] }, { n: 'IM Fell French Canon SC', f: 'serif', v: [400] }, { n: 'IM Fell Great Primer', f: 'serif', v: [400, '400i'] }, { n: 'IM Fell Great Primer SC', f: 'serif', v: [400] }, { n: 'Iceberg', f: 'cursive', v: [400] }, { n: 'Iceland', f: 'cursive', v: [400] }, { n: 'Imprima', f: 'sans-serif', v: [400] }, { n: 'Inconsolata', f: 'monospace', v: [400, 700] }, { n: 'Inder', f: 'sans-serif', v: [400] }, { n: 'Indie Flower', f: 'cursive', v: [400] }, { n: 'Inika', f: 'serif', v: [400, 700] }, { n: 'Inknut Antiqua', f: 'serif', v: [300, 400, 500, 600, 700, 800, 900] }, { n: 'Irish Grover', f: 'cursive', v: [400] }, { n: 'Istok Web', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Italiana', f: 'serif', v: [400] }, { n: 'Italianno', f: 'cursive', v: [400] }, { n: 'Itim', f: 'cursive', v: [400] }, { n: 'Jacques Francois', f: 'serif', v: [400] }, { n: 'Jacques Francois Shadow', f: 'cursive', v: [400] }, { n: 'Jaldi', f: 'sans-serif', v: [400, 700] }, { n: 'Jim Nightshade', f: 'cursive', v: [400] }, { n: 'Jockey One', f: 'sans-serif', v: [400] }, { n: 'Jolly Lodger', f: 'cursive', v: [400] }, { n: 'Jomhuria', f: 'cursive', v: [400] }, { n: 'Josefin Sans', f: 'sans-serif', v: [100, '100i', 300, '300i', 400, '400i', 600, '600i', 700, '700i'] }, { n: 'Josefin Slab', f: 'serif', v: [100, '100i', 300, '300i', 400, '400i', 600, '600i', 700, '700i'] }, { n: 'Joti One', f: 'cursive', v: [400] }, { n: 'Jua', f: 'sans-serif', v: [400] }, { n: 'Judson', f: 'serif', v: [400, '400i', 700] }, { n: 'Julee', f: 'cursive', v: [400] }, { n: 'Julius Sans One', f: 'sans-serif', v: [400] }, { n: 'Junge', f: 'serif', v: [400] }, { n: 'Jura', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Just Another Hand', f: 'cursive', v: [400] }, { n: 'Just Me Again Down Here', f: 'cursive', v: [400] }, { n: 'Kadwa', f: 'serif', v: [400, 700] }, { n: 'Kalam', f: 'cursive', v: [300, 400, 700] }, { n: 'Kameron', f: 'serif', v: [400, 700] }, { n: 'Kanit', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Kantumruy', f: 'sans-serif', v: [300, 400, 700] }, { n: 'Karla', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Karma', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Katibeh', f: 'cursive', v: [400] }, { n: 'Kaushan Script', f: 'cursive', v: [400] }, { n: 'Kavivanar', f: 'cursive', v: [400] }, { n: 'Kavoon', f: 'cursive', v: [400] }, { n: 'Kdam Thmor', f: 'cursive', v: [400] }, { n: 'Keania One', f: 'cursive', v: [400] }, { n: 'Kelly Slab', f: 'cursive', v: [400] }, { n: 'Kenia', f: 'cursive', v: [400] }, { n: 'Khand', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Khmer', f: 'cursive', v: [400] }, { n: 'Khula', f: 'sans-serif', v: [300, 400, 600, 700, 800] }, { n: 'Kirang Haerang', f: 'cursive', v: [400] }, { n: 'Kite One', f: 'sans-serif', v: [400] }, { n: 'Knewave', f: 'cursive', v: [400] }, { n: 'Kosugi', f: 'sans-serif', v: [400] }, { n: 'Kosugi Maru', f: 'sans-serif', v: [400] }, { n: 'Kotta One', f: 'serif', v: [400] }, { n: 'Koulen', f: 'cursive', v: [400] }, { n: 'Kranky', f: 'cursive', v: [400] }, { n: 'Kreon', f: 'serif', v: [300, 400, 700] }, { n: 'Kristi', f: 'cursive', v: [400] }, { n: 'Krona One', f: 'sans-serif', v: [400] }, { n: 'Kumar One', f: 'cursive', v: [400] }, { n: 'Kumar One Outline', f: 'cursive', v: [400] }, { n: 'Kurale', f: 'serif', v: [400] }, { n: 'La Belle Aurore', f: 'cursive', v: [400] }, { n: 'Laila', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Lakki Reddy', f: 'cursive', v: [400] }, { n: 'Lalezar', f: 'cursive', v: [400] }, { n: 'Lancelot', f: 'cursive', v: [400] }, { n: 'Lateef', f: 'cursive', v: [400] }, { n: 'Lato', f: 'sans-serif', v: [100, '100i', 300, '300i', 400, '400i', 700, '700i', 900, '900i'] }, { n: 'League Script', f: 'cursive', v: [400] }, { n: 'Leckerli One', f: 'cursive', v: [400] }, { n: 'Ledger', f: 'serif', v: [400] }, { n: 'Lekton', f: 'sans-serif', v: [400, '400i', 700] }, { n: 'Lemon', f: 'cursive', v: [400] }, { n: 'Lemonada', f: 'cursive', v: [300, 400, 600, 700] }, { n: 'Libre Barcode 128', f: 'cursive', v: [400] }, { n: 'Libre Barcode 128 Text', f: 'cursive', v: [400] }, { n: 'Libre Barcode 39', f: 'cursive', v: [400] }, { n: 'Libre Barcode 39 Extended', f: 'cursive', v: [400] }, { n: 'Libre Barcode 39 Extended Text', f: 'cursive', v: [400] }, { n: 'Libre Barcode 39 Text', f: 'cursive', v: [400] }, { n: 'Libre Baskerville', f: 'serif', v: [400, '400i', 700] }, { n: 'Libre Franklin', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Life Savers', f: 'cursive', v: [400, 700] }, { n: 'Lilita One', f: 'cursive', v: [400] }, { n: 'Lily Script One', f: 'cursive', v: [400] }, { n: 'Limelight', f: 'cursive', v: [400] }, { n: 'Linden Hill', f: 'serif', v: [400, '400i'] }, { n: 'Lobster', f: 'cursive', v: [400] }, { n: 'Lobster Two', f: 'cursive', v: [400, '400i', 700, '700i'] }, { n: 'Londrina Outline', f: 'cursive', v: [400] }, { n: 'Londrina Shadow', f: 'cursive', v: [400] }, { n: 'Londrina Sketch', f: 'cursive', v: [400] }, { n: 'Londrina Solid', f: 'cursive', v: [100, 300, 400, 900] }, { n: 'Lora', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Love Ya Like A Sister', f: 'cursive', v: [400] }, { n: 'Loved by the King', f: 'cursive', v: [400] }, { n: 'Lovers Quarrel', f: 'cursive', v: [400] }, { n: 'Luckiest Guy', f: 'cursive', v: [400] }, { n: 'Lusitana', f: 'serif', v: [400, 700] }, { n: 'Lustria', f: 'serif', v: [400] }, { n: 'M PLUS 1p', f: 'sans-serif', v: [100, 300, 400, 500, 700, 800, 900] }, { n: 'M PLUS Rounded 1c', f: 'sans-serif', v: [100, 300, 400, 500, 700, 800, 900] }, { n: 'Macondo', f: 'cursive', v: [400] }, { n: 'Macondo Swash Caps', f: 'cursive', v: [400] }, { n: 'Mada', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 900] }, { n: 'Magra', f: 'sans-serif', v: [400, 700] }, { n: 'Maiden Orange', f: 'cursive', v: [400] }, { n: 'Maitree', f: 'serif', v: [200, 300, 400, 500, 600, 700] }, { n: 'Mako', f: 'sans-serif', v: [400] }, { n: 'Mallanna', f: 'sans-serif', v: [400] }, { n: 'Mandali', f: 'sans-serif', v: [400] }, { n: 'Manuale', f: 'serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Marcellus', f: 'serif', v: [400] }, { n: 'Marcellus SC', f: 'serif', v: [400] }, { n: 'Marck Script', f: 'cursive', v: [400] }, { n: 'Margarine', f: 'cursive', v: [400] }, { n: 'Markazi Text', f: 'serif', v: [400, 500, 600, 700] }, { n: 'Marko One', f: 'serif', v: [400] }, { n: 'Marmelad', f: 'sans-serif', v: [400] }, { n: 'Martel', f: 'serif', v: [200, 300, 400, 600, 700, 800, 900] }, { n: 'Martel Sans', f: 'sans-serif', v: [200, 300, 400, 600, 700, 800, 900] }, { n: 'Marvel', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Mate', f: 'serif', v: [400, '400i'] }, { n: 'Mate SC', f: 'serif', v: [400] }, { n: 'Maven Pro', f: 'sans-serif', v: [400, 500, 700, 900] }, { n: 'McLaren', f: 'cursive', v: [400] }, { n: 'Meddon', f: 'cursive', v: [400] }, { n: 'MedievalSharp', f: 'cursive', v: [400] }, { n: 'Medula One', f: 'cursive', v: [400] }, { n: 'Meera Inimai', f: 'sans-serif', v: [400] }, { n: 'Megrim', f: 'cursive', v: [400] }, { n: 'Meie Script', f: 'cursive', v: [400] }, { n: 'Merienda', f: 'cursive', v: [400, 700] }, { n: 'Merienda One', f: 'cursive', v: [400] }, { n: 'Merriweather', f: 'serif', v: [300, '300i', 400, '400i', 700, '700i', 900, '900i'] }, { n: 'Merriweather Sans', f: 'sans-serif', v: [300, '300i', 400, '400i', 700, '700i', 800, '800i'] }, { n: 'Metal', f: 'cursive', v: [400] }, { n: 'Metal Mania', f: 'cursive', v: [400] }, { n: 'Metamorphous', f: 'cursive', v: [400] }, { n: 'Metrophobic', f: 'sans-serif', v: [400] }, { n: 'Michroma', f: 'sans-serif', v: [400] }, { n: 'Milonga', f: 'cursive', v: [400] }, { n: 'Miltonian', f: 'cursive', v: [400] }, { n: 'Miltonian Tattoo', f: 'cursive', v: [400] }, { n: 'Mina', f: 'sans-serif', v: [400, 700] }, { n: 'Miniver', f: 'cursive', v: [400] }, { n: 'Miriam Libre', f: 'sans-serif', v: [400, 700] }, { n: 'Mirza', f: 'cursive', v: [400, 500, 600, 700] }, { n: 'Miss Fajardose', f: 'cursive', v: [400] }, { n: 'Mitr', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700] }, { n: 'Modak', f: 'cursive', v: [400] }, { n: 'Modern Antiqua', f: 'cursive', v: [400] }, { n: 'Mogra', f: 'cursive', v: [400] }, { n: 'Molengo', f: 'sans-serif', v: [400] }, { n: 'Molle', f: 'cursive', v: ['400i'] }, { n: 'Monda', f: 'sans-serif', v: [400, 700] }, { n: 'Monofett', f: 'cursive', v: [400] }, { n: 'Monoton', f: 'cursive', v: [400] }, { n: 'Monsieur La Doulaise', f: 'cursive', v: [400] }, { n: 'Montaga', f: 'serif', v: [400] }, { n: 'Montez', f: 'cursive', v: [400] }, { n: 'Montserrat', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Montserrat Alternates', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Montserrat Subrayada', f: 'sans-serif', v: [400, 700] }, { n: 'Moul', f: 'cursive', v: [400] }, { n: 'Moulpali', f: 'cursive', v: [400] }, { n: 'Mountains of Christmas', f: 'cursive', v: [400, 700] }, { n: 'Mouse Memoirs', f: 'sans-serif', v: [400] }, { n: 'Mr Bedfort', f: 'cursive', v: [400] }, { n: 'Mr Dafoe', f: 'cursive', v: [400] }, { n: 'Mr De Haviland', f: 'cursive', v: [400] }, { n: 'Mrs Saint Delafield', f: 'cursive', v: [400] }, { n: 'Mrs Sheppards', f: 'cursive', v: [400] }, { n: 'Mukta', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 800] }, { n: 'Mukta Mahee', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 800] }, { n: 'Mukta Malar', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 800] }, { n: 'Mukta Vaani', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 800] }, { n: 'Muli', f: 'sans-serif', v: [200, '200i', 300, '300i', 400, '400i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Mystery Quest', f: 'cursive', v: [400] }, { n: 'NTR', f: 'sans-serif', v: [400] }, { n: 'Nanum Brush Script', f: 'cursive', v: [400] }, { n: 'Nanum Gothic', f: 'sans-serif', v: [400, 700, 800] }, { n: 'Nanum Gothic Coding', f: 'monospace', v: [400, 700] }, { n: 'Nanum Myeongjo', f: 'serif', v: [400, 700, 800] }, { n: 'Nanum Pen Script', f: 'cursive', v: [400] }, { n: 'Neucha', f: 'cursive', v: [400] }, { n: 'Neuton', f: 'serif', v: [200, 300, 400, '400i', 700, 800] }, { n: 'New Rocker', f: 'cursive', v: [400] }, { n: 'News Cycle', f: 'sans-serif', v: [400, 700] }, { n: 'Niconne', f: 'cursive', v: [400] }, { n: 'Nixie One', f: 'cursive', v: [400] }, { n: 'Nobile', f: 'sans-serif', v: [400, '400i', 500, '500i', 700, '700i'] }, { n: 'Nokora', f: 'serif', v: [400, 700] }, { n: 'Norican', f: 'cursive', v: [400] }, { n: 'Nosifer', f: 'cursive', v: [400] }, { n: 'Nothing You Could Do', f: 'cursive', v: [400] }, { n: 'Noticia Text', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Noto Sans', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Noto Sans JP', f: 'sans-serif', v: [100, 300, 400, 500, 700, 900] }, { n: 'Noto Sans KR', f: 'sans-serif', v: [100, 300, 400, 500, 700, 900] }, { n: 'Noto Serif', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Noto Serif JP', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 900] }, { n: 'Noto Serif KR', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700, 900] }, { n: 'Nova Cut', f: 'cursive', v: [400] }, { n: 'Nova Flat', f: 'cursive', v: [400] }, { n: 'Nova Mono', f: 'monospace', v: [400] }, { n: 'Nova Oval', f: 'cursive', v: [400] }, { n: 'Nova Round', f: 'cursive', v: [400] }, { n: 'Nova Script', f: 'cursive', v: [400] }, { n: 'Nova Slim', f: 'cursive', v: [400] }, { n: 'Nova Square', f: 'cursive', v: [400] }, { n: 'Numans', f: 'sans-serif', v: [400] }, { n: 'Nunito', f: 'sans-serif', v: [200, '200i', 300, '300i', 400, '400i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Nunito Sans', f: 'sans-serif', v: [200, '200i', 300, '300i', 400, '400i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Odor Mean Chey', f: 'cursive', v: [400] }, { n: 'Offside', f: 'cursive', v: [400] }, { n: 'Old Standard TT', f: 'serif', v: [400, '400i', 700] }, { n: 'Oldenburg', f: 'cursive', v: [400] }, { n: 'Oleo Script', f: 'cursive', v: [400, 700] }, { n: 'Oleo Script Swash Caps', f: 'cursive', v: [400, 700] }, { n: 'Open Sans', f: 'sans-serif', v: [300, '300i', 400, '400i', 600, '600i', 700, '700i', 800, '800i'] }, { n: 'Open Sans Condensed', f: 'sans-serif', v: [300, '300i', 700] }, { n: 'Oranienbaum', f: 'serif', v: [400] }, { n: 'Orbitron', f: 'sans-serif', v: [400, 500, 700, 900] }, { n: 'Oregano', f: 'cursive', v: [400, '400i'] }, { n: 'Orienta', f: 'sans-serif', v: [400] }, { n: 'Original Surfer', f: 'cursive', v: [400] }, { n: 'Oswald', f: 'sans-serif', v: [200, 300, 400, 500, 600, 700] }, { n: 'Over the Rainbow', f: 'cursive', v: [400] }, { n: 'Overlock', f: 'cursive', v: [400, '400i', 700, '700i', 900, '900i'] }, { n: 'Overlock SC', f: 'cursive', v: [400] }, { n: 'Overpass', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Overpass Mono', f: 'monospace', v: [300, 400, 600, 700] }, { n: 'Ovo', f: 'serif', v: [400] }, { n: 'Oxygen', f: 'sans-serif', v: [300, 400, 700] }, { n: 'Oxygen Mono', f: 'monospace', v: [400] }, { n: 'PT Mono', f: 'monospace', v: [400] }, { n: 'PT Sans', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'PT Sans Caption', f: 'sans-serif', v: [400, 700] }, { n: 'PT Sans Narrow', f: 'sans-serif', v: [400, 700] }, { n: 'PT Serif', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'PT Serif Caption', f: 'serif', v: [400, '400i'] }, { n: 'Pacifico', f: 'cursive', v: [400] }, { n: 'Padauk', f: 'sans-serif', v: [400, 700] }, { n: 'Palanquin', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700] }, { n: 'Palanquin Dark', f: 'sans-serif', v: [400, 500, 600, 700] }, { n: 'Pangolin', f: 'cursive', v: [400] }, { n: 'Paprika', f: 'cursive', v: [400] }, { n: 'Parisienne', f: 'cursive', v: [400] }, { n: 'Passero One', f: 'cursive', v: [400] }, { n: 'Passion One', f: 'cursive', v: [400, 700, 900] }, { n: 'Pathway Gothic One', f: 'sans-serif', v: [400] }, { n: 'Patrick Hand', f: 'cursive', v: [400] }, { n: 'Patrick Hand SC', f: 'cursive', v: [400] }, { n: 'Pattaya', f: 'sans-serif', v: [400] }, { n: 'Patua One', f: 'cursive', v: [400] }, { n: 'Pavanam', f: 'sans-serif', v: [400] }, { n: 'Paytone One', f: 'sans-serif', v: [400] }, { n: 'Peddana', f: 'serif', v: [400] }, { n: 'Peralta', f: 'cursive', v: [400] }, { n: 'Permanent Marker', f: 'cursive', v: [400] }, { n: 'Petit Formal Script', f: 'cursive', v: [400] }, { n: 'Petrona', f: 'serif', v: [400] }, { n: 'Philosopher', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Piedra', f: 'cursive', v: [400] }, { n: 'Pinyon Script', f: 'cursive', v: [400] }, { n: 'Pirata One', f: 'cursive', v: [400] }, { n: 'Plaster', f: 'cursive', v: [400] }, { n: 'Play', f: 'sans-serif', v: [400, 700] }, { n: 'Playball', f: 'cursive', v: [400] }, { n: 'Playfair Display', f: 'serif', v: [400, '400i', 700, '700i', 900, '900i'] }, { n: 'Playfair Display SC', f: 'serif', v: [400, '400i', 700, '700i', 900, '900i'] }, { n: 'Podkova', f: 'serif', v: [400, 500, 600, 700, 800] }, { n: 'Poiret One', f: 'cursive', v: [400] }, { n: 'Poller One', f: 'cursive', v: [400] }, { n: 'Poly', f: 'serif', v: [400, '400i'] }, { n: 'Pompiere', f: 'cursive', v: [400] }, { n: 'Pontano Sans', f: 'sans-serif', v: [400] }, { n: 'Poor Story', f: 'cursive', v: [400] }, { n: 'Poppins', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Port Lligat Sans', f: 'sans-serif', v: [400] }, { n: 'Port Lligat Slab', f: 'serif', v: [400] }, { n: 'Pragati Narrow', f: 'sans-serif', v: [400, 700] }, { n: 'Prata', f: 'serif', v: [400] }, { n: 'Preahvihear', f: 'cursive', v: [400] }, { n: 'Press Start 2P', f: 'cursive', v: [400] }, { n: 'Pridi', f: 'serif', v: [200, 300, 400, 500, 600, 700] }, { n: 'Princess Sofia', f: 'cursive', v: [400] }, { n: 'Prociono', f: 'serif', v: [400] }, { n: 'Prompt', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Prosto One', f: 'cursive', v: [400] }, { n: 'Proza Libre', f: 'sans-serif', v: [400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i'] }, { n: 'Puritan', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Purple Purse', f: 'cursive', v: [400] }, { n: 'Quando', f: 'serif', v: [400] }, { n: 'Quantico', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Quattrocento', f: 'serif', v: [400, 700] }, { n: 'Quattrocento Sans', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Questrial', f: 'sans-serif', v: [400] }, { n: 'Quicksand', f: 'sans-serif', v: [300, 400, 500, 700] }, { n: 'Quintessential', f: 'cursive', v: [400] }, { n: 'Qwigley', f: 'cursive', v: [400] }, { n: 'Racing Sans One', f: 'cursive', v: [400] }, { n: 'Radley', f: 'serif', v: [400, '400i'] }, { n: 'Rajdhani', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Rakkas', f: 'cursive', v: [400] }, { n: 'Raleway', f: 'sans-serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Raleway Dots', f: 'cursive', v: [400] }, { n: 'Ramabhadra', f: 'sans-serif', v: [400] }, { n: 'Ramaraja', f: 'serif', v: [400] }, { n: 'Rambla', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Rammetto One', f: 'cursive', v: [400] }, { n: 'Ranchers', f: 'cursive', v: [400] }, { n: 'Rancho', f: 'cursive', v: [400] }, { n: 'Ranga', f: 'cursive', v: [400, 700] }, { n: 'Rasa', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Rationale', f: 'sans-serif', v: [400] }, { n: 'Ravi Prakash', f: 'cursive', v: [400] }, { n: 'Redressed', f: 'cursive', v: [400] }, { n: 'Reem Kufi', f: 'sans-serif', v: [400] }, { n: 'Reenie Beanie', f: 'cursive', v: [400] }, { n: 'Revalia', f: 'cursive', v: [400] }, { n: 'Rhodium Libre', f: 'serif', v: [400] }, { n: 'Ribeye', f: 'cursive', v: [400] }, { n: 'Ribeye Marrow', f: 'cursive', v: [400] }, { n: 'Righteous', f: 'cursive', v: [400] }, { n: 'Risque', f: 'cursive', v: [400] }, { n: 'Roboto', f: 'sans-serif', v: [100, '100i', 300, '300i', 400, '400i', 500, '500i', 700, '700i', 900, '900i'] }, { n: 'Roboto Condensed', f: 'sans-serif', v: [300, '300i', 400, '400i', 700, '700i'] }, { n: 'Roboto Mono', f: 'monospace', v: [100, '100i', 300, '300i', 400, '400i', 500, '500i', 700, '700i'] }, { n: 'Roboto Slab', f: 'serif', v: [100, 300, 400, 700] }, { n: 'Rochester', f: 'cursive', v: [400] }, { n: 'Rock Salt', f: 'cursive', v: [400] }, { n: 'Rokkitt', f: 'serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Romanesco', f: 'cursive', v: [400] }, { n: 'Ropa Sans', f: 'sans-serif', v: [400, '400i'] }, { n: 'Rosario', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Rosarivo', f: 'serif', v: [400, '400i'] }, { n: 'Rouge Script', f: 'cursive', v: [400] }, { n: 'Rozha One', f: 'serif', v: [400] }, { n: 'Rubik', f: 'sans-serif', v: [300, '300i', 400, '400i', 500, '500i', 700, '700i', 900, '900i'] }, { n: 'Rubik Mono One', f: 'sans-serif', v: [400] }, { n: 'Ruda', f: 'sans-serif', v: [400, 700, 900] }, { n: 'Rufina', f: 'serif', v: [400, 700] }, { n: 'Ruge Boogie', f: 'cursive', v: [400] }, { n: 'Ruluko', f: 'sans-serif', v: [400] }, { n: 'Rum Raisin', f: 'sans-serif', v: [400] }, { n: 'Ruslan Display', f: 'cursive', v: [400] }, { n: 'Russo One', f: 'sans-serif', v: [400] }, { n: 'Ruthie', f: 'cursive', v: [400] }, { n: 'Rye', f: 'cursive', v: [400] }, { n: 'Sacramento', f: 'cursive', v: [400] }, { n: 'Sahitya', f: 'serif', v: [400, 700] }, { n: 'Sail', f: 'cursive', v: [400] }, { n: 'Saira', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Saira Condensed', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Saira Extra Condensed', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Saira Semi Condensed', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Salsa', f: 'cursive', v: [400] }, { n: 'Sanchez', f: 'serif', v: [400, '400i'] }, { n: 'Sancreek', f: 'cursive', v: [400] }, { n: 'Sansita', f: 'sans-serif', v: [400, '400i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Sarala', f: 'sans-serif', v: [400, 700] }, { n: 'Sarina', f: 'cursive', v: [400] }, { n: 'Sarpanch', f: 'sans-serif', v: [400, 500, 600, 700, 800, 900] }, { n: 'Satisfy', f: 'cursive', v: [400] }, { n: 'Sawarabi Gothic', f: 'sans-serif', v: [400] }, { n: 'Sawarabi Mincho', f: 'sans-serif', v: [400] }, { n: 'Scada', f: 'sans-serif', v: [400, '400i', 700, '700i'] }, { n: 'Scheherazade', f: 'serif', v: [400, 700] }, { n: 'Schoolbell', f: 'cursive', v: [400] }, { n: 'Scope One', f: 'serif', v: [400] }, { n: 'Seaweed Script', f: 'cursive', v: [400] }, { n: 'Secular One', f: 'sans-serif', v: [400] }, { n: 'Sedgwick Ave', f: 'cursive', v: [400] }, { n: 'Sedgwick Ave Display', f: 'cursive', v: [400] }, { n: 'Sevillana', f: 'cursive', v: [400] }, { n: 'Seymour One', f: 'sans-serif', v: [400] }, { n: 'Shadows Into Light', f: 'cursive', v: [400] }, { n: 'Shadows Into Light Two', f: 'cursive', v: [400] }, { n: 'Shanti', f: 'sans-serif', v: [400] }, { n: 'Share', f: 'cursive', v: [400, '400i', 700, '700i'] }, { n: 'Share Tech', f: 'sans-serif', v: [400] }, { n: 'Share Tech Mono', f: 'monospace', v: [400] }, { n: 'Shojumaru', f: 'cursive', v: [400] }, { n: 'Short Stack', f: 'cursive', v: [400] }, { n: 'Shrikhand', f: 'cursive', v: [400] }, { n: 'Siemreap', f: 'cursive', v: [400] }, { n: 'Sigmar One', f: 'cursive', v: [400] }, { n: 'Signika', f: 'sans-serif', v: [300, 400, 600, 700] }, { n: 'Signika Negative', f: 'sans-serif', v: [300, 400, 600, 700] }, { n: 'Simonetta', f: 'cursive', v: [400, '400i', 900, '900i'] }, { n: 'Sintony', f: 'sans-serif', v: [400, 700] }, { n: 'Sirin Stencil', f: 'cursive', v: [400] }, { n: 'Six Caps', f: 'sans-serif', v: [400] }, { n: 'Skranji', f: 'cursive', v: [400, 700] }, { n: 'Slabo 13px', f: 'serif', v: [400] }, { n: 'Slabo 27px', f: 'serif', v: [400] }, { n: 'Slackey', f: 'cursive', v: [400] }, { n: 'Smokum', f: 'cursive', v: [400] }, { n: 'Smythe', f: 'cursive', v: [400] }, { n: 'Sniglet', f: 'cursive', v: [400, 800] }, { n: 'Snippet', f: 'sans-serif', v: [400] }, { n: 'Snowburst One', f: 'cursive', v: [400] }, { n: 'Sofadi One', f: 'cursive', v: [400] }, { n: 'Sofia', f: 'cursive', v: [400] }, { n: 'Song Myung', f: 'serif', v: [400] }, { n: 'Sonsie One', f: 'cursive', v: [400] }, { n: 'Sorts Mill Goudy', f: 'serif', v: [400, '400i'] }, { n: 'Source Code Pro', f: 'monospace', v: [200, 300, 400, 500, 600, 700, 900] }, { n: 'Source Sans Pro', f: 'sans-serif', v: [200, '200i', 300, '300i', 400, '400i', 600, '600i', 700, '700i', 900, '900i'] }, { n: 'Source Serif Pro', f: 'serif', v: [400, 600, 700] }, { n: 'Space Mono', f: 'monospace', v: [400, '400i', 700, '700i'] }, { n: 'Special Elite', f: 'cursive', v: [400] }, { n: 'Spectral', f: 'serif', v: [200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i'] }, { n: 'Spectral SC', f: 'serif', v: [200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i'] }, { n: 'Spicy Rice', f: 'cursive', v: [400] }, { n: 'Spinnaker', f: 'sans-serif', v: [400] }, { n: 'Spirax', f: 'cursive', v: [400] }, { n: 'Squada One', f: 'cursive', v: [400] }, { n: 'Sree Krushnadevaraya', f: 'serif', v: [400] }, { n: 'Sriracha', f: 'cursive', v: [400] }, { n: 'Stalemate', f: 'cursive', v: [400] }, { n: 'Stalinist One', f: 'cursive', v: [400] }, { n: 'Stardos Stencil', f: 'cursive', v: [400, 700] }, { n: 'Stint Ultra Condensed', f: 'cursive', v: [400] }, { n: 'Stint Ultra Expanded', f: 'cursive', v: [400] }, { n: 'Stoke', f: 'serif', v: [300, 400] }, { n: 'Strait', f: 'sans-serif', v: [400] }, { n: 'Stylish', f: 'sans-serif', v: [400] }, { n: 'Sue Ellen Francisco', f: 'cursive', v: [400] }, { n: 'Suez One', f: 'serif', v: [400] }, { n: 'Sumana', f: 'serif', v: [400, 700] }, { n: 'Sunflower', f: 'sans-serif', v: [300, 500, 700] }, { n: 'Sunshiney', f: 'cursive', v: [400] }, { n: 'Supermercado One', f: 'cursive', v: [400] }, { n: 'Sura', f: 'serif', v: [400, 700] }, { n: 'Suranna', f: 'serif', v: [400] }, { n: 'Suravaram', f: 'serif', v: [400] }, { n: 'Suwannaphum', f: 'cursive', v: [400] }, { n: 'Swanky and Moo Moo', f: 'cursive', v: [400] }, { n: 'Syncopate', f: 'sans-serif', v: [400, 700] }, { n: 'Tajawal', f: 'sans-serif', v: [200, 300, 400, 500, 700, 800, 900] }, { n: 'Tangerine', f: 'cursive', v: [400, 700] }, { n: 'Taprom', f: 'cursive', v: [400] }, { n: 'Tauri', f: 'sans-serif', v: [400] }, { n: 'Taviraj', f: 'serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Teko', f: 'sans-serif', v: [300, 400, 500, 600, 700] }, { n: 'Telex', f: 'sans-serif', v: [400] }, { n: 'Tenali Ramakrishna', f: 'sans-serif', v: [400] }, { n: 'Tenor Sans', f: 'sans-serif', v: [400] }, { n: 'Text Me One', f: 'sans-serif', v: [400] }, { n: 'The Girl Next Door', f: 'cursive', v: [400] }, { n: 'Tienne', f: 'serif', v: [400, 700, 900] }, { n: 'Tillana', f: 'cursive', v: [400, 500, 600, 700, 800] }, { n: 'Timmana', f: 'sans-serif', v: [400] }, { n: 'Tinos', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Titan One', f: 'cursive', v: [400] }, { n: 'Titillium Web', f: 'sans-serif', v: [200, '200i', 300, '300i', 400, '400i', 600, '600i', 700, '700i', 900] }, { n: 'Trade Winds', f: 'cursive', v: [400] }, { n: 'Trirong', f: 'serif', v: [100, '100i', 200, '200i', 300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i', 800, '800i', 900, '900i'] }, { n: 'Trocchi', f: 'serif', v: [400] }, { n: 'Trochut', f: 'cursive', v: [400, '400i', 700] }, { n: 'Trykker', f: 'serif', v: [400] }, { n: 'Tulpen One', f: 'cursive', v: [400] }, { n: 'Ubuntu', f: 'sans-serif', v: [300, '300i', 400, '400i', 500, '500i', 700, '700i'] }, { n: 'Ubuntu Condensed', f: 'sans-serif', v: [400] }, { n: 'Ubuntu Mono', f: 'monospace', v: [400, '400i', 700, '700i'] }, { n: 'Ultra', f: 'serif', v: [400] }, { n: 'Uncial Antiqua', f: 'cursive', v: [400] }, { n: 'Underdog', f: 'cursive', v: [400] }, { n: 'Unica One', f: 'cursive', v: [400] }, { n: 'UnifrakturCook', f: 'cursive', v: [700] }, { n: 'UnifrakturMaguntia', f: 'cursive', v: [400] }, { n: 'Unkempt', f: 'cursive', v: [400, 700] }, { n: 'Unlock', f: 'cursive', v: [400] }, { n: 'Unna', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'VT323', f: 'monospace', v: [400] }, { n: 'Vampiro One', f: 'cursive', v: [400] }, { n: 'Varela', f: 'sans-serif', v: [400] }, { n: 'Varela Round', f: 'sans-serif', v: [400] }, { n: 'Vast Shadow', f: 'cursive', v: [400] }, { n: 'Vesper Libre', f: 'serif', v: [400, 500, 700, 900] }, { n: 'Vibur', f: 'cursive', v: [400] }, { n: 'Vidaloka', f: 'serif', v: [400] }, { n: 'Viga', f: 'sans-serif', v: [400] }, { n: 'Voces', f: 'cursive', v: [400] }, { n: 'Volkhov', f: 'serif', v: [400, '400i', 700, '700i'] }, { n: 'Vollkorn', f: 'serif', v: [400, '400i', 600, '600i', 700, '700i', 900, '900i'] }, { n: 'Vollkorn SC', f: 'serif', v: [400, 600, 700, 900] }, { n: 'Voltaire', f: 'sans-serif', v: [400] }, { n: 'Waiting for the Sunrise', f: 'cursive', v: [400] }, { n: 'Wallpoet', f: 'cursive', v: [400] }, { n: 'Walter Turncoat', f: 'cursive', v: [400] }, { n: 'Warnes', f: 'cursive', v: [400] }, { n: 'Wellfleet', f: 'cursive', v: [400] }, { n: 'Wendy One', f: 'sans-serif', v: [400] }, { n: 'Wire One', f: 'sans-serif', v: [400] }, { n: 'Work Sans', f: 'sans-serif', v: [100, 200, 300, 400, 500, 600, 700, 800, 900] }, { n: 'Yanone Kaffeesatz', f: 'sans-serif', v: [200, 300, 400, 700] }, { n: 'Yantramanav', f: 'sans-serif', v: [100, 300, 400, 500, 700, 900] }, { n: 'Yatra One', f: 'cursive', v: [400] }, { n: 'Yellowtail', f: 'cursive', v: [400] }, { n: 'Yeon Sung', f: 'cursive', v: [400] }, { n: 'Yeseva One', f: 'cursive', v: [400] }, { n: 'Yesteryear', f: 'cursive', v: [400] }, { n: 'Yrsa', f: 'serif', v: [300, 400, 500, 600, 700] }, { n: 'Zeyada', f: 'cursive', v: [400] }, { n: 'Zilla Slab', f: 'serif', v: [300, '300i', 400, '400i', 500, '500i', 600, '600i', 700, '700i'] }, { n: 'Zilla Slab Highlight', f: 'cursive', v: [400, 700] }];

/***/ }),

/***/ "./src/components/fields/assets/IconListData.js":
/*!******************************************************!*\
  !*** ./src/components/fields/assets/IconListData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ['fas fa-ad', 'fas fa-address-book', 'fas fa-address-card', 'fas fa-adjust', 'fas fa-air-freshener', 'fas fa-align-center', 'fas fa-align-justify', 'fas fa-align-left', 'fas fa-align-right', 'fas fa-allergies', 'fas fa-ambulance', 'fas fa-american-sign-language-interpreting', 'fas fa-anchor', 'fas fa-angle-double-down', 'fas fa-angle-double-left', 'fas fa-angle-double-right', 'fas fa-angle-double-up', 'fas fa-angle-down', 'fas fa-angle-left', 'fas fa-angle-right', 'fas fa-angle-up', 'fas fa-angry', 'fas fa-ankh', 'fas fa-apple-alt', 'fas fa-archive', 'fas fa-archway', 'fas fa-arrow-alt-circle-down', 'fas fa-arrow-alt-circle-left', 'fas fa-arrow-alt-circle-right', 'fas fa-arrow-alt-circle-up', 'fas fa-arrow-circle-down', 'fas fa-arrow-circle-left', 'fas fa-arrow-circle-right', 'fas fa-arrow-circle-up', 'fas fa-arrow-down', 'fas fa-arrow-left', 'fas fa-arrow-right', 'fas fa-arrow-up', 'fas fa-arrows-alt', 'fas fa-arrows-alt-h', 'fas fa-arrows-alt-v', 'fas fa-assistive-listening-systems', 'fas fa-asterisk', 'fas fa-at', 'fas fa-atlas', 'fas fa-atom', 'fas fa-audio-description', 'fas fa-award', 'fas fa-baby', 'fas fa-baby-carriage', 'fas fa-backspace', 'fas fa-backward', 'fas fa-balance-scale', 'fas fa-ban', 'fas fa-band-aid', 'fas fa-barcode', 'fas fa-bars', 'fas fa-baseball-ball', 'fas fa-basketball-ball', 'fas fa-bath', 'fas fa-battery-empty', 'fas fa-battery-full', 'fas fa-battery-half', 'fas fa-battery-quarter', 'fas fa-battery-three-quarters', 'fas fa-bed', 'fas fa-beer', 'fas fa-bell', 'fas fa-bell-slash', 'fas fa-bezier-curve', 'fas fa-bible', 'fas fa-bicycle', 'fas fa-binoculars', 'fas fa-biohazard', 'fas fa-birthday-cake', 'fas fa-blender', 'fas fa-blender-phone', 'fas fa-blind', 'fas fa-blog', 'fas fa-bold', 'fas fa-bolt', 'fas fa-bomb', 'fas fa-bone', 'fas fa-bong', 'fas fa-book', 'fas fa-book-dead', 'fas fa-book-open', 'fas fa-book-reader', 'fas fa-bookmark', 'fas fa-bowling-ball', 'fas fa-box', 'fas fa-box-open', 'fas fa-boxes', 'fas fa-braille', 'fas fa-brain', 'fas fa-briefcase', 'fas fa-briefcase-medical', 'fas fa-broadcast-tower', 'fas fa-broom', 'fas fa-brush', 'fas fa-bug', 'fas fa-building', 'fas fa-bullhorn', 'fas fa-bullseye', 'fas fa-burn', 'fas fa-bus', 'fas fa-bus-alt', 'fas fa-business-time', 'fas fa-calculator', 'fas fa-calendar', 'fas fa-calendar-alt', 'fas fa-calendar-check', 'fas fa-calendar-day', 'fas fa-calendar-minus', 'fas fa-calendar-plus', 'fas fa-calendar-times', 'fas fa-calendar-week', 'fas fa-camera', 'fas fa-camera-retro', 'fas fa-campground', 'fas fa-candy-cane', 'fas fa-cannabis', 'fas fa-capsules', 'fas fa-car', 'fas fa-car-alt', 'fas fa-car-battery', 'fas fa-car-crash', 'fas fa-car-side', 'fas fa-caret-down', 'fas fa-caret-left', 'fas fa-caret-right', 'fas fa-caret-square-down', 'fas fa-caret-square-left', 'fas fa-caret-square-right', 'fas fa-caret-square-up', 'fas fa-caret-up', 'fas fa-carrot', 'fas fa-cart-arrow-down', 'fas fa-cart-plus', 'fas fa-cash-register', 'fas fa-cat', 'fas fa-certificate', 'fas fa-chair', 'fas fa-chalkboard', 'fas fa-chalkboard-teacher', 'fas fa-charging-station', 'fas fa-chart-area', 'fas fa-chart-bar', 'fas fa-chart-line', 'fas fa-chart-pie', 'fas fa-check', 'fas fa-check-circle', 'fas fa-check-double', 'fas fa-check-square', 'fas fa-chess', 'fas fa-chess-bishop', 'fas fa-chess-board', 'fas fa-chess-king', 'fas fa-chess-knight', 'fas fa-chess-pawn', 'fas fa-chess-queen', 'fas fa-chess-rook', 'fas fa-chevron-circle-down', 'fas fa-chevron-circle-left', 'fas fa-chevron-circle-right', 'fas fa-chevron-circle-up', 'fas fa-chevron-down', 'fas fa-chevron-left', 'fas fa-chevron-right', 'fas fa-chevron-up', 'fas fa-child', 'fas fa-church', 'fas fa-circle', 'fas fa-circle-notch', 'fas fa-city', 'fas fa-clipboard', 'fas fa-clipboard-check', 'fas fa-clipboard-list', 'fas fa-clock', 'fas fa-clone', 'fas fa-closed-captioning', 'fas fa-cloud', 'fas fa-cloud-download-alt', 'fas fa-cloud-meatball', 'fas fa-cloud-moon', 'fas fa-cloud-moon-rain', 'fas fa-cloud-rain', 'fas fa-cloud-showers-heavy', 'fas fa-cloud-sun', 'fas fa-cloud-sun-rain', 'fas fa-cloud-upload-alt', 'fas fa-cocktail', 'fas fa-code', 'fas fa-code-branch', 'fas fa-coffee', 'fas fa-cog', 'fas fa-cogs', 'fas fa-coins', 'fas fa-columns', 'fas fa-comment', 'fas fa-comment-alt', 'fas fa-comment-dollar', 'fas fa-comment-dots', 'fas fa-comment-slash', 'fas fa-comments', 'fas fa-comments-dollar', 'fas fa-compact-disc', 'fas fa-compass', 'fas fa-compress', 'fas fa-compress-arrows-alt', 'fas fa-concierge-bell', 'fas fa-cookie', 'fas fa-cookie-bite', 'fas fa-copy', 'fas fa-copyright', 'fas fa-couch', 'fas fa-credit-card', 'fas fa-crop', 'fas fa-crop-alt', 'fas fa-cross', 'fas fa-crosshairs', 'fas fa-crow', 'fas fa-crown', 'fas fa-cube', 'fas fa-cubes', 'fas fa-cut', 'fas fa-database', 'fas fa-deaf', 'fas fa-democrat', 'fas fa-desktop', 'fas fa-dharmachakra', 'fas fa-diagnoses', 'fas fa-dice', 'fas fa-dice-d20', 'fas fa-dice-d6', 'fas fa-dice-five', 'fas fa-dice-four', 'fas fa-dice-one', 'fas fa-dice-six', 'fas fa-dice-three', 'fas fa-dice-two', 'fas fa-digital-tachograph', 'fas fa-directions', 'fas fa-divide', 'fas fa-dizzy', 'fas fa-dna', 'fas fa-dog', 'fas fa-dollar-sign', 'fas fa-dolly', 'fas fa-dolly-flatbed', 'fas fa-donate', 'fas fa-door-closed', 'fas fa-door-open', 'fas fa-dot-circle', 'fas fa-dove', 'fas fa-download', 'fas fa-drafting-compass', 'fas fa-dragon', 'fas fa-draw-polygon', 'fas fa-drum', 'fas fa-drum-steelpan', 'fas fa-drumstick-bite', 'fas fa-dumbbell', 'fas fa-dumpster', 'fas fa-dumpster-fire', 'fas fa-dungeon', 'fas fa-edit', 'fas fa-eject', 'fas fa-ellipsis-h', 'fas fa-ellipsis-v', 'fas fa-envelope', 'fas fa-envelope-open', 'fas fa-envelope-open-text', 'fas fa-envelope-square', 'fas fa-equals', 'fas fa-eraser', 'fas fa-ethernet', 'fas fa-euro-sign', 'fas fa-exchange-alt', 'fas fa-exclamation', 'fas fa-exclamation-circle', 'fas fa-exclamation-triangle', 'fas fa-expand', 'fas fa-expand-arrows-alt', 'fas fa-external-link-alt', 'fas fa-external-link-square-alt', 'fas fa-eye', 'fas fa-eye-dropper', 'fas fa-eye-slash', 'fas fa-fast-backward', 'fas fa-fast-forward', 'fas fa-fax', 'fas fa-feather', 'fas fa-feather-alt', 'fas fa-female', 'fas fa-fighter-jet', 'fas fa-file', 'fas fa-file-alt', 'fas fa-file-archive', 'fas fa-file-audio', 'fas fa-file-code', 'fas fa-file-contract', 'fas fa-file-csv', 'fas fa-file-download', 'fas fa-file-excel', 'fas fa-file-export', 'fas fa-file-image', 'fas fa-file-import', 'fas fa-file-invoice', 'fas fa-file-invoice-dollar', 'fas fa-file-medical', 'fas fa-file-medical-alt', 'fas fa-file-pdf', 'fas fa-file-powerpoint', 'fas fa-file-prescription', 'fas fa-file-signature', 'fas fa-file-upload', 'fas fa-file-video', 'fas fa-file-word', 'fas fa-fill', 'fas fa-fill-drip', 'fas fa-film', 'fas fa-filter', 'fas fa-fingerprint', 'fas fa-fire', 'fas fa-fire-alt', 'fas fa-fire-extinguisher', 'fas fa-first-aid', 'fas fa-fish', 'fas fa-fist-raised', 'fas fa-flag', 'fas fa-flag-checkered', 'fas fa-flag-usa', 'fas fa-flask', 'fas fa-flushed', 'fas fa-folder', 'fas fa-folder-minus', 'fas fa-folder-open', 'fas fa-folder-plus', 'fas fa-font', 'fas fa-football-ball', 'fas fa-forward', 'fas fa-frog', 'fas fa-frown', 'fas fa-frown-open', 'fas fa-funnel-dollar', 'fas fa-futbol', 'fas fa-gamepad', 'fas fa-gas-pump', 'fas fa-gavel', 'fas fa-gem', 'fas fa-genderless', 'fas fa-ghost', 'fas fa-gift', 'fas fa-gifts', 'fas fa-glass-cheers', 'fas fa-glass-martini', 'fas fa-glass-martini-alt', 'fas fa-glass-whiskey', 'fas fa-glasses', 'fas fa-globe', 'fas fa-globe-africa', 'fas fa-globe-americas', 'fas fa-globe-asia', 'fas fa-globe-europe', 'fas fa-golf-ball', 'fas fa-gopuram', 'fas fa-graduation-cap', 'fas fa-greater-than', 'fas fa-greater-than-equal', 'fas fa-grimace', 'fas fa-grin', 'fas fa-grin-alt', 'fas fa-grin-beam', 'fas fa-grin-beam-sweat', 'fas fa-grin-hearts', 'fas fa-grin-squint', 'fas fa-grin-squint-tears', 'fas fa-grin-stars', 'fas fa-grin-tears', 'fas fa-grin-tongue', 'fas fa-grin-tongue-squint', 'fas fa-grin-tongue-wink', 'fas fa-grin-wink', 'fas fa-grip-horizontal', 'fas fa-grip-lines', 'fas fa-grip-lines-vertical', 'fas fa-grip-vertical', 'fas fa-guitar', 'fas fa-h-square', 'fas fa-hammer', 'fas fa-hamsa', 'fas fa-hand-holding', 'fas fa-hand-holding-heart', 'fas fa-hand-holding-usd', 'fas fa-hand-lizard', 'fas fa-hand-paper', 'fas fa-hand-peace', 'fas fa-hand-point-down', 'fas fa-hand-point-left', 'fas fa-hand-point-right', 'fas fa-hand-point-up', 'fas fa-hand-pointer', 'fas fa-hand-rock', 'fas fa-hand-scissors', 'fas fa-hand-spock', 'fas fa-hands', 'fas fa-hands-helping', 'fas fa-handshake', 'fas fa-hanukiah', 'fas fa-hashtag', 'fas fa-hat-wizard', 'fas fa-haykal', 'fas fa-hdd', 'fas fa-heading', 'fas fa-headphones', 'fas fa-headphones-alt', 'fas fa-headset', 'fas fa-heart', 'fas fa-heart-broken', 'fas fa-heartbeat', 'fas fa-helicopter', 'fas fa-highlighter', 'fas fa-hiking', 'fas fa-hippo', 'fas fa-history', 'fas fa-hockey-puck', 'fas fa-holly-berry', 'fas fa-home', 'fas fa-horse', 'fas fa-horse-head', 'fas fa-hospital', 'fas fa-hospital-alt', 'fas fa-hospital-symbol', 'fas fa-hot-tub', 'fas fa-hotel', 'fas fa-hourglass', 'fas fa-hourglass-end', 'fas fa-hourglass-half', 'fas fa-hourglass-start', 'fas fa-house-damage', 'fas fa-hryvnia', 'fas fa-i-cursor', 'fas fa-icicles', 'fas fa-id-badge', 'fas fa-id-card', 'fas fa-id-card-alt', 'fas fa-igloo', 'fas fa-image', 'fas fa-images', 'fas fa-inbox', 'fas fa-indent', 'fas fa-industry', 'fas fa-infinity', 'fas fa-info', 'fas fa-info-circle', 'fas fa-italic', 'fas fa-jedi', 'fas fa-joint', 'fas fa-journal-whills', 'fas fa-kaaba', 'fas fa-key', 'fas fa-keyboard', 'fas fa-khanda', 'fas fa-kiss', 'fas fa-kiss-beam', 'fas fa-kiss-wink-heart', 'fas fa-kiwi-bird', 'fas fa-landmark', 'fas fa-language', 'fas fa-laptop', 'fas fa-laptop-code', 'fas fa-laugh', 'fas fa-laugh-beam', 'fas fa-laugh-squint', 'fas fa-laugh-wink', 'fas fa-layer-group', 'fas fa-leaf', 'fas fa-lemon', 'fas fa-less-than', 'fas fa-less-than-equal', 'fas fa-level-down-alt', 'fas fa-level-up-alt', 'fas fa-life-ring', 'fas fa-lightbulb', 'fas fa-link', 'fas fa-lira-sign', 'fas fa-list', 'fas fa-list-alt', 'fas fa-list-ol', 'fas fa-list-ul', 'fas fa-location-arrow', 'fas fa-lock', 'fas fa-lock-open', 'fas fa-long-arrow-alt-down', 'fas fa-long-arrow-alt-left', 'fas fa-long-arrow-alt-right', 'fas fa-long-arrow-alt-up', 'fas fa-low-vision', 'fas fa-luggage-cart', 'fas fa-magic', 'fas fa-magnet', 'fas fa-mail-bulk', 'fas fa-male', 'fas fa-map', 'fas fa-map-marked', 'fas fa-map-marked-alt', 'fas fa-map-marker', 'fas fa-map-marker-alt', 'fas fa-map-pin', 'fas fa-map-signs', 'fas fa-marker', 'fas fa-mars', 'fas fa-mars-double', 'fas fa-mars-stroke', 'fas fa-mars-stroke-h', 'fas fa-mars-stroke-v', 'fas fa-mask', 'fas fa-medal', 'fas fa-medkit', 'fas fa-meh', 'fas fa-meh-blank', 'fas fa-meh-rolling-eyes', 'fas fa-memory', 'fas fa-menorah', 'fas fa-mercury', 'fas fa-meteor', 'fas fa-microchip', 'fas fa-microphone', 'fas fa-microphone-alt', 'fas fa-microphone-alt-slash', 'fas fa-microphone-slash', 'fas fa-microscope', 'fas fa-minus', 'fas fa-minus-circle', 'fas fa-minus-square', 'fas fa-mitten', 'fas fa-mobile', 'fas fa-mobile-alt', 'fas fa-money-bill', 'fas fa-money-bill-alt', 'fas fa-money-bill-wave', 'fas fa-money-bill-wave-alt', 'fas fa-money-check', 'fas fa-money-check-alt', 'fas fa-monument', 'fas fa-moon', 'fas fa-mortar-pestle', 'fas fa-mosque', 'fas fa-motorcycle', 'fas fa-mountain', 'fas fa-mouse-pointer', 'fas fa-mug-hot', 'fas fa-music', 'fas fa-network-wired', 'fas fa-neuter', 'fas fa-newspaper', 'fas fa-not-equal', 'fas fa-notes-medical', 'fas fa-object-group', 'fas fa-object-ungroup', 'fas fa-oil-can', 'fas fa-om', 'fas fa-otter', 'fas fa-outdent', 'fas fa-paint-brush', 'fas fa-paint-roller', 'fas fa-palette', 'fas fa-pallet', 'fas fa-paper-plane', 'fas fa-paperclip', 'fas fa-parachute-box', 'fas fa-paragraph', 'fas fa-parking', 'fas fa-passport', 'fas fa-pastafarianism', 'fas fa-paste', 'fas fa-pause', 'fas fa-pause-circle', 'fas fa-paw', 'fas fa-peace', 'fas fa-pen', 'fas fa-pen-alt', 'fas fa-pen-fancy', 'fas fa-pen-nib', 'fas fa-pen-square', 'fas fa-pencil-alt', 'fas fa-pencil-ruler', 'fas fa-people-carry', 'fas fa-percent', 'fas fa-percentage', 'fas fa-person-booth', 'fas fa-phone', 'fas fa-phone-slash', 'fas fa-phone-square', 'fas fa-phone-volume', 'fas fa-piggy-bank', 'fas fa-pills', 'fas fa-place-of-worship', 'fas fa-plane', 'fas fa-plane-arrival', 'fas fa-plane-departure', 'fas fa-play', 'fas fa-play-circle', 'fas fa-plug', 'fas fa-plus', 'fas fa-plus-circle', 'fas fa-plus-square', 'fas fa-podcast', 'fas fa-poll', 'fas fa-poll-h', 'fas fa-poo', 'fas fa-poo-storm', 'fas fa-poop', 'fas fa-portrait', 'fas fa-pound-sign', 'fas fa-power-off', 'fas fa-pray', 'fas fa-praying-hands', 'fas fa-prescription', 'fas fa-prescription-bottle', 'fas fa-prescription-bottle-alt', 'fas fa-print', 'fas fa-procedures', 'fas fa-project-diagram', 'fas fa-puzzle-piece', 'fas fa-qrcode', 'fas fa-question', 'fas fa-question-circle', 'fas fa-quidditch', 'fas fa-quote-left', 'fas fa-quote-right', 'fas fa-quran', 'fas fa-radiation', 'fas fa-radiation-alt', 'fas fa-rainbow', 'fas fa-random', 'fas fa-receipt', 'fas fa-recycle', 'fas fa-redo', 'fas fa-redo-alt', 'fas fa-registered', 'fas fa-reply', 'fas fa-reply-all', 'fas fa-republican', 'fas fa-restroom', 'fas fa-retweet', 'fas fa-ribbon', 'fas fa-ring', 'fas fa-road', 'fas fa-robot', 'fas fa-rocket', 'fas fa-route', 'fas fa-rss', 'fas fa-rss-square', 'fas fa-ruble-sign', 'fas fa-ruler', 'fas fa-ruler-combined', 'fas fa-ruler-horizontal', 'fas fa-ruler-vertical', 'fas fa-running', 'fas fa-rupee-sign', 'fas fa-sad-cry', 'fas fa-sad-tear', 'fas fa-satellite', 'fas fa-satellite-dish', 'fas fa-save', 'fas fa-school', 'fas fa-screwdriver', 'fas fa-scroll', 'fas fa-sd-card', 'fas fa-search', 'fas fa-search-dollar', 'fas fa-search-location', 'fas fa-search-minus', 'fas fa-search-plus', 'fas fa-seedling', 'fas fa-server', 'fas fa-shapes', 'fas fa-share', 'fas fa-share-alt', 'fas fa-share-alt-square', 'fas fa-share-square', 'fas fa-shekel-sign', 'fas fa-shield-alt', 'fas fa-ship', 'fas fa-shipping-fast', 'fas fa-shoe-prints', 'fas fa-shopping-bag', 'fas fa-shopping-basket', 'fas fa-shopping-cart', 'fas fa-shower', 'fas fa-shuttle-van', 'fas fa-sign', 'fas fa-sign-in-alt', 'fas fa-sign-language', 'fas fa-sign-out-alt', 'fas fa-signal', 'fas fa-signature', 'fas fa-sim-card', 'fas fa-sitemap', 'fas fa-skating', 'fas fa-skiing', 'fas fa-skiing-nordic', 'fas fa-skull', 'fas fa-skull-crossbones', 'fas fa-slash', 'fas fa-sleigh', 'fas fa-sliders-h', 'fas fa-smile', 'fas fa-smile-beam', 'fas fa-smile-wink', 'fas fa-smog', 'fas fa-smoking', 'fas fa-smoking-ban', 'fas fa-sms', 'fas fa-snowboarding', 'fas fa-snowflake', 'fas fa-snowman', 'fas fa-snowplow', 'fas fa-socks', 'fas fa-solar-panel', 'fas fa-sort', 'fas fa-sort-alpha-down', 'fas fa-sort-alpha-up', 'fas fa-sort-amount-down', 'fas fa-sort-amount-up', 'fas fa-sort-down', 'fas fa-sort-numeric-down', 'fas fa-sort-numeric-up', 'fas fa-sort-up', 'fas fa-spa', 'fas fa-space-shuttle', 'fas fa-spider', 'fas fa-spinner', 'fas fa-splotch', 'fas fa-spray-can', 'fas fa-square', 'fas fa-square-full', 'fas fa-square-root-alt', 'fas fa-stamp', 'fas fa-star', 'fas fa-star-and-crescent', 'fas fa-star-half', 'fas fa-star-half-alt', 'fas fa-star-of-david', 'fas fa-star-of-life', 'fas fa-step-backward', 'fas fa-step-forward', 'fas fa-stethoscope', 'fas fa-sticky-note', 'fas fa-stop', 'fas fa-stop-circle', 'fas fa-stopwatch', 'fas fa-store', 'fas fa-store-alt', 'fas fa-stream', 'fas fa-street-view', 'fas fa-strikethrough', 'fas fa-stroopwafel', 'fas fa-subscript', 'fas fa-subway', 'fas fa-suitcase', 'fas fa-suitcase-rolling', 'fas fa-sun', 'fas fa-superscript', 'fas fa-surprise', 'fas fa-swatchbook', 'fas fa-swimmer', 'fas fa-swimming-pool', 'fas fa-synagogue', 'fas fa-sync', 'fas fa-sync-alt', 'fas fa-syringe', 'fas fa-table', 'fas fa-table-tennis', 'fas fa-tablet', 'fas fa-tablet-alt', 'fas fa-tablets', 'fas fa-tachometer-alt', 'fas fa-tag', 'fas fa-tags', 'fas fa-tape', 'fas fa-tasks', 'fas fa-taxi', 'fas fa-teeth', 'fas fa-teeth-open', 'fas fa-temperature-high', 'fas fa-temperature-low', 'fas fa-tenge', 'fas fa-terminal', 'fas fa-text-height', 'fas fa-text-width', 'fas fa-th', 'fas fa-th-large', 'fas fa-th-list', 'fas fa-theater-masks', 'fas fa-thermometer', 'fas fa-thermometer-empty', 'fas fa-thermometer-full', 'fas fa-thermometer-half', 'fas fa-thermometer-quarter', 'fas fa-thermometer-three-quarters', 'fas fa-thumbs-down', 'fas fa-thumbs-up', 'fas fa-thumbtack', 'fas fa-ticket-alt', 'fas fa-times', 'fas fa-times-circle', 'fas fa-tint', 'fas fa-tint-slash', 'fas fa-tired', 'fas fa-toggle-off', 'fas fa-toggle-on', 'fas fa-toilet', 'fas fa-toilet-paper', 'fas fa-toolbox', 'fas fa-tools', 'fas fa-tooth', 'fas fa-torah', 'fas fa-torii-gate', 'fas fa-tractor', 'fas fa-trademark', 'fas fa-traffic-light', 'fas fa-train', 'fas fa-tram', 'fas fa-transgender', 'fas fa-transgender-alt', 'fas fa-trash', 'fas fa-trash-alt', 'fas fa-tree', 'fas fa-trophy', 'fas fa-truck', 'fas fa-truck-loading', 'fas fa-truck-monster', 'fas fa-truck-moving', 'fas fa-truck-pickup', 'fas fa-tshirt', 'fas fa-tty', 'fas fa-tv', 'fas fa-umbrella', 'fas fa-umbrella-beach', 'fas fa-underline', 'fas fa-undo', 'fas fa-undo-alt', 'fas fa-universal-access', 'fas fa-university', 'fas fa-unlink', 'fas fa-unlock', 'fas fa-unlock-alt', 'fas fa-upload', 'fas fa-user', 'fas fa-user-alt', 'fas fa-user-alt-slash', 'fas fa-user-astronaut', 'fas fa-user-check', 'fas fa-user-circle', 'fas fa-user-clock', 'fas fa-user-cog', 'fas fa-user-edit', 'fas fa-user-friends', 'fas fa-user-graduate', 'fas fa-user-injured', 'fas fa-user-lock', 'fas fa-user-md', 'fas fa-user-minus', 'fas fa-user-ninja', 'fas fa-user-plus', 'fas fa-user-secret', 'fas fa-user-shield', 'fas fa-user-slash', 'fas fa-user-tag', 'fas fa-user-tie', 'fas fa-user-times', 'fas fa-users', 'fas fa-users-cog', 'fas fa-utensil-spoon', 'fas fa-utensils', 'fas fa-vector-square', 'fas fa-venus', 'fas fa-venus-double', 'fas fa-venus-mars', 'fas fa-vial', 'fas fa-vials', 'fas fa-video', 'fas fa-video-slash', 'fas fa-vihara', 'fas fa-volleyball-ball', 'fas fa-volume-down', 'fas fa-volume-mute', 'fas fa-volume-off', 'fas fa-volume-up', 'fas fa-vote-yea', 'fas fa-vr-cardboard', 'fas fa-walking', 'fas fa-wallet', 'fas fa-warehouse', 'fas fa-water', 'fas fa-weight', 'fas fa-weight-hanging', 'fas fa-wheelchair', 'fas fa-wifi', 'fas fa-wind', 'fas fa-window-close', 'fas fa-window-maximize', 'fas fa-window-minimize', 'fas fa-window-restore', 'fas fa-wine-bottle', 'fas fa-wine-glass', 'fas fa-wine-glass-alt', 'fas fa-won-sign', 'fas fa-wrench', 'fas fa-x-ray', 'fas fa-yen-sign', 'fas fa-yin-yang', 'far fa-address-book', 'far fa-address-card', 'far fa-angry', 'far fa-arrow-alt-circle-down', 'far fa-arrow-alt-circle-left', 'far fa-arrow-alt-circle-right', 'far fa-arrow-alt-circle-up', 'far fa-bell', 'far fa-bell-slash', 'far fa-bookmark', 'far fa-building', 'far fa-calendar', 'far fa-calendar-alt', 'far fa-calendar-check', 'far fa-calendar-minus', 'far fa-calendar-plus', 'far fa-calendar-times', 'far fa-caret-square-down', 'far fa-caret-square-left', 'far fa-caret-square-right', 'far fa-caret-square-up', 'far fa-chart-bar', 'far fa-check-circle', 'far fa-check-square', 'far fa-circle', 'far fa-clipboard', 'far fa-clock', 'far fa-clone', 'far fa-closed-captioning', 'far fa-comment', 'far fa-comment-alt', 'far fa-comment-dots', 'far fa-comments', 'far fa-compass', 'far fa-copy', 'far fa-copyright', 'far fa-credit-card', 'far fa-dizzy', 'far fa-dot-circle', 'far fa-edit', 'far fa-envelope', 'far fa-envelope-open', 'far fa-eye', 'far fa-eye-slash', 'far fa-file', 'far fa-file-alt', 'far fa-file-archive', 'far fa-file-audio', 'far fa-file-code', 'far fa-file-excel', 'far fa-file-image', 'far fa-file-pdf', 'far fa-file-powerpoint', 'far fa-file-video', 'far fa-file-word', 'far fa-flag', 'far fa-flushed', 'far fa-folder', 'far fa-folder-open', 'far fa-frown', 'far fa-frown-open', 'far fa-futbol', 'far fa-gem', 'far fa-grimace', 'far fa-grin', 'far fa-grin-alt', 'far fa-grin-beam', 'far fa-grin-beam-sweat', 'far fa-grin-hearts', 'far fa-grin-squint', 'far fa-grin-squint-tears', 'far fa-grin-stars', 'far fa-grin-tears', 'far fa-grin-tongue', 'far fa-grin-tongue-squint', 'far fa-grin-tongue-wink', 'far fa-grin-wink', 'far fa-hand-lizard', 'far fa-hand-paper', 'far fa-hand-peace', 'far fa-hand-point-down', 'far fa-hand-point-left', 'far fa-hand-point-right', 'far fa-hand-point-up', 'far fa-hand-pointer', 'far fa-hand-rock', 'far fa-hand-scissors', 'far fa-hand-spock', 'far fa-handshake', 'far fa-hdd', 'far fa-heart', 'far fa-hospital', 'far fa-hourglass', 'far fa-id-badge', 'far fa-id-card', 'far fa-image', 'far fa-images', 'far fa-keyboard', 'far fa-kiss', 'far fa-kiss-beam', 'far fa-kiss-wink-heart', 'far fa-laugh', 'far fa-laugh-beam', 'far fa-laugh-squint', 'far fa-laugh-wink', 'far fa-lemon', 'far fa-life-ring', 'far fa-lightbulb', 'far fa-list-alt', 'far fa-map', 'far fa-meh', 'far fa-meh-blank', 'far fa-meh-rolling-eyes', 'far fa-minus-square', 'far fa-money-bill-alt', 'far fa-moon', 'far fa-newspaper', 'far fa-object-group', 'far fa-object-ungroup', 'far fa-paper-plane', 'far fa-pause-circle', 'far fa-play-circle', 'far fa-plus-square', 'far fa-question-circle', 'far fa-registered', 'far fa-sad-cry', 'far fa-sad-tear', 'far fa-save', 'far fa-share-square', 'far fa-smile', 'far fa-smile-beam', 'far fa-smile-wink', 'far fa-snowflake', 'far fa-square', 'far fa-star', 'far fa-star-half', 'far fa-sticky-note', 'far fa-stop-circle', 'far fa-sun', 'far fa-surprise', 'far fa-thumbs-down', 'far fa-thumbs-up', 'far fa-times-circle', 'far fa-tired', 'far fa-trash-alt', 'far fa-user', 'far fa-user-circle', 'far fa-window-close', 'far fa-window-maximize', 'far fa-window-minimize', 'far fa-window-restore', 'fab fa-500px', 'fab fa-accessible-icon', 'fab fa-accusoft', 'fab fa-acquisitions-incorporated', 'fab fa-adn', 'fab fa-adobe', 'fab fa-adversal', 'fab fa-affiliatetheme', 'fab fa-algolia', 'fab fa-alipay', 'fab fa-amazon', 'fab fa-amazon-pay', 'fab fa-amilia', 'fab fa-android', 'fab fa-angellist', 'fab fa-angrycreative', 'fab fa-angular', 'fab fa-app-store', 'fab fa-app-store-ios', 'fab fa-apper', 'fab fa-apple', 'fab fa-apple-pay', 'fab fa-artstation', 'fab fa-asymmetrik', 'fab fa-atlassian', 'fab fa-audible', 'fab fa-autoprefixer', 'fab fa-avianex', 'fab fa-aviato', 'fab fa-aws', 'fab fa-bandcamp', 'fab fa-behance', 'fab fa-behance-square', 'fab fa-bimobject', 'fab fa-bitbucket', 'fab fa-bitcoin', 'fab fa-bity', 'fab fa-black-tie', 'fab fa-blackberry', 'fab fa-blogger', 'fab fa-blogger-b', 'fab fa-bluetooth', 'fab fa-bluetooth-b', 'fab fa-btc', 'fab fa-buromobelexperte', 'fab fa-buysellads', 'fab fa-canadian-maple-leaf', 'fab fa-cc-amazon-pay', 'fab fa-cc-amex', 'fab fa-cc-apple-pay', 'fab fa-cc-diners-club', 'fab fa-cc-discover', 'fab fa-cc-jcb', 'fab fa-cc-mastercard', 'fab fa-cc-paypal', 'fab fa-cc-stripe', 'fab fa-cc-visa', 'fab fa-centercode', 'fab fa-centos', 'fab fa-chrome', 'fab fa-cloudscale', 'fab fa-cloudsmith', 'fab fa-cloudversify', 'fab fa-codepen', 'fab fa-codiepie', 'fab fa-confluence', 'fab fa-connectdevelop', 'fab fa-contao', 'fab fa-cpanel', 'fab fa-creative-commons', 'fab fa-creative-commons-by', 'fab fa-creative-commons-nc', 'fab fa-creative-commons-nc-eu', 'fab fa-creative-commons-nc-jp', 'fab fa-creative-commons-nd', 'fab fa-creative-commons-pd', 'fab fa-creative-commons-pd-alt', 'fab fa-creative-commons-remix', 'fab fa-creative-commons-sa', 'fab fa-creative-commons-sampling', 'fab fa-creative-commons-sampling-plus', 'fab fa-creative-commons-share', 'fab fa-creative-commons-zero', 'fab fa-critical-role', 'fab fa-css3', 'fab fa-css3-alt', 'fab fa-cuttlefish', 'fab fa-d-and-d', 'fab fa-d-and-d-beyond', 'fab fa-dashcube', 'fab fa-delicious', 'fab fa-deploydog', 'fab fa-deskpro', 'fab fa-dev', 'fab fa-deviantart', 'fab fa-dhl', 'fab fa-diaspora', 'fab fa-digg', 'fab fa-digital-ocean', 'fab fa-discord', 'fab fa-discourse', 'fab fa-dochub', 'fab fa-docker', 'fab fa-draft2digital', 'fab fa-dribbble', 'fab fa-dribbble-square', 'fab fa-dropbox', 'fab fa-drupal', 'fab fa-dyalog', 'fab fa-earlybirds', 'fab fa-ebay', 'fab fa-edge', 'fab fa-elementor', 'fab fa-ello', 'fab fa-ember', 'fab fa-empire', 'fab fa-envira', 'fab fa-erlang', 'fab fa-ethereum', 'fab fa-etsy', 'fab fa-expeditedssl', 'fab fa-facebook', 'fab fa-facebook-f', 'fab fa-facebook-messenger', 'fab fa-facebook-square', 'fab fa-fantasy-flight-games', 'fab fa-fedex', 'fab fa-fedora', 'fab fa-figma', 'fab fa-firefox', 'fab fa-first-order', 'fab fa-first-order-alt', 'fab fa-firstdraft', 'fab fa-flickr', 'fab fa-flipboard', 'fab fa-fly', 'fab fa-font-awesome', 'fab fa-font-awesome-alt', 'fab fa-font-awesome-flag', 'fab fa-fonticons', 'fab fa-fonticons-fi', 'fab fa-fort-awesome', 'fab fa-fort-awesome-alt', 'fab fa-forumbee', 'fab fa-foursquare', 'fab fa-free-code-camp', 'fab fa-freebsd', 'fab fa-fulcrum', 'fab fa-galactic-republic', 'fab fa-galactic-senate', 'fab fa-get-pocket', 'fab fa-gg', 'fab fa-gg-circle', 'fab fa-git', 'fab fa-git-square', 'fab fa-github', 'fab fa-github-alt', 'fab fa-github-square', 'fab fa-gitkraken', 'fab fa-gitlab', 'fab fa-gitter', 'fab fa-glide', 'fab fa-glide-g', 'fab fa-gofore', 'fab fa-goodreads', 'fab fa-goodreads-g', 'fab fa-google', 'fab fa-google-drive', 'fab fa-google-play', 'fab fa-google-plus', 'fab fa-google-plus-g', 'fab fa-google-plus-square', 'fab fa-google-wallet', 'fab fa-gratipay', 'fab fa-grav', 'fab fa-gripfire', 'fab fa-grunt', 'fab fa-gulp', 'fab fa-hacker-news', 'fab fa-hacker-news-square', 'fab fa-hackerrank', 'fab fa-hips', 'fab fa-hire-a-helper', 'fab fa-hooli', 'fab fa-hornbill', 'fab fa-hotjar', 'fab fa-houzz', 'fab fa-html5', 'fab fa-hubspot', 'fab fa-imdb', 'fab fa-instagram', 'fab fa-intercom', 'fab fa-internet-explorer', 'fab fa-invision', 'fab fa-ioxhost', 'fab fa-itunes', 'fab fa-itunes-note', 'fab fa-java', 'fab fa-jedi-order', 'fab fa-jenkins', 'fab fa-jira', 'fab fa-joget', 'fab fa-joomla', 'fab fa-js', 'fab fa-js-square', 'fab fa-jsfiddle', 'fab fa-kaggle', 'fab fa-keybase', 'fab fa-keycdn', 'fab fa-kickstarter', 'fab fa-kickstarter-k', 'fab fa-korvue', 'fab fa-laravel', 'fab fa-lastfm', 'fab fa-lastfm-square', 'fab fa-leanpub', 'fab fa-less', 'fab fa-line', 'fab fa-linkedin', 'fab fa-linkedin-in', 'fab fa-linode', 'fab fa-linux', 'fab fa-lyft', 'fab fa-magento', 'fab fa-mailchimp', 'fab fa-mandalorian', 'fab fa-markdown', 'fab fa-mastodon', 'fab fa-maxcdn', 'fab fa-medapps', 'fab fa-medium', 'fab fa-medium-m', 'fab fa-medrt', 'fab fa-meetup', 'fab fa-megaport', 'fab fa-mendeley', 'fab fa-microsoft', 'fab fa-mix', 'fab fa-mixcloud', 'fab fa-mizuni', 'fab fa-modx', 'fab fa-monero', 'fab fa-napster', 'fab fa-neos', 'fab fa-nimblr', 'fab fa-nintendo-switch', 'fab fa-node', 'fab fa-node-js', 'fab fa-npm', 'fab fa-ns8', 'fab fa-nutritionix', 'fab fa-odnoklassniki', 'fab fa-odnoklassniki-square', 'fab fa-old-republic', 'fab fa-opencart', 'fab fa-openid', 'fab fa-opera', 'fab fa-optin-monster', 'fab fa-osi', 'fab fa-page4', 'fab fa-pagelines', 'fab fa-palfed', 'fab fa-patreon', 'fab fa-paypal', 'fab fa-penny-arcade', 'fab fa-periscope', 'fab fa-phabricator', 'fab fa-phoenix-framework', 'fab fa-phoenix-squadron', 'fab fa-php', 'fab fa-pied-piper', 'fab fa-pied-piper-alt', 'fab fa-pied-piper-hat', 'fab fa-pied-piper-pp', 'fab fa-pinterest', 'fab fa-pinterest-p', 'fab fa-pinterest-square', 'fab fa-playstation', 'fab fa-product-hunt', 'fab fa-pushed', 'fab fa-python', 'fab fa-qq', 'fab fa-quinscape', 'fab fa-quora', 'fab fa-r-project', 'fab fa-raspberry-pi', 'fab fa-ravelry', 'fab fa-react', 'fab fa-reacteurope', 'fab fa-readme', 'fab fa-rebel', 'fab fa-red-river', 'fab fa-reddit', 'fab fa-reddit-alien', 'fab fa-reddit-square', 'fab fa-redhat', 'fab fa-renren', 'fab fa-replyd', 'fab fa-researchgate', 'fab fa-resolving', 'fab fa-rev', 'fab fa-rocketchat', 'fab fa-rockrms', 'fab fa-safari', 'fab fa-sass', 'fab fa-schlix', 'fab fa-scribd', 'fab fa-searchengin', 'fab fa-sellcast', 'fab fa-sellsy', 'fab fa-servicestack', 'fab fa-shirtsinbulk', 'fab fa-shopware', 'fab fa-simplybuilt', 'fab fa-sistrix', 'fab fa-sith', 'fab fa-sketch', 'fab fa-skyatlas', 'fab fa-skype', 'fab fa-slack', 'fab fa-slack-hash', 'fab fa-slideshare', 'fab fa-snapchat', 'fab fa-snapchat-ghost', 'fab fa-snapchat-square', 'fab fa-soundcloud', 'fab fa-sourcetree', 'fab fa-speakap', 'fab fa-spotify', 'fab fa-squarespace', 'fab fa-stack-exchange', 'fab fa-stack-overflow', 'fab fa-staylinked', 'fab fa-steam', 'fab fa-steam-square', 'fab fa-steam-symbol', 'fab fa-sticker-mule', 'fab fa-strava', 'fab fa-stripe', 'fab fa-stripe-s', 'fab fa-studiovinari', 'fab fa-stumbleupon', 'fab fa-stumbleupon-circle', 'fab fa-superpowers', 'fab fa-supple', 'fab fa-suse', 'fab fa-teamspeak', 'fab fa-telegram', 'fab fa-telegram-plane', 'fab fa-tencent-weibo', 'fab fa-the-red-yeti', 'fab fa-themeco', 'fab fa-themeisle', 'fab fa-think-peaks', 'fab fa-trade-federation', 'fab fa-trello', 'fab fa-tripadvisor', 'fab fa-tumblr', 'fab fa-tumblr-square', 'fab fa-twitch', 'fab fa-twitter', 'fab fa-twitter-square', 'fab fa-typo3', 'fab fa-uber', 'fab fa-ubuntu', 'fab fa-uikit', 'fab fa-uniregistry', 'fab fa-untappd', 'fab fa-ups', 'fab fa-usb', 'fab fa-usps', 'fab fa-ussunnah', 'fab fa-vaadin', 'fab fa-viacoin', 'fab fa-viadeo', 'fab fa-viadeo-square', 'fab fa-viber', 'fab fa-vimeo', 'fab fa-vimeo-square', 'fab fa-vimeo-v', 'fab fa-vine', 'fab fa-vk', 'fab fa-vnv', 'fab fa-vuejs', 'fab fa-weebly', 'fab fa-weibo', 'fab fa-weixin', 'fab fa-whatsapp', 'fab fa-whatsapp-square', 'fab fa-whmcs', 'fab fa-wikipedia-w', 'fab fa-windows', 'fab fa-wix', 'fab fa-wizards-of-the-coast', 'fab fa-wolf-pack-battalion', 'fab fa-wordpress', 'fab fa-wordpress-simple', 'fab fa-wpbeginner', 'fab fa-wpexplorer', 'fab fa-wpforms', 'fab fa-wpressr', 'fab fa-xbox', 'fab fa-xing', 'fab fa-xing-square', 'fab fa-y-combinator', 'fab fa-yahoo', 'fab fa-yandex', 'fab fa-yandex-international', 'fab fa-yarn', 'fab fa-yelp', 'fab fa-yoast', 'fab fa-youtube', 'fab fa-youtube-square', 'fab fa-zhihu'];

/***/ }),

/***/ "./src/components/fields/assets/IconSocialData.js":
/*!********************************************************!*\
  !*** ./src/components/fields/assets/IconSocialData.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = [{
    value: 'fab fa-facebook',
    name: 'Facebook',
    id: 'facebook'
}, {
    value: 'fab fa-facebook-f',
    name: 'Facebook',
    id: 'facebook'
}, {
    value: 'fab fa-twitter',
    name: 'Twitter',
    id: 'twitter'
}, {
    value: 'fab fa-twitter-square',
    name: 'Twitter',
    id: 'twitter'
}, {
    value: 'fab fa-youtube',
    name: 'Youtube',
    id: 'youtube'
}, {
    value: 'fab fa-vimeo',
    name: 'Vimeo',
    id: 'vimeo'
}, {
    value: 'fab fa-dribbble',
    name: 'Dribbble',
    id: 'dribbble'
}, {
    value: 'fab fa-github',
    name: 'Github',
    id: 'github'
}, {
    value: 'fab fa-github-square',
    name: 'Github',
    id: 'github'
}, {
    value: 'fab fa-amazon',
    name: 'Amazon',
    id: 'amazon'
}, {
    value: 'fab fa-behance',
    name: 'Behance',
    id: 'behance'
}, {
    value: 'fab fa-codepen',
    name: 'Codepen',
    id: 'codepan'
}, {
    value: 'fab fa-flickr',
    name: 'Flickr',
    id: 'flickr'
}, {
    value: 'fab fa-foursquare',
    name: 'Foursquare',
    id: 'foursquare'
}, {
    value: 'fab fa-gitlab',
    name: 'Gitlab',
    id: 'gitlab'
}, {
    value: 'fab fa-linux',
    name: 'Linux',
    id: 'linux'
}, {
    value: 'fab fa-whatsapp',
    name: 'Whatsapp',
    id: 'whatsapp'
}, {
    value: 'fab fa-tumblr',
    name: 'Tumblr',
    id: 'tumblr'
}, {
    value: 'fab fa-trello',
    name: 'Trello',
    id: 'trello'
}, {
    value: 'fab fa-soundcloud',
    name: 'Soundcloud',
    id: 'soundcloud'
}, {
    value: 'fab fa-spotify',
    name: 'Spotify',
    id: 'spotify'
}, {
    value: 'fab fa-skype',
    name: 'Skype',
    id: 'skype'
}, {
    value: 'fab fa-slack',
    name: 'Slack',
    id: 'slack'
}, {
    value: 'fab fa-reddit-alien',
    name: 'Reddit',
    id: 'reddit'
}, {
    value: 'fab fa-tripadvisor',
    name: 'TripAdvisor',
    id: 'tripadvisor'
}, {
    value: 'fab fa-pinterest',
    name: 'Pinterest',
    id: 'pinterest'
}, {
    value: 'fab fa-pinterest-p',
    name: 'Pinterest',
    id: 'pinterest'
}, {
    value: 'fab fa-pinterest-square',
    name: 'Pinterest',
    id: 'pinterest'
}, {
    value: 'fab fa-product-hunt',
    name: 'Product Hunt',
    id: 'producthunt'
}, {
    value: 'fab fa-medium',
    name: 'Medium',
    id: 'medium'
}, {
    value: 'fab fa-instagram',
    name: 'Instagram',
    id: 'instagram'
}, {
    value: 'fab fa-linkedin',
    name: 'Linkedin',
    id: 'linkedin'
}, {
    value: 'fab fa-digg',
    name: 'Digg',
    id: 'digg'
}, {
    value: 'fab fa-dropbox',
    name: 'Dropbox',
    id: 'dropbox'
}, {
    value: 'fab fa-slideshare',
    name: 'Slideshare',
    id: 'slideshare'
}, {
    value: 'fab fa-stack-overflow',
    name: 'Stack Overflow',
    id: 'stackoverflow'
}, {
    value: 'fab fa-stumbleupon',
    name: 'StumbleUpon',
    id: 'stumbleupon'
}, {
    value: 'fab fa-stumbleupon-circle',
    name: 'StumbleUpon',
    id: 'stumbleupon'
}, {
    value: 'fab fa-wordpress',
    name: 'Wordpress',
    id: 'wordpress'
}, {
    value: 'fab fa-xing',
    name: 'Xing',
    id: 'xing'
}, {
    value: 'fab fa-xing-square',
    name: 'Xing',
    id: 'xing'
}, {
    value: 'fab fa-yahoo',
    name: 'yahoo',
    id: 'yahoo'
}, {
    value: 'fab fa-bitbucket',
    name: 'bitbucket',
    id: 'bitbucket'
}, {
    value: 'fab fa-jsfiddle',
    name: 'JsFiddle',
    id: 'jsfiddle'
}, {
    value: 'fab fa-joomla',
    name: 'Joomla',
    id: 'joomla'
}, {
    value: 'fab fa-imdb',
    name: 'IMDB',
    id: 'imdb'
}, {
    value: 'fab fa-snapchat',
    name: 'Snapchat',
    id: 'snapchat'
}, {
    value: 'fab fa-snapchat-square',
    name: 'Snapchat',
    id: 'snapchat'
}, {
    value: 'fab fa-telegram',
    name: 'Telegram',
    id: 'telegram'
}, {
    value: 'fab fa-twitch',
    name: 'Twitch',
    id: 'twitch'
}];

/***/ }),

/***/ "./src/components/fields/headingToolbar/headingIcon.js":
/*!*************************************************************!*\
  !*** ./src/components/fields/headingToolbar/headingIcon.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = HeadingLevelIcon;
var _wp$components = wp.components,
    Path = _wp$components.Path,
    SVG = _wp$components.SVG;
function HeadingLevelIcon(_ref) {
	var level = _ref.level,
	    _ref$isPressed = _ref.isPressed,
	    isPressed = _ref$isPressed === undefined ? false : _ref$isPressed;

	var levelToPath = {
		1: 'M9 5h2v10H9v-4H5v4H3V5h2v4h4V5zm6.6 0c-.6.9-1.5 1.7-2.6 2v1h2v7h2V5h-1.4z',
		2: 'M7 5h2v10H7v-4H3v4H1V5h2v4h4V5zm8 8c.5-.4.6-.6 1.1-1.1.4-.4.8-.8 1.2-1.3.3-.4.6-.8.9-1.3.2-.4.3-.8.3-1.3 0-.4-.1-.9-.3-1.3-.2-.4-.4-.7-.8-1-.3-.3-.7-.5-1.2-.6-.5-.2-1-.2-1.5-.2-.4 0-.7 0-1.1.1-.3.1-.7.2-1 .3-.3.1-.6.3-.9.5-.3.2-.6.4-.8.7l1.2 1.2c.3-.3.6-.5 1-.7.4-.2.7-.3 1.2-.3s.9.1 1.3.4c.3.3.5.7.5 1.1 0 .4-.1.8-.4 1.1-.3.5-.6.9-1 1.2-.4.4-1 .9-1.6 1.4-.6.5-1.4 1.1-2.2 1.6V15h8v-2H15z',
		3: 'M12.1 12.2c.4.3.8.5 1.2.7.4.2.9.3 1.4.3.5 0 1-.1 1.4-.3.3-.1.5-.5.5-.8 0-.2 0-.4-.1-.6-.1-.2-.3-.3-.5-.4-.3-.1-.7-.2-1-.3-.5-.1-1-.1-1.5-.1V9.1c.7.1 1.5-.1 2.2-.4.4-.2.6-.5.6-.9 0-.3-.1-.6-.4-.8-.3-.2-.7-.3-1.1-.3-.4 0-.8.1-1.1.3-.4.2-.7.4-1.1.6l-1.2-1.4c.5-.4 1.1-.7 1.6-.9.5-.2 1.2-.3 1.8-.3.5 0 1 .1 1.6.2.4.1.8.3 1.2.5.3.2.6.5.8.8.2.3.3.7.3 1.1 0 .5-.2.9-.5 1.3-.4.4-.9.7-1.5.9v.1c.6.1 1.2.4 1.6.8.4.4.7.9.7 1.5 0 .4-.1.8-.3 1.2-.2.4-.5.7-.9.9-.4.3-.9.4-1.3.5-.5.1-1 .2-1.6.2-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1l1.1-1.4zM7 9H3V5H1v10h2v-4h4v4h2V5H7v4z',
		4: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm10-2h-1v2h-2v-2h-5v-2l4-6h3v6h1v2zm-3-2V7l-2.8 4H16z',
		5: 'M12.1 12.2c.4.3.7.5 1.1.7.4.2.9.3 1.3.3.5 0 1-.1 1.4-.4.4-.3.6-.7.6-1.1 0-.4-.2-.9-.6-1.1-.4-.3-.9-.4-1.4-.4H14c-.1 0-.3 0-.4.1l-.4.1-.5.2-1-.6.3-5h6.4v1.9h-4.3L14 8.8c.2-.1.5-.1.7-.2.2 0 .5-.1.7-.1.5 0 .9.1 1.4.2.4.1.8.3 1.1.6.3.2.6.6.8.9.2.4.3.9.3 1.4 0 .5-.1 1-.3 1.4-.2.4-.5.8-.9 1.1-.4.3-.8.5-1.3.7-.5.2-1 .3-1.5.3-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1-.1-.1 1-1.5 1-1.5zM9 15H7v-4H3v4H1V5h2v4h4V5h2v10z',
		6: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm8.6-7.5c-.2-.2-.5-.4-.8-.5-.6-.2-1.3-.2-1.9 0-.3.1-.6.3-.8.5l-.6.9c-.2.5-.2.9-.2 1.4.4-.3.8-.6 1.2-.8.4-.2.8-.3 1.3-.3.4 0 .8 0 1.2.2.4.1.7.3 1 .6.3.3.5.6.7.9.2.4.3.8.3 1.3s-.1.9-.3 1.4c-.2.4-.5.7-.8 1-.4.3-.8.5-1.2.6-1 .3-2 .3-3 0-.5-.2-1-.5-1.4-.9-.4-.4-.8-.9-1-1.5-.2-.6-.3-1.3-.3-2.1s.1-1.6.4-2.3c.2-.6.6-1.2 1-1.6.4-.4.9-.7 1.4-.9.6-.3 1.1-.4 1.7-.4.7 0 1.4.1 2 .3.5.2 1 .5 1.4.8 0 .1-1.3 1.4-1.3 1.4zm-2.4 5.8c.2 0 .4 0 .6-.1.2 0 .4-.1.5-.2.1-.1.3-.3.4-.5.1-.2.1-.5.1-.7 0-.4-.1-.8-.4-1.1-.3-.2-.7-.3-1.1-.3-.3 0-.7.1-1 .2-.4.2-.7.4-1 .7 0 .3.1.7.3 1 .1.2.3.4.4.6.2.1.3.3.5.3.2.1.5.2.7.1z'
	};
	if (!levelToPath.hasOwnProperty(level)) {
		return null;
	}

	return React.createElement(
		SVG,
		{ width: '20', height: '20', viewBox: '0 0 20 20', xmlns: 'http://www.w3.org/2000/svg', isPressed: isPressed },
		React.createElement(Path, { d: levelToPath[level] })
	);
}

/***/ }),

/***/ "./src/components/fields/headingToolbar/index.js":
/*!*******************************************************!*\
  !*** ./src/components/fields/headingToolbar/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _headingIcon = __webpack_require__(/*! ./headingIcon */ "./src/components/fields/headingToolbar/headingIcon.js");

var _headingIcon2 = _interopRequireDefault(_headingIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var Toolbar = wp.components.Toolbar;

var HeadingToolbar = function (_Component) {
    _inherits(HeadingToolbar, _Component);

    function HeadingToolbar() {
        _classCallCheck(this, HeadingToolbar);

        return _possibleConstructorReturn(this, (HeadingToolbar.__proto__ || Object.getPrototypeOf(HeadingToolbar)).apply(this, arguments));
    }

    _createClass(HeadingToolbar, [{
        key: 'createLevelControl',
        value: function createLevelControl(targetLevel, selectedLevel, onChange) {
            var isActive = targetLevel === selectedLevel;
            return {
                icon: React.createElement(_headingIcon2.default, { level: targetLevel, isPressed: isActive }),
                title: __('Heading ' + targetLevel),
                isActive: isActive,
                onClick: function onClick() {
                    return onChange(targetLevel);
                }
            };
        }
    }, {
        key: 'headingLevels',
        value: function headingLevels(minLevel, maxLevel) {
            var headingLevels = [];

            for (var level = minLevel; level <= maxLevel; level++) {
                headingLevels.push(level);
            }
            return headingLevels;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                _props$isCollapsed = _props.isCollapsed,
                isCollapsed = _props$isCollapsed === undefined ? true : _props$isCollapsed,
                minLevel = _props.minLevel,
                maxLevel = _props.maxLevel,
                selectedLevel = _props.selectedLevel,
                onChange = _props.onChange;


            return React.createElement(Toolbar, {
                isCollapsed: isCollapsed,
                icon: React.createElement(_headingIcon2.default, { level: selectedLevel }),
                controls: this.headingLevels(minLevel, maxLevel).map(function (index) {
                    return _this2.createLevelControl(index, selectedLevel, onChange);
                }) });
        }
    }]);

    return HeadingToolbar;
}(Component);

exports.default = HeadingToolbar;

/***/ }),

/***/ "./src/components/fields/inline/InlineSpacer.js":
/*!******************************************************!*\
  !*** ./src/components/fields/inline/InlineSpacer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Range = __webpack_require__(/*! ../Range */ "./src/components/fields/Range.js");

var _Range2 = _interopRequireDefault(_Range);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var _wp$components = wp.components,
    Tooltip = _wp$components.Tooltip,
    Dropdown = _wp$components.Dropdown;

var InlineSpacer = function (_Component) {
	_inherits(InlineSpacer, _Component);

	function InlineSpacer() {
		_classCallCheck(this, InlineSpacer);

		var _this = _possibleConstructorReturn(this, (InlineSpacer.__proto__ || Object.getPrototypeOf(InlineSpacer)).apply(this, arguments));

		_this.state = {
			device: 'md'
		};
		return _this;
	}

	_createClass(InlineSpacer, [{
		key: 'setSettings',
		value: function setSettings(type, val) {
			this.props.onChange(Object.assign({}, this.props.value || { spaceTop: 0, spaceBottom: 0 }, _defineProperty({}, type, val)));
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    value = _props.value,
			    responsive = _props.responsive;
			var device = this.state.device;

			return React.createElement(Dropdown, {
				className: 'qubely-toolber-field',
				position: 'top right',
				renderToggle: function renderToggle(_ref) {
					var isOpen = _ref.isOpen,
					    onToggle = _ref.onToggle;
					return React.createElement(
						Tooltip,
						{ text: __('Speacer') },
						React.createElement(
							'button',
							{ onClick: onToggle, 'aria-expanded': isOpen },
							React.createElement('i', { className: 'fas fa-arrows-alt-v' })
						)
					);
				},
				renderContent: function renderContent() {
					return React.createElement(
						'div',
						{ className: 'qubely-toolber-popup qubely-inline-spacer' },
						React.createElement(
							'div',
							{ className: 'qubely-inline-spacer-inner' },
							React.createElement(_Range2.default, { label: __('Top'), value: value.spaceTop, onChange: function onChange(val) {
									return _this2.setSettings('spaceTop', val);
								}, min: 0, max: 100, step: 1, unit: ['px', 'em', '%'], beforeIcon: 'arrow-up', allowReset: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} }),
							React.createElement(_Range2.default, { label: __('Bottom'), value: value.spaceBottom, onChange: function onChange(val) {
									return _this2.setSettings('spaceBottom', val);
								}, min: 0, max: 100, step: 1, unit: ['px', 'em', '%'], beforeIcon: 'arrow-down', allowReset: true, responsive: true, device: device, onDeviceChange: function onDeviceChange(value) {
									return _this2.setState({ device: value });
								} })
						)
					);
				}
			});
		}
	}]);

	return InlineSpacer;
}(Component);

exports.default = InlineSpacer;

/***/ }),

/***/ "./src/components/fields/inline/InlineToolbar.js":
/*!*******************************************************!*\
  !*** ./src/components/fields/inline/InlineToolbar.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../../css/inline_toolbar.scss */ "./src/components/css/inline_toolbar.scss");

var _InlineSpacer = __webpack_require__(/*! ./InlineSpacer */ "./src/components/fields/inline/InlineSpacer.js");

var _InlineSpacer2 = _interopRequireDefault(_InlineSpacer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var InlineToolbar = function (_Component) {
    _inherits(InlineToolbar, _Component);

    function InlineToolbar() {
        _classCallCheck(this, InlineToolbar);

        return _possibleConstructorReturn(this, (InlineToolbar.__proto__ || Object.getPrototypeOf(InlineToolbar)).apply(this, arguments));
    }

    _createClass(InlineToolbar, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var html = [];
            this.props.data.forEach(function (val) {
                if (val.name == 'InlineSpacer' && _this2.props.prevState[val.key]) {
                    html.push(React.createElement(_InlineSpacer2.default, { value: _this2.props.attributes[val.key], responsive: val.responsive ? true : false, unit: val.unit || '', onChange: function onChange(value) {
                            return _this2.props.setAttributes(_defineProperty({}, val.key, value));
                        } }));
                }
            });
            return html;
        }
    }]);

    return InlineToolbar;
}(Component);

exports.default = InlineToolbar;

/***/ }),

/***/ "./src/components/fields/inline/Selector.js":
/*!**************************************************!*\
  !*** ./src/components/fields/inline/Selector.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _icons = __webpack_require__(/*! ../../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var Toolbar = wp.components.Toolbar;

var defaultOptions = [['h1', 'Heading 1'], ['h2', 'Heading 2'], ['h3', 'Heading 3'], ['h4', 'Heading 4'], ['h5', 'Heading 5'], ['h6', 'Heading 6'], ['p', 'Paragraph'], ['span', 'span'], ['div', 'div']];

var InlineSelector = function (_Component) {
    _inherits(InlineSelector, _Component);

    function InlineSelector() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, InlineSelector);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = InlineSelector.__proto__ || Object.getPrototypeOf(InlineSelector)).call.apply(_ref, [this].concat(args))), _this), _this.headingController = function (newSelector) {
            var _this$props = _this.props,
                selector = _this$props.selector,
                setAttributes = _this$props.setAttributes;

            var _newSelector = _slicedToArray(newSelector, 2),
                tag = _newSelector[0],
                description = _newSelector[1];

            return [{
                icon: _icons2.default[tag],
                title: sprintf(__(description)),
                isActive: tag === selector,
                onClick: function onClick() {
                    return setAttributes({ selector: tag });
                },
                subscript: String(tag)
            }];
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(InlineSelector, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                selector = _props.selector,
                options = _props.options;

            return React.createElement(Toolbar, {
                isCollapsed: true,
                icon: _icons2.default[selector],
                label: __('Change Heading'),
                controls: (options || defaultOptions).map(function (newSelector) {
                    return _this2.headingController(newSelector);
                })
            });
        }
    }]);

    return InlineSelector;
}(Component);

exports.default = InlineSelector;

/***/ }),

/***/ "./src/components/fields/inline/editorInline.js":
/*!******************************************************!*\
  !*** ./src/components/fields/inline/editorInline.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../../css/editorinline.scss */ "./src/components/css/editorinline.scss");

var _icons = __webpack_require__(/*! ../../../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$richText = wp.richText,
    toggleFormat = _wp$richText.toggleFormat,
    applyFormat = _wp$richText.applyFormat;
var RichTextToolbarButton = wp.blockEditor.RichTextToolbarButton;
var registerFormatType = wp.richText.registerFormatType;
var _wp$components = wp.components,
    ColorPicker = _wp$components.ColorPicker,
    Popover = _wp$components.Popover;


function defColors() {
    var val = [];
    var colors = window.globalData.settings;
    val.push(colors.colorPreset1 || qubely_admin.palette[0]);
    val.push(colors.colorPreset2 || qubely_admin.palette[1]);
    val.push(colors.colorPreset3 || qubely_admin.palette[2]);
    val.push(colors.colorPreset4 || qubely_admin.palette[3]);
    val.push(colors.colorPreset5 || qubely_admin.palette[4]);
    val.push(colors.colorPreset6 || qubely_admin.palette[5]);
    return val;
}

function registerFormat() {

    //inline text transform
    registerFormatType('qubely/uppercase', {
        name: 'qubely/uppercase',
        title: __('Uppercase'),
        tagName: 'span',
        className: 'qubely-text-uppercase',
        attributes: {
            style: 'style'
        },
        edit: function edit(_ref) {
            var isActive = _ref.isActive,
                value = _ref.value,
                onChange = _ref.onChange;

            var onToggle = function onToggle() {
                return onChange(toggleFormat(value, {
                    type: 'qubely/uppercase',
                    attributes: {
                        style: 'text-transform: uppercase;'
                    }
                }));
            };
            var isSelected = value.end - value.start > 0 ? true : false;
            return React.createElement(
                Fragment,
                null,
                (isSelected || isActive) && React.createElement(RichTextToolbarButton, {
                    icon: _icons2.default.upperCaseIcon,
                    title: __('Uppercase'),
                    onClick: onToggle,
                    isActive: isActive
                })
            );
        }
    });

    //inline color
    registerFormatType('qubely/inlinecolor', {
        title: __('Color'),
        tagName: 'span',
        className: 'qubely-text-has-color',
        attributes: {
            style: 'style',
            data: 'data'
        },
        edit: function (_Component) {
            _inherits(ChangeInlineColor, _Component);

            function ChangeInlineColor(props) {
                _classCallCheck(this, ChangeInlineColor);

                var _this = _possibleConstructorReturn(this, (ChangeInlineColor.__proto__ || Object.getPrototypeOf(ChangeInlineColor)).call(this, props));

                _this.findCurrentActiveColor = function (value) {
                    var color = void 0;
                    var index = value.start;
                    if (value.formats[index]) {
                        value.formats[index].forEach(function (format, index) {
                            if (format.type == 'qubely/inlinecolor') {
                                color = format.attributes.data;
                            }
                        });
                    }
                    return color;
                };

                _this.state = {
                    showColorPicker: false
                };
                return _this;
            }

            _createClass(ChangeInlineColor, [{
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var _props = this.props,
                        isActive = _props.isActive,
                        value = _props.value,
                        onChange = _props.onChange;
                    var showColorPicker = this.state.showColorPicker;

                    var activeColor = this.findCurrentActiveColor(value);
                    var isSelected = value.end - value.start > 0 ? true : false;
                    return React.createElement(
                        Fragment,
                        null,
                        (isSelected || isActive) && React.createElement(RichTextToolbarButton, {
                            icon: React.createElement(
                                Fragment,
                                null,
                                React.createElement(
                                    'span',
                                    {
                                        classname: 'qubely-inline qubely-inline-color',
                                        style: { marginRight: '4px' } },
                                    _icons2.default.inlineColorIcon,
                                    React.createElement('hr', {
                                        style: {
                                            color: activeColor ? activeColor : '#000',
                                            backgroundColor: activeColor ? activeColor : '#000',
                                            height: 5,
                                            margin: '0px 3px 0px 0px',
                                            border: '0px'
                                        }
                                    })
                                )
                            ),
                            title: __('Color'),
                            onClick: function onClick() {
                                !activeColor && _this2.setState({ showColorPicker: !showColorPicker });
                                if (activeColor == '#fff' || value.start === value.end) {
                                    onChange(toggleFormat(value, {
                                        type: 'qubely/inlinecolor'
                                    }));
                                }
                            },
                            isActive: isActive
                        }),
                        showColorPicker && React.createElement(
                            Popover,
                            {
                                onClickOutside: function onClickOutside() {
                                    return _this2.setState({ showColorPicker: false });
                                },
                                noArrow: true
                            },
                            React.createElement(ColorPicker, {
                                color: '#de1515',
                                onChangeComplete: function onChangeComplete(newColor) {
                                    onChange(applyFormat(value, {
                                        type: 'qubely/inlinecolor',
                                        attributes: {
                                            style: 'color: ' + newColor.hex + ';',
                                            data: newColor.hex
                                        },
                                        startIndex: value.start,
                                        endIndex: value.end
                                    }));
                                } }),
                            React.createElement(
                                'div',
                                { className: 'qubely-rgba-palette', style: { padding: '0px 0px 15px 15px' } },
                                defColors().map(function (color) {
                                    return React.createElement('button', { style: { color: color }, onClick: function onClick() {
                                            onChange(applyFormat(value, {
                                                type: 'qubely/inlinecolor',
                                                attributes: {
                                                    style: 'color: ' + color + ';',
                                                    data: color
                                                },
                                                startIndex: value.start,
                                                endIndex: value.end
                                            }));
                                        } });
                                })
                            )
                        )
                    );
                }
            }]);

            return ChangeInlineColor;
        }(Component)
    });
    //inline background-color
    registerFormatType('qubely/backgroundcolor', {
        title: __('BackgroundColor'),
        tagName: 'span',
        className: 'qubely-text-has-bgcolor',
        attributes: {
            style: 'style',
            data: 'data'
        },
        edit: function (_Component2) {
            _inherits(ChangeBackgroundColor, _Component2);

            function ChangeBackgroundColor(props) {
                _classCallCheck(this, ChangeBackgroundColor);

                var _this3 = _possibleConstructorReturn(this, (ChangeBackgroundColor.__proto__ || Object.getPrototypeOf(ChangeBackgroundColor)).call(this, props));

                _this3.findCurrentBgActiveColor = function (value) {
                    var color = void 0;
                    var index = value.start;
                    if (value.formats[index]) {
                        value.formats[index].forEach(function (format, index) {
                            if (format.type == 'qubely/backgroundcolor') {
                                color = format.attributes.data;
                            }
                        });
                    }
                    return color;
                };

                _this3.state = {
                    showColorPicker: false
                };
                return _this3;
            }

            _createClass(ChangeBackgroundColor, [{
                key: 'render',
                value: function render() {
                    var _this4 = this;

                    var _props2 = this.props,
                        isActive = _props2.isActive,
                        value = _props2.value,
                        onChange = _props2.onChange;
                    var showColorPicker = this.state.showColorPicker;

                    var activeBackgroundColor = this.findCurrentBgActiveColor(value);
                    var isSelected = value.end - value.start > 0 ? true : false;
                    return React.createElement(
                        Fragment,
                        null,
                        (isSelected || isActive) && React.createElement(RichTextToolbarButton, {
                            icon: React.createElement(
                                Fragment,
                                null,
                                React.createElement(
                                    'span',
                                    {
                                        classname: 'qubely-inline qubely-inline-color',
                                        style: { marginRight: '4px' }
                                    },
                                    _icons2.default.highlighterIcon,
                                    React.createElement('hr', {
                                        style: {
                                            color: activeBackgroundColor ? activeBackgroundColor : '#000',
                                            backgroundColor: activeBackgroundColor ? activeBackgroundColor : '#000',
                                            height: 5,
                                            margin: '0px 3px 0px 0px',
                                            border: '0px'
                                        }
                                    })
                                )
                            ),
                            title: __('Background Color'),
                            onClick: function onClick() {
                                !activeBackgroundColor && _this4.setState({ showColorPicker: !showColorPicker });
                                if (activeBackgroundColor == '#fff' || value.start === value.end) {
                                    onChange(toggleFormat(value, {
                                        type: 'qubely/backgroundcolor'
                                    }));
                                }
                            },
                            isActive: isActive
                        }),
                        showColorPicker && React.createElement(
                            Popover,
                            {
                                onClickOutside: function onClickOutside() {
                                    return _this4.setState({ showColorPicker: false });
                                },
                                noArrow: true
                            },
                            React.createElement(ColorPicker, {
                                color: '#15e0c5',
                                onChangeComplete: function onChangeComplete(newColor) {
                                    onChange(applyFormat(value, {
                                        type: 'qubely/backgroundcolor',
                                        attributes: {
                                            style: 'background-color: ' + newColor.hex + ';',
                                            data: newColor.hex
                                        },
                                        startIndex: value.start,
                                        endIndex: value.end
                                    }));
                                } }),
                            React.createElement(
                                'div',
                                { className: 'qubely-rgba-palette', style: { padding: '0px 0px 15px 15px' } },
                                defColors().map(function (color) {
                                    return React.createElement('button', { style: { color: color }, onClick: function onClick() {
                                            onChange(applyFormat(value, {
                                                type: 'qubely/backgroundcolor',
                                                attributes: {
                                                    style: 'background-color: ' + color + ';',
                                                    data: color
                                                },
                                                startIndex: value.start,
                                                endIndex: value.end
                                            }));
                                        } });
                                })
                            )
                        )
                    );
                }
            }]);

            return ChangeBackgroundColor;
        }(Component)
    });
}
registerFormat();

/***/ }),

/***/ "./src/components/fields/inline/index.js":
/*!***********************************************!*\
  !*** ./src/components/fields/inline/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlineSelector = exports.InlineSpacer = exports.InlineToolbar = undefined;

var _InlineToolbar = __webpack_require__(/*! ./InlineToolbar */ "./src/components/fields/inline/InlineToolbar.js");

var _InlineToolbar2 = _interopRequireDefault(_InlineToolbar);

var _InlineSpacer = __webpack_require__(/*! ./InlineSpacer */ "./src/components/fields/inline/InlineSpacer.js");

var _InlineSpacer2 = _interopRequireDefault(_InlineSpacer);

var _Selector = __webpack_require__(/*! ./Selector */ "./src/components/fields/inline/Selector.js");

var _Selector2 = _interopRequireDefault(_Selector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.InlineToolbar = _InlineToolbar2.default;
exports.InlineSpacer = _InlineSpacer2.default;
exports.InlineSelector = _Selector2.default;

/***/ }),

/***/ "./src/customizer/index.js":
/*!*********************************!*\
  !*** ./src/customizer/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _plugin = __webpack_require__(/*! ./plugin */ "./src/customizer/plugin.js");

var _plugin2 = _interopRequireDefault(_plugin);

var _icons = __webpack_require__(/*! ../helpers/icons */ "./src/helpers/icons.js");

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var registerPlugin = wp.plugins.registerPlugin;


registerPlugin('qubely-customizer', {
    icon: _icons2.default.qubely,
    render: _plugin2.default
});

/***/ }),

/***/ "./src/customizer/plugin.js":
/*!**********************************!*\
  !*** ./src/customizer/plugin.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var fetchFromApi = function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        _context.next = 2;
                        return wp.apiFetch({ path: path.fetch });

                    case 2:
                        return _context.abrupt('return', _context.sent);

                    case 3:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function fetchFromApi() {
        return _ref.apply(this, arguments);
    };
}();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var compose = wp.compose.compose;
var PanelBody = wp.components.PanelBody;
var _wp$data = wp.data,
    withDispatch = _wp$data.withDispatch,
    select = _wp$data.select;
var _wp$qubelyComponents = wp.qubelyComponents,
    CssGenerator = _wp$qubelyComponents.CssGenerator.CssGenerator,
    Typography = _wp$qubelyComponents.Typography,
    Color = _wp$qubelyComponents.Color,
    Separator = _wp$qubelyComponents.Separator,
    _equal = _wp$qubelyComponents.HelperFunction._equal;
var _wp$editPost = wp.editPost,
    PluginSidebar = _wp$editPost.PluginSidebar,
    PluginSidebarMoreMenuItem = _wp$editPost.PluginSidebarMoreMenuItem;


var path = {
    fetch: '/qubely/v1/global_settings',
    post: '/qubely/v1/global_settings'
};

var getInitialSettings = function getInitialSettings() {
    return fetchFromApi().then(function (data) {
        window.globalData = _extends({}, data);
        return data;
    });
};

var updateGlobalData = function updateGlobalData(updateData) {
    var settings = _extends({}, window.globalData.settings);
    window.globalData.settings = _extends({}, settings, updateData);
};

var saveGlobalData = function saveGlobalData() {
    window.globalSaving = true;
    var settings = typeof window.globalData.settings === 'undefined' ? null : window.globalData.settings;
    if (settings !== null) {
        wp.apiFetch({
            path: path.post,
            method: 'POST',
            data: { settings: JSON.stringify(settings) }
        }).then(function (data) {
            window.globalSaving = false;
            return data;
        });
    }
};

var Plugin = function (_Component) {
    _inherits(Plugin, _Component);

    function Plugin() {
        _classCallCheck(this, Plugin);

        var _this = _possibleConstructorReturn(this, (Plugin.__proto__ || Object.getPrototypeOf(Plugin)).apply(this, arguments));

        _this.state = {
            globalSettings: null,
            fetched: false
        };
        return _this;
    }

    _createClass(Plugin, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var globalAttributes = wp.blocks.getBlockAttributes('qubely/pagesettings');
            if (typeof window.globalData.success === 'undefined') {
                getInitialSettings().then(function (data) {
                    if (data.success === true) {
                        globalAttributes = _extends({}, globalAttributes, { api_fetch: true });
                        var globalSettings = _extends({}, globalAttributes, data.settings);
                        _this2.setState({ globalSettings: globalSettings, fetched: true });
                    }
                });
            } else {
                var globalSettings = _extends({}, globalAttributes, window.globalData.settings);
                this.setState({ globalSettings: globalSettings, fetched: true });
            }
        }
    }, {
        key: 'componentWillUpdate',
        value: function componentWillUpdate(nextProps, nextState) {
            if (!_equal(this.state.globalSettings, nextState.globalSettings) && nextState.fetched === false) {
                nextProps.makePostDarty();
            }
        }
    }, {
        key: 'setPresetColor',
        value: function setPresetColor(blocks, prev, next) {
            var _this3 = this;

            var _wp$data$dispatch = wp.data.dispatch('core/block-editor'),
                updateBlockAttributes = _wp$data$dispatch.updateBlockAttributes;

            if (prev && next) {
                blocks.map(function (row) {
                    var attributes = row.attributes,
                        name = row.name,
                        clientId = row.clientId;

                    var blockName = name.split('/');
                    if (blockName[0] === 'qubely' && attributes.uniqueId) {
                        Object.keys(attributes).forEach(function (key) {
                            if (typeof attributes[key] == 'string') {
                                if (attributes[key] == prev) {
                                    updateBlockAttributes(clientId, _defineProperty({}, key, next));
                                }
                            } else if (_typeof(attributes[key]) == 'object') {
                                if (attributes[key].color && attributes[key].color == prev) {
                                    updateBlockAttributes(clientId, _defineProperty({}, key, Object.assign({}, attributes[key], { color: next })));
                                }
                            }
                        });
                    }
                    if (row.innerBlocks && row.innerBlocks.length > 0) {
                        _this3.setPresetColor(row.innerBlocks);
                    }
                });
            }
        }
    }, {
        key: 'updateField',
        value: function updateField(attrValue) {
            var setAttributes = this.props.setAttributes;
            var globalSettings = this.state.globalSettings;

            var newSettings = _extends({}, globalSettings, attrValue);

            if (attrValue.colorPreset1) {
                this.setPresetColor(wp.data.select('core/block-editor').getBlocks(), globalSettings.colorPreset1, attrValue.colorPreset1);
            }
            if (attrValue.colorPreset2) {
                this.setPresetColor(wp.data.select('core/block-editor').getBlocks(), globalSettings.colorPreset2, attrValue.colorPreset2);
            }
            if (attrValue.colorPreset3) {
                this.setPresetColor(wp.data.select('core/block-editor').getBlocks(), globalSettings.colorPreset3, attrValue.colorPreset3);
            }
            if (attrValue.colorPreset4) {
                this.setPresetColor(wp.data.select('core/block-editor').getBlocks(), globalSettings.colorPreset4, attrValue.colorPreset4);
            }
            if (attrValue.colorPreset5) {
                this.setPresetColor(wp.data.select('core/block-editor').getBlocks(), globalSettings.colorPreset5, attrValue.colorPreset5);
            }
            if (attrValue.colorPreset6) {
                this.setPresetColor(wp.data.select('core/block-editor').getBlocks(), globalSettings.colorPreset6, attrValue.colorPreset6);
            }

            setAttributes(attrValue);
            this.setState({ globalSettings: _extends({}, newSettings), fetched: false });
        }
    }, {
        key: 'renderFields',
        value: function renderFields() {
            var _this4 = this;

            var _state$globalSettings = this.state.globalSettings,
                body = _state$globalSettings.body,
                p = _state$globalSettings.p,
                h1 = _state$globalSettings.h1,
                h2 = _state$globalSettings.h2,
                h3 = _state$globalSettings.h3,
                h4 = _state$globalSettings.h4,
                h5 = _state$globalSettings.h5,
                h6 = _state$globalSettings.h6,
                button = _state$globalSettings.button,
                colorPreset1 = _state$globalSettings.colorPreset1,
                colorPreset2 = _state$globalSettings.colorPreset2,
                colorPreset3 = _state$globalSettings.colorPreset3,
                colorPreset4 = _state$globalSettings.colorPreset4,
                colorPreset5 = _state$globalSettings.colorPreset5,
                colorPreset6 = _state$globalSettings.colorPreset6;


            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    PanelBody,
                    { title: __('Color Palette'), initialOpen: true },
                    React.createElement(
                        'div',
                        { className: 'qubely-d-flex qubely-align-justified' },
                        React.createElement(Color, { disableClear: true, disablePalette: true, value: colorPreset1, onChange: function onChange(val) {
                                return _this4.updateField({ colorPreset1: val });
                            } }),
                        React.createElement(Color, { disableClear: true, disablePalette: true, value: colorPreset2, onChange: function onChange(val) {
                                return _this4.updateField({ colorPreset2: val });
                            } }),
                        React.createElement(Color, { disableClear: true, disablePalette: true, value: colorPreset3, onChange: function onChange(val) {
                                return _this4.updateField({ colorPreset3: val });
                            } }),
                        React.createElement(Color, { disableClear: true, disablePalette: true, value: colorPreset4, onChange: function onChange(val) {
                                return _this4.updateField({ colorPreset4: val });
                            } }),
                        React.createElement(Color, { disableClear: true, disablePalette: true, value: colorPreset5, onChange: function onChange(val) {
                                return _this4.updateField({ colorPreset5: val });
                            } }),
                        React.createElement(Color, { disableClear: true, disablePalette: true, value: colorPreset6, onChange: function onChange(val) {
                                return _this4.updateField({ colorPreset6: val });
                            } })
                    )
                ),
                React.createElement(
                    PanelBody,
                    { title: __('Typography'), initialOpen: false },
                    React.createElement(Typography, { label: __('Body'), value: body, onChange: function onChange(val) {
                            return _this4.updateField({ body: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Heading 1'), value: h1, onChange: function onChange(val) {
                            return _this4.updateField({ h1: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Heading 2'), value: h2, onChange: function onChange(val) {
                            return _this4.updateField({ h2: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Heading 3'), value: h3, onChange: function onChange(val) {
                            return _this4.updateField({ h3: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Heading 4'), value: h4, onChange: function onChange(val) {
                            return _this4.updateField({ h4: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Heading 5'), value: h5, onChange: function onChange(val) {
                            return _this4.updateField({ h5: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Heading 6'), value: h6, onChange: function onChange(val) {
                            return _this4.updateField({ h6: val });
                        } }),
                    React.createElement(Separator, null),
                    React.createElement(Typography, { label: __('Button'), value: button, onChange: function onChange(val) {
                            return _this4.updateField({ button: val });
                        } })
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var globalSettings = this.state.globalSettings;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    PluginSidebarMoreMenuItem,
                    { target: 'qubely-customizer' },
                    __('Qubely Settings')
                ),
                React.createElement(
                    PluginSidebar,
                    { name: 'qubely-customizer', title: __('Qubely Global Settings') },
                    globalSettings !== null && this.renderFields()
                )
            );
        }
    }]);

    return Plugin;
}(Component);

exports.default = compose([withDispatch(function (dispatch, ownProps) {
    var setAttributes = function setAttributes(attr) {
        updateGlobalData(attr);
    };
    var makePostDarty = function makePostDarty() {
        var currentMeta = select('core/editor').getCurrentPostAttribute('meta');
        currentMeta.qubely_global_settings = currentMeta.qubely_global_settings === "true" ? "false" : "true";
        var meta = _extends({}, currentMeta, { qubely_global_settings: "true" });
        dispatch('core/editor').editPost({ meta: meta });
    };
    return { setAttributes: setAttributes, makePostDarty: makePostDarty };
})])(Plugin);


wp.data.subscribe(function () {
    var _select = select("core/editor"),
        isSavingPost = _select.isSavingPost,
        isAutosavingPost = _select.isAutosavingPost;

    if (isSavingPost() && !isAutosavingPost() && window.globalSaving === false) {
        saveGlobalData();
    }
});

// -----------------------------
// -----------------------------
// -----------------------------

/***/ }),

/***/ "./src/editor.scss":
/*!*************************!*\
  !*** ./src/editor.scss ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./editor.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/editor.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/helpers/ModalManager.js":
/*!*************************************!*\
  !*** ./src/helpers/ModalManager.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;


var onClose;

var Modal = function (_Component) {
    _inherits(Modal, _Component);

    function Modal(props) {
        _classCallCheck(this, Modal);

        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

        _this.handleKeyDown = function (event) {
            if (event.keyCode === 27) {
                Manager.close();
            }
        };

        _this.state = {
            afterOpen: false,
            beforeClose: false
        };
        return _this;
    }

    _createClass(Modal, [{
        key: 'close',
        value: function close() {
            if (!this.props.onRequestClose || this.props.onRequestClose()) {
                Manager.close();
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var _props = this.props,
                openTimeoutMS = _props.openTimeoutMS,
                closeTimeoutMS = _props.closeTimeoutMS;

            document.addEventListener('keydown', this.handleKeyDown);
            setTimeout(function () {
                return _this2.setState({ afterOpen: true });
            }, openTimeoutMS ? openTimeoutMS : 150);

            onClose = function onClose(callback) {
                _this2.setState({ beforeClose: true }, function () {
                    _this2.closeTimer = setTimeout(callback, closeTimeoutMS ? closeTimeoutMS : 150);
                });
            };
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            onClose = null;
            clearTimeout(this.closeTimer);
            document.removeEventListener('keydown', this.handleKeyDown);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return React.createElement(
                Fragment,
                null,
                React.createElement(
                    'span',
                    { onClick: function onClick(e) {
                            _this3.close();
                        }, className: 'qubely-pagelist-modal-overlay' },
                    '\xA0'
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-pagelist-modal-inner', onClick: function onClick(e) {
                            return e.stopPropagation();
                        } },
                    this.props.children
                )
            );
        }
    }]);

    return Modal;
}(Component);

var node;
var Manager = {
    open: function open(component) {
        if (onClose) {
            throw __('There is already one modal.It must be closed before one new modal will be opened');
        }
        if (!node) {
            node = document.createElement('div');
            node.className = "qubely-builder-modal";
            document.body.appendChild(node);
        }
        wp.element.render(component, node);
        document.body.classList.add('qubely-builder-modal-open');
    },
    close: function close() {
        onClose && onClose(function () {
            wp.element.unmountComponentAtNode(node);
            document.body.classList.remove('qubely-builder-modal-open');
        });
    }
};

module.exports = {
    Modal: Modal,
    ModalManager: Manager
};

/***/ }),

/***/ "./src/helpers/PageLIstModal.scss":
/*!****************************************!*\
  !*** ./src/helpers/PageLIstModal.scss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./PageLIstModal.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/helpers/PageLIstModal.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/helpers/PageListModal.js":
/*!**************************************!*\
  !*** ./src/helpers/PageListModal.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ModalManager = __webpack_require__(/*! ./ModalManager */ "./src/helpers/ModalManager.js");

var _SingleItem = __webpack_require__(/*! ./components/SingleItem */ "./src/helpers/components/SingleItem.js");

var _SingleItem2 = _interopRequireDefault(_SingleItem);

var _MultipleItem = __webpack_require__(/*! ./components/MultipleItem */ "./src/helpers/components/MultipleItem.js");

var _MultipleItem2 = _interopRequireDefault(_MultipleItem);

var _ReusableBlockItem = __webpack_require__(/*! ./components/ReusableBlockItem */ "./src/helpers/components/ReusableBlockItem.js");

var _ReusableBlockItem2 = _interopRequireDefault(_ReusableBlockItem);

__webpack_require__(/*! ./PageLIstModal.scss */ "./src/helpers/PageLIstModal.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var compose = wp.compose.compose;
var withDispatch = wp.data.withDispatch;
var Component = wp.element.Component;
var Spinner = wp.components.Spinner;
var parse = wp.blocks.parse;
var _wp = wp,
    apiFetch = _wp.apiFetch;
var __ = wp.i18n.__;

var PageListModal = function (_Component) {
    _inherits(PageListModal, _Component);

    function PageListModal(props) {
        _classCallCheck(this, PageListModal);

        var _this = _possibleConstructorReturn(this, (PageListModal.__proto__ || Object.getPrototypeOf(PageListModal)).call(this, props));

        _this.state = {
            loading: false,
            blockCategories: [],
            layoutCategories: [],
            layoutCategoryItems: {},
            selectedBlockCategory: '',
            selectedLayoutCategory: '',
            blockData: '',
            layoutData: '',
            savedBlocks: '',
            itemType: 'block',
            layer: 'single',
            searchContext: '',
            isSearchEnable: false,
            notFoundMessage: 'Sorry, we couldn\'t find the match.',
            requestFailedMsg: '',
            spinner: false,
            lazyloadThrottleTimeout: 0,
            priceFilter: ''
        };
        _this._lazyload = _this._lazyload.bind(_this);
        return _this;
    }

    _createClass(PageListModal, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({ loading: true });
            var requestFailedMsg = [];

            var options = {
                method: 'POST',
                url: qubely_admin.ajax + '?action=qubely_get_sections',
                headers: { 'Content-Type': 'application/json' }
            };
            apiFetch(options).then(function (response) {

                if (response.success) {

                    var blockCategories = [],
                        blockData = {};

                    response.data.map(function (item) {
                        if (item.category) {
                            item.category.map(function (cat) {
                                if (cat.slug in blockData) {
                                    blockData[cat.slug].push(item);
                                } else {
                                    blockData[cat.slug] = [];
                                    blockData[cat.slug].push(item);
                                }
                                var index = -1;
                                blockCategories.forEach(function (change, i) {
                                    if (cat.slug == change.slug) {
                                        index = i;
                                        blockCategories[i].count = blockCategories[i].count + 1;
                                    }
                                });
                                if (index === -1) {
                                    blockCategories.push({ name: cat.name, slug: cat.slug, count: 1 });
                                }
                            });
                        }
                    });

                    _this2.setState({
                        loading: false,
                        blockCategories: blockCategories,
                        blockData: blockData
                    });

                    var node = document.querySelector('#modalContainer');
                    node.addEventListener("scroll", _this2._lazyload, true);
                    _this2._lazyload();
                } else {
                    _this2.setState({
                        loading: false,
                        requestFailedMsg: response.data.message
                    });
                }
            }).catch(function (error) {
                requestFailedMsg.push(error.code + ' : ' + error.message);
                _this2.setState({
                    loading: false,
                    requestFailedMsg: requestFailedMsg
                });
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.state.layer === 'single') {
                this._lazyload();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var node = document.querySelector('#modalContainer');
            node && node.removeEventListener('scroll', this._lazyload);
        }
    }, {
        key: 'getCurrentPageData',
        value: function getCurrentPageData() {
            var _this3 = this;

            var _state = this.state,
                itemType = _state.itemType,
                priceFilter = _state.priceFilter;

            var pageData = itemType == 'block' ? this.state.blockData : this.state.layoutData;
            var pageCategories = itemType == 'block' ? this.state.blockCategories : this.state.layoutCategories;
            var selectedCategory = itemType == 'block' ? this.state.selectedBlockCategory : this.state.selectedLayoutCategory;
            var currentPageData = [];
            var tempDataID = [];

            if (this.state.layer === 'single') {
                if (this.state.parent_id) {
                    //if click from multiple entry
                    for (var key in pageData) {
                        pageData[key].map(function (value) {
                            if (value.parentID && _this3.state.parent_id === value.parentID && !(tempDataID.indexOf(value.ID) > -1)) {
                                currentPageData.push(value);
                                tempDataID.push(value.ID);
                            }
                        });
                    }
                } else {
                    if (selectedCategory) {
                        pageData[selectedCategory].map(function (value) {
                            if (itemType == 'block') {
                                if (!(tempDataID.indexOf(value.ID) > -1)) {
                                    currentPageData.push(value);
                                    tempDataID.push(value.ID);
                                }
                            } else {
                                if (value.parentID && !(tempDataID.indexOf(value.ID) > -1)) {
                                    currentPageData.push(value);
                                    tempDataID.push(value.ID);
                                }
                            }
                        });
                    } else {
                        for (var _key in pageData) {
                            Array.isArray(pageData[_key]) && pageData[_key].map(function (value) {
                                if (itemType == 'block') {
                                    if (!(tempDataID.indexOf(value.ID) > -1)) {
                                        currentPageData.push(value);
                                        tempDataID.push(value.ID);
                                    }
                                } else {
                                    if (value.parentID && !(tempDataID.indexOf(value.ID) > -1)) {
                                        currentPageData.push(value);
                                        tempDataID.push(value.ID);
                                    }
                                }
                            });
                        }
                    }
                }
            }

            if (this.state.layer === 'multiple') {
                if (selectedCategory) {
                    var itemCount = 0;
                    pageData[selectedCategory].map(function (value) {
                        if (!value.parentID && !(tempDataID.indexOf(value.ID) > -1)) {
                            var found = value.category.find(function (item) {
                                return item.slug == selectedCategory;
                            });
                            if (found) {
                                tempDataID.push(value.ID);
                                currentPageData.push(value);
                            }
                        }
                    });
                } else {
                    for (var _key2 in pageData) {
                        pageData[_key2].map(function (value) {
                            if (!value.parentID && !(tempDataID.indexOf(value.ID) > -1)) {
                                tempDataID.push(value.ID);
                                currentPageData.push(value);
                            }
                        });
                    }
                }
            }

            if (this.state.layer === 'block') {
                currentPageData = this.state.savedBlocks;
            }

            if (itemType != 'saved_blocks') {
                currentPageData = priceFilter == 'pro' ? currentPageData.filter(function (item) {
                    return item.pro == true;
                }) : priceFilter == 'free' ? currentPageData.filter(function (item) {
                    return item.pro == false;
                }) : currentPageData;
            }

            if (this.state.isSearchEnable) {
                var filterData = currentPageData.filter(function (item) {
                    return item.name.toLowerCase().indexOf(_this3.state.searchContext.toLowerCase()) != -1;
                });
                return { pageCategories: pageCategories, selectedCategory: selectedCategory, currentPageData: filterData };
            }

            return { pageCategories: pageCategories, selectedCategory: selectedCategory, currentPageData: currentPageData };
        }
    }, {
        key: 'deleteSavedBlock',
        value: function deleteSavedBlock(index, blockID) {
            var _this4 = this;

            var savedBlocks = this.state.savedBlocks;

            var requestFailedMsg = [];
            var options = {
                method: 'POST',
                url: qubely_admin.ajax + '?action=qubely_delete_saved_block&block_id=' + blockID,
                headers: { 'Content-Type': 'application/json' }
            };
            apiFetch(options).then(function (response) {
                if (response.success) {
                    delete savedBlocks[index];
                    _this4.setState({ savedBlocks: savedBlocks });
                }
            }).catch(function (error) {
                requestFailedMsg.push(error.code + ' : ' + error.message);
                _this4.setState({
                    requestFailedMsg: requestFailedMsg
                });
            });
        }
    }, {
        key: 'importLayoutBlock',
        value: function importLayoutBlock(itemData, isPro) {
            var _this5 = this;

            var itemType = this.state.itemType;
            var _props = this.props,
                insertBlocks = _props.insertBlocks,
                removeBlock = _props.removeBlock,
                rowClientId = _props.rowClientId;


            if (!qubely_admin.pro_enable && isPro == true) {
                //
            } else {
                this.setState({ spinner: itemData.ID });
                var requestFailedMsg = [];
                var options = {
                    method: 'POST',
                    url: qubely_admin.ajax + '?action=qubely_get_single_' + itemType + '&' + itemType + '_id=' + itemData.ID,
                    headers: { 'Content-Type': 'application/json' }
                };
                apiFetch(options).then(function (response) {
                    if (response.success) {
                        //import layout
                        var pageData = parse(response.data.rawData);
                        insertBlocks(pageData);
                        if (rowClientId) {
                            removeBlock(rowClientId); // remove row block
                        }
                        _ModalManager.ModalManager.close(); //close modal
                    }
                }).catch(function (error) {
                    requestFailedMsg.push(error.code + ' : ' + error.message);
                    _this5.setState({
                        requestFailedMsg: requestFailedMsg
                    });
                });
            }
        }
    }, {
        key: 'importSavedBlock',
        value: function importSavedBlock(block) {
            var _props2 = this.props,
                insertBlocks = _props2.insertBlocks,
                removeBlock = _props2.removeBlock,
                rowClientId = _props2.rowClientId;

            var blocks = parse(block.post_content);
            insertBlocks(blocks);
            if (rowClientId) {
                removeBlock(rowClientId); // remove row block
            }
            _ModalManager.ModalManager.close();
        }
    }, {
        key: '_onlickBlocksTab',
        value: function _onlickBlocksTab() {
            this.setState({
                itemType: 'block',
                layer: 'single',
                parent_id: '',
                searchContext: '',
                priceFilter: ''
            });
        }
    }, {
        key: '_onlickLayoutsTab',
        value: function _onlickLayoutsTab() {
            var _this6 = this;

            var _state2 = this.state,
                layoutData = _state2.layoutData,
                layoutCategoryItems = _state2.layoutCategoryItems;


            if (!layoutData) {
                this.setState({ loading: true });
                var requestFailedMsg = [];

                var options = {
                    method: 'POST',
                    url: qubely_admin.ajax + '?action=qubely_get_layouts',
                    headers: { 'Content-Type': 'application/json' }
                };
                apiFetch(options).then(function (response) {

                    if (response.success) {

                        var layoutCategories = [],
                            _layoutData = {};

                        response.data.map(function (item) {

                            var itemKey = 'item' + item.parentID;
                            if (layoutCategoryItems.hasOwnProperty(itemKey)) {
                                layoutCategoryItems[itemKey] += 1;
                            } else {
                                layoutCategoryItems[itemKey] = 1;
                            }

                            if (item.category) {
                                item.category.map(function (cat) {
                                    if (cat.slug in _layoutData) {
                                        _layoutData[cat.slug].push(item);
                                    } else {
                                        _layoutData[cat.slug] = [];
                                        _layoutData[cat.slug].push(item);
                                    }
                                    var index = -1;
                                    layoutCategories.forEach(function (change, i) {
                                        if (cat.slug == change.slug) {
                                            index = i;
                                            if (item.parentID == 0) {
                                                layoutCategories[i].count = layoutCategories[i].count + 1;
                                            }
                                        }
                                    });
                                    if (index == -1) {
                                        layoutCategories.push({ name: cat.name, slug: cat.slug, count: item.parentID == 0 ? 1 : 0 });
                                    }
                                });
                            }
                        });

                        _this6.setState({
                            loading: false,
                            layoutCategories: layoutCategories,
                            layoutCategoryItems: layoutCategoryItems,
                            layoutData: _layoutData
                        });

                        var node = document.querySelector('#modalContainer');
                        node.addEventListener("scroll", _this6._lazyload, true);
                        _this6._lazyload();
                    } else {
                        _this6.setState({
                            loading: false,
                            requestFailedMsg: response.data.message
                        });
                    }
                }).catch(function (error) {
                    requestFailedMsg.push(error.code + ' : ' + error.message);
                    _this6.setState({
                        loading: false,
                        requestFailedMsg: requestFailedMsg
                    });
                });
            }

            this.setState({
                itemType: 'layout',
                layer: 'multiple',
                parent_id: '',
                searchContext: '',
                priceFilter: ''
            });
        }
    }, {
        key: '_onlickSavedBlocksTab',
        value: function _onlickSavedBlocksTab() {
            var _this7 = this;

            var requestFailedMsg = [];
            var savedBlocks = this.state.savedBlocks;

            if (!savedBlocks) {
                this.setState({ loading: true });
                var options = {
                    method: 'POST',
                    url: qubely_admin.ajax + '?action=qubely_get_saved_block',
                    headers: { 'Content-Type': 'application/json' }
                };
                apiFetch(options).then(function (response) {
                    _this7.setState({
                        loading: false,
                        layer: 'block',
                        itemType: 'saved_blocks',
                        savedBlocks: response.data,
                        searchContext: '',
                        priceFilter: ''
                    });
                }).catch(function (error) {
                    requestFailedMsg.push(error.code + ' : ' + error.message);
                    _this7.setState({
                        loading: false,
                        requestFailedMsg: requestFailedMsg,
                        searchContext: '',
                        priceFilter: ''
                    });
                });
            } else {
                this.setState({
                    layer: 'block',
                    itemType: 'saved_blocks',
                    searchContext: '',
                    priceFilter: ''
                });
            }
        }
    }, {
        key: '_onClickSingleEntity',
        value: function _onClickSingleEntity(template_id) {
            this.setState({
                layer: 'single',
                parent_id: template_id
            });
        }
    }, {
        key: '_lazyload',
        value: function _lazyload() {
            var lazyloadThrottleTimeout = this.state.lazyloadThrottleTimeout;

            var lazyloadImages = document.querySelectorAll('img.lazy');
            if (lazyloadImages.length) {
                if (lazyloadThrottleTimeout) {
                    this.setState({
                        lazyloadThrottleTimeout: clearTimeout(lazyloadThrottleTimeout)
                    });
                }
                var modalContainer = document.querySelector('#modalContainer');

                lazyloadThrottleTimeout = setTimeout(function () {
                    var firstElement = document.querySelector('#first-single-item'),
                        rect = firstElement.getBoundingClientRect(),
                        scrollTop = window.pageYOffset || document.documentElement.scrollTop,
                        scrollTopOffset = Math.abs(rect.top + scrollTop);

                    lazyloadImages.forEach(function (img) {
                        if (img.offsetTop < modalContainer.clientHeight + scrollTopOffset) {
                            img.src = img.dataset.src;
                            //img.classList.remove('lazy');
                        }
                    });
                    if (lazyloadImages.length == 0) {
                        modalContainer.removeEventListener("scroll", this._lazyload);
                    }
                }, 20);
            }
        }
    }, {
        key: '_OnChangeCategory',
        value: function _OnChangeCategory(value) {
            if (this.state.itemType == 'block') {
                this.setState({ selectedBlockCategory: value });
            } else if (this.state.itemType == 'layout') {
                this.setState({ selectedLayoutCategory: value });
            }
        }
    }, {
        key: '_sliceCurrentData',
        value: function _sliceCurrentData(data) {
            var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;
            var balanced = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

            if (n < 2) return [data];

            var len = data.length,
                out = [],
                i = 0,
                size;

            if (len % n === 0) {
                size = Math.floor(len / n);
                while (i < len) {
                    out.push(data.slice(i, i += size));
                }
            } else if (balanced) {
                while (i < len) {
                    size = Math.ceil((len - i) / n--);
                    out.push(data.slice(i, i += size));
                }
            } else {

                n--;
                size = Math.floor(len / n);
                if (len % size === 0) size--;
                while (i < size * n) {
                    out.push(data.slice(i, i += size));
                }
                out.push(data.slice(size * n));
            }
            return out;
        }
    }, {
        key: '_OnSearchTemplate',
        value: function _OnSearchTemplate(event) {
            var isSearchEnable = this.state.isSearchEnable;

            isSearchEnable = event.target.value === '' ? false : true;
            this.setState({ isSearchEnable: isSearchEnable, searchContext: event.target.value });
        }
    }, {
        key: '_backgroundImage',
        value: function _backgroundImage(url) {
            if (!url) {
                return qubely_admin.plugin + 'assets/img/qubely-medium.jpg';
            }
            return url;
        }
    }, {
        key: '_getDataLength',
        value: function _getDataLength(type, singleCount) {
            var _state3 = this.state,
                selectedBlockCategory = _state3.selectedBlockCategory,
                blockCategories = _state3.blockCategories,
                selectedLayoutCategory = _state3.selectedLayoutCategory,
                itemType = _state3.itemType,
                blockData = _state3.blockData,
                layoutCategories = _state3.layoutCategories;

            var count = 0;
            if (type == 'heading') {
                if (itemType == 'block') {
                    if (selectedBlockCategory == '') {
                        count = singleCount;
                        //blockCategories.forEach(function (data) { count = count + data.count; });
                    } else {
                        blockCategories.forEach(function (data) {
                            if (data.slug == selectedBlockCategory) {
                                count = data.count;
                            }
                        });
                    }
                    return count;
                } else {
                    if (this.state.layer == 'multiple') {
                        if (selectedLayoutCategory == '') {
                            //layoutCategories.forEach(function (data) { count = count + data.count; });
                            count = singleCount;
                        } else {
                            layoutCategories.forEach(function (data) {
                                if (data.slug == selectedLayoutCategory) {
                                    count = data.count;
                                }
                            });
                        }
                        return count;
                    } else {
                        return singleCount;
                    }
                }
            } else {
                if (itemType == 'block') {
                    Object.keys(blockData).forEach(function (key) {
                        count = count + blockData[key].length;
                    });
                    return count;
                } else {
                    layoutCategories.forEach(function (data) {
                        count = count + data.count;
                    });
                    return count;
                }
            }
        }
    }, {
        key: '_changePriceFilter',
        value: function _changePriceFilter() {
            var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            this.setState({
                priceFilter: val ? val : ''
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this8 = this;

            var _getCurrentPageData = this.getCurrentPageData(),
                pageCategories = _getCurrentPageData.pageCategories,
                currentPageData = _getCurrentPageData.currentPageData;

            var types = qubely_admin.pro_enable ? 'active' : 'inactive';
            var _state4 = this.state,
                itemType = _state4.itemType,
                blockData = _state4.blockData,
                layer = _state4.layer,
                selectedBlockCategory = _state4.selectedBlockCategory,
                selectedLayoutCategory = _state4.selectedLayoutCategory;


            return React.createElement(
                _ModalManager.Modal,
                { className: 'qubely-builder-modal-pages-list', customClass: 'qubely-builder-modal-template-list', onRequestClose: this.props.onRequestClose, openTimeoutMS: 0, closeTimeoutMS: 0 },
                React.createElement(
                    'div',
                    { className: 'qubely-builder-modal-header' },
                    React.createElement(
                        'div',
                        { className: 'template-search-box' },
                        React.createElement('i', { className: 'fas fa-search' }),
                        React.createElement('input', { type: 'search', onChange: this._OnSearchTemplate.bind(this), value: this.state.searchContext, placeholder: __('Type to search'), className: 'form-control' })
                    ),
                    React.createElement(
                        'div',
                        { className: 'qubely-template-list-header' },
                        React.createElement(
                            'button',
                            { className: this.state.itemType == 'block' ? 'active' : '', onClick: function onClick(e) {
                                    return _this8._onlickBlocksTab();
                                } },
                            ' ',
                            __('Sections'),
                            ' '
                        ),
                        React.createElement(
                            'button',
                            { className: this.state.itemType == 'layout' ? 'active' : '', onClick: function onClick(e) {
                                    return _this8._onlickLayoutsTab();
                                } },
                            ' ',
                            __('Starter Packs'),
                            ' '
                        ),
                        React.createElement(
                            'button',
                            { className: this.state.itemType == 'saved_blocks' ? 'active' : '', onClick: function onClick(e) {
                                    return _this8._onlickSavedBlocksTab();
                                } },
                            ' ',
                            __('Saved'),
                            ' '
                        ),
                        React.createElement(
                            'button',
                            { className: 'qubely-builder-close-modal', onClick: function onClick(e) {
                                    _ModalManager.ModalManager.close();
                                } },
                            React.createElement('i', { className: "fas fa-times" })
                        )
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-layout-modal-sidebar' },
                    React.createElement(
                        'div',
                        { className: 'qubely-modal-sidebar-content' },
                        !(itemType == 'layout' && layer == 'single') && !(itemType == 'saved_blocks') && React.createElement(
                            'h3',
                            null,
                            'Categories'
                        ),
                        !this.state.parent_id && this.state.layer != 'block' && React.createElement(
                            'ul',
                            { className: 'qubely-template-categories' },
                            React.createElement(
                                'li',
                                {
                                    className: itemType == 'block' ? '' == selectedBlockCategory ? 'active' : '' : '' == selectedLayoutCategory ? 'active' : '',
                                    onClick: function onClick() {
                                        return _this8._OnChangeCategory('');
                                    } },
                                __('All '),
                                itemType == 'block' ? 'Sections' : 'Starter Packs',
                                React.createElement(
                                    'span',
                                    null,
                                    this._getDataLength('category', currentPageData.length)
                                )
                            ),
                            pageCategories.map(function (data, index) {
                                return React.createElement(
                                    'li',
                                    { className: itemType == 'block' ? data.slug == selectedBlockCategory ? 'active' : '' : data.slug == selectedLayoutCategory ? 'active' : '',
                                        onClick: function onClick() {
                                            return _this8._OnChangeCategory(data.slug);
                                        },
                                        key: index },
                                    data.name,
                                    React.createElement(
                                        'span',
                                        null,
                                        itemType == 'block' ? blockData[data.slug] ? blockData[data.slug].length : 0 : data.count
                                    )
                                );
                            })
                        )
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'qubely-layout-modal-content-area' },
                    itemType != 'saved_blocks' && React.createElement(
                        'div',
                        { className: 'qubely-template-list-sub-header' },
                        React.createElement(
                            'h4',
                            null,
                            this.state.itemType == 'layout' && this.state.layer == 'single' && React.createElement(
                                'span',
                                { className: "qubely-template-back", onClick: function onClick() {
                                        return _this8.setState({ layer: 'multiple', parent_id: '' });
                                    } },
                                React.createElement('span', { className: 'dashicons dashicons-arrow-left-alt' }),
                                '\xA0'
                            ),
                            this._getDataLength('heading', currentPageData.length),
                            '\xA0',
                            itemType == 'block' ? __('Sections') : this.state.layer == 'single' ? __('Layouts') : __('Starter Packs')
                        ),
                        React.createElement(
                            'div',
                            { className: 'qubely-template-filter-button-group' },
                            React.createElement(
                                'button',
                                { onClick: function onClick() {
                                        return _this8._changePriceFilter();
                                    }, className: '' == this.state.priceFilter ? 'active' : '' },
                                __('All')
                            ),
                            React.createElement(
                                'button',
                                { onClick: function onClick() {
                                        return _this8._changePriceFilter('free');
                                    }, className: 'free' == this.state.priceFilter ? 'active' : '' },
                                __('Free')
                            ),
                            React.createElement(
                                'button',
                                { onClick: function onClick() {
                                        return _this8._changePriceFilter('pro');
                                    }, className: 'pro' == this.state.priceFilter ? 'active' : '' },
                                React.createElement('img', { src: qubely_admin.plugin + 'assets/img/icon-premium.svg', alt: '' }),
                                __('Premium')
                            )
                        )
                    ),
                    !this.state.loading ? React.createElement(
                        'div',
                        { id: 'modalContainer', className: 'qubely-template-list-modal' },
                        React.createElement(
                            'div',
                            { className: 'qubely-builder-template-list-container' },
                            React.createElement(
                                'div',
                                { id: 'layouts-blocks-list', className: "qubely-builder-page-templates " + (this.state.itemType == "saved_blocks" ? 'qubely-frontendd-block-list' : '') },
                                this.state.layer == 'single' && this._sliceCurrentData(currentPageData).map(function (item) {
                                    return React.createElement(
                                        'div',
                                        { className: 'qubely-pagelist-column' },
                                        item.map(function (data, index) {
                                            return React.createElement(_SingleItem2.default, {
                                                key: index,
                                                data: data,
                                                index: index,
                                                types: types,
                                                itemType: _this8.state.itemType,
                                                spinner: _this8.state.spinner,
                                                importLayoutBlock: _this8.importLayoutBlock.bind(_this8),
                                                backgroundImage: _this8._backgroundImage
                                            });
                                        })
                                    );
                                }),
                                this.state.layer == 'multiple' && currentPageData.map(function (data, index) {
                                    return React.createElement(_MultipleItem2.default, {
                                        key: index,
                                        data: data,
                                        types: types,
                                        totalLayouts: _this8.state.layoutCategoryItems['item' + data.ID],
                                        onClickSingleEntity: _this8._onClickSingleEntity.bind(_this8),
                                        backgroundImage: _this8._backgroundImage
                                    });
                                }),
                                this.state.layer == 'block' && currentPageData.length != 0 && React.createElement(
                                    'div',
                                    { className: 'qubely-reusable-list-title' },
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-reusable-list-content' },
                                        React.createElement(
                                            'span',
                                            { className: 'qubely-tmpl-title' },
                                            ' ',
                                            __('Title')
                                        )
                                    ),
                                    React.createElement(
                                        'div',
                                        { className: 'qubely-reusable-list-info' },
                                        React.createElement(
                                            'div',
                                            { className: 'qubely-reusable-list-info-date' },
                                            __('Publish'),
                                            ' '
                                        )
                                    )
                                ),
                                this.state.layer == 'block' && currentPageData.map(function (data, index) {
                                    return React.createElement(_ReusableBlockItem2.default, {
                                        key: index,
                                        data: data,
                                        index: index,
                                        importSavedBlock: _this8.importSavedBlock.bind(_this8),
                                        deleteSavedBlock: _this8.deleteSavedBlock.bind(_this8),
                                        backgroundImage: _this8._backgroundImage
                                    });
                                }),
                                currentPageData.length === 0 && React.createElement(
                                    'div',
                                    { className: 'qubely-builder-template-found-empty' },
                                    React.createElement(
                                        'h3',
                                        { className: 'qubely-builder-empty-title' },
                                        ' ',
                                        this.state.notFoundMessage,
                                        ' '
                                    )
                                )
                            )
                        )
                    ) : React.createElement(
                        'div',
                        null,
                        React.createElement(
                            'div',
                            { style: { height: "600px" } },
                            this.state.requestFailedMsg ? this.state.requestFailedMsg.map(function (error, index) {
                                return React.createElement(
                                    'p',
                                    { key: index },
                                    error
                                );
                            }) : React.createElement(
                                'div',
                                { className: 'qubely-modal-loader' },
                                React.createElement(Spinner, null)
                            )
                        )
                    )
                )
            );
        }
    }]);

    return PageListModal;
}(Component);

exports.default = compose([withDispatch(function (dispatch) {
    var _dispatch = dispatch('core/block-editor'),
        insertBlocks = _dispatch.insertBlocks,
        removeBlock = _dispatch.removeBlock;

    return {
        insertBlocks: insertBlocks,
        removeBlock: removeBlock
    };
})])(PageListModal);

/***/ }),

/***/ "./src/helpers/ParseCss.js":
/*!*********************************!*\
  !*** ./src/helpers/ParseCss.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var select = wp.data.select;
var CssGenerator = wp.qubelyComponents.CssGenerator.CssGenerator;


var endpoint = '/qubely/v1/save_block_css';

var API_fetch = function API_fetch(post_id, block_css, is_remain, available_blocks) {
    var json = JSON.stringify(block_css.interaction);
    return wp.apiFetch({
        path: endpoint,
        method: 'POST',
        data: { block_css: block_css.css, interaction: json, post_id: post_id, is_remain: is_remain, available_blocks: available_blocks }
    }).then(function (data) {
        return data;
    });
};

/**
 * Parse css for stylesheet
 * Create css file for each post. Call api for update css file each time hit save button
 */
var __CSS = '';
var interaction = {};

function innerBlocks(blocks) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (type == true) {
        __CSS = '';
        interaction = {};
        type = false;
    }

    blocks.map(function (row) {
        var attributes = row.attributes,
            name = row.name;

        var blockName = name.split('/');
        if (blockName[0] === 'qubely' && attributes.uniqueId) {
            __CSS += CssGenerator(attributes, blockName[1], attributes.uniqueId, true);
            if (typeof attributes['interaction'] !== 'undefined') {
                var _attributes$interacti = attributes.interaction,
                    while_scroll_into_view = _attributes$interacti.while_scroll_into_view,
                    mouse_movement = _attributes$interacti.mouse_movement;


                if (typeof while_scroll_into_view !== 'undefined' && while_scroll_into_view.enable === true) {
                    var action_list = while_scroll_into_view.action_list;

                    action_list = action_list.sort(function (a, b) {
                        return a.keyframe - b.keyframe;
                    });
                    var interactionObj = {
                        blockId: attributes.uniqueId,
                        enable_mobile: typeof while_scroll_into_view.enable_mobile === 'undefined' ? false : while_scroll_into_view.enable_mobile,
                        enable_tablet: typeof while_scroll_into_view.enable_tablet === 'undefined' ? false : while_scroll_into_view.enable_tablet,
                        animation: action_list
                    };
                    var origin = {
                        x_offset: typeof while_scroll_into_view.transform_origin_x === 'undefined' ? 'center' : while_scroll_into_view.transform_origin_x,
                        y_offset: typeof while_scroll_into_view.transform_origin_y === 'undefined' ? 'center' : while_scroll_into_view.transform_origin_y
                    };
                    interactionObj.origin = origin;
                    if (typeof interaction.while_scroll_view === 'undefined') {
                        interaction.while_scroll_view = [interactionObj];
                    } else {
                        interaction.while_scroll_view.push(interactionObj);
                    }
                    // blocks_flag.interaction = true
                }
                if (typeof mouse_movement !== 'undefined' && mouse_movement.enable === true) {
                    var _interactionObj = {
                        blockId: attributes.uniqueId,
                        enable_mobile: typeof while_scroll_into_view.enable_mobile === 'undefined' ? false : while_scroll_into_view.enable_mobile,
                        enable_tablet: typeof while_scroll_into_view.enable_tablet === 'undefined' ? false : while_scroll_into_view.enable_tablet,
                        animation: mouse_movement
                    };
                    if (typeof interaction.mouse_movement === 'undefined') {
                        interaction.mouse_movement = [_interactionObj];
                    } else {
                        interaction.mouse_movement.push(_interactionObj);
                    }
                }
            }
        }

        if (row.innerBlocks && row.innerBlocks.length > 0) {
            innerBlocks(row.innerBlocks);
        }
    });
    return { css: __CSS, interaction: interaction };
}

function isQubelyBlock(blocks) {
    var isQubely = false;
    blocks.forEach(function (block) {
        if (block.name.indexOf('qubely/') != -1) {
            isQubely = true;
        }
        if (block.innerBlocks && block.innerBlocks.length > 0 && isQubely != true) {
            block.innerBlocks.forEach(function (bl) {
                if (bl.name.indexOf('qubely/') != -1) {
                    isQubely = true;
                }
                if (bl.innerBlocks && bl.innerBlocks.length > 0 && isQubely != true) {
                    bl.innerBlocks.forEach(function (b) {
                        if (b.name.indexOf('qubely/') != -1) {
                            isQubely = true;
                        }
                    });
                }
            });
        }
    });
    return isQubely;
}

function getData(pId) {
    wp.apiFetch({
        path: 'qubely/v1/qubely_get_content',
        method: 'POST',
        data: { postId: pId }
    }).then(function (response) {
        if (response.success) {
            var innerBlock = innerBlocks(wp.blocks.parse(response.data), true);
            if (innerBlock.css) {
                wp.apiFetch({
                    path: 'qubely/v1/append_qubely_css',
                    method: 'POST',
                    data: { css: innerBlock.css, post_id: select('core/editor').getCurrentPostId() }
                }).then(function (res) {
                    if (res.success) {
                        // Save Data
                    }
                });
            }
        }
    });
};

function parseBlock(blocks) {
    blocks.forEach(function (block) {
        if (block.name.indexOf('core/block') != -1) {
            getData(block.attributes.ref);
        }
        if (block.innerBlocks && block.innerBlocks.length > 0) {
            parseBlock(block.innerBlocks);
        }
    });
}

/*function setAvailableBlocksMeta(data) {
    wp.apiFetch({
        path: 'qubely/v1/set_qubely_available_blocks_meta',
        method: 'POST',
        data
    })
        .then(response  => {
            console.log(response)
        })
}*/

function availableBlocksMeta(all_blocks) {
    var blocks_flag = {
        available_blocks: [],
        interaction: false,
        animation: false,
        parallax: false
    };
    function recursive_block_map(blocks) {
        if (!blocks.length) {
            return;
        }
        blocks.map(function (block) {
            var attributes = block.attributes,
                innerBlocks = block.innerBlocks,
                name = block.name;

            blocks_flag.available_blocks.push(name);

            // check if has interaction
            if (blocks_flag.interaction === false && typeof attributes.interaction !== 'undefined') {
                var _attributes$interacti2 = attributes.interaction,
                    while_scroll_into_view = _attributes$interacti2.while_scroll_into_view,
                    mouse_movement = _attributes$interacti2.mouse_movement;

                if (typeof while_scroll_into_view !== 'undefined' && while_scroll_into_view.enable === true || typeof mouse_movement !== 'undefined' && mouse_movement.enable === true) {
                    blocks_flag.interaction = true;
                }
            }

            // if has block animation
            if (blocks_flag.animation === false && typeof attributes.animation !== 'undefined' && typeof attributes.animation.animation !== 'undefined' && attributes.animation.animation !== '') {
                blocks_flag.animation = true;
            }

            // if has block parallax
            if (blocks_flag.parallax === false && name === 'qubely/row') {
                if (typeof attributes.rowBg !== 'undefined' && typeof attributes.rowBg.bgimgParallax !== 'undefined' && attributes.rowBg.bgimgParallax === 'animated') {
                    blocks_flag.parallax = true;
                }
            }

            recursive_block_map(innerBlocks);
        });
    }
    recursive_block_map(all_blocks);
    return blocks_flag;
}

var ParseCss = function ParseCss() {
    var setDatabase = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

    window.bindCss = true;
    var all_blocks = select('core/block-editor').getBlocks();
    var isRemain = isQubelyBlock(all_blocks);

    var _select = select('core/editor'),
        getCurrentPostId = _select.getCurrentPostId;

    var __blocks = { css: '', interaction: {} };
    if (typeof window.globalData != 'undefined') {
        __blocks.css += CssGenerator(window.globalData.settings, 'pagesettings', '8282882', true);
    }

    // Inner Blocks
    var parseData = innerBlocks(all_blocks, true);
    __blocks.interaction = parseData.interaction;
    __blocks.css += parseData.css;

    // reusable Block
    parseBlock(all_blocks);

    localStorage.setItem('qubelyCSS', __blocks);

    // available blocks meta
    var available_blocks = availableBlocksMeta(all_blocks);

    if (setDatabase) {
        API_fetch(getCurrentPostId(), __blocks, isRemain, available_blocks);
    }
    setTimeout(function () {
        window.bindCss = false;
    }, 1000);
};

exports.default = ParseCss;

/***/ }),

/***/ "./src/helpers/components/MultipleItem.js":
/*!************************************************!*\
  !*** ./src/helpers/components/MultipleItem.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var __ = wp.i18n.__;

exports.default = function (props) {

    return React.createElement(
        "div",
        { className: "qubely-multiple-template-box" },
        React.createElement(
            "div",
            { className: "multiple-template-view", onClick: function onClick() {
                    return props.onClickSingleEntity(props.data.ID);
                } },
            React.createElement(
                "div",
                { className: "qubely-default-template-image" },
                React.createElement("img", { alt: __('Default template'), src: props.backgroundImage(props.data.image), srcSet: props.backgroundImage(props.data.image) + ' 2x' }),
                props.data.pro && React.createElement(
                    "span",
                    { className: "qubely-pro" },
                    " ",
                    __('Pro'),
                    " "
                )
            ),
            React.createElement(
                "div",
                { className: "qubely-tmpl-info" },
                React.createElement("h5", { className: "qubely-tmpl-title", dangerouslySetInnerHTML: { __html: props.data.name } }),
                React.createElement(
                    "span",
                    { className: "qubely-temp-count" },
                    props.totalLayouts,
                    " ",
                    __('Layouts')
                )
            )
        )
    );
};

/***/ }),

/***/ "./src/helpers/components/ReusableBlockItem.js":
/*!*****************************************************!*\
  !*** ./src/helpers/components/ReusableBlockItem.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var __ = wp.i18n.__;

exports.default = function (props) {

    return React.createElement(
        "div",
        null,
        React.createElement(
            "div",
            { className: "qubely-reusable-list-content" },
            React.createElement("span", { className: "qubely-tmpl-title", dangerouslySetInnerHTML: { __html: props.data.post_title } })
        ),
        React.createElement(
            "div",
            { className: "qubely-reusable-list-info" },
            React.createElement(
                "div",
                { className: "qubely-reusable-list-info-date" },
                "16 Feb 2019 "
            ),
            React.createElement(
                "div",
                { className: "qubely-reusable-list-button" },
                React.createElement(
                    "button",
                    { className: "qubely-builder-btn qubely-btn-success", onClick: function onClick(e) {
                            props.importSavedBlock(props.data);
                        } },
                    React.createElement("i", { className: "fas fa-download" })
                ),
                React.createElement(
                    "button",
                    { className: "qubely-builder-btn qubely-btn-success", onClick: function onClick(e) {
                            props.deleteSavedBlock(props.index, props.data.ID);
                        } },
                    React.createElement("i", { className: "fas fa-trash" })
                )
            )
        )
    );
};

/***/ }),

/***/ "./src/helpers/components/SingleItem.js":
/*!**********************************************!*\
  !*** ./src/helpers/components/SingleItem.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;

exports.default = function (props) {
    return React.createElement(
        'div',
        { id: props.index == 0 ? 'first-single-item' : '', className: 'qubely-single-block-item ' + (props.types == 'inactive' && props.data.pro == true ? 'inactive' : '') },
        React.createElement(
            'div',
            { className: 'qubely-single-item-inner' },
            React.createElement(
                'div',
                { className: 'qubely-default-template-image' },
                React.createElement('img', { className: 'lazy', alt: __('Lazy Loading'), src: qubely_admin.plugin + 'assets/img/image-loader.gif', 'data-src': props.backgroundImage(props.data.image) }),
                props.data.pro && React.createElement(
                    'span',
                    { className: 'qubely-pro' },
                    __('Pro')
                )
            ),
            React.createElement(
                'div',
                { className: 'qubely-tmpl-info' },
                React.createElement(
                    'div',
                    { className: 'qubely-import-button-group' },
                    props.itemType != 'comming' ? React.createElement(
                        Fragment,
                        null,
                        props.data.liveurl && React.createElement(
                            'a',
                            { className: 'qubely-button', target: '_blank', href: props.data.liveurl },
                            React.createElement('i', { className: 'fa fa-share' }),
                            ' ',
                            __('Preview'),
                            ' '
                        ),
                        props.types == 'inactive' && props.data.pro == true ? React.createElement(
                            'a',
                            { className: 'qubely-button-download', target: '_blank', href: 'https://www.themeum.com/product/qubely/' },
                            React.createElement('i', { className: 'fas fa-upload' }),
                            ' ',
                            __('Upgrade to Pro')
                        ) : React.createElement(
                            'a',
                            { className: 'qubely-button qubely-button-download', onClick: function onClick(e) {
                                    props.importLayoutBlock(props.data, props.data.pro);
                                } },
                            props.spinner == props.data.ID ? React.createElement('i', { className: 'fas fa-spinner fa-pulse' }) : React.createElement('i', { className: 'fas fa-download' }),
                            __('Import')
                        )
                    ) : React.createElement(
                        'div',
                        { className: 'qubely-coming-soon', style: { color: '#ffffff' } },
                        __('Coming Soon.')
                    )
                )
            )
        ),
        React.createElement('h4', { className: 'qubely-tmpl-title', dangerouslySetInnerHTML: { __html: props.data.name } })
    );
};

/***/ }),

/***/ "./src/helpers/icons.js":
/*!******************************!*\
  !*** ./src/helpers/icons.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var __ = wp.i18n.__;

var icons = {};
var img_path = qubely_admin.plugin + 'assets/img/blocks';

icons.qubely = React.createElement(
    "svg",
    { width: "16", height: "16", viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M15.8 8c0-2.2-.8-4-2.3-5.5-1.5-1.5-3.4-2.3-5.5-2.3s-4 .8-5.5 2.3c-1.5 1.5-2.3 3.3-2.3 5.5s.8 4 2.3 5.5c1.5 1.5 3.3 2.3 5.5 2.3.9 0 1.8-.1 2.6-.4l-2.2-2.3c-.1-.1-.3-.2-.4-.2-1.4 0-2.5-.5-3.4-1.4-1-.9-1.4-2.1-1.4-3.5s.5-2.6 1.4-3.5c.9-.9 2-1.4 3.4-1.4s2.5.5 3.4 1.4c.9.9 1.4 2.1 1.4 3.5 0 .7-.1 1.4-.4 2-.2.5-.8.6-1.2.2-1.1-1.1-2.8-1.2-4-.2l2.5 2.6 2.1 2.2c.9.9 2.4 1 3.4.1l.3-.3-1.3-1.3c-.2-.2-.2-.4 0-.6 1-1.3 1.6-2.9 1.6-4.7z" })
);

icons.solid = React.createElement(
    "svg",
    { xmlns: "http://www.w3.org/2000/svg", width: "19", height: "2" },
    React.createElement(
        "switch",
        null,
        React.createElement(
            "g",
            null,
            React.createElement("path", { d: "M0 0h19v2H0z" })
        )
    )
);
icons.dot = React.createElement(
    "svg",
    { id: "Layer_1", xmlns: "http://www.w3.org/2000/svg", width: "18", height: "2" },
    React.createElement(
        "switch",
        null,
        React.createElement(
            "g",
            null,
            React.createElement(
                "g",
                null,
                React.createElement(
                    "g",
                    { transform: "translate(-1378 -121)" },
                    React.createElement(
                        "g",
                        { transform: "translate(1229 110)" },
                        React.createElement(
                            "g",
                            { transform: "translate(149 11)" },
                            React.createElement("circle", { "class": "st0", cx: "1", cy: "1", r: "1" }),
                            React.createElement("circle", { "class": "st0", cx: "17", cy: "1", r: "1" }),
                            React.createElement("circle", { "class": "st0", cx: "5", cy: "1", r: "1" }),
                            React.createElement("circle", { "class": "st0", cx: "13", cy: "1", r: "1" }),
                            React.createElement("circle", { "class": "st0", cx: "9", cy: "1", r: "1" })
                        )
                    )
                )
            )
        )
    )
);
icons.dash = React.createElement(
    "svg",
    { xmlns: "http://www.w3.org/2000/svg", width: "18", height: "2" },
    React.createElement(
        "switch",
        null,
        React.createElement(
            "g",
            null,
            React.createElement("path", { d: "M18 2h-2V0h2v2zm-4 0h-2V0h2v2zm-4 0H8V0h2v2zM6 2H4V0h2v2zM2 2H0V0h2v2z" })
        )
    )
);
icons.wave = React.createElement(
    "svg",
    { xmlns: "http://www.w3.org/2000/svg", width: "21", height: "4" },
    React.createElement(
        "switch",
        null,
        React.createElement(
            "g",
            null,
            React.createElement("path", { d: "M8 3.5c-.8 0-1.7-.3-2.5-.9C4 1.5 2.4 1.5.7 2.6c-.2.1-.5.1-.7-.2-.1-.2-.1-.5.2-.7 2-1.3 4-1.3 5.8 0 1.5 1 2.8 1 4.2-.2 1.6-1.4 3.4-1.4 5.3 0 1.5 1.1 3.1 1.2 4.7.1.2-.1.5-.1.7.1.1.2.1.5-.1.7-2 1.3-3.9 1.3-5.8-.1-1.5-1.1-2.9-1.1-4.1 0C9.9 3.1 9 3.5 8 3.5z" })
        )
    )
);

icons.vertical_top = React.createElement(
    "svg",
    { width: "16", height: "16", viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { transform: "translate(1)", fill: "none" },
        React.createElement("rect", { "class": "qubely-svg-fill", x: "4", y: "4", width: "6", height: "12", rx: "1" }),
        React.createElement("path", { "class": "qubely-svg-stroke", d: "M0 1h14", "stroke-width": "2", "stroke-linecap": "square" })
    )
);
icons.vertical_middle = React.createElement(
    "svg",
    { width: "16", height: "16", viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { fill: "none" },
        React.createElement(
            "g",
            { transform: "translate(1 1)" },
            React.createElement("rect", { "class": "qubely-svg-fill", x: "4", width: "6", height: "14", rx: "1" }),
            React.createElement("path", { d: "M0 7h2", "class": "qubely-svg-stroke", "stroke-width": "2", "stroke-linecap": "square" })
        ),
        React.createElement("path", { d: "M13 8h2", "class": "qubely-svg-stroke", "stroke-width": "2", "stroke-linecap": "square" })
    )
);
icons.vertical_bottom = React.createElement(
    "svg",
    { width: "16", height: "16", viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { transform: "translate(1)", fill: "none" },
        React.createElement("rect", { "class": "qubely-svg-fill", x: "4", width: "6", height: "12", rx: "1" }),
        React.createElement("path", { d: "M0 15h14", "class": "qubely-svg-stroke", "stroke-width": "2", "stroke-linecap": "square" })
    )
);

icons.icon_classic = React.createElement("img", { src: img_path + "/icon/classic.svg", alt: __('Classic') });
icons.icon_fill = React.createElement("img", { src: img_path + "/icon/fill.svg", alt: __('Fill') });
icons.icon_line = React.createElement("img", { src: img_path + "/icon/outline.svg", alt: __('Underline') });

icons.btn_fill = React.createElement("img", { src: img_path + "/button/fill.svg", alt: __('Fill') });
icons.btn_outline = React.createElement("img", { src: img_path + "/button/outline.svg", alt: __('Outline') });

icons.pie_fill = React.createElement("img", { src: img_path + "/pieprogress/fill.svg", alt: __('Fill') });
icons.pie_outline = React.createElement("img", { src: img_path + "/pieprogress/outline.svg", alt: __('Outline') });
icons.pie_outline_fill = React.createElement("img", { src: img_path + "/pieprogress/outline-fill.svg", alt: __('Outline Fill') });

icons.corner_square = React.createElement(
    "svg",
    { width: "12", height: "12", viewBox: "0 0 12 12", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M0 1h10.967v10.763", "stroke-width": "2", className: "qubely-svg-stroke", fill: "none" })
);
icons.corner_rounded = React.createElement(
    "svg",
    { width: "12", height: "12", viewBox: "0 0 12 12", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M0 1h6.967c2.209 0 4 1.791 4 4v6.763", "stroke-width": "2", className: "qubely-svg-stroke", fill: "none" })
);
icons.corner_round = React.createElement(
    "svg",
    { width: "12", height: "12", viewBox: "0 0 12 12", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M0 1h1.967c4.971 0 9 4.029 9 9v1.763", "stroke-width": "2", className: "qubely-svg-stroke", fill: "none" })
);

icons.tab_tabs = React.createElement("img", { src: img_path + "/tab/tabs.svg", alt: __('Tabs') });
icons.tab_pills = React.createElement("img", { src: img_path + "/tab/pills.svg", alt: __('Pills') });
icons.tab_underline = React.createElement("img", { src: img_path + "/tab/underline.svg", alt: __('Underline') });

icons.verticaltabs_1 = React.createElement("img", { src: img_path + "/verticaltabs/layout-1.svg", alt: __('Layout 1') });
icons.verticaltabs_2 = React.createElement("img", { src: img_path + "/verticaltabs/layout-2.svg", alt: __('Layout 2') });
icons.verticaltabs_3 = React.createElement("img", { src: img_path + "/verticaltabs/layout-3.svg", alt: __('Layout 3') });

icons.social_normal = React.createElement("img", { src: img_path + "//socialicon/normal.svg", alt: __('Normal') });
icons.social_fill = React.createElement("img", { src: img_path + "//socialicon/fill.svg", alt: __('Fill') });

icons.accordion_fill = React.createElement("img", { src: img_path + "/accordion/fill.svg", alt: __('Fill') });
icons.accordion_classic = React.createElement("img", { src: img_path + "/accordion/classic.svg", alt: __('Classic') });

icons.infobox_1 = React.createElement("img", { src: img_path + "/infobox/1.svg", alt: __('Layout 1') });
icons.infobox_2 = React.createElement("img", { src: img_path + "/infobox/2.svg", alt: __('Layout 2') });
icons.infobox_3 = React.createElement("img", { src: img_path + "/infobox/3.svg", alt: __('Layout 3') });
icons.infobox_4 = React.createElement("img", { src: img_path + "/infobox/4.svg", alt: __('Layout 4') });

icons.testimonial_1 = React.createElement("img", { src: img_path + "/testimonial/1.svg", alt: __('Testimonial 1') });
icons.testimonial_2 = React.createElement("img", { src: img_path + "/testimonial/2.svg", alt: __('Testimonial 2') });
icons.testimonial_3 = React.createElement("img", { src: img_path + "/testimonial/3.svg", alt: __('Testimonial 3') });
icons.avatar_left = React.createElement("img", { src: img_path + "/testimonial/avatars/1.svg", alt: __('Avatar Left') });
icons.avatar_right = React.createElement("img", { src: img_path + "/testimonial/avatars/2.svg", alt: __('Avatar Right') });
icons.avatar_top = React.createElement("img", { src: img_path + "/testimonial/avatars/3.svg", alt: __('Avatar Top') });
icons.avatar_bottom = React.createElement("img", { src: img_path + "/testimonial/avatars/4.svg", alt: __('Avatar Bottom') });

icons.team_1 = React.createElement("img", { src: img_path + "/team/1.svg", alt: __('Layout 1') });
icons.team_2 = React.createElement("img", { src: img_path + "/team/2.svg", alt: __('Layout 2') });
icons.team_3 = React.createElement("img", { src: img_path + "/team/3.svg", alt: __('Layout 3') });

icons.list_fill = React.createElement("img", { src: img_path + "/list/1.svg", alt: __('Fill') });
icons.list_classic = React.createElement("img", { src: img_path + "/list/2.svg", alt: __('Classic') });

icons.form_classic = React.createElement("img", { src: img_path + "/form/classic.svg", alt: __('Classic') });
icons.form_material = React.createElement("img", { src: img_path + "/form/material.svg", alt: __('Material') });

icons.videopopup_fill = React.createElement("img", { src: img_path + "/videopopup/fill.svg", alt: __('Fill') });
icons.videopopup_classic = React.createElement("img", { src: img_path + "/videopopup/classic.svg", alt: __('Classic') });

icons.postgrid_1 = React.createElement("img", { src: img_path + "/postgrid/1.svg", alt: __('Layout 1') });
icons.postgrid_2 = React.createElement("img", { src: img_path + "/postgrid/2.svg", alt: __('Layout 2') });
icons.postgrid_3 = React.createElement("img", { src: img_path + "/postgrid/pro1.svg", alt: __('Layout 3') });
icons.postgrid_4 = React.createElement("img", { src: img_path + "/postgrid/pro2.svg", alt: __('Layout 4') });
icons.postgrid_5 = React.createElement("img", { src: img_path + "/postgrid/pro3.svg", alt: __('Layout 4') });
icons.postgrid_design_1 = React.createElement("img", { src: img_path + "/postgrid/11.svg", alt: __('Design 1') });
icons.postgrid_design_2 = React.createElement("img", { src: img_path + "/postgrid/12.svg", alt: __('Design 2') });
icons.postgrid_design_3 = React.createElement("img", { src: img_path + "/postgrid/13.svg", alt: __('Design 3') });
icons.postgrid_design_4 = React.createElement("img", { src: img_path + "/postgrid/14.svg", alt: __('Design 4') });
icons.postgrid_design_5 = React.createElement("img", { src: img_path + "/postgrid/15.svg", alt: __('Design 5') });
icons.postgrid_design_6 = React.createElement("img", { src: img_path + "/postgrid/16.svg", alt: __('Design 6') });

icons.h1 = React.createElement(
    "svg",
    { width: "17", height: "13", viewBox: "0 0 17 13", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { className: "qubely-svg-fill", "fill-rule": "nonzero" },
        React.createElement("path", { d: "M10.83 13h-2.109v-5.792h-5.924v5.792h-2.101v-12.85h2.101v5.256h5.924v-5.256h2.109z" }),
        React.createElement("path", { d: "M16.809 13h-1.147v-4.609c0-.55.013-.986.039-1.309l-.276.259c-.109.094-.474.394-1.096.898l-.576-.728 2.1-1.65h.957v7.139z" })
    )
);
icons.h2 = React.createElement(
    "svg",
    { width: "19", height: "13", viewBox: "0 0 19 13", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { className: "qubely-svg-fill", "fill-rule": "nonzero" },
        React.createElement("path", { d: "M10.83 13h-2.109v-5.792h-5.924v5.792h-2.101v-12.85h2.101v5.256h5.924v-5.256h2.109z" }),
        React.createElement("path", { d: "M18.278 13h-4.839v-.869l1.841-1.851c.544-.557.904-.951 1.082-1.184.177-.233.307-.452.388-.657.081-.205.122-.425.122-.659 0-.322-.097-.576-.291-.762-.194-.186-.461-.278-.803-.278-.273 0-.538.05-.793.151-.256.101-.551.283-.886.547l-.62-.757c.397-.335.783-.573 1.157-.713s.773-.21 1.196-.21c.664 0 1.196.173 1.597.52.4.347.601.813.601 1.399 0 .322-.058.628-.173.918-.116.29-.293.588-.532.896-.239.308-.637.723-1.194 1.248l-1.24 1.201v.049h3.389v1.011z" })
    )
);
icons.h3 = React.createElement(
    "svg",
    { width: "19", height: "14", viewBox: "0 0 19 14", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { className: "qubely-svg-fill", "fill-rule": "nonzero" },
        React.createElement("path", { d: "M10.83 13h-2.109v-5.792h-5.924v5.792h-2.101v-12.85h2.101v5.256h5.924v-5.256h2.109z" }),
        React.createElement("path", { d: "M18.01 7.502c0 .452-.132.829-.396 1.13-.264.301-.635.504-1.113.608v.039c.573.072 1.003.25 1.289.535.286.285.43.663.43 1.135 0 .687-.243 1.217-.728 1.589-.485.373-1.175.559-2.07.559-.791 0-1.458-.129-2.002-.386v-1.021c.303.15.623.265.962.347.339.081.664.122.977.122.553 0 .967-.103 1.24-.308.273-.205.41-.522.41-.952 0-.381-.151-.661-.454-.84-.303-.179-.778-.269-1.426-.269h-.62v-.933h.63c1.139 0 1.709-.394 1.709-1.182 0-.306-.099-.542-.298-.708-.199-.166-.492-.249-.879-.249-.27 0-.531.038-.781.115-.251.076-.547.225-.889.447l-.562-.801c.654-.482 1.414-.723 2.28-.723.719 0 1.281.155 1.685.464.404.309.605.736.605 1.279z" })
    )
);
icons.h4 = React.createElement(
    "svg",
    { width: "19", height: "13", viewBox: "0 0 19 13", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { className: "qubely-svg-fill", "fill-rule": "nonzero" },
        React.createElement("path", { d: "M10.83 13h-2.109v-5.792h-5.924v5.792h-2.101v-12.85h2.101v5.256h5.924v-5.256h2.109z" }),
        React.createElement("path", { d: "M18.532 11.442h-.962v1.558h-1.118v-1.558h-3.262v-.884l3.262-4.717h1.118v4.648h.962v.952zm-2.08-.952v-1.792c0-.638.016-1.16.049-1.567h-.039c-.091.215-.234.475-.43.781l-1.772 2.578h2.192z" })
    )
);
icons.h5 = React.createElement(
    "svg",
    { width: "19", height: "14", viewBox: "0 0 19 14", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { className: "qubely-svg-fill", "fill-rule": "nonzero" },
        React.createElement("path", { d: "M10.83 13h-2.109v-5.792h-5.924v5.792h-2.101v-12.85h2.101v5.256h5.924v-5.256h2.109z" }),
        React.createElement("path", { d: "M15.861 8.542c.719 0 1.289.19 1.709.571.42.381.63.9.63 1.558 0 .762-.238 1.357-.715 1.785-.477.428-1.155.642-2.034.642-.798 0-1.424-.129-1.88-.386v-1.04c.264.15.566.265.908.347.342.081.659.122.952.122.518 0 .911-.116 1.182-.347.27-.231.405-.57.405-1.016 0-.853-.544-1.279-1.631-1.279-.153 0-.342.015-.566.046-.225.031-.422.066-.591.105l-.513-.303.273-3.486h3.711v1.021h-2.7l-.161 1.768.417-.068c.164-.026.365-.039.603-.039z" })
    )
);
icons.h6 = React.createElement(
    "svg",
    { width: "19", height: "14", viewBox: "0 0 19 14", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "g",
        { className: "qubely-svg-fill", "fill-rule": "nonzero" },
        React.createElement("path", { d: "M10.83 13h-2.109v-5.792h-5.924v5.792h-2.101v-12.85h2.101v5.256h5.924v-5.256h2.109z" }),
        React.createElement("path", { d: "M13.459 9.958c0-2.793 1.138-4.189 3.413-4.189.358 0 .661.028.908.083v.957c-.247-.072-.534-.107-.859-.107-.765 0-1.34.205-1.724.615-.384.41-.592 1.068-.625 1.973h.059c.153-.264.368-.468.645-.613.277-.145.602-.217.977-.217.648 0 1.152.199 1.514.596.361.397.542.936.542 1.616 0 .749-.209 1.34-.627 1.775-.418.435-.989.652-1.711.652-.511 0-.955-.123-1.333-.369s-.668-.604-.872-1.074c-.203-.47-.305-1.036-.305-1.697zm2.49 2.192c.394 0 .697-.127.911-.381.213-.254.32-.617.32-1.089 0-.41-.1-.732-.3-.967-.2-.234-.5-.352-.901-.352-.247 0-.475.053-.684.159-.208.106-.373.251-.493.435s-.181.372-.181.564c0 .459.125.846.374 1.16.249.314.567.471.955.471z" })
    )
);
icons.p = React.createElement(
    "svg",
    { width: "20px", height: "20px", viewBox: "0 0 1792 1792", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M1534 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z" })
);
icons.span = React.createElement(
    "svg",
    { width: "20px", height: "20px", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 20 20" },
    React.createElement("rect", { x: "0", fill: "none", width: "20px", height: "20px" }),
    React.createElement(
        "g",
        null,
        React.createElement("path", { d: "M9 6l-4 4 4 4-1 2-6-6 6-6zm2 8l4-4-4-4 1-2 6 6-6 6z" })
    )
);
icons.div = React.createElement(
    "svg",
    { width: "20px", height: "20px", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 20 20" },
    React.createElement("rect", { x: "0", fill: "none", width: "20px", height: "20px" }),
    React.createElement(
        "g",
        null,
        React.createElement("path", { d: "M9 6l-4 4 4 4-1 2-6-6 6-6zm2 8l4-4-4-4 1-2 6 6-6 6z" })
    )
);

icons.pricing = {
    1: React.createElement("img", { src: img_path + "/pricing/1.svg", alt: __('Layout 1') }),
    2: React.createElement("img", { src: img_path + "/pricing/2.svg", alt: __('Layout 2') }),
    3: React.createElement("img", { src: img_path + "/pricing/3.svg", alt: __('Layout 3') }),
    4: React.createElement("img", { src: img_path + "/pricing/4.svg", alt: __('Layout 4') }),
    5: React.createElement("img", { src: img_path + "/pricing/5.svg", alt: __('Layout 5') }),
    6: React.createElement("img", { src: img_path + "/pricing/6.svg", alt: __('Layout 6') })
};

icons.pricing.badge = {
    1: React.createElement("img", { src: img_path + "/pricing/badges/1.svg", alt: __('Badge 1') }),
    2: React.createElement("img", { src: img_path + "/pricing/badges/2.svg", alt: __('Badge 2') }),
    3: React.createElement("img", { src: img_path + "/pricing/badges/3.svg", alt: __('Badge 3') }),
    4: React.createElement("img", { src: img_path + "/pricing/badges/4.svg", alt: __('Badge 4') }),
    5: React.createElement("img", { src: img_path + "/pricing/badges/5.svg", alt: __('Badge 5') }),
    6: React.createElement("img", { src: img_path + "/pricing/badges/6.svg", alt: __('Badge 6') })
};

icons.image = {
    simple: React.createElement("img", { src: img_path + "/image/simple.svg", alt: __('Simple') }),
    blurb: React.createElement("img", { src: img_path + "/image/blurb.svg", alt: __('Blurb') })
};

icons.copy = React.createElement(
    "svg",
    { width: "20px", height: "15px", viewBox: "0 0 1792 1792", "class": "dashicon", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zm-544 213l-299 299h299v-299zm-640-384l-299 299h299v-299zm196 647l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zm956 804v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z" })
);
icons.paste = React.createElement(
    "svg",
    { width: "20px", height: "15px", viewBox: "0 0 1792 1792", "class": "dashicon", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zm256-1440v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zm256 672h299l-299-299v299zm512 128v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z" })
);

icons.spacing = {
    top: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#CACCCE", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#2184F9", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 20h16v2h-16z" })
        )
    ),
    right: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#CACCCE", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#2184F9", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 20h16v2h-16z" })
        )
    ),
    bottom: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#CACCCE", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#2184F9", d: "M3 20h16v2h-16z" })
        )
    ),
    left: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#2184F9", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 20h16v2h-16z" })
        )
    )
};

icons.border = {
    top: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#CACCCE", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#2184F9", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 20h16v2h-16z" })
        )
    ),
    right: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#CACCCE", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#2184F9", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 20h16v2h-16z" })
        )
    ),
    bottom: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#CACCCE", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#2184F9", d: "M3 20h16v2h-16z" })
        )
    ),
    left: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { fill: "#2184F9", d: "M0 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M20 3h2v16h-2z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 0h16v2h-16z" }),
            React.createElement("path", { fill: "#CACCCE", d: "M3 20h16v2h-16z" })
        )
    )
};

icons.borderRadius = {
    topLeft: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { d: "M1.88 0c-1.038 0-1.88.842-1.88 1.88v6.71h1.88v-5.77c0-.519.421-.94.94-.94h5.77v-1.88h-6.71z", id: "Path", fill: "#2184F9" }),
            React.createElement("path", { d: "M13.41 0v1.88h5.77c.519 0 .94.421.94.94v5.77h1.88v-6.71c0-1.038-.842-1.88-1.88-1.88h-6.71zM1.88 13.41h-1.88v6.71c0 1.038.842 1.88 1.88 1.88h6.71v-1.88h-5.77c-.519 0-.94-.421-.94-.94v-5.77zM13.41 20.12v1.88h6.71c1.038 0 1.88-.842 1.88-1.88v-6.71h-1.88v5.77c0 .519-.421.94-.94.94h-5.77z", fill: "#CACCCE" })
        )
    ),
    topRight: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { d: "M1.88 0c-1.038 0-1.88.842-1.88 1.88v6.71h1.88v-5.77c0-.519.421-.94.94-.94h5.77v-1.88h-6.71z", id: "Path", fill: "#CACCCE" }),
            React.createElement("path", { d: "M13.41 0v1.88h5.77c.519 0 .94.421.94.94v5.77h1.88v-6.71c0-1.038-.842-1.88-1.88-1.88h-6.71z", id: "Path", fill: "#2184F9" }),
            React.createElement("path", { d: "M1.88 13.41h-1.88v6.71c0 1.038.842 1.88 1.88 1.88h6.71v-1.88h-5.77c-.519 0-.94-.421-.94-.94v-5.77zM13.41 20.12v1.88h6.71c1.038 0 1.88-.842 1.88-1.88v-6.71h-1.88v5.77c0 .519-.421.94-.94.94h-5.77z", fill: "#CACCCE" })
        )
    ),
    bottomRight: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { d: "M1.88 0c-1.038 0-1.88.842-1.88 1.88v6.71h1.88v-5.77c0-.519.421-.94.94-.94h5.77v-1.88h-6.71zM13.41 0v1.88h5.77c.519 0 .94.421.94.94v5.77h1.88v-6.71c0-1.038-.842-1.88-1.88-1.88h-6.71zM1.88 13.41h-1.88v6.71c0 1.038.842 1.88 1.88 1.88h6.71v-1.88h-5.77c-.519 0-.94-.421-.94-.94v-5.77z", id: "Path", fill: "#CACCCE" }),
            React.createElement("path", { d: "M13.41 20.12v1.88h6.71c1.038 0 1.88-.842 1.88-1.88v-6.71h-1.88v5.77c0 .519-.421.94-.94.94h-5.77z", fill: "#2184F9" })
        )
    ),
    bottomLeft: React.createElement(
        "svg",
        { width: "22", height: "22", viewBox: "0 0 22 22", xmlns: "http://www.w3.org/2000/svg" },
        React.createElement(
            "g",
            { fill: "none" },
            React.createElement("path", { d: "M1.88 0c-1.038 0-1.88.842-1.88 1.88v6.71h1.88v-5.77c0-.519.421-.94.94-.94h5.77v-1.88h-6.71zM13.41 0v1.88h5.77c.519 0 .94.421.94.94v5.77h1.88v-6.71c0-1.038-.842-1.88-1.88-1.88h-6.71z", id: "Path", fill: "#CACCCE" }),
            React.createElement("path", { d: "M1.88 13.41h-1.88v6.71c0 1.038.842 1.88 1.88 1.88h6.71v-1.88h-5.77c-.519 0-.94-.421-.94-.94v-5.77z", id: "Path", fill: "#2184F9" }),
            React.createElement("path", { d: "M13.41 20.12v1.88h6.71c1.038 0 1.88-.842 1.88-1.88v-6.71h-1.88v5.77c0 .519-.421.94-.94.94h-5.77z", fill: "#CACCCE" })
        )
    )
};

icons.inlineColorIcon = React.createElement(
    "svg",
    { "aria-hidden": "true", role: "img", focusable: "false", "class": "dashicon dashicons-editor-textcolor", xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20" },
    React.createElement("path", { d: "M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z" })
);
icons.highlighterIcon = React.createElement(
    "svg",
    { "aria-hidden": "true", role: "img", focusable: "false", "class": "dashicon dashicons-admin-customizer", xmlns: "http://www.w3.org/2000/svg", width: "18", height: "17", viewBox: "0 0 20 20" },
    React.createElement("path", { d: "M18.33 3.57s.27-.8-.31-1.36c-.53-.52-1.22-.24-1.22-.24-.61.3-5.76 3.47-7.67 5.57-.86.96-2.06 3.79-1.09 4.82.92.98 3.96-.17 4.79-1 2.06-2.06 5.21-7.17 5.5-7.79zM1.4 17.65c2.37-1.56 1.46-3.41 3.23-4.64.93-.65 2.22-.62 3.08.29.63.67.8 2.57-.16 3.46-1.57 1.45-4 1.55-6.15.89z" })
);
icons.upperCaseIcon = React.createElement(
    "svg",
    { viewBox: "0 0 20 20", height: "25", width: "25", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement(
        "mask",
        { id: "a", fill: "#fff" },
        React.createElement("path", { d: "m20 20h-20v-20h20z", fill: "#fff", "fill-rule": "evenodd" })
    ),
    React.createElement("path", { d: "m2 3v2.5h4.16666667v10.5h2.5v-10.5h4.16666663v-2.5zm16 4.5h-7.5v2.5h2.5v6h2.5v-6h2.5z", mask: "url(#a)" })
);

icons.arrow_down = React.createElement(
    "svg",
    { width: "18", height: "18", viewBox: "0 0 1792 1792", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M1395 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z" })
);
icons.arrow_up = React.createElement(
    "svg",
    { width: "18", height: "18", viewBox: "0 0 1792 1792", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { d: "M1395 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z" })
);

exports.default = icons;

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! ./components/FieldRender */ "./src/components/FieldRender.js");

__webpack_require__(/*! ./editor.scss */ "./src/editor.scss");

__webpack_require__(/*! ./blocks/scss/style.scss */ "./src/blocks/scss/style.scss");

__webpack_require__(/*! ./blocks/row */ "./src/blocks/row/index.js");

__webpack_require__(/*! ./blocks/row/column */ "./src/blocks/row/column/index.js");

__webpack_require__(/*! ./blocks/button */ "./src/blocks/button/index.js");

__webpack_require__(/*! ./blocks/text */ "./src/blocks/text/index.js");

__webpack_require__(/*! ./blocks/icon */ "./src/blocks/icon/index.js");

__webpack_require__(/*! ./blocks/map */ "./src/blocks/map/index.js");

__webpack_require__(/*! ./blocks/divider */ "./src/blocks/divider/index.js");

__webpack_require__(/*! ./blocks/infobox */ "./src/blocks/infobox/index.js");

__webpack_require__(/*! ./blocks/image */ "./src/blocks/image/index.js");

__webpack_require__(/*! ./blocks/testimonial */ "./src/blocks/testimonial/index.js");

__webpack_require__(/*! ./blocks/accordion */ "./src/blocks/accordion/index.js");

__webpack_require__(/*! ./blocks/heading */ "./src/blocks/heading/index.js");

__webpack_require__(/*! ./blocks/videopopup */ "./src/blocks/videopopup/index.js");

__webpack_require__(/*! ./blocks/progressbar */ "./src/blocks/progressbar/index.js");

__webpack_require__(/*! ./blocks/counter */ "./src/blocks/counter/index.js");

__webpack_require__(/*! ./blocks/tabs */ "./src/blocks/tabs/index.js");

__webpack_require__(/*! ./blocks/tabs/tab */ "./src/blocks/tabs/tab/index.js");

__webpack_require__(/*! ./blocks/socialicons */ "./src/blocks/socialicons/index.js");

__webpack_require__(/*! ./blocks/contactform */ "./src/blocks/contactform/index.js");

__webpack_require__(/*! ./blocks/buttongroup */ "./src/blocks/buttongroup/index.js");

__webpack_require__(/*! ./blocks/advancedlist */ "./src/blocks/advancedlist/index.js");

__webpack_require__(/*! ./blocks/iconlist */ "./src/blocks/iconlist/index.js");

__webpack_require__(/*! ./blocks/wrapper */ "./src/blocks/wrapper/index.js");

__webpack_require__(/*! ./blocks/team */ "./src/blocks/team/index.js");

__webpack_require__(/*! ./blocks/pricing */ "./src/blocks/pricing/index.js");

__webpack_require__(/*! ./blocks/timeline */ "./src/blocks/timeline/index.js");

__webpack_require__(/*! ./blocks/postgrid */ "./src/blocks/postgrid/index.js");

__webpack_require__(/*! ./blocks/animatedheadline */ "./src/blocks/animatedheadline/index.js");

__webpack_require__(/*! ./blocks/pieprogress */ "./src/blocks/pieprogress/index.js");

__webpack_require__(/*! ./blocks/pagesettings */ "./src/blocks/pagesettings/index.js");

__webpack_require__(/*! ./customizer */ "./src/customizer/index.js");

var _ParseCss = __webpack_require__(/*! ./helpers/ParseCss */ "./src/helpers/ParseCss.js");

var _ParseCss2 = _interopRequireDefault(_ParseCss);

var _ModalManager = __webpack_require__(/*! ./helpers/ModalManager */ "./src/helpers/ModalManager.js");

var _PageListModal = __webpack_require__(/*! ./helpers/PageListModal */ "./src/helpers/PageListModal.js");

var _PageListModal2 = _interopRequireDefault(_PageListModal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __ = wp.i18n.__; // Row
// Column
// Button
// Text
// Icon
// Map
// Divider
// Info Box
// Image
// Testimonial
// Accordion
// Heading Box
// Video popup
// Progress Bar
// counter
// Tabs
// Inner Tabs
// Social Icons
// Contact Form
// Button Group
// Advanced List
// Icon List
// Wrapper
// Team
// pricing
// Timeline
// Postgrid
// Column
// Button
// Text
// Icon
// Map
// Divider
// Info Box
// Image
// Testimonial
// Accordion
// Heading Box
// Video popup
// Progress Bar
// counter
// Tabs
// Inner Tabs
// Social Icons
// Contact Form
// Button Group
// Advanced List
// Icon List
// Wrapper
// Team
// pricing
// Timeline
// Postgrid
// Animated Headline
// PieProgress


// Global Settings

window.qubelyDevice = 'md';
window.bindCss = false;
window.globalData = {
    settings: {
        colorPreset1: qubely_admin.palette[0],
        colorPreset2: qubely_admin.palette[1],
        colorPreset3: qubely_admin.palette[2],
        colorPreset4: qubely_admin.palette[3],
        colorPreset5: qubely_admin.palette[4],
        colorPreset6: qubely_admin.palette[5]
    }
};
window.globalSaving = false;

// Save CSS in Database/File

wp.data.subscribe(function () {
    var _wp$data$select = wp.data.select("core/editor"),
        isPreviewingPost = _wp$data$select.isPreviewingPost,
        isSavingPost = _wp$data$select.isSavingPost,
        isAutosavingPost = _wp$data$select.isAutosavingPost;

    if (isPreviewingPost() || isSavingPost() && !isAutosavingPost()) {
        if (window.bindCss === false) {
            (0, _ParseCss2.default)(isPreviewingPost() ? false : true);
        }
    }
});
//UPDATE BLOCK CATEGORY ICON
wp.blocks.updateCategory('qubely', { icon: React.createElement('img', { style: { height: '20px', 'margin-top': '-2px' }, src: qubely_admin.plugin + 'assets/img/blocks/block-qubely.svg', alt: __('Qubely') }) });

//APPEND IMPORT LAYOUTS BUTTON TO POST HEADER TOOLBAR

document.addEventListener("DOMContentLoaded", appendImportButton);

function appendImportButton() {
    var node = document.querySelector('.edit-post-header-toolbar');
    var newElem = document.createElement('div');
    var html = '<div class="qubely-import-layout-btn-container">';
    html += '<button id="qubelyImportLayoutBtn" title=' + __("Qubely") + '><img src=' + qubely_admin.plugin + 'assets/img/qubely-logo-white.svg alt=' + __("Qubely") + ' /> ' + __("Import Layout") + '</button>';
    html += '</div>';
    newElem.innerHTML = html;
    node.appendChild(newElem);
    document.getElementById("qubelyImportLayoutBtn").addEventListener("click", qubelyImportLayout);
}
function qubelyImportLayout() {
    _ModalManager.ModalManager.open(React.createElement(_PageListModal2.default, { rowClientId: false }));
}

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/devil/Development/wordpress/woo/www/woo/public_html/wp-content/plugins/qubely/assets/reactjs/src/index.js */"./src/index.js");


/***/ })

/******/ });
//# sourceMappingURL=qubely.dev.js.map